{
  "app": {
    "config": "./mdx-to-json-settings.json",
    "cwd": "./",
    "deterministicOrder": false,
    "display": true,
    "dist": "src/icds-pages-data.json",
    "filePattern": "**/*.mdx",
    "ignore": "",
    "port": 3001,
    "server": false,
    "src": "./src/content/structured/",
    "name": "icds-guidance-pages",
    "metadata": true,
    "version": "1.6.1"
  },
  "data": [
    {
      "id": "accessibility\\coding\\alt-textx",
      "contents": "\r\n## Introduction\r\n\r\nUse alt text on images. The `alt` attribute provides alternative text to users who can't see the image.\r\n\r\nAlt text should concisely convey the meaning of the image within the context of the page.\r\n\r\nIf the image is only decorative or not needed because it will be repeated in adjacent text, include an empty `alt` attribute, `alt=\"\"`.\r\n\r\n```html\r\n<img src=\"logo.jpg\" alt=\"Design System logo\" />\r\n```\r\n\r\nUsing alt text benefits:\r\n\r\n- Those who rely on screen readers as it will read the alt text.\r\n- Those who have a slow connection; the alt text will be displayed in place of an image when it can't be loaded.\r\n\r\nThe `alt` attribute can be used on `area`, `img` and `input` elements.\r\n\r\n## When it goes wrong\r\n\r\nA screen reader will announce the presence of the image along with any `alt` text.\r\n\r\nIf there is no `alt` attribute, the screen reader only announces the presence of the image, although some screen readers may try to add context by reading the file name.\r\n\r\nA screen reader will not announce images with an empty `alt` attribute.\r\n\r\n## Alternative images\r\n\r\nAlternatives to the `<img>` element are Scalable Vector Graphics (SVG) markup and the `<canvas>` element. They are often used for interactive images.\r\n\r\nFavour SVG over `<canvas>` because the `<canvas>` element is not accessible to assistive technologies. It's not rendered in the DOM and doesn't have internal accessibility semantics like SVG.\r\n\r\nSVG is also scalable for those who need magnification.\r\n",
      "path": "/accessibility/coding/alt-text",
      "navPriority": 3,
      "date": "2024-04-18",
      "title": "Alt text",
      "subTitle": "Follow our accessibility tips for alt text.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/coding/alt-text.mdx",
      "meta": {
        "relativePath": "accessibility\\coding\\alt-text.mdx",
        "createdAt": "2024-06-04T07:48:34.937Z",
        "lastModified": "2024-06-04T07:48:34.937Z",
        "size": 1791,
        "formattedSize": "1.7 KB"
      }
    },
    {
      "id": "accessibility\\coding\\ariax",
      "contents": "\r\n## Introduction\r\n\r\nFavour native HTML over ARIA.\r\n\r\nThe Web Accessibility Initiative's [accessible rich internet applications specification](https://www.w3.org/TR/wai-aria/) (WAI-ARIA, or just ARIA) is good for bridging areas with accessibility issues that can't be managed with native HTML.\r\n\r\nARIA does not affect how a page is visually presented. It only changes the information used by assistive technologies.\r\n\r\n### The first rule or ARIA\r\n\r\nThe first rule of [using ARIA](https://www.w3.org/TR/using-aria/) is to favour using native HTML instead of re-purposing an element by adding an ARIA role, state or property to make it accessible.\r\n\r\nBy using the semantic HTML you not only get an implicit ARIA role, so the browser knows how to interpret the element, but also other standard functionality such as focus, keyboard and mouse support.\r\n\r\n### Time to use ARIA\r\n\r\nThe main situation where ARIA can improve the usability even when semantic HTML has been used is with [live regions](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions).\r\n\r\nLive regions mean that any dynamic changes within it will be read out to assistive technologies, useful to identify errors or of a status change, for example.\r\n\r\nTo make an element a live region, use the `aria-live` attribute or a specialised live region `role` such as `role=”alert”`.\r\n\r\nIf you do have to add ARIA to unsemantic HTML, remember it’s not just about applying the right `role`, you also need to ensure all the other standard functionality is also applied including focus, keyboard and mouse support.\r\n\r\n### Learn more about ARIA\r\n\r\nTo learn more about ARIA:\r\n\r\n<ul>\r\n  <li>\r\n    Deque has an easily digestible 3 part blog post for the{\" \"}\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.deque.com/?s=ARIA%20Spec%20for%20the%20Uninitiated&post_type=post\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      ARIA spec for the uninitiated\r\n    </ic-link>\r\n    .\r\n  </li>\r\n  <li>\r\n    Mozilla also covers{\" \"}\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      ARIA\r\n    </ic-link>{\" \"}\r\n    extensively with tutorials and a range of documentation.\r\n  </li>\r\n  <li>\r\n    Google's Web Fundamentals gives a thorough{\" \"}\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developers.google.com/web/fundamentals/accessibility/semantics-aria\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      introduction to ARIA\r\n    </ic-link>\r\n    .\r\n  </li>\r\n  <li>\r\n    W3’s{\" \"}\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/TR/using-aria/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      using ARIA\r\n    </ic-link>{\" \"}\r\n    gives more guidance on how to use ARIA properly including the all five rules\r\n    of ARIA.\r\n  </li>\r\n</ul>\r\n\r\n## When it goes wrong\r\n\r\nUnderstanding when and how to use ARIA is key to improving the experience of assistive technology users. Even using ARIA where it’s not needed on semantic HTML can cause undesired effects on assistive technology.\r\n\r\n<p>\r\n  Deque’s{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.deque.com/blog/wai-aria-top-6-mistakes-to-avoid/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    WAI-ARIA: Top 6 Mistakes to avoid\r\n  </ic-link>{\" \"}\r\n  states that “misuse of ARIA creates a more inaccessible experience than one\r\n  without ARIA”.\r\n</p>\r\n",
      "path": "/accessibility/coding/aria",
      "navPriority": 10,
      "date": "2024-04-18",
      "title": "ARIA",
      "subTitle": "Follow our accessibility tips for ARIA.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/coding/aria.mdx",
      "meta": {
        "relativePath": "accessibility\\coding\\aria.mdx",
        "createdAt": "2024-06-04T07:48:34.939Z",
        "lastModified": "2024-06-04T07:48:34.939Z",
        "size": 3758,
        "formattedSize": "3.7 KB"
      }
    },
    {
      "id": "accessibility\\coding\\cssx",
      "contents": "\r\n## Introduction\r\n\r\nWrite CSS in a way that can be overridden by the user via their browser.\r\n\r\nDon't use inline styles; keep CSS separate to the HTML. This can be a separate CSS stylesheet or via other techniques like CSS-in-JS.\r\n\r\nDecoupling the styling will create more flexibility as the visual styling can be updated without touching the HTML.\r\n\r\n<p>\r\n  Don't use <code style={{ backgroundColor: \"#EEEFF0\" }}>!important</code> on a\r\n  style declaration as this overrides any other declarations. You can read more\r\n  information from Mozilla on{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity#The_!important_exception\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    importance exception\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n## When it goes wrong\r\n\r\nBoth inline styles and `!important` will override user-defined styles that can be set using browsers and assistive technologies.\r\n\r\nAssistive technologies and users may change browser default styles to improve accessibility. For example, users with visual impairments or dyslexia may increase the font size or override colours.\r\n",
      "path": "/accessibility/coding/css",
      "navPriority": 9,
      "date": "2024-04-18",
      "title": "CSS and inline styles",
      "subTitle": "Follow our accessibility tips for CSS.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/coding/css.mdx",
      "meta": {
        "relativePath": "accessibility\\coding\\css.mdx",
        "createdAt": "2024-06-04T07:48:34.940Z",
        "lastModified": "2024-06-04T07:48:34.940Z",
        "size": 1430,
        "formattedSize": "1.4 KB"
      }
    },
    {
      "id": "accessibility\\coding\\doctypex",
      "contents": "\r\n## Introduction\r\n\r\nAll HTML documents must start with a `<!DOCTYPE>` declaration above the `<html>` tag.\r\n\r\nThis tells the browser how to render the HTML, as in this example:\r\n\r\n```html\r\n<!DOCTYPE html>\r\n```\r\n\r\n<p>\r\n  This is the HTML5 doctype but W3C provides information on{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.w3.org/wiki/Doctypes_and_markup_styles\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    choosing the right doctype\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n## When it goes wrong\r\n\r\n<p>\r\n  If no valid{\" \"}\r\n  <code style={{ backgroundColor: \"#EEEFF0\" }}>&lt;!DOCTYPE&gt;</code> is\r\n  declared, the browser switches to{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Quirks_Mode_and_Standards_Mode\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    quirks mode\r\n  </ic-link>\r\n  . This means it emulates non-standard behaviour of deprecated browsers.\r\n</p>\r\n\r\nIn this case, elements from the HTML5 specification may not parse or render properly. This can cause issues for people who use assistive technologies.\r\n",
      "path": "/accessibility/coding/doctype",
      "navPriority": 1,
      "date": "2024-04-18",
      "title": "Doctypes",
      "subTitle": "Follow our accessibility tips for doctypes.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/documenting/index.mdx",
      "meta": {
        "relativePath": "accessibility\\coding\\doctype.mdx",
        "createdAt": "2024-05-20T13:20:43.254Z",
        "lastModified": "2024-05-20T13:20:43.254Z",
        "size": 1396,
        "formattedSize": "1.4 KB"
      }
    },
    {
      "id": "accessibility\\coding\\document-structurex",
      "contents": "\r\n## Introduction\r\n\r\nUse semantic HTML Elements for document structure. Three semantic elements are used to give overall document structure:\r\n\r\n- `<html>` is the root of an HTML document and contains all elements except the `<!DOCTYPE>` declaration.\r\n- `<head>` is the container for metadata such as document title, styles and scripts. The `<head>` element is the first element in the `<html>` element before the `<body>`.\r\n- `<body>` defines the body or content of the HTML document. There can only be one `<body>` in the document.\r\n\r\nThese elements ensure how a page is displayed is consistent across every browser.\r\n\r\nThe following example shows the semantic elements for document structure:\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <title>Example accurate and meaningful title</title>\r\n  </head>\r\n  <body>\r\n    <h1>Example content heading</h1>\r\n    <p>Example content paragraph</p>\r\n  </body>\r\n</html>\r\n```\r\n\r\n## When it goes wrong\r\n\r\nNot using the document structure elements accordingly may mean the page is not correctly rendered in every browser.\r\n\r\n<p>\r\n  Omitting the <code style={{ backgroundColor: \"#EEEFF0\" }}>&lt;html&gt;</code>,{\" \"}\r\n  <code style={{ backgroundColor: \"#EEEFF0\" }}>&lt;head&gt;</code> and{\" \"}\r\n  <code style={{ backgroundColor: \"#EEEFF0\" }}>&lt;body&gt;</code> is allowed\r\n  under certain conditions in the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.w3.org/TR/2011/WD-html5-20110525/syntax.html#optional-tags\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    HTML spec\r\n  </ic-link>\r\n  .\r\n</p>\r\n",
      "path": "/accessibility/coding/document-structure",
      "navPriority": 5,
      "date": "2024-04-18",
      "title": "Document structure",
      "subTitle": "Follow our accessibility tips for document structure.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/coding/document-structure.mdx",
      "meta": {
        "relativePath": "accessibility\\coding\\document-structure.mdx",
        "createdAt": "2024-06-04T07:48:34.941Z",
        "lastModified": "2024-06-04T07:48:34.941Z",
        "size": 1890,
        "formattedSize": "1.8 KB"
      }
    },
    {
      "id": "accessibility\\coding\\headingsx",
      "contents": "\r\n## Introduction\r\n\r\nUse HTML headings `<h1>`, `<h2>`, `<h3>`, `<h4>`, `<h5>` and `<h6>` properly.\r\n\r\nHeadings are hierarchical: `<h1>` is the most important, then `<h2>`, through to `<h6>` being the least important. Use one `<h1>` per page.\r\n\r\nHeadings at the same level or higher start a new section, whilst headings at a lower level start a subsection. Don't skip heading levels.\r\n\r\nIf the styling of a heading doesn't look right visually, for example too big or bold, style it with CSS but always use the correct semantic heading.\r\n\r\nThe text for a heading should be descriptive, meaningful and unique on the page.\r\n\r\n## When it goes wrong\r\n\r\nWhen semantic HTML elements for headings aren't used, the page has no structure or definition available to assistive technologies.\r\n\r\nHeadings provide navigation landmarks, which assistive technologies can navigate over to find the area they want on the page.\r\n\r\nScreen readers can navigate and jump to a heading, in the same way as a sighted user would scan for the heading they need.\r\n",
      "path": "/accessibility/coding/headings",
      "navPriority": 7,
      "date": "2024-04-18",
      "title": "Headings",
      "subTitle": "Follow our accessibility tips for headings.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/coding/headings.mdx",
      "meta": {
        "relativePath": "accessibility\\coding\\headings.mdx",
        "createdAt": "2024-06-04T07:48:34.942Z",
        "lastModified": "2024-06-04T07:48:34.942Z",
        "size": 1328,
        "formattedSize": "1.3 KB"
      }
    },
    {
      "id": "accessibility\\coding\\indexx",
      "contents": "\r\n## Introduction\r\n\r\nYou should always write and [test](/accessibility/testing/) accessible code, even in prototypes.\r\n\r\nFixing accessibility issues later on can be very costly in both time and effort. Not considering accessibility when coding will increase your technical debt, and make it harder for people to use your app or service.\r\n\r\n## Learn web fundamentals\r\n\r\nAll front-end developers should build a good foundation of web fundamentals. The most important language to get right is HTML.\r\n\r\nCSS and JavaScript should be learnt before composite libraries or frameworks like StencilJS and React.\r\n\r\nCommon accessibility issues are avoided by following HTML, CSS and JavaScript best practices.\r\n\r\n## Test whilst developing\r\n\r\nSpotting and fixing accessibility issues early saves time later in the development lifecycle.\r\n\r\nUse [automated browser testing tools](/accessibility/testing/automated-testing/#browser-testing) whilst developing, in code editors, linting and CI/CD workflows.\r\n\r\n[Keyboard-only testing](/accessibility/testing/manual-testing/#keyboard-only-testing) should be done as often as possible, especially on significant changes.\r\n\r\nPlanning for [full manual testing](/accessibility/testing/manual-testing/#full-manual-accessibility-testing) will help address any [limitations of automated accessibility testing](/accessibility/testing/automated-testing-limitation).\r\n\r\n## Using third-party libraries and frameworks\r\n\r\nThe Design System and its UI Kit includes automated, manual and user-led accessibility testing. We are confident our components and patterns exceed minimum accessibility standards.\r\n\r\nCheck whether other third-party external libraries you use have been tested. Consider if the vendor or community is performing enough accessibility testing.\r\n\r\n## References\r\n\r\nThe content in this section has been adapted from the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3schools.com/html/html5_syntax.asp\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      HTML Style Guide and Coding Conventions\r\n    </ic-link>\r\n    . W3Schools. Accessed 10 November 2021.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.webfx.com/blog/web-design/20-html-best-practices-you-should-follow\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      20 HTML Best Practices You Should Follow\r\n    </ic-link>\r\n    . WebFX. Accessed 10 November 2021.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://blog.tbhcreative.com/2015/08/10-best-practices-in-html.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      10 HTML best practices for beginners\r\n    </ic-link>\r\n    . TBH Creative. Accessed 10 November 2021.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://medium.com/oceanize-geeks/15-html-best-practices-that-developers-should-know-cb02473d293f\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      15 HTML Best Practices That Developers Should Know\r\n    </ic-link>\r\n    . Medium. Accessed 10 November 2021.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://medium.com/swlh/10-best-practices-for-html-542fb923b93\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      10 Best Practices for HTML\r\n    </ic-link>\r\n    . Medium. Accessed 10 November 2021.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://code.tutsplus.com/tutorials/30-html-best-practices-for-beginners--net-4957\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      30 HTML Best Practices for Beginners\r\n    </ic-link>\r\n    . Envato Tuts Plus. Accessed 10 November 2021.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://github.com/hail2u/html-best-practices\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      HTML Best Practices\r\n    </ic-link>\r\n    . GitHub. Accessed 10 November 2021.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://learn.shayhowe.com/html-css/writing-your-best-code\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Writing Your Best Code, Learn to Code HTML & CSS\r\n    </ic-link>\r\n    . Shay Howe. Accessed 10 November 2021.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.themelocation.com/best-html5-practices/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      30 Best HTML5 Practices\r\n    </ic-link>\r\n    , Themelocation. Accessed 10 November 2021.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.aspirationhosting.com/best-practices/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Best Practices in HTML that Web Developers Should Adopt\r\n    </ic-link>\r\n    . Aspiration Hosting. Accessed 10 November 2021.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://dev.to/alvaromontoro/allow-end-user-styling-overrides-2467\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Allow end-user styling overrides\r\n    </ic-link>\r\n    . DEV.to. Accessed 10 November 2021.\r\n  </li>\r\n</ul>\r\n",
      "path": "/accessibility/coding",
      "navPriority": 4,
      "date": "2022-11-15",
      "title": "Coding for accessibility",
      "subTitle": "This section introduces some tips for making sure you code with accessibility best practice.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/coding/index.mdx",
      "meta": {
        "relativePath": "accessibility\\coding\\index.mdx",
        "createdAt": "2024-04-04T12:41:43.701Z",
        "lastModified": "2024-04-04T12:41:43.701Z",
        "size": 5398,
        "formattedSize": "5.3 KB"
      }
    },
    {
      "id": "accessibility\\coding\\semantic-htmlx",
      "contents": "\r\n## Introduction\r\n\r\nUse semantic HTML elements.\r\n\r\nSemantic elements, such as `<form>` and `<table>`, clearly define their content. Non-semantic elements, such as `<div>` and `<span>`, don't tell us about the meaning of their content and are often overused.\r\n\r\nUsing correct semantic HTML elements makes web content more accessible.\r\n\r\n<p>\r\n  Learn more about{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    HTML elements\r\n  </ic-link>\r\n  , particularly <code style={{ backgroundColor: \"#EEEFF0\" }}>&lt;nav&gt;</code>,{\" \"}\r\n  <code style={{ backgroundColor: \"#EEEFF0\" }}>&lt;section&gt;</code> and <code\r\n    style={{ backgroundColor: \"#EEEFF0\" }}\r\n  >\r\n    &lt;role&gt;\r\n  </code>. They're mentioned in <ic-link\r\n    target=\"\"\r\n    href=\"/accessibility/coding/document-structure\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Document structure\r\n  </ic-link> and <ic-link\r\n    target=\"\"\r\n    href=\"/accessibility/coding/semantic-layout\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Semantic layout\r\n  </ic-link>.\r\n</p>\r\n\r\n## When it goes wrong\r\n\r\nWhen semantic elements aren't used, the page has no structure or definition available to assistive technologies.\r\n\r\nWithout structure or definition, to assistive technologies it's like viewing all the words on a page together in a single paragraph with the same styling, creating a wall of text.\r\n\r\nWith semantic elements, assistive technologies can navigate over a page using these semantic elements. For example, screen readers can jump through headings to find the section they want to read.\r\n",
      "path": "/accessibility/coding/semantic-html",
      "navPriority": 4,
      "date": "2024-04-18",
      "title": "Semantic HTML",
      "subTitle": "Follow our accessibility tips for semantic HTML.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/coding/semantic-html.mdx",
      "meta": {
        "relativePath": "accessibility\\coding\\semantic-html.mdx",
        "createdAt": "2024-06-04T07:48:34.943Z",
        "lastModified": "2024-06-04T07:48:34.943Z",
        "size": 1976,
        "formattedSize": "1.9 KB"
      }
    },
    {
      "id": "accessibility\\coding\\semantic-layoutx",
      "contents": "\r\n## Introduction\r\n\r\nUse semantic HTML elements over non-semantic elements for layouts, such as `<header>` instead of `<div id=\"header\">`.\r\n\r\n<p>\r\n  HTML5 introduced{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.w3.org/TR/html5-diff/#new-elements\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    new elements\r\n  </ic-link>{\" \"}\r\n  to improve structure, including:\r\n</p>\r\n\r\n- `<main>` represents the main content of the body of a document or app.\r\n- `<header>` represents a group of introductory or navigational aids.\r\n- `<footer>` represents a footer for a section and can contain information about the author, copyright information, etc.\r\n- `<nav>` represents a section of the document intended for navigation.\r\n\r\n## When it goes wrong\r\n\r\nWhen semantic HTML elements for layout aren't used, the page has no structure or definition available to assistive technologies.\r\n\r\nThese layout elements provide navigation landmarks, which assistive technologies can navigate over to find the area they want on the page. These elements also section content into their defined elements.\r\n",
      "path": "/accessibility/coding/semantic-layout",
      "navPriority": 6,
      "date": "2024-04-18",
      "title": "Semantic layout",
      "subTitle": "Follow our accessibility tips for layout.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/coding/semantic-layout.mdx",
      "meta": {
        "relativePath": "accessibility\\coding\\semantic-layout.mdx",
        "createdAt": "2024-06-04T07:48:34.944Z",
        "lastModified": "2024-06-04T07:48:34.944Z",
        "size": 1406,
        "formattedSize": "1.4 KB"
      }
    },
    {
      "id": "accessibility\\coding\\tablesx",
      "contents": "\r\n## Introduction\r\n\r\nUse HTML table elements only for tabular data.\r\n\r\nFor ambiguous data or when there are multiple columns, the `scope` attribute can be included in the `<th>` and set to `row` or `col` to denote that a header applies to the entire row or column, respectively.\r\n\r\nUse a `<caption>` element to describe, in text, what the table shows. Some apps and services may auto-generate a summary description of data. You can hide this using CSS if you don't want it visible to sighted users.\r\n\r\nThe HTML example for a table with header cells in the top row and first column:\r\n\r\n```html\r\n<table>\r\n  <caption>\r\n    Example table with four columns and three rows\r\n  </caption>\r\n  <tr>\r\n    <th>Table</th>\r\n    <th scope=\"col\">Column Header A</th>\r\n    <th scope=\"col\">Column Header B</th>\r\n    <th scope=\"col\">Column Header C</th>\r\n  </tr>\r\n  <tr>\r\n    <th scope=\"row\">Row Header 1</th>\r\n    <td>data cell A1</td>\r\n    <td>data cell A2</td>\r\n    <td>data cell A3</td>\r\n  </tr>\r\n  <tr>\r\n    <th scope=\"row\">Row Header 2</th>\r\n    <td>data cell B1</td>\r\n    <td>data cell B2</td>\r\n    <td>data cell B3</td>\r\n  </tr>\r\n</table>\r\n```\r\n\r\n### Example\r\n\r\n<table>\r\n  <caption>Example table with four columns and three rows</caption>\r\n  <tr>\r\n    <th>Table</th>\r\n    <th scope=\"col\">Column Header A</th>\r\n    <th scope=\"col\">Column Header B</th>\r\n    <th scope=\"col\">Column Header C</th>\r\n  </tr>\r\n  <tr>\r\n    <th scope=\"row\">Row Header 1</th>\r\n    <td>data cell A1</td>\r\n    <td>data cell A2</td>\r\n    <td>data cell A3</td>\r\n  </tr>\r\n  <tr>\r\n    <th scope=\"row\">Row Header 2</th>\r\n    <td>data cell B1</td>\r\n    <td>data cell B2</td>\r\n    <td>data cell B3</td>\r\n  </tr>\r\n</table>\r\n\r\n## When it goes wrong\r\n\r\nIf no table HTML elements were used, then there would be no structure or definition of the table available to assistive technologies.\r\n\r\nEven missing table headers in a `<table>` means assistive technologies can't associate data cells with the headers. Visual cues aren't enough to make a table inclusive.\r\n\r\nHistorically, tables were incorrectly used for layouts, which would give assistive technology users a confusing experience. Don't use tables for any layout needs.\r\n\r\nMany screen readers will summarise the size of the table when it arrives at one, so our table example would say “Table with 4 columns and 3 rows”.\r\n",
      "path": "/accessibility/coding/tables",
      "navPriority": 8,
      "date": "2024-04-18",
      "title": "Tables",
      "subTitle": "Follow our accessibility tips for tables.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/coding/tables.mdx",
      "meta": {
        "relativePath": "accessibility\\coding\\tables.mdx",
        "createdAt": "2024-06-04T07:48:34.945Z",
        "lastModified": "2024-06-04T07:48:34.945Z",
        "size": 2616,
        "formattedSize": "2.6 KB"
      }
    },
    {
      "id": "accessibility\\coding\\titlex",
      "contents": "\r\nimport { IcAlert } from \"@ukic/react\";\r\n\r\n## Introduction\r\n\r\nEach page in a website should have a unique title. Make the `<title>` element as accurate and meaningful as possible.\r\n\r\nThe title appears in the browser toolbar, search-engine results and default bookmark/favourites name.\r\n\r\nThis example shows two different titles from different Design System pages:\r\n\r\n```html\r\n<!-- https://design.sis.gov.uk/accessibility/coding -->\r\n<title>Coding for accessibility - Intelligence Community Design System</title>\r\n\r\n<!-- https://design.sis.gov.uk/accessibility/coding/title -->\r\n<title>Titles - Intelligence Community Design System</title>\r\n```\r\n\r\n<IcAlert\r\n  heading=\"Single Page Apps (SPAs)\"\r\n  variant=\"warning\"\r\n  message=\"In single-page apps, make sure you dynamically update the page title.\"\r\n/>\r\n\r\n## When it goes wrong\r\n\r\nIf titles aren't unique and descriptive, users must read the content to understand where they are. This makes your app less usable for those using assistive technologies like screen readers.\r\n",
      "path": "/accessibility/coding/title",
      "navPriority": 2,
      "date": "2024-04-18",
      "title": "Titles",
      "subTitle": "Follow our accessibility tips for titles.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/coding/title.mdx",
      "meta": {
        "relativePath": "accessibility\\coding\\title.mdx",
        "createdAt": "2024-06-04T07:48:34.946Z",
        "lastModified": "2024-06-04T07:48:34.946Z",
        "size": 1306,
        "formattedSize": "1.3 KB"
      }
    },
    {
      "id": "accessibility\\definitionx",
      "contents": "\r\n## What accessibility means\r\n\r\nWe use the term ‘accessible’ to mean that someone isn’t excluded from something based on experiencing a disability, impairment or because they think differently.\r\n\r\n<p>\r\n  The Design System is built around the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.scope.org.uk/about-us/social-model-of-disability/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Social Model of Disability\r\n  </ic-link>{\" \"}\r\n  <sup id=\"ref-1\">\r\n    <a href=\"#fn-1\">1</a>\r\n  </sup>\r\n  .\r\n</p>\r\n\r\nIt states that people are disabled by barriers in society rather than being disabled by a medical definition, impairment or neurodiversity they experience.\r\n\r\nThis model recognises that, with sensible consideration, we can empower people to use our technology in a way that works for them.\r\n\r\n## There are a wide range of needs\r\n\r\nDon't consider those with 'accessibility needs' as a defined group of people with 'disability and impairments'.\r\n\r\nWhen we talk about accessible apps and services, most people think initially of visually impaired or blind users who might use screen readers.\r\n\r\nIn fact, we need to consider a lot of needs people may have, like motor impairments and neurological diversity. Good (and accessible) design considers implications of the full spectrum of diversity.\r\n\r\n## Accessible is better for everyone\r\n\r\nAccessible apps are always more usable for people who don't have accessibility needs. If you become skilled at considering accessibility, you'll always end up with a better product.\r\n\r\nSometimes apps and services are designed for the 'perfect user'<sup id=\"ref-2\"><a href=\"#fn-2\">2</a></sup> or only the users we have access to. These might be usable, but that doesn't mean they're accessible.\r\n\r\nSomething can be accessible to some people while being inaccessible to others. An app with a real-time data table might work really well for sighted users and those who use a screen reader.\r\n\r\nHowever, if someone has a different reading comprehension or has anxiety from information overload, they may experience significant issues if table rows are rapidly changing or flashing.\r\n\r\n## References\r\n\r\n<p>\r\n  1.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.scope.org.uk/about-us/social-model-of-disability/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Social model of disability\r\n  </ic-link>{\" \"}\r\n  .<i> Scope</i>. Accessed 5 November 2022. <a href=\"#ref-1\">Back to content</a>\r\n</p>\r\n<p>\r\n  2.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://accessibility.blog.gov.uk/2016/05/16/what-we-mean-when-we-talk-about-accessibility-2/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-2\"\r\n  >\r\n    Accessibility in government. What we mean when we talk about accessibility\r\n  </ic-link>{\" \"}\r\n  .<i> Alistair Duggin, UK Government Digital Service</i>. 16 May 2016. Accessed\r\n  5 November 2022. <a href=\"#ref-2\">Back to content</a>\r\n</p>\r\n",
      "path": "/accessibility/introduction/definition",
      "navPriority": 1,
      "date": "2022-11-15",
      "title": "Defining accessibility",
      "subTitle": "The word 'accessibility' can mean a lot of different things.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/definition.mdx",
      "meta": {
        "relativePath": "accessibility\\definition.mdx",
        "createdAt": "2024-06-04T07:48:34.947Z",
        "lastModified": "2024-06-04T07:48:34.947Z",
        "size": 3280,
        "formattedSize": "3.2 KB"
      }
    },
    {
      "id": "accessibility\\discussingx",
      "contents": "\r\n## Discussing user needs\r\n\r\nIf done in the right way, having a discussion upfront about people's needs can be very valuable.\r\n\r\nBeing proactive, in a positive manner, will build up a good relationship with your users and ensure you're delivering the best experience possible.\r\n\r\nIt can be hard to know who your users are. It's important not to disregard accessibility because you 'can't find anyone with accessibility needs'.\r\n\r\nOnly test your apps with real users [when you've completed your own accessibility testing](/accessibility/testing#testing-with-real-people). This means you don't waste people's time, and you can get more valuable usability insights.\r\n\r\n## Disclosure\r\n\r\nDisclosing a disability or impairment is an individual decision, and there is no obligation for anybody to do so. The point at which an individual discloses a disability or impairment (if at all) varies from case to case.\r\n\r\nThere are many reasons why someone may or may not choose to disclose. Reasons for non-disclosure include a fear that it will disadvantage them if disclosed. Some may have a disability or impairment they have not yet discovered and so wouldn't know there was a need for disclosure.\r\n\r\nThere are also many reasons why disclosing a disability is a positive action that will empower, protect and assist someone in the workplace.\r\n\r\nAwareness of someone's needs may mean that provision can be made for reasonable adjustments. The person and their colleagues may feel more comfortable to have open conversations about their requirements. This can lead to the person facing fewer barriers to employment and training opportunities.\r\n\r\nDiscussing someone's needs should be handled sensitively and on a one-to-one basis.\r\n",
      "path": "/accessibility/introduction/discussing",
      "navPriority": 2,
      "date": "2022-11-15",
      "title": "Talking about disability and needs",
      "subTitle": "How to talk about disability and needs.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/discussing.mdx",
      "meta": {
        "relativePath": "accessibility\\discussing.mdx",
        "createdAt": "2024-04-04T12:41:43.717Z",
        "lastModified": "2024-04-04T12:41:43.717Z",
        "size": 2040,
        "formattedSize": "2.0 KB"
      }
    },
    {
      "id": "accessibility\\documenting\\accessibility-statements-guidancex",
      "contents": "\r\nimport { IcAlert } from \"@ukic/react\";\r\n\r\n## How to fill in an Accessibility Statement\r\n\r\nThis page tells you how to fill in an [Accessibility Statement](/accessibility/documenting/accessibility-statements) if you work for MI6, MI5, GCHQ or one of our partners. [Templates are available](/accessibility/documenting/accessibility-statements#the-template).\r\n\r\nThe numbered headings correspond to the sections you will find within the Accessibility Statement.\r\n\r\n<p>\r\n  It's based on the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.gov.uk/government/publications/sample-accessibility-statement/sample-accessibility-statement-for-a-fictional-public-sector-website\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    sample accessibility statement\r\n  </ic-link>{\" \"}\r\n  published by the Government Digital Service (GDS).\r\n</p>\r\n\r\nMost of it is legally required and needs to be published to comply with the organisation's accessibility requirements. Don't change the order of sections or wording unless this guidance tells you to.\r\n\r\nDon't use the statement to justify why an app is inaccessible, other than in the \"Disproportionate Burden\" section.\r\n\r\nYou can also [download this guidance (DOCX)](/accessibility-statement-guidance.docx).\r\n\r\n### Where to publish\r\n\r\nThe [when to create and update](/accessibility/documenting/when-to-create-and-update) page explains where to publish the completed Accessibility Statement.\r\n\r\n### How to use the template\r\n\r\nYou may need to make minor changes, such as changing between singular and plural or 'app to service', but don't re-order, change titles or remove anything unless this guidance tells you to.\r\n\r\nKeep the language simple. This statement needs to be understandable for everyone in the department, it shouldn't be technical.\r\n\r\nUpdate everything in square brackets (between '[' and ']') &ndash; remove the square brackets.\r\n\r\nIt has examples and sample wording and guidance. Remove anything marked as 'EXAMPLE'.\r\n\r\n## 1. Overview\r\n\r\nThis section is used to highlight how accessible the app is. The sample bullet points aren't a checklist but will be true when the app is compliant to EN 301 549 or the Web Content Accessibility Guidelines (WCAG) Level A and AA criteria.\r\n\r\nIf the app doesn't have user guides, remove that statement.\r\n\r\nKeep this section up to date if part or most of the app doesn't comply and the statements in the bullet points aren't true.\r\n\r\nIf the app is fully or partly made up of third-party software, note this here. Reference the conformance level that the vendor provides. If the vendor doesn't provide accessibility documentation, request it from them.\r\n\r\n## 2. How accessible this app is\r\n\r\n<IcAlert\r\n  message=\"Delete the examples in the template before publishing\"\r\n  variant=\"info\"\r\n/>\r\n\r\nThis section is used to summarise any accessibility problems in the app. Document workarounds to inaccessible content or features.\r\nConsider a user of the app and think about what issues they would want to know about.\r\n\r\nProvide full detail of the accessibility problem later under 'non-accessible content'.\r\n\r\nIf the app is compliant and there's no accessibility problems, include the sentence:\r\n_“We're confident that this app is accessible.”_\r\n\r\n## 3. What to do if you can't access parts of this app\r\n\r\nThis section is used to explain alternatives and workarounds for accessibility problems that you are aware of.\r\n\r\nIt's not possible to predict all possible needs someone might have when using your app. The app must have a process to deal with these requests even if the app is compliant to the relevant standard.\r\n\r\n**Don't** use this section to justify why something is not accessible.\r\n\r\nIf the app is corporately supported, it's likely that accessibility adjustments would be requested through a Service Desk. If the app is not corporately supported, the development team must be able to deal with these requests.\r\n\r\n## 4. Reporting accessibility problems with this app\r\n\r\nDon't remove this section. You always need to provide a way for users to report a problem with your app, even if it's public facing.\r\n\r\nIf this is a commercial app or part of it relies on a third-party vendor, be clear how this might impact the time it takes to fix accessibility problems.\r\n\r\n## 5. Enforcement procedure\r\n\r\nThis section is used to make clear how the accessibility of the app can be challenged.\r\n\r\nRemove the second paragraph if the statement will be published publicly online.\r\n\r\n## 6. Contacting us\r\n\r\nThis section is used to explain how people can contact the team that looks after the app. Change this section depending on your app and team.\r\n\r\nOnly reference the Service Desk if you've agreed that support route.\r\n\r\nWhere possible, the contact details you provide should point to a team or a group. This avoids a single point of failure if your point of contact were to leave their role.\r\n\r\n## 7. Technical information about this app's accessibility\r\n\r\nThis section is used to make a formal statement about how accessible the app is.\r\n\r\nThe form of words here are legally required, so **don't change it** except for adding in the name of Department.\r\n\r\n### 7(a). Compliance Status\r\n\r\nThere's a legally required way of expressing the compliance status of your app, so don't change any words. Delete the statements that don't apply.\r\n\r\n- If the app meets **all** Level A and Level AA success criteria of WCAG Level 2.1 then it's 'fully compliant'.\r\n- If the app meets **more than half** of the Level A and Level AA success criteria of WCAG Level 2.1 then it's 'partially compliant'.\r\n- If the app meets **less than half** of the Level A and Level AA success criteria of WCAG Level 2.1 then it's 'not compliant'.\r\n\r\nIf your app, service or product needs to meet the EN 301 549 standard, then use the above thresholds and insert the following sentence:\r\n_“This [product/website/app/service] is [fully/partially/not] compliant to the EN 301 549 standards.”_\r\n\r\nIt's likely that the WCAG standards also apply to EN 301 549 products, so retain the appropriate WCAG statement.\r\n\r\n## 8. Non-accessible content\r\n\r\nThis section is used to fully explain accessibility problems in the app.\r\n\r\nIf no section applies, you can delete this section. This section must be added later if accessibility problems are found because overall compliance will have changed.\r\n\r\n**Don't change or remove** the headings in this section. You can add subheadings to better format the lists of problems if needed.\r\n\r\n### 8(a). Non-compliance with the accessibility regulations\r\n\r\n<IcAlert\r\n  message=\"Delete the example in the template before publishing\"\r\n  variant=\"info\"\r\n/>\r\n\r\nThis section is used to list accessibility problems in your apps that need to be fixed.\r\n\r\nFor each accessibility problem, list:\r\n\r\n- A description of the accessibility problem.\r\n- The EN 301 549 or WCAG 2.2 success criteria that are partially or not supported because of the accessibility problem.\r\n- When the problem will be fixed. You must fix accessibility problems **within a defined timeframe.**\r\n\r\nDon't mention problems covered by a Disproportionate Burden or Regulation exemption.\r\n\r\nIf there are no accessibility problems, include the following sentence, amending as appropriate:\r\n_“There are no non-compliances with the accessibility regulations other than those in “Disproportionate burden\"/\"Content that's not within the scope of the accessibility regulations\"\"_\r\n\r\n### 8(b). Disproportionate burden\r\n\r\n<IcAlert\r\n  message=\"Delete the example in the template before publishing\"\r\n  variant=\"info\"\r\n/>\r\n\r\nThis section is used if the app has an approved disproportionate burden assessment. Disproportionate burden assessments must always be approved by local accessibility owners.\r\n\r\nA disproportionate burden is a claim made when the Department can't reasonably fix or make the app accessible.\r\n\r\nIf the app does not need a disproportionate burden assessment, include the sentence:\r\n_“We're not claiming a disproportionate burden to making any part of [app name] compliant to the accessibility regulations.”_\r\n\r\n### 8(c). Content that's not within the scope of the accessibility regulations\r\n\r\n<IcAlert\r\n  message=\"Delete the example in the template before publishing\"\r\n  variant=\"info\"\r\n/>\r\n\r\nThis section is used to list which parts of the app will not be made accessible because they're explicitly excluded in the Regulations. Refer to the Department's accessibility requirements for what is explicitly excluded.\r\n\r\nIf the app does not have content that's not within the scope of the accessibility regulations, include the sentence:\r\n_“There is no content in the app that is outside the scope of the accessibility regulations.”_\r\n\r\n## 9. How we tested this app\r\n\r\nThis section is used to explain how the app was tested against the relevant standard (WCAG or EN 301 549).\r\nThis includes which version(s) of the app were tested, where they are hosted and how pages were chosen for testing.\r\n\r\nIf relevant, include information from third-party auditors and reports that they have provided.\r\n\r\nThere is no requirement to test an app with a specific approach, but a combination of [manual and automatic techniques](/accessibility/testing) is recommended.\r\n\r\n## 10. What we're doing to improve accessibility\r\n\r\nThis section is used to explain how you will make sure that the app remains accessible through its lifecycle. Linking to a product or accessibility roadmap is optional, but it will help users understand what improvements will be made in future.\r\n\r\nWhere the app has existing accessibility problems, explain the timeframe in which the problems will be fixed.\r\n\r\n## 11. Preparation of this Accessibility Statement\r\n\r\nThis section is used to say when the latest accessibility testing was done, when this statement was updated and to link to relevant reports.\r\n\r\nThe wording in the first sentence about when the statement was prepared is legally required. **Don't change it.**\r\n\r\nInclude multiple Accessibility Conformance Reports if appropriate. The reports must match the latest app and this Accessibility Statement.\r\n\r\nInstances where multiple Accessibility Conformance Reports should be referenced:\r\n\r\n- The app consists of multiple interacting user interfaces.\r\n- The app is based on third party software that has been configured. Provide the vendor's Accessibility Conformance Report (VPAT/ACR) and then a supplementary report that covers any user interface changes caused by your configuration or customisation of the app.\r\n",
      "path": "/accessibility/documenting/accessibility-statements-guidance",
      "navPriority": 1,
      "date": "2024-04-15",
      "title": "Accessibility Statement guidance",
      "subTitle": "How to fill out and maintain an Accessibility Statement.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/documenting/accessibility-statements-guidance.mdx",
      "meta": {
        "relativePath": "accessibility\\documenting\\accessibility-statements-guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.948Z",
        "lastModified": "2024-06-04T07:48:34.948Z",
        "size": 10892,
        "formattedSize": "10.6 KB"
      }
    },
    {
      "id": "accessibility\\documenting\\accessibility-statementsx",
      "contents": "\r\n## Introduction\r\n\r\nAll apps and services must publish an Accessibility Statement to comply with the Intelligence Community [Digital Accessibility Policy](/accessibility/requirement).\r\n\r\nAn Accessibility Statement is a clear overview of the accessibility compliance status and contact details for the team that looks after the app or service.\r\n\r\n[Read the IC Design System's Accessibility Statement](/icds).\r\n\r\nThe statement includes how accessible an app or service is, known problems, who is responsible and how the product was tested.\r\n\r\nThe statement will evolve as the app or service changes. As accessibility problems are found and fixed, and new features are added, the statement must reflect the [Accessibility Conformance Report](/accessibility/documenting/conformance-report) and all testing results.\r\n\r\nThe statement must also link to your Accessibility Conformance Report if one is required.\r\n\r\n## The template\r\n\r\nTo make the statement useful for everyone, follow the template and don't change the layout. Keep the existing language where applicable, write in plain English and avoid technical jargon.\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"\"\r\n      href=\"/accessibility/documenting/accessibility-statements-guidance\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Guidance for completing accessibility statements\r\n    </ic-link>\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"\"\r\n      href=\"/accessibility-statement-template.docx\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Blank accessibility statement (DOCX)\r\n    </ic-link>\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://github.com/mi6/ic-design-system/tree/main/static/accessibility-statement-html-blank.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Blank accessibility statement (HTML)\r\n    </ic-link>\r\n  </li>\r\n</ul>\r\n",
      "path": "/accessibility/documenting/accessibility-statements",
      "navPriority": 0,
      "date": "2022-11-15",
      "title": "Accessibility Statements",
      "subTitle": "Accessibility Statements are simple but important documents that are useful to everyone.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/documenting/accessibility-statements.mdx",
      "meta": {
        "relativePath": "accessibility\\documenting\\accessibility-statements.mdx",
        "createdAt": "2024-06-04T07:48:34.949Z",
        "lastModified": "2024-06-04T07:48:34.949Z",
        "size": 2253,
        "formattedSize": "2.2 KB"
      }
    },
    {
      "id": "accessibility\\documenting\\conformance-reportx",
      "contents": "\r\n## Introduction\r\n\r\nAll apps and services must publish and maintain an Accessibility Conformance Report that states current compliance in order to comply with the Intelligence Community [Digital Accessibility Policy](/accessibility/requirement).\r\n\r\nAn Accessibility Conformance Report is used for accurate and consistent reporting of accessibility status in apps and services.\r\n\r\n[Download the IC Design System's Accessibility Conformance Report](/icds-accessibility-conformance-report-17-01-24.docx).\r\n\r\nThe standard Report checks that an app or service meets each applicable [WCAG](/accessibility/requirement/wcag) success criteria. A small number of apps or services might need to meet the EN 301 549 standard. If that's the case, use that version of the Report instead.\r\n\r\nUse the full range of [accessibility testing](/accessibility/testing) methods to make sure your app or service is accessible to everyone. Just filling in a Report as a checklist won't give a full picture of how accessible (to WCAG or EN 301 549) your app or service is.\r\n\r\nIf an accessibility problem is found in the app or service that doesn't fit into the Report, it must be recorded in the Accessibility Statement.\r\n\r\n## Update as you go\r\n\r\nUpdate the Report during the lifecycle of the app or service.\r\n\r\nAutomated and manual accessibility testing is needed to fill in the Reports. Whenever new features are added, tested and problems are found, they need to be reflected in the Report.\r\n\r\n## Which report template to use\r\n\r\n<p>\r\n  A common checklist for testing and reporting is the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.itic.org/policy/accessibility/vpat\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Voluntary Product Accessibility Template® (VPAT®)\r\n  </ic-link>\r\n  . When filled in, the VPAT® becomes the app or service's Accessibility Conformance\r\n  Report.\r\n</p>\r\n\r\nUse the correct VPAT® depending on the type of app or service:\r\n\r\n- Use the [WCAG (VPAT®) template](/VPAT2.5WCAG-November2023.doc) for apps and services with only a user interface (browser-based or otherwise).\r\n\r\n- Use the [EN 301 549 (VPAT®) template](/VPAT2.5EU-November2023.doc) for apps and services that include hardware. It includes all the WCAG criteria, so only one Report is needed.\r\n\r\nIf a Report is produced or available from auditors or vendors, use their reports even if it's not called a 'VPAT®'. If configuration/customisation has been applied to the vendor's software, then a supplementary Report must be provided that covers any user experience changes caused by this modification.\r\n\r\nIf the app or service is modified from the original version&mdash;or does not fully represent conformance to the requirements&mdash;an updated Report version must be produced. Accessibility Conformance Reports must match the latest Accessibility Statement and app version.\r\n\r\nAll reports need to explain conformance to all WCAG or EN 301 549 success criteria or explain why it's not applicable.\r\n\r\n## How to fill in the report\r\n\r\nTo make the Report useful for everyone:\r\n\r\n- Update the Report as you do [manual](/accessibility/testing/manual-testing) and [automated accessibility testing](/accessibility/testing/automated-testing).\r\n- Write in plain English and avoid technical jargon so that everyone can understand it.\r\n- Ensure there is a Conformance Level and supporting comment in 'Remarks and Explanations' for each success criteria, even if it's 'not applicable'.\r\n- For any 'Supports' and 'Partially Supports' levels, explain why the app or service meets that specific success criteria.\r\n- For any 'Not Applicable' levels, explain why they aren't applicable to that specific success criteria.\r\n",
      "path": "/accessibility/documenting/conformance-report",
      "navPriority": 2,
      "date": "2024-01-18",
      "title": "Accessibility Conformance Report",
      "subTitle": "An Accessibility Conformance Report is used for accurate and consistent reporting of accessibility status in apps and services.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/documenting/conformance-reports.mdx",
      "meta": {
        "relativePath": "accessibility\\documenting\\conformance-report.mdx",
        "createdAt": "2024-06-04T07:48:34.950Z",
        "lastModified": "2024-06-04T07:48:34.950Z",
        "size": 4126,
        "formattedSize": "4.0 KB"
      }
    },
    {
      "id": "accessibility\\documenting\\indexx",
      "contents": "\r\n## Introduction\r\n\r\nAs well as thorough [accessibility testing](/accessibility/testing), comprehensive documentation is needed for an app or service to comply with the Intelligence Community [Digital Accessibility Policy](/accessibility/requirement).\r\n\r\nAll apps and services are required to regularly and transparently publish up-to-date versions of their documentation.\r\n\r\nDocumentation must be published internally to all potential users. For our external apps and services, documentation must be published publicly.\r\n\r\nWe use [Accessibility Statements](/accessibility/documenting/accessibility-statements) and [Accessibility Conformance Reports](/accessibility/documenting/conformance-report) to document how accessible our apps and services are.\r\n\r\n## Accessibility Statement\r\n\r\nAn Accessibility Statement is a clear overview of the accessibility compliance status and contact details for the team that looks after the app or service.\r\n\r\nThe statement includes how accessible an app or service is, known problems, who is responsible and how the product was tested.\r\n\r\nThe statement needs to explain known accessibility issues, how people can work around the issues and when you plan to fix them.\r\n\r\n## Accessibility Conformance Report\r\n\r\nAn Accessibility Conformance Report is used for accurate and consistent reporting of accessibility status in apps and services.\r\n\r\nThis report checks that an app or service meets each applicable [WCAG](/accessibility/requirement/wcag) success criteria. Some apps or services might need to use a report that includes more criteria for the EN 301 549 standard.\r\n",
      "path": "/accessibility/documenting",
      "navPriority": 6,
      "date": "2022-11-15",
      "title": "Documenting accessibility",
      "subTitle": "This section tells you how to document how accessible your app or service is.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/documenting/index.mdx",
      "meta": {
        "relativePath": "accessibility\\documenting\\index.mdx",
        "createdAt": "2024-06-04T07:48:34.951Z",
        "lastModified": "2024-06-04T07:48:34.951Z",
        "size": 1947,
        "formattedSize": "1.9 KB"
      }
    },
    {
      "id": "accessibility\\documenting\\when-to-create-and-updatex",
      "contents": "\r\n## Introduction\r\n\r\nAll documentation needs to be kept up to date and represent the version of the app or service that users have, or will have, access to.\r\n\r\n## When to create\r\n\r\nCreate the [Accessibility Statement](/accessibility/documenting/accessibility-statements) and [Accessibility Conformance Report](/accessibility/documenting/conformance-report) as early as possible. It's best to create them at the start of the project (or development).\r\n\r\nAn Accessibility Statement must always be available to users, even in a pilot or minimum viable product (MVP).\r\n\r\n## When to update\r\n\r\nUpdate the documentation during the lifecycle of the app or service. Whenever new features are added, tested and problems are found, they need to be reflected in the documentation.\r\n\r\nPublish the documentation when it changes. The documentation must be reviewed at least every 12 months even if the app or service has not changed.\r\n\r\n## Where to publish\r\n\r\nPublish the Accessibility Statement for apps and services in the following places:\r\n\r\n- As an accessible page, preferably available in the footer or navigation.\r\n- In any substantive corporate records for each department where the app or service is available.\r\n\r\nDepartments may also require statements to be published on their Intranet.\r\n\r\nThe statement must reflect and link to the latest Accessibility Conformance Report.\r\n",
      "path": "/accessibility/documenting/when-to-create-and-update",
      "navPriority": 3,
      "date": "2022-11-15",
      "title": "When to create and update",
      "subTitle": "Keep your documentation current and transparent.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/documenting/when-to-create-and-update.mdx",
      "meta": {
        "relativePath": "accessibility\\documenting\\when-to-create-and-update.mdx",
        "createdAt": "2024-04-04T12:41:43.717Z",
        "lastModified": "2024-04-04T12:41:43.717Z",
        "size": 1731,
        "formattedSize": "1.7 KB"
      }
    },
    {
      "id": "accessibility\\indexx",
      "contents": "\r\n## Our work on accessibility\r\n\r\nMI6, MI5, GCHQ and our partners work to provide accessible, inclusive and equitable experiences for everyone who uses our apps and services.\r\n\r\nThis means making sure that what we build, buy or use empowers our teams.\r\n\r\nWe want our teams to consistently and effectively contribute to our mission, regardless of any impairments or accessibility needs they might have.\r\n\r\n## Get started\r\n\r\nIf you create or manage apps or services for MI6, MI5, GCHQ and our partners, you have a responsibility to make sure they are inclusive and accessible.\r\n\r\nTo understand more about how we make our stuff accessible, read:\r\n\r\n- [Why accessibility is important](/accessibility/introduction) and how it can affect our teams.\r\n- [What our teams must do](/accessibility/requirement) to comply with our Policy and other public sector legislation.\r\n- The types of [disabilities, impairments and neurological diversity](/accessibility/needs) to consider when creating apps and services.\r\n- How to [code your apps and services](/accessibility/coding) so that they're accessible.\r\n- How and when to [test how accessible](/accessibility/testing) your apps and services are.\r\n- How and when to [document how accessible](/accessibility/documenting) your apps and services are.\r\n\r\n## Getting help\r\n\r\nFor internal teams, support is available from your local accessibility experts.\r\n\r\nThey can help you understand how to properly design, build and test your apps and services. Search your intranet to get in touch with them.\r\n\r\n## Feedback\r\n\r\n<p>\r\n  The Design System aims to introduce disability, impairments and difference in\r\n  an inclusive and accurate way. Please{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://github.com/mi6/ic-design-system/issues\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    check for an existing issue or let us know\r\n  </ic-link>{\" \"}\r\n  if you can help us improve our language.\r\n</p>\r\n",
      "path": "/accessibility",
      "navPriority": 0,
      "date": "2022-11-15",
      "title": "Accessibility",
      "subTitle": "This section introduces accessibility and how to design, build and test for accessible apps and services.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/index.mdx",
      "meta": {
        "relativePath": "accessibility\\index.mdx",
        "createdAt": "2024-06-04T07:48:34.952Z",
        "lastModified": "2024-06-04T07:48:34.952Z",
        "size": 2268,
        "formattedSize": "2.2 KB"
      }
    },
    {
      "id": "accessibility\\introductionx",
      "contents": "\r\n## Introduction\r\n\r\nAccessibility is not just about disability; it covers a wide range of needs from temporary motor impairments and blindness, to neurological diversity like dyslexia and anxiety.\r\n\r\nOne in five people in the UK have a disability<sup id=\"ref-1\"><a href=\"#fn-1\">1</a></sup> and up to 15% of people are neurodiverse<sup id=\"ref-2\"><a href=\"#fn-2\">2</a></sup>.\r\n\r\nThere are also many people who might have temporary accessibility needs and wouldn't identify as having them.\r\n\r\n## Permanent, temporary and situational\r\n\r\nImpairments can be permanent, temporary or situational. Anyone can have a different set of impairments at any time and those needs can change quickly.\r\n\r\nThere are no hard and fast rules about how a disability, impairment or neurological diversity affects someone.\r\n\r\nA person born with one arm, a person with a broken wrist and a person holding a baby all have a reduced ability to interact through their hands. Each will interact with things differently; arguably, someone with one arm may be better prepared than someone with a broken wrist.\r\n\r\nAccessibility and inclusive design aren't restricted to a small community with life-changing needs.\r\n\r\nRead more about examples of [disabilities, impairments and neurological diversity](/accessibility/needs).\r\n\r\n## References\r\n\r\n<p>\r\n  1.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.scope.org.uk/media/disability-facts-figures/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Disability facts and figures\r\n  </ic-link>{\" \"}\r\n  .<i> Scope</i>. Accessed 5 November 2022. <a href=\"#ref-1\">Back to content</a>\r\n</p>\r\n<p>\r\n  2.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://adhdaware.org.uk/what-is-adhd/neurodiversity-and-other-conditions/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-2\"\r\n  >\r\n    Neurodiversity and other conditions\r\n  </ic-link>{\" \"}\r\n  .<i> ADHD Aware</i>. Accessed 3 February 2023.{\" \"}\r\n  <a href=\"#ref-2\">Back to content</a>\r\n</p>\r\n",
      "path": "/accessibility/introduction",
      "navPriority": 0,
      "date": "2023-02-03",
      "title": "Introduction to accessibility",
      "subTitle": "Many people who work for us are directly impacted by the accessibility decisions we make.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/introduction.mdx",
      "meta": {
        "relativePath": "accessibility\\introduction.mdx",
        "createdAt": "2024-06-04T07:48:34.953Z",
        "lastModified": "2024-06-04T07:48:34.953Z",
        "size": 2341,
        "formattedSize": "2.3 KB"
      }
    },
    {
      "id": "accessibility\\needs\\auditoryx",
      "contents": "\r\nimport { IcAlert } from \"@ukic/react\";\r\n\r\n## Introduction\r\n\r\nPeople will have different degrees of a hearing impairment. Profoundly or severely deaf people may rely on hearing aids and lip-reading/speaking, whilst others will struggle with noisy environments.\r\n\r\nA hearing impairment can include things like finding issues with background noise through to side effects of medicines.\r\n\r\n11 million people in the UK are d/Deaf or hard of hearing<sup id=\"ref-1\"><a href=\"#fn-1\">1</a></sup> and 70% state that their hearing loss sometimes prevented them from fulfilling their potential at work<sup id=\"ref-2\"><a href=\"#fn-2\">2</a></sup>.\r\n\r\n## Examples of hearing impairments\r\n\r\nThe following table lists examples of hearing impairments in three columns (permanent, temporary and situational).\r\n\r\n| Permanent                                     | Temporary                                                                | Situational                                       |\r\n| --------------------------------------------- | ------------------------------------------------------------------------ | ------------------------------------------------- |\r\n| Deaf (little to no hearing)                   | Ear infection                                                            | Background noise (noisy office)                   |\r\n| Hard of hearing (mild to severe hearing loss) | Medicine side effects (such as for neonatal infections, malaria, cancer) | Noise-cancelling headphones (to counteract noise) |\r\n|                                               | Exposure to loud noises                                                  | Poor quality audio                                |\r\n\r\n## Making things accessible\r\n\r\nMake sure any audio has little to no background noise.\r\n\r\n### Subtitles and transcripts\r\n\r\n<IcAlert\r\n  heading=\"Keep compliant\"\r\n  message=\"Due to the nature of some Intelligence Community apps and services, transcription,\r\n  subtitles and pre-processing might not be possible. This should always be\r\n  recorded in your Accessibility Statement with equitable alternatives offered where reasonably possible.\"\r\n  variant=\"warning\"\r\n/>\r\n\r\nMake sure any audio information is available in text.\r\n\r\nFor all audio content (including videos with audio) you must provide [subtitles and a transcript](/accessibility/requirement/subtitles-transcripts-captions). Subtitles must not be embedded (rendered) into the video as they need to be readable using assistive technologies.\r\n\r\nDon't rely on automated subtitling and transcription because it might be inaccurate. Always check any automated subtitles and transcripts for accuracy.\r\n\r\n## References\r\n\r\n<>\r\n  <p>\r\n    1.{\" \"}\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://rnid.org.uk/about-us/research-and-policy/facts-and-figures/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n      id=\"fn-1\"\r\n    >\r\n      Facts and figures\r\n    </ic-link>{\" \"}\r\n    .<i> RNID</i>. Accessed 5 November 2022.{\" \"}\r\n    <a href=\"#ref-1\">Back to content</a>\r\n  </p>\r\n  <p>\r\n    2.{\" \"}\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.england.nhs.uk/wp-content/uploads/2017/09/hearing-loss-what-works-guide-employment.pdf\"\r\n      rel=\"noreferer noopener nofollow\"\r\n      id=\"fn-2\"\r\n    >\r\n      What works: Hearing Loss and Employment\r\n    </ic-link>{\" \"}\r\n    .<i> NHS England</i>. Accessed 5 November 2022.{\" \"}\r\n    <a href=\"#ref-2\">Back to content</a>\r\n  </p>\r\n</>{\" \"}\r\n",
      "path": "/accessibility/needs/auditory",
      "navPriority": 0,
      "date": "2022-11-15",
      "title": "Auditory needs",
      "subTitle": "Hearing impairment means a complete or partial loss of the ability to hear in one or both ears.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/needs/auditory.mdx",
      "meta": {
        "relativePath": "accessibility\\needs\\auditory.mdx",
        "createdAt": "2024-04-04T12:41:43.717Z",
        "lastModified": "2024-04-04T12:41:43.717Z",
        "size": 3785,
        "formattedSize": "3.7 KB"
      }
    },
    {
      "id": "accessibility\\needs\\indexx",
      "contents": "\r\n## Types of accessibility needs\r\n\r\nAccessibility needs can be permanent, temporary or situational. Remember to not consider those with 'accessibility needs’ as a defined group of people with 'disability and impairments'.\r\n\r\nAnyone can have a different set of needs at any time. We've curated some information to get you started, but this is by no means an exhaustive list of the types of experiences people can have.\r\n\r\n- [Auditory](/accessibility/needs/auditory)\r\n- [Invisible illness](/accessibility/needs/invisible)\r\n- [Motor](/accessibility/needs/motor)\r\n- [Neurodiversity](/accessibility/needs/neurodiversity)\r\n- [Visual](/accessibility/needs/visual)\r\n\r\n## Government Digital Service Accessibility Personas\r\n\r\n<p>\r\n  The GDS Accessibility team has created{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://alphagov.github.io/accessibility-personas/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    seven different accessibility personas\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\nEach persona has different access needs. They are:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://alphagov.github.io/accessibility-personas/claudia/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Claudia\r\n    </ic-link>{\" \"}\r\n    &ndash; a sight impaired screen magnifier user.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://alphagov.github.io/accessibility-personas/ashleigh/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Ashleigh\r\n    </ic-link>{\" \"}\r\n    &ndash; a severely sight impaired screenreader user.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://alphagov.github.io/accessibility-personas/ron/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Ron\r\n    </ic-link>{\" \"}\r\n    &ndash; an older user with multiple needs.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://alphagov.github.io/accessibility-personas/chris/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Chris\r\n    </ic-link>{\" \"}\r\n    &ndash; a user with rheumatoid arthritis.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://alphagov.github.io/accessibility-personas/pawel/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Pawel\r\n    </ic-link>{\" \"}\r\n    &ndash; a user with Aspergers.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://alphagov.github.io/accessibility-personas/simone/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Simone\r\n    </ic-link>{\" \"}\r\n    &ndash; a dyslexic user.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://alphagov.github.io/accessibility-personas/saleem/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Saleem\r\n    </ic-link>{\" \"}\r\n    &ndash; a profoundly deaf user.\r\n  </li>\r\n</ul>\r\n\r\n## Feedback\r\n\r\n<p>\r\n  The Design System aims to introduce disability, impairments and difference in\r\n  an inclusive and accurate way. Please{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://github.com/mi6/ic-design-system/issues\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    check for an existing issue or let us know\r\n  </ic-link>{\" \"}\r\n  if you can help us improve our language.\r\n</p>\r\n",
      "path": "/accessibility/needs",
      "navPriority": 1,
      "date": "2022-11-15",
      "title": "Accessibility needs",
      "subTitle": "When building apps and services, be careful not to assume everyone is like you.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/needs/index.mdx",
      "meta": {
        "relativePath": "accessibility\\needs\\index.mdx",
        "createdAt": "2024-06-04T07:48:34.954Z",
        "lastModified": "2024-06-04T07:48:34.954Z",
        "size": 3561,
        "formattedSize": "3.5 KB"
      }
    },
    {
      "id": "accessibility\\needs\\invisiblex",
      "contents": "\r\n## Introduction\r\n\r\nThe examples below aren't exhaustive but show some common experiences that may affect how people use apps and services.\r\n\r\n### Stress and anxiety\r\n\r\nStress and anxiety disorders are a group of related conditions that can cause both psychological and physical symptoms. Symptoms can include feeling restless or worried<sup id=\"ref-1\"><a href=\"#fn-1\">1</a></sup>, irritability, fatigue, dizziness and difficulty breathing.\r\n\r\nBehavioural effects include procrastination, avoidance and social withdrawal.\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.nhs.uk/conditions/generalised-anxiety-disorder/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Read more about anxiety disorders on the NHS website\r\n  </ic-link>{\" \"}\r\n  .\r\n</p>\r\n\r\n### Epilepsy\r\n\r\nEpilepsy is a condition that affects around one in every 100 people in the UK. When someone has epilepsy, it means they tend to have epileptic seizures<sup id=\"ref-2\"><a href=\"#fn-2\">2</a></sup>.\r\n\r\nTriggers aren't the same for everyone, but common triggers include temperature, light, stress, tiredness, flicker and computer screens.\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.epilepsysociety.org.uk/about-epilepsy/what-epilepsy\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Read more about epilepsy at the Epilepsy Society\r\n  </ic-link>{\" \"}\r\n  .\r\n</p>\r\n\r\n### Myalgic Encephalopathy/Chronic Fatigue Syndrome\r\n\r\nMyalgic Encephalopathy/Chronic Fatigue Syndrome (ME/CFS) causes persistent fatigue (extreme tiredness) that affects day to day living and isn’t relieved by sleep or rest<sup id=\"ref-3\"><a href=\"#fn-3\">3</a></sup>.\r\n\r\nThe main symptoms of ME/CFS are persistent mental and physical fatigue, although there are other common symptoms including muscular and joint pain, severe headaches, poor short-term memory and concentration, difficulty organising thoughts and problems finding the right words.\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.meresearch.org.uk/what-is-me\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Read more about ME/CFS at ME Research UK\r\n  </ic-link>{\" \"}\r\n  .\r\n</p>\r\n\r\n### Fibromyalgia\r\n\r\nFibromyalgia, also called Fibromyalgia Syndrome (FMS), is a long-term condition that causes pain all over the body.\r\n\r\nAs well as widespread pain, people with FMS can also experience increased sensitivity to pain, extreme tiredness, muscle stiffness, difficulty sleeping, problems with mental processes (known as \"fibro-fog\") such as memory and concentration, headaches and irritable bowel syndrome (IBS)<sup id=\"ref-4\"><a href=\"#fn-4\">4</a></sup>.\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.nhs.uk/conditions/fibromyalgia/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Read more about fibromyalgia on the NHS website\r\n  </ic-link>{\" \"}\r\n  .\r\n</p>\r\n\r\n## Making things accessible\r\n\r\nIn addressing some of the design issues below, we make it easier for everyone to use our apps. Thinking about the [design considerations for neurodiversity](/accessibility/needs/neurodiversity) can help people who have invisible illnesses.\r\n\r\n### Anxiety and stress-free design\r\n\r\nSome things we include in apps increase anxiety and, for some people, the impact can be significant.\r\n\r\nConsider:\r\n\r\n- Error messages should explain how to fix the problem and not blame the user.\r\n- [Motion/animation](/styles/motion) or information should only appear when the user expects it.\r\n- Popups that disappear too quickly before they can be read, like [toasts](/components/toast).\r\n- Use simple [layouts](/styles/layout-spacing) as complicated, dense layouts can overload users with information.\r\n\r\n## References\r\n\r\n<p>\r\n  1.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.nhs.uk/conditions/generalised-anxiety-disorder\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Generalised anxiety disorder in adults\r\n  </ic-link>{\" \"}\r\n  .<i> NHS</i>. 19 December 2018. Accessed 5 November 2022{\" \"}\r\n  <a href=\"#ref-1\">Back to content</a>\r\n</p>\r\n<p>\r\n  2.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.epilepsysociety.org.uk/about-epilepsy/epileptic-seizures\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-2\"\r\n  >\r\n    Epileptic seizures\r\n  </ic-link>{\" \"}\r\n  .<i> Epilepsy Society</i>. Accessed 5 November 2022{\" \"}\r\n  <a href=\"#ref-2\">Back to content</a>\r\n</p>\r\n<p>\r\n  3.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.meresearch.org.uk/what-is-me\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-3\"\r\n  >\r\n    What is ME?\r\n  </ic-link>{\" \"}\r\n  .<i> ME Research UK</i>. Accessed 5 November 2022{\" \"}\r\n  <a href=\"#ref-3\">Back to content</a>\r\n</p>\r\n<p>\r\n  4.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.nhs.uk/conditions/fibromyalgia/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-4\"\r\n  >\r\n    Fibromyalgia\r\n  </ic-link>{\" \"}\r\n  .<i> NHS</i>. 20 February 2019. Accessed 5 November 2022{\" \"}\r\n  <a href=\"#ref-4\">Back to content</a>\r\n</p>\r\n",
      "path": "/accessibility/needs/invisible",
      "navPriority": 2,
      "date": "2022-11-15",
      "title": "Invisible illness",
      "subTitle": "Invisible illness is an umbrella term for medical conditions that are invisible to others.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/needs/invisible.mdx",
      "meta": {
        "relativePath": "accessibility\\needs\\invisible.mdx",
        "createdAt": "2024-06-04T07:48:34.955Z",
        "lastModified": "2024-06-04T07:48:34.955Z",
        "size": 5381,
        "formattedSize": "5.3 KB"
      }
    },
    {
      "id": "accessibility\\needs\\motorx",
      "contents": "\r\n## Introduction\r\n\r\nMotor impairments can fundamentally affect the usage of your app or service. Some people that use walking frames can't hold a mobile phone, and some with muscle tremors may be unable to use dropdown menus with a mouse.\r\n\r\nThere are many types and causes of motor impairments<sup id=\"ref-1\"><a href=\"#fn-1\">1</a></sup>. Over 400,000 people in the UK have rheumatoid arthritis<sup id=\"ref-2\"><a href=\"#fn-2\">2</a></sup> and the number of people diagnosed with Parkinson's in 2018 in the UK was around one in 350 adults<sup id=\"ref-3\"><a href=\"#fn-3\">3</a></sup>.\r\n\r\n## Examples of motor impairments\r\n\r\nThe following table lists examples of motor impairments in three columns (permanent, temporary and situational).\r\n\r\n| Permanent                                                  | Temporary   | Situational           |\r\n| ---------------------------------------------------------- | ----------- | --------------------- |\r\n| Missing a limb                                             | Broken limb | Holding a baby        |\r\n| Cerebral Palsy (affects muscle tone, movement and control) | Burn        | Using a telephone     |\r\n| Dyspraxia (co-ordination of movement)                      |             | General multi-tasking |\r\n| Muscle tremor (including Parkinson's)                      |             |                       |\r\n\r\n## Making things accessible\r\n\r\nIn addressing some of the design issues below, we make it easier for everyone to use our apps.\r\n\r\n### Clear clickable actions\r\n\r\nMake sure any buttons are clear and easily clickable. Buttons should be easy enough to click and shouldn't be too close together.\r\n\r\nAvoid placing lots of actions next to each other as this could increase the risk of a user taking the wrong action.\r\n\r\n### Design for keyboard and speech\r\n\r\nMake sure that all functionality is accessible by keyboard only. Some users with motor impairments may not use a mouse and instead use assistive technology such as speech input.\r\n\r\nConsider alternate input means (mouthpieces, clickers and text to speech software). Apps and services that conform to [WCAG](/accessibility/requirement/wcag) are more likely to work with assistive technologies.\r\n\r\n<p>\r\n  For example,{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.nuance.com/en-gb/dragon.html\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Dragon speech recognition software\r\n  </ic-link>{\" \"}\r\n  allows users to navigate apps, browse desktops, open applications, type and\r\n  more\r\n  <sup id=\"ref-4\">\r\n    <a href=\"#fn-4\">4</a>\r\n  </sup>.\r\n</p>\r\n\r\n## References\r\n\r\n<p>\r\n  1.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.neuromodulation.com/motor-impairment\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Motor impairment\r\n  </ic-link>{\" \"}\r\n  .<i> International Neuromodulation Society</i>. 25 April 2017. Accessed 5\r\n  November 2022. <a href=\"#ref-1\">Back to content</a>\r\n</p>\r\n<p>\r\n  2.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.nras.org.uk/what-is-ra-article\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-2\"\r\n  >\r\n    What is RA?\r\n  </ic-link>{\" \"}\r\n  .<i> National Rheumatoid Arthritis Society (NRAS)</i>. Accessed 5 November\r\n  2022. <a href=\"#ref-2\">Back to content</a>\r\n</p>\r\n<p>\r\n  3.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.parkinsons.org.uk/about-us/understanding-parkinsons-journalist/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-3\"\r\n  >\r\n    Parkinson's UK\r\n  </ic-link>{\" \"}\r\n  .<i> Parkinson's UK</i>. Accessed 5 November 2022.{\" \"}\r\n  <a href=\"#ref-3\">Back to content</a>\r\n</p>\r\n<p>\r\n  4.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.nuance.com/en-gb/dragon.html\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-4\"\r\n  >\r\n    Dragon speech recognition\r\n  </ic-link>{\" \"}\r\n  .<i> Nuance</i>. Accessed 5 November 2022.{\" \"}\r\n  <a href=\"#ref-4\">Back to content</a>\r\n</p>\r\n",
      "path": "/accessibility/needs/motor",
      "navPriority": 3,
      "date": "2022-11-15",
      "title": "Motor needs",
      "subTitle": "'Motor impairment' means a partial or total lack of function in a body part, usually a limb or limbs.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/needs/motor.mdx",
      "meta": {
        "relativePath": "accessibility\\needs\\motor.mdx",
        "createdAt": "2024-06-04T07:48:34.957Z",
        "lastModified": "2024-06-04T07:48:34.957Z",
        "size": 4268,
        "formattedSize": "4.2 KB"
      }
    },
    {
      "id": "accessibility\\needs\\neurodiversityx",
      "contents": "\r\n## Introduction\r\n\r\nThe terms neurodiversity, neurodifference and cognitive impairment cover a broad range of impairments or differences.\r\n\r\nNeurodiversity and neurodifference are umbrella terms referring to a group of conditions that share common features. These features often centre around differences in how people learn and process information.\r\n\r\nPeople with neurodiversity often describe themselves as having a different set of skills, abilities and ways of seeing the world.\r\n\r\n## Types of neurodiversity\r\n\r\nImproving a design for one set of needs often improves the experiences for other groups. It's quite common that some types of neurodiversity share needs with others.\r\n\r\nIt's important to remember that neurodiversity isn't always a disability or impairment. Neurodiverse people might not identify as having accessibility needs, but will still benefit from support and accessibility considerations.\r\n\r\nNot all types of neurodiversity and cognitive needs are included in these examples.\r\n\r\n### Dyslexia\r\n\r\nPeople with Dyslexia may have difficulty processing and remembering information they see and hear, which can affect learning and the acquisition of literacy skills. Dyslexia can also impact other areas such as organisational skills<sup id=\"ref-1\"><a href=\"#fn-1\">1</a></sup>.\r\n\r\n6.3 million people (around 10% of the UK population) have dyslexia<sup id=\"ref-2\"><a href=\"#fn-2\">2</a></sup>.\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.bdadyslexia.org.uk/dyslexia/about-dyslexia/what-is-dyslexia\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Read more about Dyslexia at the British Dyslexia Association\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n### Dyspraxia/Developmental Coordination Disorder\r\n\r\nDevelopmental Coordination Disorder (DCD), also known as dyspraxia, is a common disorder affecting fine and/or gross motor coordination in children and adults.\r\n\r\nMany non-motor difficulties may also be experienced. These include memory, perception and processing as well as additional problems with planning, organising and carrying out movements in the right order in everyday situations<sup id=\"ref-3\"><a href=\"#fn-3\">3</a></sup>.\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://dyspraxiafoundation.org.uk/about-dyspraxia/dyspraxia-glance/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Read more about Dyspraxia at the Dyspraxia Foundation\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n### Dyscalculia\r\n\r\nDyscalculia affects someone's ability to understand, recall or use numerical information. Some people may feel anxious when having to undertake any mathematical tasks.\r\n\r\nDyscalculia can also affect how numerical information is processed; some people can also have difficulty with memory, speed of thinking, organisation and sequencing. People with dyscalculia may not understand numerical references such as percentages.\r\n\r\n### Irlen Syndrome\r\n\r\nIrlen Syndrome is a perceptual processing disorder<sup id=\"ref-5\"><a href=\"#fn-5\">5</a></sup>. It can affect what words and letters look like, including how well someone can read. It's distinct from dyslexia.\r\n\r\nIt can be the cause of unexplained symptoms such as headaches, eye strain and fatigue.\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.irlensyndrome.org/what-is-irlen-syndrome/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Read more about Irlen Syndrome at the Irlen Syndrome Foundation (US)\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n### Attention Deficit conditions\r\n\r\nAttention deficit hyperactivity disorder (ADHD) leads to difficulties in maintaining attention as well as impulsive and hyperactive behaviour<sup id=\"ref-6\"><a href=\"#fn-6\">6</a></sup>.\r\n\r\nThe effects on people can include, but aren't limited to:\r\n\r\n- Trouble holding attention on tasks.\r\n- Avoidance or dislike of tasks that require a lot of mental effort.\r\n- Forgetfulness.\r\n- Trouble organising tasks and activities.\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://adhduk.co.uk/about-adhd/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Read more about ADD and ADHD at ADHD UK\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n### Spectrum conditions (including Autism and Asperger's)\r\n\r\nAutism (including Asperger's) is a spectrum condition that affects the way someone sees the world, processes information and interacts with others<sup id=\"ref-7\"><a href=\"#fn-7\">7</a></sup>.\r\n\r\nIn the workplace, even when their qualifications and skill levels are ideally suited to the work concerned, someone may experience difficulties interacting with colleagues, and this can affect their ability to remain in employment. These may include:\r\n\r\n- Not understanding abstract concepts.\r\n- Needing extra time to process information or answer questions.\r\n- Over- or under-sensitivity to light and sound.\r\n\r\nAround 700,000 people in the UK are on the autistic spectrum. Only 16% of people with autism in the UK are in full time paid employment<sup id=\"ref-8\"><a href=\"#fn-8\">8</a></sup>.\r\n\r\n<p>\r\n  Read more about{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.mencap.org.uk/learning-disability-explained/conditions-linked-learning-disability/autism-and-aspergers-syndrome\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Autism and Asperger's at Mencap\r\n  </ic-link>{\" \"}\r\n  or{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.autism.org.uk/advice-and-guidance/what-is-autism\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    The National Autistic Society\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n## Making things accessible\r\n\r\nIn addressing some of the design issues below, we make it easier for everyone to use our apps.\r\n\r\n### Use colour properly\r\n\r\nSome people understand colour differently or may not be able to infer a relationship between colour and meaning.\r\n\r\nAlways use [accessible colour](/styles/colour) and never rely on colour alone to convey meaning.\r\n\r\n### Use graphics alongside text\r\n\r\nSome people find it easier to look at images. Use graphs, icons and colour alongside text to provide a different way to consume information.\r\n\r\nAll images and icons must use [accessible colour](/styles/colour) and have `alt` (alternate) text and captions.\r\n\r\n### Don't expect the user to remember\r\n\r\nIf you use multiple input steps, make sure you remind users what they've entered before. Don't expect people to switch (or remember) between screens to see what they typed in previously.\r\n\r\n### Be flexible on spelling\r\n\r\nWhere possible, your app should cope with different date formats.\r\n\r\nUse auto-complete suggestion where relevant so that people don't have to spell out the full text.\r\n\r\n### Allow browser customisations\r\n\r\nSome people rely on Operating System or Browser settings to change the colours of their apps. Make sure what you build can be used with platform settings.\r\n\r\nThese include Windows High Contrast mode, macOS increased contrast and browser extensions that modify CSS styles.\r\n\r\n## References\r\n\r\n<p>\r\n  1.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.bdadyslexia.org.uk/dyslexia/about-dyslexia/what-is-dyslexia\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    What is dyslexia?\r\n  </ic-link>{\" \"}\r\n  .<i> British Dyslexia Association</i>. Accessed 5 November 2022.{\" \"}\r\n  <a href=\"#ref-1\">Back to content</a>\r\n</p>\r\n<p>\r\n  2.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.nhs.uk/conditions/dyslexia\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-2\"\r\n  >\r\n    Overview, dyslexia\r\n  </ic-link>{\" \"}\r\n  .<i> NHS</i>. 30 July 2018. Accessed 5 November 2022.{\" \"}\r\n  <a href=\"#ref-2\">Back to content</a>\r\n</p>\r\n<p>\r\n  3.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://dyspraxiafoundation.org.uk/about-dyspraxia/dyspraxia-glance/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-3\"\r\n  >\r\n    What is Dyspraxia?\r\n  </ic-link>{\" \"}\r\n  .<i> Dyspraxia Foundation</i>. Accessed 5 November 2022.{\" \"}\r\n  <a href=\"#ref-3\">Back to content</a>\r\n</p>\r\n<p>\r\n  4.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.bdadyslexia.org.uk/dyslexia/neurodiversity-and-co-occurring-differences/dyscalculia-and-maths-difficulties\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-4\"\r\n  >\r\n    Neurodiversity and Co-occurring differences: Dyscalculia and maths\r\n    difficulties\r\n  </ic-link>{\" \"}\r\n  .<i> British Dyslexia Association</i>. Accessed 5 November 2022.{\" \"}\r\n  <a href=\"#ref-4\">Back to content</a>\r\n</p>\r\n<p>\r\n  5.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.irlensyndrome.org/what-is-irlen-syndrome\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-5\"\r\n  >\r\n    What is Irlen Syndrome?\r\n  </ic-link>{\" \"}\r\n  .<i> Irlen Syndrome Foundation</i>. Accessed 5 November 2022.{\" \"}\r\n  <a href=\"#ref-5\">Back to content</a>\r\n</p>\r\n<p>\r\n  6.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://adhduk.co.uk/about-adhd\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-6\"\r\n  >\r\n    What is ADHD?\r\n  </ic-link>{\" \"}\r\n  .<i> ADHD UK</i>. Accessed 5 November 2022.{\" \"}\r\n  <a href=\"#ref-6\">Back to content</a>\r\n</p>\r\n<p>\r\n  7.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.autism.org.uk/advice-and-guidance/what-is-autism\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-7\"\r\n  >\r\n    What is autism?\r\n  </ic-link>{\" \"}\r\n  .<i> National Autistic Society</i>. Accessed 5 November 2022.{\" \"}\r\n  <a href=\"#ref-7\">Back to content</a>\r\n</p>\r\n<p>\r\n  8.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.autism.org.uk/about/what-is/myths-facts-stats.aspx\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-8\"\r\n  >\r\n    The history of autism\r\n  </ic-link>{\" \"}\r\n  .<i> National Autistic Society</i>. Accessed 5 November 2022.{\" \"}\r\n  <a href=\"#ref-8\">Back to content</a>\r\n</p>\r\n",
      "path": "/accessibility/needs/neurodiversity",
      "navPriority": 4,
      "date": "2022-11-15",
      "title": "Neurodiversity",
      "subTitle": "People often think, communicate, understand or remember things in ways we might not consider.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/needs/neurodiversity.mdx",
      "meta": {
        "relativePath": "accessibility\\needs\\neurodiversity.mdx",
        "createdAt": "2024-06-04T07:48:34.958Z",
        "lastModified": "2024-06-04T07:48:34.958Z",
        "size": 10113,
        "formattedSize": "9.9 KB"
      }
    },
    {
      "id": "accessibility\\needs\\visualx",
      "contents": "\r\n## Introduction\r\n\r\nVisual impairments can affect people to different degrees, including:\r\n\r\n- Blind people who are sightless with no light perception.\r\n- Those with only slight peripheral vision.\r\n- People with light perception but a colour deficiency ('colour blindness').\r\n- Temporary impairments such as distraction or glare.<sup id=\"ref-1\"><a href=\"#fn-1\">1</a></sup>\r\n\r\nSome people will use a screen magnifier, screen reader and/or Braille display to use technology. Some people may also require travel, mobility and navigational assistance.\r\n\r\nNearly 2 million people in the UK are blind or partially sighted<sup id=\"ref-2\"><a href=\"#fn-2\">2</a></sup>. Only one-third of people registered blind or partially sighted are in paid work.\r\n\r\nOver one-third (44%) of blind or partially sighted people also have depression, making it the most common secondary condition for those with sight loss<sup id=\"ref-3\"><a href=\"#fn-3\">3</a></sup>.\r\n\r\n## Examples of visual impairments\r\n\r\nThe following table lists examples of visual impairments in three columns (permanent, temporary and situational).\r\n\r\n| Permanent                                                   | Temporary                                           | Situational                     |\r\n| ----------------------------------------------------------- | --------------------------------------------------- | ------------------------------- |\r\n| Blindness                                                   | Cataract (cloudy lenses)                            | Glare                           |\r\n| Glaucoma (damaged optic nerve)                              | Refractive errors (long/short sight, double vision) | Distraction (visual complexity) |\r\n| Macular degeneration (effecting central part of the retina) |                                                     |                                 |\r\n\r\n## Making things accessible\r\n\r\nIn addressing some of the design issues below, we make it easier for everyone to use our apps.\r\n\r\n### Readability and contrast\r\n\r\nUse the [typographic scale](/styles/typography) with the font ‘Open Sans’ to create readable content.\r\n\r\n<p>\r\n  Use a colour contrast of at least 4:5:1. Use a{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"http://contrast-checker.glitch.me/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    colour contrast checker\r\n  </ic-link>{\" \"}\r\n  to check.\r\n</p>\r\n\r\n### Design for assistive technology\r\n\r\nUse semantic headings and HTML tags to structure the app. Using correct HTML will allow assistive technologies to read an overview of the page when landmarks, regions and headings are implemented appropriately.\r\n\r\nMake sure that all elements have correct labels and provide `alt` (or alternative) text when necessary. Good labelling helps all users, such as during issues with downloading parts of the web page.\r\n\r\nA linear and logical layout can help users when navigating using a keyboard or when using assistive technologies.\r\n\r\n### Help convey meanings\r\n\r\nDon’t rely on [colour](/styles/colour) only to convey a meaning. Use a combination of labels, icons and shapes to help people identify elements.\r\n\r\n## References\r\n\r\n<p>\r\n  1.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.who.int/news-room/fact-sheets/detail/blindness-and-visual-impairment\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Blindness and vision impairment\r\n  </ic-link>{\" \"}\r\n  .<i> World Health Organization</i>. Accessed 5 November 2022.{\" \"}\r\n  <a href=\"#ref-1\">Back to content</a>\r\n</p>\r\n<p>\r\n  2.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.nhs.uk/conditions/vision-loss/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-2\"\r\n  >\r\n    Blindness and vision loss\r\n  </ic-link>{\" \"}\r\n  .<i> NHS</i>. 8 June 2018. Accessed 5 November 2022.{\" \"}\r\n  <a href=\"#ref-2\">Back to content </a>\r\n</p>\r\n<p>\r\n  3.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.rnib.org.uk/nb-online/rise-depression-rates-people-sight-loss\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-3\"\r\n  >\r\n    Depression rates are rising among people with sight loss\r\n  </ic-link>{\" \"}\r\n  .<i> RNIB</i>. Accessed 5 November 2022. <a href=\"#ref-3\">Back to content</a>\r\n</p>\r\n",
      "path": "/accessibility/needs/visual",
      "navPriority": 5,
      "date": "2022-11-15",
      "title": "Visual needs",
      "subTitle": "A visual impairment is a reduction in clarity or loss of vision that may be temporary or permanent.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/needs/visual.mdx",
      "meta": {
        "relativePath": "accessibility\\needs\\visual.mdx",
        "createdAt": "2024-04-04T12:41:43.717Z",
        "lastModified": "2024-04-04T12:41:43.717Z",
        "size": 4573,
        "formattedSize": "4.5 KB"
      }
    },
    {
      "id": "accessibility\\requirement\\indexx",
      "contents": "\r\n## Introduction to the Policy\r\n\r\nAll digital products that the UK Intelligence Community builds, buys or uses must meet the Intelligence Community's Digital Accessibility Policy. This includes mobile-, browser- and desktop-based software, interfaces attached to physical hardware and operating systems.\r\n\r\nA digital product will meet our policy if it:\r\n\r\n- Fully conforms to the relevant standard; [WCAG 2.2 Level AA](/accessibility/requirement/wcag) or EN 301 549.\r\n- Publishes and links to an [Accessibility Statement](/accessibility/documenting/accessibility-statements). It's updated whenever the conformance of the Digital Product changes, when accessibility problems are raised, or at least once every 12-months.\r\n- Publishes and links to an [Accessibility Conformance Report](/accessibility/documenting/conformance-report) documenting full, partial or non-conformance to the relevant WCAG or EN 310 549 standard. It's updated whenever accessibility problems are raised, or when the user interface is changed.\r\n\r\nThe requirement applies differently to [older apps and services](/accessibility/requirement/meeting-the-policy) depending on when they were last modified.\r\n\r\nYou can't claim an exception to the Policy solely due to lack of time, knowledge or because accessibility wasn't prioritised.\r\n\r\n## How accessible is accessible enough?\r\n\r\nAssociated legislation provides the minimum expectation, but the Policy and Design System support teams in creating inclusive experiences above these minimum standards.\r\n\r\nHowever, it's not possible to guarantee an app or service is fully accessible to every possible user in every use case. There is no such thing as 'always 100% accessible'.\r\n\r\nApps and services will encounter accessibility problems during their lifecycle.\r\n\r\nTeams must transparently document non-conformance and known accessibility problems in their Accessibility Statements and Accessibility Conformance Reports. You must always include the date when you plan to fix the problem.\r\n\r\n## Policy and legislation\r\n\r\nIf you work for MI6, MI5 or GCHQ, search your intranet to learn more about our specific Policy Requirements.\r\n\r\nUnfortunately we can't currently publish the Policy online.\r\n\r\nThe guidance in the Design System is the source of truth for developing accessible apps and services, but it's not the Policy. The Design System was developed closely alongside the Policy.\r\n\r\n<p>\r\n  The Policy makes sure the Intelligence Community departments exceeds its\r\n  obligations set out in the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.legislation.gov.uk/uksi/2018/852/contents/made\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    The Public Sector Bodies (Websites and Mobile Applications) Accessibility\r\n    Regulations 2018\r\n  </ic-link>{\" \"}\r\n  . This legislation builds on existing obligations to people who have a\r\n  disability under the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.legislation.gov.uk/ukpga/2010/15/contents\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Equality Act 2010\r\n  </ic-link>{\" \"}\r\n  (or the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.legislation.gov.uk/ukpga/1995/50/contents\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Disability Discrimination Act 1995\r\n  </ic-link>{\" \"}\r\n  in Northern Ireland).\r\n</p>\r\n",
      "path": "/accessibility/requirement",
      "navPriority": 2,
      "date": "2024-04-15",
      "title": "Digital Accessibility Policy",
      "subTitle": "This section gives you an overview on how to meet our Digital Accessibility Policy.",
      "status": "LIVE",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/requirement/index.mdx",
      "meta": {
        "relativePath": "accessibility\\requirement\\index.mdx",
        "createdAt": "2024-06-04T07:48:34.959Z",
        "lastModified": "2024-06-04T07:48:34.959Z",
        "size": 3739,
        "formattedSize": "3.7 KB"
      }
    },
    {
      "id": "accessibility\\requirement\\meeting-the-policyx",
      "contents": "\r\n## Scope\r\n\r\nAll digital apps and services must follow at least some of these requirements. The type and age of the app or service changes what you need to do.\r\n\r\nAll documentation must be regularly reviewed, especially on substantial revisions to the app or service.\r\n\r\n## All apps and services\r\n\r\nThe team must create and commit to the [Accessibility Statement](/accessibility/documenting/accessibility-statements). Use this to document and roadmap how you'll address any known issues.\r\n\r\nThe Accessibility Statement must be updated whenever the conformance of the app or service changes, when accessibility problems are raised, or at least once every 12-months.\r\n\r\nThe Accessibility Statement must be published within the app or service, and be discoverable for potential users.\r\n\r\n## New or updated apps and services\r\n\r\nNew apps and services, or those that have been 'substantially revised' (see definition below) on or after 23 September 2019, must comply to all requirements.\r\n\r\nThese apps and services must:\r\n\r\n- Publish and link to an Accessibility Statement (see above).\r\n- Fully conform to the relevant standard; [WCAG 2.2 Level AA](/accessibility/requirement/wcag) or EN 301 549.\r\n- Publish and link to an [Accessibility Conformance Report](/accessibility/documenting/conformance-report) documenting full, partial or non-conformance to the relevant WCAG or EN 301 549 standard. Update this whenever accessibility problems are raised, or when the user interface is changed.\r\n\r\n## Apps and services not changed since 23 September 2019\r\n\r\nApps and services that haven't been 'substantially revised' since 23 September 2019 are subject to an abridged accessibility requirement. If an app or service is later 'substantially revised' then additional requirements will then apply.\r\n\r\nThese apps and services must regularly publish an Accessibility Statement (see above).\r\n\r\nIt's recommended, but not required, that these apps and services regularly complete and publish an [Accessibility Conformance Report](/accessibility/documenting/conformance-report).\r\n\r\nApps and services in this category will still need to provide reasonable adjustments where required, if accessibility problems are known.\r\n\r\n### Definition of substantially revised\r\n\r\nA modification to an app or service is considered a ‘substantial revision’ when at least one of the following is true:\r\n\r\n- Any new feature is added to the user interface or service.\r\n- Any feature is modified within the user interface.\r\n- Any refactoring of the code behind a user interface is carried out.\r\n- A feature upgrade of an outsourced or COTS product where the user interface code was modified or it's unclear if the underlying user interface code was modified.\r\n\r\nYou should re-test all parts of an app or service that could be affected by a substantial revision.\r\n\r\n## Commercial and off-the-shelf\r\n\r\nThis requirement applies to commercial procurements or off-the-shelf (COTS) products.\r\n\r\nIn many cases, vendors or commercial organisations already publish the required documentation.\r\n\r\nIf you work for MI5, MI6 or GCHQ, search your intranet to learn more about our specific Policy Requirements.\r\n\r\n## For public-facing tools\r\n\r\nThis requirement also applies to public-facing websites<sup id=\"ref-1\"><a href=\"#fn-1\">1</a></sup> managed by the Intelligence Community departments, such as this one.\r\n\r\n## References\r\n\r\n<p>\r\n  1.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.gov.uk/guidance/accessibility-requirements-for-public-sector-websites-and-apps\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Understanding accessibility requirements for public sector bodies\r\n  </ic-link>{\" \"}\r\n  .<i> UK Government Digital Service</i>. 23 September 2020. Accessed 5 November\r\n  2022. <a href=\"#ref-1\">Back to content</a>\r\n</p>\r\n",
      "path": "/accessibility/requirement/meeting-the-policy",
      "navPriority": 1,
      "date": "2024-04-15",
      "title": "Meeting the Policy",
      "subTitle": "This section is a summary of the Policy. Refer to the full document for full details.",
      "status": "LIVE",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/requirement/meeting-the-policy.mdx",
      "meta": {
        "relativePath": "accessibility\\requirement\\meeting-the-policy.mdx",
        "createdAt": "2024-06-04T07:48:34.960Z",
        "lastModified": "2024-06-04T07:48:34.960Z",
        "size": 4212,
        "formattedSize": "4.1 KB"
      }
    },
    {
      "id": "accessibility\\requirement\\subtitles-transcripts-captionsx",
      "contents": "\r\n## Introduction\r\n\r\nInclusive video and audio is important to those who are d/Deaf, are blind, have hearing impairments, have difficulty processing information, and those who perceive things differently. Some people have a combination of needs, such as those who are deaf-blind. Everyone will have a different way that they prefer to consume information.\r\n\r\nFeatures like captions or transcripts will benefit all users, not only those described above.\r\n\r\n<p>\r\n  This content is adapted from the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.w3.org/WAI/media/av/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Web Accessibility Initiative\r\n  </ic-link>{\" \"}\r\n  and the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.w3.org/TR/WCAG22/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Web Content Accessibility Guidelines (WCAG) 2.1\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n## Requirements and recommendations\r\n\r\nAll intranet and ‘official communications’ content must always meet these requirements.\r\n\r\n### Pre-recorded content\r\n\r\nVideo content that includes audio **must**:\r\n\r\n- Provide in-video audio description of important visual information (where possible).\r\n- Provide captions (‘subtitles’) of the audio content.\r\n- Provide a descriptive transcript<sup id=\"ref-1\"><a href=\"#fn-1\">1</a></sup>.\r\n\r\nAudio-only content **must**:\r\n\r\n- Provide a transcript.\r\n\r\nVideo-only content **must**:\r\n\r\n- Provide a descriptive transcript **or** fully audio described version.\r\n\r\n### Live broadcasts\r\n\r\nAll live content **should**:\r\n\r\n- Provide an accurate script to viewers or listeners before the broadcast, **and**,\r\n- Allow automatic captions, though this does not fulfil the WCAG requirement due to inaccuracy of automatic captioning.\r\n\r\n### Sign language\r\n\r\nAll audio-video content for consumption across a significant majority of an organisation **should**:\r\n\r\n- Provide British Sign Language signing within the video.\r\n\r\nIf there is no audio in a video, inform users in text that it does not need subtitles, captions or transcriptions.\r\n\r\n## Planning audio-video content\r\n\r\n<p>\r\n  Consider a variety of aspects as you produce audio-video content. Full\r\n  considerations are covered at the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.w3.org/WAI/media/av/av-content/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    Web Accessibility Initiative\r\n  </ic-link>{\" \"}\r\n  .\r\n</p>\r\n\r\nConsiderations include:\r\n\r\n- Avoid causing seizures by avoiding content that flashes more than three times in one second.\r\n- Position actors and speakers so viewers are able to lip read.\r\n- Reduce background noise in videos.\r\n- Avoid descriptions based solely on sensory characteristics.\r\n- Make overlay text readable with appropriate contrast and font size.\r\n- Write the script so that audio description of visual information is part of the speech (and therefore is in the subtitles).\r\n\r\n## Descriptive transcripts\r\n\r\nA descriptive transcript is a normal transcript of the audio content **and** includes text-based descriptions of important visual information.\r\n\r\nDescriptive transcripts make content accessible to deaf-blind users and meets the needs of others who may have difficulty processing auditory information or can't focus on visual information.\r\n\r\nDescriptive transcripts can be created using the captioning content that you need to produce anyway.\r\n\r\nYou don't need a separate basic transcript if you provide a descriptive one.\r\n\r\n## Automated captioning\r\n\r\nWhile it's important to give people the choice to use automated captions (such as in Microsoft Teams), it does not often fulfil the requirements of users.\r\n\r\nThe automated functionality can produce inaccurate results. As such, manual review and/or a script of the conversation should be provided when you publish captions or transcripts.\r\n\r\n### Example of a bad automatic caption\r\n\r\nSpoken text:\r\n\r\n> \"Broil on high for **4 to 5** minutes. You should **not** preheat the oven.\"\r\n\r\nAutomatic caption:\r\n\r\n> \"Broil on high for **45** minutes. You should **know to** preheat the oven.\"\r\n\r\n## Notes\r\n\r\n1. This is actually a WCAG Level AAA requirement, but its inclusion increases accessibility of content enough that it’s a good thing to do.\r\n   <a href=\"#ref-1\">Back to content</a>\r\n",
      "path": "/accessibility/requirement/subtitles-transcripts-captions",
      "navPriority": 4,
      "date": "2024-04-15",
      "title": "Subtitling, transcripts and audio description",
      "subTitle": "This section tells you how to make videos and audio accessible.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/requirement/subtitles-transcripts-captions.mdx",
      "meta": {
        "relativePath": "accessibility\\requirement\\subtitles-transcripts-captions.mdx",
        "createdAt": "2024-06-04T07:48:34.961Z",
        "lastModified": "2024-06-04T07:48:34.961Z",
        "size": 4722,
        "formattedSize": "4.6 KB"
      }
    },
    {
      "id": "accessibility\\requirement\\wcagx",
      "contents": "\r\n## About WCAG\r\n\r\n<p>\r\n  The World Wide Web Consortium's (W3C){\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.w3.org/TR/WCAG22/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Web Content Accessibility Guidelines (WCAG)\r\n  </ic-link>{\" \"}\r\n  are used for making sure browser-based apps and services are conformant to\r\n  industry standards.\r\n</p>\r\n\r\nApps and services developed across the Intelligence Community must meet WCAG 2.2 Level A and Level AA criteria. Where possible, try to meet Level AAA too.\r\n\r\nBeing fully conformant to WCAG doesn't guarantee that your app or service is accessible to everyone. We use it as a good minimum standard, supported by enhanced requirements and responsive reporting processes.\r\n\r\nWhere applicable, there are around 70 criteria that an app or service needs to meet. Meeting them means the app or service is accessible in a number of ways and is generally implemented to accepted standards. You still need to do other [manual and automated testing](/accessibility/testing).\r\n\r\n<p>\r\n  The Web Accessibility Initative (WAI) has good documentation on{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.w3.org/WAI/WCAG22/quickref/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    How to Meet WCAG\r\n  </ic-link>{\" \"}\r\n  for each criterion.\r\n</p>\r\n\r\n## Reporting conformance\r\n\r\nAn [Accessibility Conformance Report (ACR)](/accessibility/documenting/conformance-report) is a checklist you can use to measure conformance to the WCAG standards.\r\n\r\nCompleting this will give you the documentation that's required by the [Digital Accessibility Policy](/accessibility/requirement).\r\n\r\n## Principles of WCAG\r\n\r\nWCAG is based on four principles: Perceivable, Operable, Understandable and Robust.\r\n\r\n### Perceivable\r\n\r\nPeople will use your app in different ways, including ways you didn't plan for. They may use a sense other than sight to browse. People may rely on assistive technology to present information in a different way, such as a screen reader or braille display.\r\n\r\nWCAG works to make sure your app is presented to assistive technologies in a way that gives a comparable experience to people who use them.\r\n\r\n### Operable\r\n\r\nWhen people can perceive your app, they need to be able to do something with it. Some people may have difficulties interacting with the keyboard or mouse due to motor difficulties. They may use one or the other, or another mechanism such as speech.\r\n\r\nWCAG checks for good keyboard navigation, no time limits and standard-compliant form fields.\r\n\r\n### Understandable\r\n\r\nOnce your app is perceivable and operable, make sure what is shown is understandable. An app that behaves unexpectedly or inconsistently is one that might stop people from understanding what it is or how to use it.\r\n\r\nWCAG checks that you use clear language in a way that signposts functionality. It also checks content for a hierarchy to make sure people who may not see your app can understand it.\r\n\r\n### Robust\r\n\r\nStandards such as WCAG, HTML5, CSS3 and good coding practices ensure technologies don't struggle with your service. Consider that when assistive technology fails, it's not always obvious to the user that something has ‘gone wrong’.\r\n\r\nWCAG checks some basic coding standards to make sure assistive technology can interact with your capability.\r\n\r\n## WCAG levels\r\n\r\nWCAG has three levels of conformance. The higher level of conformance your service has, the more people will benefit.\r\n\r\nThe impact of Level A criteria might be barely visible in an interface but Level AAA criteria will have a significant impact on the design.\r\n",
      "path": "/accessibility/requirement/wcag",
      "navPriority": 3,
      "date": "2024-04-15",
      "title": "WCAG standards",
      "subTitle": "This section briefly introduces the Web Content Accessibility Guidelines (WCAG).",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/requirement/wcag.mdx",
      "meta": {
        "relativePath": "accessibility\\requirement\\wcag.mdx",
        "createdAt": "2024-06-04T07:48:34.962Z",
        "lastModified": "2024-06-04T07:48:34.962Z",
        "size": 3945,
        "formattedSize": "3.9 KB"
      }
    },
    {
      "id": "accessibility\\testing\\assistive-tech-testingx",
      "contents": "\r\n## Introduction\r\n\r\nTesting with assistive technologies can help to spot accessibility problems that weren't picked up in [automated](/accessibility/testing/automated-testing) and [manual](/accessibility/testing/manual-testing) testing. It's not always required to comply with the Policy but it’s a way to make a huge difference to people who use your apps and services.\r\n\r\nA wide range of assistive technologies are used by people. These often include screen readers, screen magnifiers, colour overlays and alternative input hardware.\r\n\r\n<p>\r\n  GOV.UK provides more{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.gov.uk/government/publications/assistive-technology-definition-and-safe-use/assistive-technology-definition-and-safe-use\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    examples and a definition of an assistive technology\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\nAs with any software release, users always find bugs, and some of those may be accessibility problems. However, by performing automated and manual accessibility testing, the severity of accessibility problems should reduce.\r\n\r\n## Screen readers and magnifiers\r\n\r\nPeople with [visual impairments](/accessibility/needs/visual) rely on different types of assistive technologies. Some people without visual impairments might also use these tools because they prefer them.\r\n\r\nThose that are blind, with little to no sight, depend on a screen reader to render a web page 'in text'. Once as text, this can be changed into other formats such as speech and braille.\r\n\r\nThe majority of visually impaired users have some sight or low vision and may rely on magnifiers that enlarge the screen content.\r\n\r\nTools used by visually impaired users include:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.freedomscientific.com/products/software/jaws/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      JAWS\r\n    </ic-link>{\" \"}\r\n    is a licensed screen reader for Windows.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.zoomtext.com/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      ZoomText\r\n    </ic-link>{\" \"}\r\n    is a licensed magnifier for Windows.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.freedomscientific.com/products/software/fusion/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Fusion\r\n    </ic-link>{\" \"}\r\n    where Jaws and ZoomText are packaged together.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.nvaccess.org/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      NVDA\r\n    </ic-link>{\" \"}\r\n    is a free and open-source screen reader for Windows.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://yourdolphin.com/en-gb/products/individuals/supernova-magnifier-screen-reader\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      SuperNova\r\n    </ic-link>{\" \"}\r\n    is licensed and both a screen reader and magnifier for Windows.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://help.apple.com/voiceover/mac/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      VoiceOver\r\n    </ic-link>{\" \"}\r\n    is a screen reader built in into all Apple products.\r\n  </li>\r\n  <li>\r\n    Windows includes{\" \"}\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://support.microsoft.com/en-gb/help/11542/windows-use-magnifier-to-make-things-easier-to-see\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Windows Magnifier\r\n    </ic-link>\r\n    , a screen magnifier.\r\n  </li>\r\n  <li>\r\n    MacOS includes{\" \"}\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://support.apple.com/en-gb/guide/mac-help/mh35715/mac\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Apple Zoom\r\n    </ic-link>\r\n    , a screen magnifier.\r\n  </li>\r\n</ul>\r\n\r\nThe Design System recommends using NVDA and VoiceOver, depending on your platform, for screen reader testing.\r\n\r\nWhen testing with a screen reader, check that you can interact with all features and understand the content without looking at the screen.\r\n\r\nWhen testing with a magnifier, check that you can see and interact with all features easily without the need for excessive scrolling.\r\n\r\n## Voice control\r\n\r\nVoice control or speech recognition lets you navigate and control your computer with your voice alone.\r\n\r\nUsers include those with [dyslexia](/accessibility/needs/neurodiversity) who may have difficulty with spelling or are better at communicating verbally. Others may have [motor impairments](/accessibility/needs/motor) and may be unable to use a keyboard or mouse.\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.nuance.com/en-gb/dragon.html\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Dragon\r\n  </ic-link>{\" \"}\r\n  is a licensed speech recognition software predominantly for Windows, as\r\n  support for Mac has discontinued.\r\n</p>\r\n\r\n<p>\r\n  Alternatives include{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://support.microsoft.com/en-us/help/4042244/windows-10-use-dictation\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Windows Speech Recognition\r\n  </ic-link>{\" \"}\r\n  and{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://support.apple.com/en-in/guide/mac-help/mh40584/mac\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Apple Dictation\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\nWhen testing with a voice control software, check that you can interact with all features.\r\n\r\n## High contrast modes\r\n\r\nHigh contrast modes allow users with low vision to customise the colours (and sometimes the font).\r\n\r\n<p>\r\n  Both Windows and Mac provide high contrast modes in{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://support.microsoft.com/en-gb/help/13862/windows-10-use-high-contrast-mode\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Windows High Contrast Mode\r\n  </ic-link>{\" \"}\r\n  and{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://support.apple.com/en-in/guide/mac-help/unac089/mac\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Apple Display Preferences\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\nThere are also browser plugins to customise users' experiences and override styles in your apps and services.\r\n\r\nTest your app with various colour and font combinations to ensure your app can still be used. This will ensure that your CSS is written in a way that can be overridden by the user.\r\n\r\n## Available assistive technologies\r\n\r\nMany of the assistive technologies used are licensed. The table below summarises some of the assistive technologies available for testing at no extra cost.\r\n\r\n| Assistive Technology | Windows                                                                                                                                                              | Mac                                                                                                                  |\r\n| -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------- |\r\n| Screen Reader        | [NVDA](https://www.nvaccess.org/), otherwise [Narrator](https://support.microsoft.com/en-us/windows/complete-guide-to-narrator-e4397a0d-ef4f-b386-d8ae-c172f109bdb1) | [NVDA](https://www.nvaccess.org/) on a Virtual Machine, otherwise [Voiceover](https://help.apple.com/voiceover/mac/) |\r\n| Magnifier            | [Windows Magnifier](https://support.microsoft.com/en-gb/help/11542/windows-use-magnifier-to-make-things-easier-to-see)                                               | [Apple Zoom](https://support.apple.com/en-gb/guide/mac-help/mh35715/mac)                                             |\r\n| Voice Control        | [Windows Speech Recognition](https://support.microsoft.com/en-us/windows/use-voice-recognition-in-windows-10-83ff75bd-63eb-0b6c-18d4-6fae94050571)                   | [Apple Dictation](https://support.apple.com/en-in/guide/mac-help/mh40584/mac)                                        |\r\n| Contrast Mode        | [Windows High Contrast Mode](https://support.microsoft.com/en-gb/help/13862/windows-10-use-high-contrast-mode)                                                       | [Apple Display Preferences](https://support.apple.com/en-in/guide/mac-help/unac089/mac)                              |\r\n",
      "path": "/accessibility/testing/assistive-tech-testing",
      "navPriority": 5,
      "date": "2022-11-15",
      "title": "Testing with assistive technologies",
      "subTitle": "Don't rely on users of assistive technology to do the testing for you.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/testing/assistive-tech-testing.mdx",
      "meta": {
        "relativePath": "accessibility\\testing\\assistive-tech-testing.mdx",
        "createdAt": "2024-06-04T07:48:34.963Z",
        "lastModified": "2024-06-04T07:48:34.963Z",
        "size": 8835,
        "formattedSize": "8.6 KB"
      }
    },
    {
      "id": "accessibility\\testing\\automated-testing-limitationx",
      "contents": "\r\n## False positives and false assurance\r\n\r\nPassing automated accessibility tests doesn't mean your app is accessible, it just means that no common issues were found.\r\n\r\nA limitation with automated accessibility testing is that results often need someone to ensure the result is correct. This includes checking for false positives and false negatives.\r\n\r\n## WCAG and context\r\n\r\nChecks in automated accessibility testing tools have a yes or no outcome. The biggest limitation of these automated tools is that they can't test for context.\r\n\r\n<p>\r\n  Deque’s{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://dequeuniversity.com/checklists/web/guide\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Accessibility Developers' Guide\r\n  </ic-link>{\" \"}\r\n  shows what type of testing is needed to meet{\" \"}\r\n  <ic-link\r\n    target=\"\"\r\n    href=\"/accessibility/requirement/wcag\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    WCAG 2.2 Level AA\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\nOf the 66 success criteria needed to meet WCAG AA, there are none that can be met fully with automated testing alone.\r\n\r\n## Usability\r\n\r\nIt's possible for an app to be WCAG 2.2 Level AA compliant but still have usability issues. Some of these usability issues may also be accessibility issues.\r\n\r\nUsability and context matter to everyone, including those with accessibility needs. Usability includes user experience, covering whether the tool is effective and efficient.\r\n\r\nManual accessibility testing, and other functional testing, is needed to make sure your apps or services are usable.\r\n\r\n## Example: colour contrast\r\n\r\nFor some success criteria, such as those around colour contrast, automated testing tools are vital.\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.w3.org/WAI/WCAG22/quickref/?showtechniques=141#contrast-minimum\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    1.4.3 Contrast (Minimum)\r\n  </ic-link>{\" \"}\r\n  requires the visual presentation of text and images of text to have a contrast\r\n  ratio of at least 4.5:1 (with exceptions).\r\n</p>\r\n\r\nAn automated testing tool can't test for context. For example, it can't tell you if the failing contrast ratio was one of the permitted exceptions, which does actually meet the success criteria, and so returns a false positive.\r\n\r\n## Example: alt text\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.w3.org/WAI/WCAG22/quickref/#text-alternatives\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Guideline 1.1 – Text Alternatives\r\n  </ic-link>{\" \"}\r\n  requires you to provide text alternatives for any non-text content so that it\r\n  can be changed into other forms people need, such as large print, braille,\r\n  speech, symbols or simpler language.\r\n</p>\r\n\r\nMost automated accessibility checking tools will warn you if alternative text does not exist on images. However, automated tools can't tell whether the alternative text provided is useful and providing enough context of the image.\r\n\r\nIf the alternative text was a file name, such as `alt=\"picture1234.jpg\"`, this would make no sense to the reader.\r\n\r\nLikewise, an overly visual description of your app logo does does not provide the reader with the brand recognition, whereas the app name would.\r\n\r\nThe same image could also be used twice in the same page, but with different purposes, so the alternative text would need to reflect this.\r\n",
      "path": "/accessibility/testing/automated-testing-limitation",
      "navPriority": 3,
      "date": "2024-04-15",
      "title": "Limitations of automated testing",
      "subTitle": "Automated accessibility testing is essential but it has limitations and only finds between 30-50% of accessibility problems.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/testing/automated-testing-limitation.mdx",
      "meta": {
        "relativePath": "accessibility\\testing\\automated-testing-limitation.mdx",
        "createdAt": "2024-06-04T07:48:34.964Z",
        "lastModified": "2024-06-04T07:48:34.964Z",
        "size": 3812,
        "formattedSize": "3.7 KB"
      }
    },
    {
      "id": "accessibility\\testing\\automated-testingx",
      "contents": "\r\nimport { IcAlert } from \"@ukic/react\";\r\n\r\n<IcAlert\r\n  heading=\"For internal staff\"\r\n  message=\"Speak to your local accessibility expert for more information on automated accessibility testing.\"\r\n  titleAbove\r\n  variant=\"info\"\r\n/>\r\n\r\n## Introduction\r\n\r\nAutomated accessibility testing is a fast and repeatable way to spot some accessibility issues.\r\nThese tools can be integrated into development and deployment workflows.\r\n\r\nAutomated accessibility testing is essential but only finds between 30&ndash;50% of accessibility problems.\r\nThe [limitations of automated accessibility testing](/accessibility/testing/automated-testing-limitation) page explains why [manual testing](/accessibility/testing/manual-testing) is always required.\r\n\r\nUse a variety of automated testing tools to capture as many accessibility issues as possible.\r\n\r\n## Browser testing\r\n\r\nTest web apps using tools and extensions for that browser and test in multiple browsers where possible.\r\n\r\nYou need to use at least two accessibility testing extensions because each one will highlight slightly different accessibility problems.\r\n\r\n<p>\r\n  The UK Government Digital Service (GDS) published an{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://alphagov.github.io/accessibility-tool-audit/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    accessibility tool audit\r\n  </ic-link>\r\n  . The Design System recommends:\r\n</p>\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.deque.com/axe/axe-for-web/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      axe DevTools\r\n    </ic-link>\r\n    .\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://accessibilityinsights.io/docs/en/web/overview\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Accessibility Insights for Web\r\n    </ic-link>\r\n    .\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://wave.webaim.org/extension/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      WAVE\r\n    </ic-link>\r\n    .\r\n  </li>\r\n</ul>\r\n\r\nMost of these tools will highlight the WCAG or best practice accessibility problems on the page and tell you how to fix the issue.\r\n\r\nSome of the tools will walk you through extra manual testing (like Accessibility Insights for Web), while others will conduct only a full automated test.\r\n\r\nBrowser tools can only check what is rendered on a web page when you run the test. To check multiple pages, dialogs or other temporary elements, trigger them before re-running the test.\r\n\r\n## Linters\r\n\r\nTools called 'linters' analyse source code for a range of potential bugs. Some linters check for accessibility problems or have additional rulesets you can use.\r\n\r\nLinters detect issues very early and can prevent certain accessibility problems from ever being implemented.\r\n\r\n<p>\r\n  The{\" \"}\r\n  <ic-link target=\"\" href=\"/components\" rel=\"noreferer noopener nofollow\">\r\n    UI Kit\r\n  </ic-link>{\" \"}\r\n  uses the ESLint accessibility plugin{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://github.com/jsx-eslint/eslint-plugin-jsx-a11y\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    eslint-plugin-jsx-a11y\r\n  </ic-link>\r\n  . Equivalent ESLint plugins are available for Vue and Angular.\r\n</p>\r\n\r\n## Integration and unit testing\r\n\r\nIntegration testing is where parts of software are combined and tested together.\r\n\r\nThis is often done as part of a Continuous Integration and Continuous Delivery (CI/CD) workflow.\r\n\r\n## End-to-end testing\r\n\r\nEnd-to-end testing is where the entire app is tested from a user's perspective.\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.selenium.dev/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Selenium\r\n  </ic-link>{\" \"}\r\n  and{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.cypress.io/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Cypress\r\n  </ic-link>{\" \"}\r\n  are common tools for end-to-end testing. Both tools have axe-core wrappers:{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://github.com/dequelabs/axe-selenium-java\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    axe-selenium\r\n  </ic-link>{\" \"}\r\n  and{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://github.com/avanslaars/cypress-axe\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    cypress-axe\r\n  </ic-link>\r\n  , respectively.\r\n</p>\r\n\r\nWell configured end-to-end tests should also test multiple pages, dialogs and other temporary elements.\r\n\r\n### axe-core\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://github.com/dequelabs/axe-core\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    axe-core\r\n  </ic-link>{\" \"}\r\n  can test pages on your app in the same way other unit or integration tests\r\n  would.\r\n</p>\r\n\r\n<p>\r\n  Axe-core is used by the browser-based extensions{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.deque.com/axe/axe-for-web/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    axe DevTools\r\n  </ic-link>{\" \"}\r\n  and{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://accessibilityinsights.io/docs/en/web/overview\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Accessibility Insights for Web\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n### Pa11y\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://pa11y.org/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Pa11y\r\n  </ic-link>{\" \"}\r\n  runs accessibility tests via the command line or Node.js for automating\r\n  testing.\r\n</p>\r\n\r\n<p>\r\n  It uses axe-core as well as{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"http://squizlabs.github.io/HTML_CodeSniffer/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    HTML CodeSniffer\r\n  </ic-link>{\" \"}\r\n  to look for potential accessibility issues.\r\n</p>\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://github.com/pa11y/pa11y-ci\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Pa11y CI\r\n  </ic-link>{\" \"}\r\n  is a CI-centric accessibility test runner, built using Pa11y.\r\n</p>\r\n\r\n### SonarQube\r\n\r\n<p>\r\n  Tools such as{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.sonarqube.org/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    SonarQube\r\n  </ic-link>{\" \"}\r\n  , which provide code-quality assurance of your source code, also have a number\r\n  of{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://rules.sonarsource.com/html/tag/accessibility\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    accessibility rules\r\n  </ic-link>{\" \"}\r\n  in SonarHTML.\r\n</p>\r\n\r\nSonarQube recommends using this alongside other [linting](#linters) such as ESLint<sup id=\"ref-1\"><a href=\"#fn-1\">1</a></sup>.\r\n\r\n## References\r\n\r\n<p>\r\n  1.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://community.sonarsource.com/t/how-to-scan-accessibility-issues-using-sonarqube/17307\"\r\n    rel=\"noreferer noopener nofollow\"\r\n    id=\"fn-1\"\r\n  >\r\n    How to scan accessibility issues using SonarQube?\r\n  </ic-link>{\" \"}\r\n  . Discussion.<i> SonarSource Community</i>. December 2019. Accessed 5 November\r\n  2022. <a href=\"#ref-1\">Back to content</a>\r\n</p>\r\n",
      "path": "/accessibility/testing/automated-testing",
      "navPriority": 2,
      "date": "2023-02-03",
      "title": "Automated accessibility testing",
      "subTitle": "Use a variety of automated testing tools to capture as many accessibility issues as possible.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/testing/automated-testing.mdx",
      "meta": {
        "relativePath": "accessibility\\testing\\automated-testing.mdx",
        "createdAt": "2024-06-04T07:48:34.965Z",
        "lastModified": "2024-06-04T07:48:34.965Z",
        "size": 7356,
        "formattedSize": "7.2 KB"
      }
    },
    {
      "id": "accessibility\\testing\\indexx",
      "contents": "\r\n## Introduction\r\n\r\nTesting your code regularly during development can help to identify accessibility issues in both the design and implementation before you test it with users. Approach accessibility testing as you would standard functional testing.\r\n\r\nThere are well known [limitations of automated accessibility testing](/accessibility/testing/automated-testing-limitation). Automated testing alone only finds between 30&ndash;50% of accessibility problems, so you have to do manual testing too.\r\n\r\n## What you need to do\r\n\r\nYour accessibility testing must include:\r\n\r\n- Using [automated browser testing](/accessibility/testing/automated-testing#browser-testing) regularly during development.\r\n- Conducting your own [keyboard-only testing](/accessibility/testing/manual-testing#keyboard-only-testing) for all parts of the app.\r\n- Conducting additional [manual testing](/accessibility/testing/manual-testing#full-manual-accessibility-testing) to account for limitations of automated accessibility testing.\r\n- Producing your own [documentation](/accessibility/documenting) of full, partial and non-conformances to the relevant accessibility standard.\r\n\r\n## Test as you develop\r\n\r\nTest as frequent as you can (ideally on every ticket and pull request). To help reduce the amount of accessibility problems you find in testing, you should update your development workflows to:\r\n\r\n- Use [linting](/accessibility/testing/automated-testing#linters) in any code to catch common problems introduced during development.\r\n- Consider using [integration testing](/accessibility/testing/automated-testing#integration-and-unit-testing) and [end-to-end testing](/accessibility/testing/automated-testing#end-to-end-testing).\r\n- [Test regularly with assistive technologies](/accessibility/testing/assistive-tech-testing), particularly the [NVDA screen reader](/accessibility/testing/assistive-tech-testing#testing-with-nvda).\r\n\r\n## Testing with real people\r\n\r\n<p>\r\n  You should aim to{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://accessibility.blog.gov.uk/2018/03/20/why-accessibility-testing-with-real-users-is-so-important/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    design and test with real people\r\n  </ic-link>{\" \"}\r\n  where possible. Reach out to your user community to get a diverse group of\r\n  users involved in your usability testing.\r\n</p>\r\n\r\nThis may relate to disability and impairments but also skills, experience, ways of working and technology literacy.\r\n\r\nIn general, [don't rely on any specific communities](/accessibility/introduction/discussing) for usability testing.\r\n\r\n### Always do your own testing first\r\n\r\nComplete all the accessibility testing you can before testing with users who have accessibility needs. This will let them focus on real usability issues instead of common accessibility issues.\r\n",
      "path": "/accessibility/testing",
      "navPriority": 5,
      "date": "2022-11-15",
      "title": "Testing for accessibility",
      "subTitle": "This section introduces you to different types of accessibility testing.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/testing/index.mdx",
      "meta": {
        "relativePath": "accessibility\\testing\\index.mdx",
        "createdAt": "2024-06-04T07:48:34.966Z",
        "lastModified": "2024-06-04T07:48:34.966Z",
        "size": 3159,
        "formattedSize": "3.1 KB"
      }
    },
    {
      "id": "accessibility\\testing\\manual-testingx",
      "contents": "\r\nimport { IcAlert } from \"@ukic/react\";\r\n\r\n## Introduction\r\n\r\nManual accessibility testing is needed to address the [limitations of automated accessibility testing](/accessibility/testing/automated-testing-limitation).\r\n\r\n<p>\r\n  Deque's{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://dequeuniversity.com/checklists/web/guide\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Accessibility Developers' Guide\r\n  </ic-link>{\" \"}\r\n  shows what type of testing is needed to meet{\" \"}\r\n  <ic-link\r\n    target=\"\"\r\n    href=\"/accessibility/requirement/wcag\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    WCAG 2.2 Level AA\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n## Keyboard-only testing\r\n\r\nKeyboard accessibility is one of the most important aspects of accessibility testing and should be carried out frequently during development.\r\n\r\nRetrofitting keyboard accessibility can be expensive. This is a problem if libraries and frameworks you use are not accessible, where the options are to fix the component library or swap to a different one.\r\n\r\nSome reasons people might rely on a keyboard include:\r\n\r\n- People who are [blind](/accessibility/needs/visual) might use a screen reader and are generally unable see the cursor on the screen.\r\n- Users with [motor disabilities](/accessibility/needs/motor) may not have the fine motor movements required for using a mouse.\r\n- People with [chronic conditions](/accessibility/needs/motor), such as Repetitive Strain Injury (RSI), may need to avoid using a mouse.\r\n- There are also power users who prefer to use the keyboard commands and shortcuts for speed and efficiency.\r\n\r\n<p>\r\n  WebAIM describes{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://webaim.org/techniques/keyboard/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    how to test for keyboard accessibility\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n<p>\r\n  The{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://accessibilityinsights.io/docs/en/web/overview\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Accessibility Insights\r\n  </ic-link>{\" \"}\r\n  browser plugin, in FastPass mode, runs the automated checks and has a manual\r\n  check called \"Tab Stops\".\r\n</p>\r\n\r\n<p>\r\n  You can read more specific instructions for{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://dequeuniversity.com/mac/keyboard-access-mac\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    MacOS keyboard-only testing\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n## Full manual accessibility testing\r\n\r\nTo fully check for accessibility compliance, you need to work through the WCAG 2.2 Level A and AA criteria.\r\n\r\nThe WCAG requirements form the basis of the [Accessibility Conformance Report (ACR)](/accessibility/documenting/conformance-report). The ACR is required when your app is released, but the more manual accessibility testing done during development the easier it will be to make your app meet the WCAG standards.\r\n\r\n<p>\r\n  The Web Accessibility Initative (WAI) has good documentation on{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.w3.org/WAI/WCAG22/quickref/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    How to Meet WCAG\r\n  </ic-link>{\" \"}\r\n  for each criterion.\r\n</p>\r\n\r\nFull manual testing is required on all the main pages of your app. Many apps use templates and common components so these only need to be tested the once with relevant variants to get full coverage.\r\n\r\n<p>\r\n  The Design System recommends the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://accessibilityinsights.io/docs/en/web/overview\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Accessibility Insights\r\n  </ic-link>{\" \"}\r\n  browser plugin in Assessment mode. It runs the automated tests but also guides\r\n  you through manual testing to meet{\" \"}\r\n  <ic-link\r\n    target=\"\"\r\n    href=\"/accessibility/requirement/wcag#level-aa\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    WCAG AA\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n<IcAlert\r\n  variant=\"info\"\r\n  message=\"Once the application is released, it's recommended to do full manual testing for any big features or updates.\"\r\n/>\r\n\r\n### Testing with assistive technologies\r\n\r\n[Testing with assistive technologies](/accessibility/testing/assistive-tech-testing) can help to spot accessibility problems that weren't picked up in previous testing.\r\n",
      "path": "/accessibility/testing/manual-testing",
      "navPriority": 4,
      "date": "2024-04-15",
      "title": "Manual accessibility testing",
      "subTitle": "Manual accessibility testing can include keyboard, screen reader and documentation checks.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/accessibility/testing/manual-testing.mdx",
      "meta": {
        "relativePath": "accessibility\\testing\\manual-testing.mdx",
        "createdAt": "2024-06-04T07:48:34.967Z",
        "lastModified": "2024-06-04T07:48:34.967Z",
        "size": 4637,
        "formattedSize": "4.5 KB"
      }
    },
    {
      "id": "community\\contribute-criteriax",
      "contents": "\r\n## Contributing\r\n\r\nThe Design System Working Group will work with contributors to make sure that all contributions meet our contribution criteria.\r\n\r\n| <span style={{width: '12vw', display: 'inline-block'}}>**Criteria**</span> | **Description**                                                                                                                                                                                    |\r\n| -------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| Useful                                                                     | The contribution would be useful for many teams or services.                                                                                                                                       |\r\n| Unique                                                                     | There isn’t already something similar in the Design System.                                                                                                                                        |\r\n| Adds value                                                                 | The contribution adds value from an accessibility, usability or standards perspective.<br/><br/>It doesn't break the coherence of any other components.                                            |\r\n| Usable                                                                     | It meets a high standard of usability.                                                                                                                                                             |\r\n| Accessible                                                                 | Compliant with the [Corporate Accessibility Standards](/accessibility/requirement) and [WCAG 2.2 AA](https://www.w3.org/TR/WCAG22/).                                                               |\r\n| Consistent                                                                 | It uses existing [style](/styles) and [components](/components) in the Design System where relevant.<br/><br/>Written content in examples follow the [content style guide](/styles/content-style). |\r\n\r\n## Deprecation\r\n\r\nAny contributions marked with deprecation will be communicated early and in discussion with the community.\r\n",
      "path": "/community/contribute-criteria",
      "navPriority": 2,
      "date": "2024-04-15",
      "title": "Contribution criteria",
      "subTitle": "The contents of the Design System must be of a high quality, meet user needs and always be accessible.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/community/contribute-criteria.mdx?at=develop",
      "meta": {
        "relativePath": "community\\contribute-criteria.mdx",
        "createdAt": "2024-05-20T13:20:43.271Z",
        "lastModified": "2024-05-20T13:20:43.271Z",
        "size": 2875,
        "formattedSize": "2.8 KB"
      }
    },
    {
      "id": "community\\contributex",
      "contents": "\r\n## Things to consider before contributing\r\n\r\n- You can contribute more than just code! Please suggest new ideas or contribute to existing components or patterns.\r\n- You can add written guidance to the website or designs in Figma.\r\n- You should contribute in [StencilJS](https://stenciljs.com/) where you can. If that is not possible there will be a delay in the contribution.\r\n- We’ve adopted the [Contributor Covenant](https://www.contributor-covenant.org/), as expanded on in our [Code of Conduct](https://github.com/mi6/ic-design-system/tree/main/CODE_OF_CONDUCT.md). The core team, Working Group and contributors should always keep it in mind.\r\n- Read the [contribution criteria](/community/contribute-criteria).\r\n- For internal users, you can talk to us on the internal platforms, or raise an issue on GitHub for either our [Design System](https://github.com/mi6/ic-design-system/issues) or [UI Kit](https://github.com/mi6/ic-ui-kit/issues).\r\n\r\n## Raise a bug or suggest an improvement\r\n\r\nRaise a bug or suggest improvements including brand new proposals to the UI Kit.\r\n\r\n1. Raise a bug or suggest an improvement to the UI Kit through [GitHub issues](https://github.com/mi6/ic-design-system/issues) with as much information as possible.\r\n2. Internal users can raise a bug or suggest an improvement to the UI Kit through our Service Desk.\r\n3. The working group will triage your ticket and get back to you. The Working Group meet on a fortnightly basis to review new tickets, but important bugs will be reviewed sooner.\r\n\r\n## Contribute code\r\n\r\nYou can help us speed up the development of our Design System by contributing new components and patterns or making improvements to existing ones.\r\n\r\n1. Select a ticket from the [Design System](https://github.com/mi6/ic-design-system/issues) or the [UI Kit](https://github.com/mi6/ic-ui-kit/issues) backlog.\r\n2. If a backlog ticket doesn’t exist for your contribution, you can suggest it through GitHub [Design System](https://github.com/mi6/ic-design-system/issues) or [UI Kit](https://github.com/mi6/ic-ui-kit/issues) issues, or our internal Service Desk.\r\n3. If you're an internal user, we will arrange a kickoff meeting to discuss the scope, plan and agree any support. For any external users, we'll work with you through GitHub issues.\r\n4. Refer to the technical instructions for [Design System](https://github.com/mi6/ic-design-system/tree/main/CONTRIBUTING.md) or the [UI Kit repository](https://github.com/mi6/ic-ui-kit/blob/main/CONTRIBUTING.md) coding standards and practices. If you're contributing a feature, we recommend reading through the [glossary of terms](/community/glossary-of-terms) to help with prop/slot naming.\r\n5. Create a pull request to the develop branch for review.\r\n\r\n## Contribute to the Figma UI Kit\r\n\r\nIf you're an internal user, you can contribute to the Figma UI Kit directly. If you're an external user you can raise issues and include screenshots.\r\n\r\n1. Select a design ticket from the [Design System](https://github.com/mi6/ic-design-system/issues) or the [UI Kit](https://github.com/mi6/ic-ui-kit/issues) backlog.\r\n2. If a backlog ticket doesn’t exist for your contribution, you can suggest it through GitHub [Design System](https://github.com/mi6/ic-design-system/issues) or [UI Kit](https://github.com/mi6/ic-ui-kit/issues) issues, or our internal Service Desk.\r\n3. If you're an internal user, we will arrange a kickoff meeting to discuss the scope, plan and agree any support.\r\n4. Complete the Figma contribution template and finalise the contribution.\r\n5. Let us know when your contribution is ready for review.\r\n",
      "path": "/community/contribute",
      "navPriority": 1,
      "date": "2023-09-07",
      "title": "How to contribute",
      "subTitle": "Anyone can contribute to the Design System and UI Kit.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/community/contribute.mdx?at=develop",
      "meta": {
        "relativePath": "community\\contribute.mdx",
        "createdAt": "2024-05-20T13:19:26.916Z",
        "lastModified": "2024-05-20T13:19:26.916Z",
        "size": 3920,
        "formattedSize": "3.8 KB"
      }
    },
    {
      "id": "community\\glossary-of-termsx",
      "contents": "\r\n## Props\r\n\r\nTo help explain usage, each prop has the most common type options and a description.\r\n\r\n| Prop name              | Most common type options                | Description                                                                                                                                                        |\r\n| ---------------------- | --------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r\n| accessibleLabel        | string                                  | Extra context to apply to the component for use with a screen reader                                                                                               |\r\n| additionalFieldDisplay | \"static\", \"dynamic\"                     | How an additional field would present itself within the component                                                                                                  |\r\n| aligned                | \"center\", \"left\", \"right\", \"full-width\" | The alignment of the component                                                                                                                                     |\r\n| announced              | boolean                                 | Changes the component's role to get announced to a screen reader                                                                                                   |\r\n| appearance             | \"default\", \"dark\", \"light\"              | The main colour used for the component                                                                                                                             |\r\n| appTitle               | string                                  | The title text for the component                                                                                                                                   |\r\n| checked                | boolean                                 | The checked state of the component                                                                                                                                 |\r\n| contentAligned         | \"center\", \"left\"                        | The alignment of content within the component                                                                                                                      |\r\n| debounce               | number                                  | The wait time in milliseconds before a change event is triggered                                                                                                   |\r\n| description            | string                                  | The descriptive text for the component                                                                                                                             |\r\n| disabled               | boolean                                 | The component will display as unusable                                                                                                                             |\r\n| dismissible            | boolean                                 | The component will display a close button which will hide the component when clicked                                                                               |\r\n| expandable             | boolean                                 | The component will have an expandable state                                                                                                                        |\r\n| expanded               | boolean                                 | The component will display in the expanded state                                                                                                                   |\r\n| fullWidth              | boolean                                 | The component will take up the available width                                                                                                                     |\r\n| groupLabel/groupTitle  | string                                  | The title text for a component's overarching group                                                                                                                 |\r\n| heading                | string                                  | The title text for the component                                                                                                                                   |\r\n| helperText             | string                                  | The informative text for the component                                                                                                                             |\r\n| hideLabel              | boolean                                 | Sets the visibility for the component's label                                                                                                                      |\r\n| href                   | string                                  | The URL for the component                                                                                                                                          |\r\n| label                  | string                                  | Text within the component                                                                                                                                          |\r\n| loading                | boolean                                 | The component will display in a loading state                                                                                                                      |\r\n| message                | string                                  | The body text for the component                                                                                                                                    |\r\n| name                   | string                                  | The name for the component                                                                                                                                         |\r\n| open                   | boolean                                 | The component will display in an open state                                                                                                                        |\r\n| placeholder            | string                                  | The placeholder text for the component                                                                                                                             |\r\n| progress               | number                                  | The progress made within the component                                                                                                                             |\r\n| readonly               | boolean                                 | The component will display in a readonly state                                                                                                                     |\r\n| required               | boolean                                 | The component will display as a required field                                                                                                                     |\r\n| selected               | boolean                                 | The selected state of the component                                                                                                                                |\r\n| shortAppTitle          | string                                  | The shorter variation of the title text for the component                                                                                                          |\r\n| size                   | \"default\", \"small\", \"large\"             | The size of the component                                                                                                                                          |\r\n| subheading             | string                                  | The subtitle text for the component                                                                                                                                |\r\n| transparentBackground  | boolean                                 | Determines whether the component displays with a white background or transparent background                                                                        |\r\n| type                   | Varies depending on the component       | The type of the component. This can affect either how the component looks (e.g. circular or linear) or how the component functions (e.g. simple or complex)        |\r\n| validationStatus       | \"warning\", \"error\", \"success\"           | The status of the validation message within the component                                                                                                          |\r\n| validationText         | string                                  | The text of the validation message within the component                                                                                                            |\r\n| value                  | string                                  | The value for the component                                                                                                                                        |\r\n| variant                | Varies depending on the component       | The variation of the component. This can affect either the styling of the component (e.g. the status colour) or how the component looks (e.g. rectangle or circle) |\r\n\r\n## Slots\r\n\r\nTo help explain usage, each slot has the expected slotted content and a description.\r\n\r\n| Slot name        | Expected content   | Description                                                   |\r\n| ---------------- | ------------------ | ------------------------------------------------------------- |\r\n| action(s)        | buttons/links      | Additional interactive elements to the component              |\r\n| additional-field | inputs             | Additional input field for checkbox/radio components          |\r\n| app-title        | typography/links   | The title text for the component                              |\r\n| badge            | badge              | A badge component appears alongside the component             |\r\n| buttons          | buttons            | Additional buttons for the component                          |\r\n| heading          | typography/links   | The title text for the component                              |\r\n| icon             | image/icon         | Additional icon for the component                             |\r\n| label            | typography/links   | Text within the component                                     |\r\n| message          | typography/links   | The body text for the component                               |\r\n| navigation       | navigation items   | The content rendered in the navigation panel of the component |\r\n| router-item      | router items/links | Handle routing by nesting routes in the component             |\r\n| subheading       | typography/links   | The subtitle text for the component                           |\r\n",
      "path": "/community/glossary-of-terms",
      "navPriority": 3,
      "date": "2024-03-27",
      "title": "Glossary of terms",
      "subTitle": "A glossary of the most common prop/slot names used throughout the Intelligence Community Design System.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/community/glossary-of-terms.mdx?at=develop",
      "meta": {
        "relativePath": "community\\glossary-of-terms.mdx",
        "createdAt": "2024-05-20T13:19:26.916Z",
        "lastModified": "2024-05-20T13:19:26.916Z",
        "size": 11707,
        "formattedSize": "11.4 KB"
      }
    },
    {
      "id": "community\\indexx",
      "contents": "\r\n## Introduction\r\n\r\nThe Design System and UI Kit has been [open sourced onto GitHub](https://github.com/orgs/mi6/projects/2/views/1) with the aim to make it easier for others to contribute back.\r\n\r\nWe hope to demonstrate our approach to software and inclusive design.\r\n\r\n- See our [roadmap](/community/roadmap) for an overview of recent work, current focus and work we have planned.\r\n- Learn how you can [contribute](/community/contribute) using the [contribution criteria](/community/contribute-criteria).\r\n- How our community approaches design through our [design principles](/get-started/design-principles).\r\n",
      "path": "/community",
      "date": "2024-05-07",
      "title": "Community",
      "subTitle": "The UK Intelligence Community Design System is a community effort endorsed across the UK Intelligence Community.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/community/index.mdx",
      "meta": {
        "relativePath": "community\\index.mdx",
        "createdAt": "2024-05-20T13:20:43.271Z",
        "lastModified": "2024-05-20T13:20:43.271Z",
        "size": 925,
        "formattedSize": "925 Bytes"
      }
    },
    {
      "id": "community\\roadmapx",
      "contents": "\r\n## Introduction\r\n\r\nThe purpose of sharing the roadmap is to give our community an insight into our strategic plan, goals and milestones.\r\n\r\nPriorities may change because of organisation strategies, or community requirements. We will aim to keep this page up to date.\r\n\r\nWe welcome contributions of code, issues raised and more. You can read more about [how to contribute](/community/contribute).\r\n\r\nCheck out our [GitHub](https://github.com/orgs/mi6/projects/2/views/1) for a more detailed view of our day-to-day activities.\r\n\r\n## Recently shipped\r\n\r\n- Canary release of [data table component](/components/data-table).\r\n- Canary release of [date input component](/components/date-input).\r\n- Canary release of [date picker component](/components/date-picker).\r\n- Canary release of [multi-select component](/components/multi-select).\r\n- Development of [top navigation layout pattern](/patterns/navigation-patterns/top-navigation-layout).\r\n- Development of [side navigation layout pattern](/patterns/navigation-patterns/side-navigation-layout).\r\n- Development of [file upload component](/components/button/code/#file-upload).\r\n- Development of [toggle button component](/components/toggle-button).\r\n- Added [component images to component galley](/components).\r\n\r\n## Current focus\r\n\r\n- Customisation and theming of colours and components within the library.\r\n- Understand the scope for dark mode.\r\n- Development of drawer component.\r\n- Development of tree navigation component.\r\n- Continue Cypress test migration.\r\n- Development of form pattern.\r\n- Add StackBlitz and show more show less functionality to component demos.\r\n\r\n## Future\r\n\r\n- Understand the scope for v3 of the Design System.\r\n",
      "path": "/community/roadmap",
      "navPriority": 1,
      "date": "2024-05-07",
      "title": "Roadmap",
      "subTitle": "Our roadmap shows an overview of recent work, current focus and work we have planned.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/community/roadmap.mdx",
      "meta": {
        "relativePath": "community\\roadmap.mdx",
        "createdAt": "2024-05-20T13:20:43.271Z",
        "lastModified": "2024-05-20T13:20:43.271Z",
        "size": 2000,
        "formattedSize": "2.0 KB"
      }
    },
    {
      "id": "components\\accordion\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nWe have used `aria-expanded` and `aria-collapsed` so that a screen reader announces the state of the accordion.\r\n\r\nWhen navigating using the keyboard, use the tab button to move focus between accordions, and use the space and enter keys to open or close it.\r\n\r\nIf an input or actionable functionality is contained within an accordion, this is only accessible when the accordion is open.\r\n\r\nIf the accordion is closed, we make sure any functionality contained within the accordion is removed from the focus order.\r\n\r\n## For Assistive Technology\r\n\r\nThe accordion component consists of a button and expanded area. The button uses `aria-expanded` so screen readers announce when the accordion panel is on display. `aria-controls` is also applied to the button to identify which expanded area is being controlled by the button.\r\n\r\nThe expanded content uses `aria-hidden`, which is set to `false` when the accordion is collapsed and `true` when expanded. The expanded content also has a `role` of `region` and `aria-labelled`, which links to the accordion heading within the button.\r\n\r\n## Based on\r\n\r\nThe accordion component is based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/ARIA/apg/patterns/accordion/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Accordion Pattern, Aria Authoring Practice Guide (APG)\r\n    </ic-link>\r\n    , accessed May 2023.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.scottohara.me/blog/2017/10/25/accordion-release.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Accessible ARIA Accordions, Scott O’Hara\r\n    </ic-link>\r\n    , accessed May 2023.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.nngroup.com/articles/accordion-icons/#:~:text=Using%20a%20caret%20is%20definitely,using%20no%20signifier%20at%20all\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Accordion Icons: Which Signifiers Work Best?, Nielson Norman Group\r\n    </ic-link>\r\n    , accessed May 2023.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.aditus.io/patterns/accordion/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Accessible Accordion, Aditus\r\n    </ic-link>\r\n    , accessed May 2023.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://inclusive-components.design/collapsible-sections/ \"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Collapsible Sections, Inclusive Components\r\n    </ic-link>\r\n    , accessed May 2023.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/accordion/accessibility",
      "date": "2024-04-15",
      "title": "Accordion",
      "status": "BETA",
      "subTitle": "Accordions are expandable and collapsible sections that are used to show and hide additional content. ",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/accordion",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/accordion"
        },
        {
          "title": "Code",
          "path": "/components/accordion/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/accordion/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\accordion\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:34.969Z",
        "lastModified": "2024-06-04T07:48:34.969Z",
        "size": 3357,
        "formattedSize": "3.3 KB"
      }
    },
    {
      "id": "components\\accordion\\codex",
      "contents": "\r\nimport {\r\n  IcAccordion,\r\n  IcAccordionGroup,\r\n  IcTypography,\r\n  SlottedSVG,\r\n} from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-accordion heading=\"English Breakfast\">\r\n  <ic-typography variant=\"body\">\r\n    A blend of different black teas.\r\n  </ic-typography>\r\n</ic-accordion>\r\n<ic-accordion heading=\"Earl Grey\">\r\n  <ic-typography variant=\"body\">\r\n    A tea blend that has been flavoured with oil of bergamot.\r\n  </ic-typography>\r\n</ic-accordion>\r\n`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcAccordion heading=\"English Breakfast\">\r\n  <IcTypography variant=\"body\">\r\n    A blend of different black teas.\r\n  </IcTypography>\r\n</IcAccordion>\r\n<IcAccordion heading=\"Earl Grey\">\r\n  <IcTypography variant=\"body\">\r\n    A tea blend that has been flavoured with oil of bergamot.\r\n  </IcTypography>\r\n</IcAccordion>\r\n`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ flexDirection: \"column\" }} snippets={snippets}>\r\n  <IcAccordion heading=\"English Breakfast\">\r\n    <IcTypography variant=\"body\">A blend of different black teas.</IcTypography>\r\n  </IcAccordion>\r\n  <IcAccordion heading=\"Earl Grey\">\r\n    <IcTypography variant=\"body\">\r\n      A tea blend that has been flavoured with oil of bergamot.\r\n    </IcTypography>\r\n  </IcAccordion>\r\n</ComponentPreview>\r\n\r\n## Accordion details\r\n\r\n<ComponentDetails component=\"ic-accordion\" />\r\n\r\n## Accordion group details\r\n\r\n<ComponentDetails component=\"ic-accordion-group\" />\r\n\r\n## Variants\r\n\r\n### With icon\r\n\r\nexport const withIcon = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-accordion heading=\"English Breakfast\">\r\n      <svg\r\n        slot=\"icon\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </svg>\r\n  <ic-typography variant=\"body\">\r\n    A blend of different black teas.\r\n  </ic-typography>\r\n  </ic-accordion>\r\n  <ic-accordion heading=\"Earl Grey\">\r\n    <svg\r\n        slot=\"icon\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </svg>\r\n    <ic-typography variant=\"body\">\r\n      A tea blend that has been flavoured with oil of bergamot.\r\n    </ic-typography>\r\n  </ic-accordion>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcAccordion heading=\"English Breakfast\">\r\n  <SlottedSVG\r\n        slot=\"icon\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n  <IcTypography variant=\"body\">\r\n    A blend of different black teas.\r\n  </IcTypography>\r\n  </IcAccordion>\r\n  <IcAccordion heading=\"Earl Grey\">\r\n    <SlottedSVG\r\n        slot=\"icon\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n    <IcTypography variant=\"body\">\r\n      A tea blend that has been flavoured with oil of bergamot.\r\n    </IcTypography>\r\n  </IcAccordion>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={withIcon} style={{ flexDirection: \"column\" }}>\r\n  <IcAccordion heading=\"English Breakfast\">\r\n    <SlottedSVG\r\n      slot=\"icon\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n    <IcTypography variant=\"body\">A blend of different black teas.</IcTypography>\r\n  </IcAccordion>\r\n  <IcAccordion heading=\"Earl Grey\">\r\n    <SlottedSVG\r\n      slot=\"icon\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n    <IcTypography variant=\"body\">\r\n      A tea blend that has been flavoured with oil of bergamot.\r\n    </IcTypography>\r\n  </IcAccordion>\r\n</ComponentPreview>\r\n\r\n### With group title and see all / hide all button\r\n\r\n<ComponentPreview snippets={groupTitle} style={{ flexDirection: \"column\" }}>\r\n  <IcAccordionGroup group-title=\"Coffee\">\r\n    <IcAccordion heading=\"Cappuccino\">\r\n      <IcTypography variant=\"body\">\r\n        An espresso-based drink that is traditionally prepared with steamed milk\r\n        foam.\r\n      </IcTypography>\r\n    </IcAccordion>\r\n    <IcAccordion heading=\"Americano\">\r\n      <IcTypography variant=\"body\">\r\n        An espresso-based drink that is diluted with hot water.\r\n      </IcTypography>\r\n    </IcAccordion>\r\n  </IcAccordionGroup>\r\n</ComponentPreview>\r\n\r\nexport const groupTitle = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-accordion-group group-title=\"Coffee\">\r\n  <ic-accordion heading=\"Cappuccino\">\r\n    <ic-typography variant=\"body\">\r\n      An espresso-based drink that is traditionally prepared with steamed milk foam.\r\n    </ic-typography>\r\n  </ic-accordion>\r\n  <ic-accordion heading=\"Americano\">\r\n    <ic-typography variant=\"body\">\r\n      An espresso-based drink that is diluted with hot water.\r\n    </ic-typography>\r\n  </ic-accordion>\r\n</ic-accordion-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcAccordionGroup groupTitle=\"Coffee\">\r\n  <IcAccordion heading=\"Cappucino\">\r\n    <IcTypography variant=\"body\">\r\n      An espresso-based drink that is traditionally prepared with steamed milk foam.\r\n    </IcTypography>\r\n  </IcAccordion>\r\n  <IcAccordion heading=\"Americano\">\r\n    <IcTypography variant=\"body\">\r\n      An espresso-based drink that is diluted with hot water.\r\n    </IcTypography>\r\n  </IcAccordion>\r\n</IcAccordionGroup>`,\r\n  },\r\n];\r\n\r\n### With nested accordions\r\n\r\nexport const snippetsNested = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-accordion-group group-title=\"Coffee\">\r\n  <ic-accordion heading=\"Cappuccino\">\r\n    <ic-typography variant=\"body\">\r\n      An espresso-based drink that is traditionally prepared with steamed milk foam.\r\n    </ic-typography>\r\n  </ic-accordion>\r\n  <ic-accordion heading=\"Other coffees\">\r\n    <ic-accordion heading=\"Americano\">\r\n      <ic-typography variant=\"body\">\r\n        An espresso-based drink that is diluted with hot water.\r\n      </ic-typography>\r\n    </ic-accordion>\r\n    <ic-accordion heading=\"Latte\">\r\n      <ic-typography variant=\"body\">\r\n        A milkier coffee than a cappuccino.\r\n      </ic-typography>\r\n    </ic-accordion>\r\n  </ic-accordion>\r\n</ic-accordion-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcAccordionGroup groupTitle=\"Coffee\">\r\n  <IcAccordion heading=\"Cappucino\">\r\n    <IcTypography variant=\"body\">\r\n      An espresso-based drink that is traditionally prepared with steamed milk foam.\r\n    </IcTypography>\r\n  </IcAccordion>\r\n  <IcAccordion heading=\"Other coffees\">\r\n    <IcAccordion heading=\"Americano\">\r\n      <IcTypography variant=\"body\">\r\n        An espresso-based drink that is diluted with hot water.\r\n      </IcTypography>\r\n    </IcAccordion>\r\n    <IcAccordion heading=\"Latte\">\r\n      <IcTypography variant=\"body\">\r\n        A milkier coffee than a cappuccino.\r\n      </IcTypography>\r\n    </IcAccordion>\r\n  </IcAccordion>\r\n</IcAccordionGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsNested} style={{ flexDirection: \"column\" }}>\r\n  <IcAccordionGroup group-title=\"Coffee\">\r\n    <IcAccordion heading=\"Cappuccino\">\r\n      <IcTypography variant=\"body\">\r\n        An espresso-based drink that is traditionally prepared with steamed milk\r\n        foam.\r\n      </IcTypography>\r\n    </IcAccordion>\r\n    <IcAccordion heading=\"Other coffees\">\r\n      <IcAccordion heading=\"Americano\">\r\n        <IcTypography variant=\"body\">\r\n          An espresso-based drink that is diluted with hot water.\r\n        </IcTypography>\r\n      </IcAccordion>\r\n      <IcAccordion heading=\"Latte\">\r\n        <IcTypography variant=\"body\">\r\n          A milkier coffee than a cappuccino.\r\n        </IcTypography>\r\n      </IcAccordion>\r\n    </IcAccordion>\r\n  </IcAccordionGroup>\r\n</ComponentPreview>\r\n",
      "path": "/components/accordion/code",
      "date": "2023-10-11",
      "title": "Accordion",
      "status": "BETA",
      "subTitle": "Accordions are expandable and collapsible sections that are used to show and hide additional content.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/accordion",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/accordion"
        },
        {
          "title": "Code",
          "path": "/components/accordion/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/accordion/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\accordion\\code.mdx",
        "createdAt": "2024-06-04T07:48:34.970Z",
        "lastModified": "2024-06-04T07:48:34.970Z",
        "size": 9578,
        "formattedSize": "9.4 KB"
      }
    },
    {
      "id": "components\\accordion\\guidancex",
      "contents": "\r\nimport {\r\n  IcAccordion,\r\n  IcAccordionGroup,\r\n  IcTypography,\r\n  SlottedSVG,\r\n} from \"@ukic/react\";\r\nimport accordionFig1 from \"./images/fig-1-add-accordion-titles-to-help-organise-content.png\";\r\nimport accordionFig2a from \"./images/fig-2a-use-see-all-button-to-open-all-accordions-within-an-accordion-group-at-once.png\";\r\nimport accordionFig2b from \"./images/fig-2b-use-hide-all-button-to-close-all-accordions-within-an-accordion-group-at-once.png\";\r\nimport accordionFig3 from \"./images/fig-3-use-the-slotted-content-of-an-accordion-to-house-other-content.png\";\r\nimport accordionFig4 from \"./images/fig-4-do-not-nest-an-accordion-or-accordion-group-within-an-already-nested-accordion-one-level-of-nesting-is-the-maximum.png\";\r\nimport accordionFig5a from \"./images/fig-5a-use-an-accordion-group-with-a-title-for-clearer-organisation.png\";\r\nimport accordionFig5b from \"./images/fig-5b-consider-using-an-accordion-group-instead-of-nested-accordions-for-clearer-organisation.png\";\r\nimport accordionFig6 from \"./images/fig-6-always-make-sure-your-title-is-relevant-to-your-accordion-group-content.png\";\r\nimport accordionFig7 from \"./images/fig-7-do-not-use-scroll-bars-within-accordions.png\";\r\n\r\n## Introduction\r\n\r\nAn accordion is an expandable and collapsible section that is used to show and hide content. Accordions are used to shorten the length of a page by hiding information.\r\n\r\nGroup accordions to hide more content on the page and to structure content into different sections.\r\n\r\nAn accordion group can be nested within another accordion to create one layer of nested content. Do not nest more accordion groups within an already nested accordion group. Only use one level of nesting.\r\n\r\n<ComponentPreview style={{ flexDirection: \"column\" }}>\r\n  <IcAccordionGroup groupTitle=\"Our coffees - Ingredients\">\r\n    <IcAccordion heading=\"Americano\">\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n      <IcTypography variant=\"body\">\r\n        A simple drink made by topping up espresso with hot water.\r\n      </IcTypography>\r\n    </IcAccordion>\r\n    <IcAccordion heading=\"Cappuccino\">\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n      <IcAccordion heading=\"Espresso\">\r\n        <IcTypography variant=\"body\">\r\n          Our tasty double shot of espresso made from the finest Arabica beans.\r\n        </IcTypography>\r\n      </IcAccordion>\r\n      <IcAccordion heading=\"Steamed milk\">\r\n        <IcTypography variant=\"body\">\r\n          Steamy milk how you like it. Choose from whole, semi-skimmed, soy, oat\r\n          or almond.\r\n        </IcTypography>\r\n      </IcAccordion>\r\n      <IcAccordion heading=\"Chocolate sprinkles\">\r\n        <IcTypography variant=\"body\">\r\n          No cappuccino is complete without the sprinkles. Ours are made from\r\n          sumptuous dark Belgian chocolate.\r\n        </IcTypography>\r\n      </IcAccordion>\r\n    </IcAccordion>\r\n  </IcAccordionGroup>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse accordions to organise information, shorten the page length and reduce the scroll time when the page is initially loaded.\r\n\r\nUse accordion groups to categorise accordions into sections with a title.\r\n\r\nFor example, use an accordion group for a frequently asked questions (FAQs) page.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={accordionFig1}\r\n    imageAlt=\"Two collapsed accordion groups. One titled ‘Bari-star member benefits’ and one titled ‘FAQs’, both containing three accordions.\"\r\n    state=\"good\"\r\n    caption=\"Add accordion titles to help organise content.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nUse the accordion title section to title the group of accordions and contain the 'see all' or 'hide all' button. Don’t display a title to achieve a title section with only the 'see all' or 'hide all' button.\r\n\r\nUse 'see all' and 'hide all' functionality to show or hide all information from all accordions at once.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={accordionFig2a}\r\n    imageAlt=\"A collapsed accordion group titled ‘Bari-star member benefits’ with a ‘see all’ button.\"\r\n    state=\"good\"\r\n    caption=\"Use the 'see all' button to open all accordions within an accordion group at once. \"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={accordionFig2b}\r\n    imageAlt=\"An expanded accordion group titled ‘Bari-star member benefits’ with a ‘hide all’ button.\"\r\n    state=\"good\"\r\n    caption=\"Use the 'hide all' button to close all accordions within an accordion group at once.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nAdd custom content to an accordion using the slotted section to create different uses for your accordions.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={accordionFig3}\r\n    imageAlt=\"An accordion titled ‘Order details’ including a three-row data entity for a coffee order in the content area.\"\r\n    state=\"good\"\r\n    caption=\"Use the slotted content of an accordion to house other content.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nSet an accordion to open one at a time when the information in the accordions is unrelated.\r\n\r\nSet an accordion to open all at once when all information can be viewed at the same time and is related.\r\n\r\n## When not to use\r\n\r\nDo not use accordions when all information is critical to the people using the page.\r\n\r\nAvoid overusing accordions to hide all information on a page. Accordions may be ignored if used too frequently.\r\n\r\nDo not place accordion groups within nested accordion groups, one layer of nesting is the maximum.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={accordionFig4}\r\n    imageAlt=\"An accordion group titled ‘Roasting hot’ containing an accordion group with another nested accordion group within it.\"\r\n    state=\"bad\"\r\n    caption=\"Do not nest an accordion or accordion group within an already nested accordion. One level of nesting is the maximum. \"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nDo not use nested accordions as a replacement for an accordion group. Consider using multiple accordion groups on the page instead.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={accordionFig5a}\r\n    imageAlt=\"An accordion group titled Coffee with three collapsed accordions\"\r\n    state=\"good\"\r\n    caption=\"Use an accordion group with a title for clearer organisation.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={accordionFig5b}\r\n    imageAlt=\"A parent accordion with the heading Coffee with a nested accordion group containing three accordions.\"\r\n    state=\"caution\"\r\n    caption=\"Avoid nesting an accordion group to add a title. Instead, use an accordion group title.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Colour\r\n\r\nUse the dark or light appearance to achieve colour contrast compliance when using accordions on different coloured backgrounds.\r\n\r\n## Sizing\r\n\r\nUse an accordion's size property to change its vertical size and achieve compact or spacious layouts.\r\n\r\nSet the width of the accordion depending on the screen size or the container that is being used.\r\n\r\n## Layout and placement\r\n\r\nUse accordions in main page content. Accordions can also be placed within other components to organise content.\r\n\r\n## Content\r\n\r\n### Heading and title\r\n\r\nWhen using a title for an accordion group, make sure it is relevant to the information provided by each accordion header.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={accordionFig6}\r\n    imageAlt=\"An accordion group containing three accordions with headings of different types of tea, with a title of ‘Our coffee menu’\"\r\n    state=\"bad\"\r\n    caption=\"Always make sure your title is relevant to your accordion group content.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nAlways give an accordion a suitable header that is relevant to the information that it contains.\r\n\r\nRelevant titles and headings allow people to skip over the information if it is not relevant.\r\n\r\n### Accordion content\r\n\r\nUse text content by default or use the accordion slot to provide custom content or layouts.\r\n\r\nDo not make accordion content scrollable as this will interfere with the page scroll.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={accordionFig7}\r\n    imageAlt=\"An accordion group with three accordions where the first accordion is expanded, containing a scroll bar.\"\r\n    state=\"bad\"\r\n    caption=\"Do not use scroll bars within accordions.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n### Icons\r\n\r\nUse an icon on an accordion header to provide additional meaning or to aid in recognition.\r\n\r\nMake sure that the icon is understandable and relevant to the accordion header and content.\r\n\r\nAlways provide alternative descriptions for icons if they aren't decorative. Only use icons if they are necessary, they are removed as default.\r\n\r\n## Accessibility considerations\r\n\r\nMake sure to change an accordion’s semantic heading style to achieve a logical heading structure on the page.\r\n",
      "path": "/components/accordion",
      "navPriority": 1,
      "date": "2023-10-11",
      "title": "Accordion",
      "status": "BETA",
      "subTitle": "Accordions are expandable and collapsible sections that are used to show and hide additional content.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/accordion",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/accordion"
        },
        {
          "title": "Code",
          "path": "/components/accordion/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/accordion/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\accordion\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.971Z",
        "lastModified": "2024-06-04T07:48:34.971Z",
        "size": 10088,
        "formattedSize": "9.9 KB"
      }
    },
    {
      "id": "components\\alerts\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nWhere alerts are added to a page content, they can be tabbed to follow the logical page content order.\r\n\r\nWhere both an action button and a dismiss button are included on an alert, focus is first applied to the action button and then the dismiss button.\r\n\r\n## For Assistive Technology\r\n\r\nAlerts use the `alert` role, creating an `aria-live` region that's rendered on page load. If the alert appears on the page, it constitutes a status update. The `aria-live` region causes the alert to be brought to the attention of assistive technology users.\r\n\r\nBy default, the alert uses an `aria-live` value of `assertive` to interrupt the user flow to call attention to the status change.\r\n\r\nIf the alert content is not urgent, consider using an `aria-live` value of `polite` instead. This announces the alert contents after the current element announcement has been completed.\r\n\r\n## Based on\r\n\r\nThe alert component is based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/alert_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Alert role, MDN Web Docs\r\n    </ic-link>\r\n    , accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://hiddedevries.nl/en/blog/2017-04-04-how-to-make-inline-error-messages-accessible\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      How to make inline error messages accessible\r\n    </ic-link>\r\n    , accessed March 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/alert/accessibility",
      "date": "2024-04-15",
      "title": "Alert",
      "status": "BETA",
      "subTitle": "Alerts display a short important message in a way that attracts attention without interrupting the current task.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/alert",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/alert"
        },
        {
          "title": "Code",
          "path": "/components/alert/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/alert/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\alerts\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:34.972Z",
        "lastModified": "2024-06-04T07:48:34.972Z",
        "size": 2295,
        "formattedSize": "2.2 KB"
      }
    },
    {
      "id": "components\\alerts\\codex",
      "contents": "\r\n## Component demo\r\n\r\nimport { IcAlert, IcButton, IcLink } from \"@ukic/react\";\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-alert heading=\"Americano order\" message=\"Preparation status is unavailable.\"></ic-alert>\r\n<ic-alert variant=\"info\" heading=\"Did you know?\" message=\"Coffee is a brewed drink prepared from roasted coffee beans.\"></ic-alert>\r\n<ic-alert variant=\"error\" heading=\"Americano order error\" message=\"Americano couldn't be made, we ran out of beans.\"></ic-alert>\r\n<ic-alert variant=\"warning\" heading=\"Hot drink\" message=\"Please be careful the drink is hot.\"></ic-alert>\r\n<ic-alert variant=\"success\" heading=\"Americano order complete\" message=\"Success, your coffee is good to go.\"></ic-alert>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcAlert heading=\"Americano order\" message=\"Preparation status is unavailable.\"/>\r\n<IcAlert variant=\"info\" heading=\"Did you know?\" message=\"Coffee is a brewed drink prepared from roasted coffee beans.\"/>\r\n<IcAlert variant=\"error\" heading=\"Americano order error\" message=\"Americano couldn't be made, we ran out of beans.\" />\r\n<IcAlert variant=\"warning\" heading=\"Hot drink\" message=\"Please be careful the drink is hot.\"/>\r\n<IcAlert variant=\"success\" heading=\"Americano order complete\" message=\"Success, your coffee is good to go.\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ display: \"block\" }} snippets={snippetsDefault}>\r\n  <IcAlert\r\n    style={{ marginBottom: \"16px\" }}\r\n    heading=\"Americano order\"\r\n    message=\"Preparation status is unavailable.\"\r\n  />\r\n  <IcAlert\r\n    style={{ marginBottom: \"16px\" }}\r\n    variant=\"info\"\r\n    heading=\"Did you know?\"\r\n    message=\"Coffee is a brewed drink prepared from roasted coffee beans.\"\r\n  />\r\n  <IcAlert\r\n    style={{ marginBottom: \"16px\" }}\r\n    variant=\"error\"\r\n    heading=\"Americano order error\"\r\n    message=\"Americano couldn't be made, we ran out of beans.\"\r\n  />\r\n  <IcAlert\r\n    style={{ marginBottom: \"16px\" }}\r\n    variant=\"warning\"\r\n    heading=\"Hot drink\"\r\n    message=\"Please be careful the drink is hot.\"\r\n  />\r\n  <IcAlert\r\n    style={{ marginBottom: \"16px\" }}\r\n    variant=\"success\"\r\n    heading=\"Americano order complete\"\r\n    message=\"Success, your coffee is good to go.\"\r\n  />\r\n</ComponentPreview>\r\n\r\n## Alert details\r\n\r\n<ComponentDetails component=\"ic-alert\" />\r\n\r\n## Variants\r\n\r\n### Dismissible\r\n\r\nexport const snippetsDismissible = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-alert heading=\"Americano order nearly ready\" message=\"Your coffee is nearly ready. We'll send you another alert once it is complete.\" dismissible=\"true\"></ic-alert>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcAlert heading=\"Americano order nearly ready\" message=\"Your coffee is nearly ready. We'll send you another alert once it is complete.\" dismissible />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDismissible}>\r\n  <IcAlert\r\n    heading=\"Americano order nearly ready\"\r\n    message=\"Your coffee is nearly ready. We'll send you another alert once it is complete.\"\r\n    dismissible\r\n  />\r\n</ComponentPreview>\r\n\r\n### With action\r\n\r\nexport const snippetsWithAction = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-alert variant=\"info\" heading=\"Did you know?\" message=\"There is a new range of coffees to try.\">\r\n      <ic-button slot=\"action\" variant=\"secondary\" appearance=\"dark\">View Drinks</ic-button>\r\n</ic-alert>\r\n<script>\r\n  const btn = document.querySelector('ic-button');\r\n  btn.addEventListener('click', (ev) => {\r\n    console.log(ev)\r\n  })\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcAlert variant=\"info\" heading=\"Did you know?\" message=\"There is a new range of coffees to try.\">\r\n    <IcButton slot=\"action\" variant=\"secondary\" appearance=\"dark\" onClick={(ev) => console.log(ev)}>View Drinks</IcButton>\r\n</IcAlert>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsWithAction}>\r\n  <IcAlert\r\n    variant=\"info\"\r\n    heading=\"Did you know?\"\r\n    message=\"There is a new range of coffees to try.\"\r\n  >\r\n    <IcButton\r\n      slot=\"action\"\r\n      variant=\"secondary\"\r\n      appearance=\"dark\"\r\n      onClick={(ev) => console.log(ev)}\r\n    >\r\n      View Drinks\r\n    </IcButton>\r\n  </IcAlert>\r\n</ComponentPreview>\r\n\r\n### Title above\r\n\r\nexport const snippetsTitleAbove = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-alert \r\n    heading=\"What is Coffee?\" \r\n    message=\"Coffee is a brewed drink prepared from roasted coffee beans, the seeds of berries from certain flowering plants in the Coffea genus.\" \r\n    title-above=\"true\" \r\n    variant=\"info\">\r\n  </ic-alert>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcAlert \r\n    heading=\"What is Coffee?\" \r\n    message=\"Coffee is a brewed drink prepared from roasted coffee beans, the seeds of berries from certain flowering plants in the Coffea genus.\" \r\n    titleAbove \r\n    variant=\"info\"/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsTitleAbove}>\r\n  <IcAlert\r\n    heading=\"What is Coffee?\"\r\n    message=\"Coffee is a brewed drink prepared from roasted coffee beans, the seeds of berries from certain flowering plants in the Coffea genus.\"\r\n    titleAbove\r\n    variant=\"info\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Responsive title\r\n\r\nexport const snippetsResponsiveTitle = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-alert \r\n    heading=\"Here you can find out lots more information about the world's favourite hot drink.\" \r\n    message=\"Coffee is a brewed drink prepared from roasted coffee beans, the seeds of berries from certain flowering plants in the Coffea genus. From the coffee fruit, the seeds are separated to produce a stable, raw product: unroasted green coffee.\"\r\n    variant=\"info\">\r\n    </ic-alert>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcAlert \r\n    heading=\"Here you can find out lots more information about the world's favourite hot drink.\" \r\n    message=\"Coffee is a brewed drink prepared from roasted coffee beans, the seeds of berries from certain flowering plants in the Coffea genus. From the coffee fruit, the seeds are separated to produce a stable, raw product: unroasted green coffee.\" \r\n    variant=\"info\"/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsResponsiveTitle}>\r\n  <IcAlert\r\n    heading=\"Here you can find out lots more information about the world's favourite hot drink.\"\r\n    message=\"Coffee is a brewed drink prepared from roasted coffee beans, the seeds of berries from certain flowering plants in the Coffea genus. From the coffee fruit, the seeds are separated to produce a stable, raw product: unroasted green coffee.\"\r\n    variant=\"info\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Custom message\r\n\r\nexport const snippetsCustomMessage = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-alert variant=\"info\" heading=\"Want to know more about our coffee?\">\r\n  <span slot=\"message\"> Go to our <ic-link href=\"/\">coffee page</ic-link> to learn more.</span>\r\n</ic-alert>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcAlert variant=\"info\" heading=\"Want to know more about our coffee?\">\r\n  <span slot=\"message\"> Go to our <IcLink href=\"/\">coffee page</IcLink> to learn more.</span>\r\n</IcAlert>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsCustomMessage}>\r\n  <IcAlert variant=\"info\" heading=\"Want to know more about our coffee?\">\r\n    <span\r\n      slot=\"message\"\r\n      style={{\r\n        font: \"var(--ic-font-body)\",\r\n        letterSpacing: \"var(--ic-font-letter-spacing-0pt005)\",\r\n      }}\r\n    >\r\n      Got to our{\" \"}\r\n      <IcLink href=\"#\" onClick={(e) => e.preventDefault()}>\r\n        coffee page\r\n      </IcLink>{\" \"}\r\n      to learn more.\r\n    </span>\r\n  </IcAlert>\r\n</ComponentPreview>\r\n",
      "path": "/components/alert/code",
      "date": "2024-02-02",
      "title": "Alert",
      "status": "BETA",
      "subTitle": "Alerts display a short important message in a way that attracts attention without interrupting the current task.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/alert",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/alert"
        },
        {
          "title": "Code",
          "path": "/components/alert/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/alert/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\alerts\\code.mdx",
        "createdAt": "2024-04-04T12:41:43.748Z",
        "lastModified": "2024-04-04T12:41:43.748Z",
        "size": 8205,
        "formattedSize": "8.0 KB"
      }
    },
    {
      "id": "components\\alerts\\guidancex",
      "contents": "\r\nimport { IcAlert } from \"@ukic/react\";\r\nimport alertFig1 from \"./images/fig-1-do-use-alerts-inline-with-other-associated-page-content.png\";\r\nimport alertFig2 from \"./images/fig-2-do-use-alerts-with-an-optional-action-and-dismiss-button.png\";\r\nimport alertFig3 from \"./images/fig-3-dont-use-alerts-overlaid-on-page-content.png\";\r\nimport alertFig4 from \"./images/fig-4-dont-use-an-alert-variant-unrelated-to-its-message.png\";\r\nimport alertFig5 from \"./images/fig-5-avoid-using-lengthy-messages-within-an-alert.png\";\r\n\r\n## Introduction\r\n\r\nAlerts are displayed inline with other page content and show status depending on the severity of the message.\r\n\r\n<ComponentPreview>\r\n  <IcAlert\r\n    heading=\"Hot drink\"\r\n    message=\"Please be careful, your drink will be hot.\"\r\n    variant=\"warning\"\r\n  />\r\n</ComponentPreview>\r\n\r\nAlerts have five status variants:\r\n\r\n- Neutral\r\n- Success\r\n- Warning\r\n- Error\r\n- Info\r\n\r\n## When to use\r\n\r\nUse an alert to notify a user without blocking or interrupting them.\r\n\r\nPosition alerts in line with page content so that they are closely associated with the related content that follows them.\r\n\r\n<DoDontCaution\r\n  imageSrc={alertFig1}\r\n  imageAlt=\"An article titled ‘The perfect blend’ displaying a warning alert which reads ‘Take care. This article has yet to be reviewed and so may contain errors’. \"\r\n  state=\"good\"\r\n  caption=\"Use alerts in line with other associated page content. \"\r\n/>\r\n\r\nUse alerts to:\r\n\r\n- Summarise [form validation](/patterns/form-validation) errors.\r\n- Inform of failures in a particular part of an app.\r\n- Inform of a success when returning to a homepage, confirmation page or starting location.\r\n- Make important information stand out from surrounding content.\r\n\r\nInclude a button or link within an alert to provide related interactions.\r\n\r\nInclude a dismiss button within an alert to allow the alert to be dismissed.\r\n\r\n<DoDontCaution\r\n  imageSrc={alertFig2}\r\n  imageAlt=\"An article titled ‘The perfect blend’ showing an information alert with an action button that says ‘Post comment’ and a dismiss button. The alert message says ‘This is a brand new post. Show your appreciation by leaving a comment below.\"\r\n  state=\"good\"\r\n  caption=\"Include a button or link to provide actions on an alert. Use a dismiss button to allow the alert to be dismissed.\"\r\n/>\r\n\r\n## When not to use\r\n\r\nDon’t use alerts for passive feedback on a process, for example 'draft discarded' or 'email sent'. Use [toasts](/components/toast) instead.\r\n\r\nDon’t overlay alerts on page content. Alerts are placed inline with the rest of the page content.\r\n\r\n<DoDontCaution\r\n  imageSrc={alertFig3}\r\n  imageAlt=\"An article titled ‘The perfect blend’ with an information alert overlaid on top of the page content.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t use alerts positioned above/on top of page content.\"\r\n/>\r\n\r\nUse the [form validation pattern](/patterns/form-validation) for errors on a text field or in a form.\r\n\r\n<DoDontCaution\r\n  imageSrc={alertFig4}\r\n  imageAlt=\"A form titled ‘The perfect blend’ that contains 2 skeletons. A success alert shows an error message that says ‘There was an error on this page. Please fix any errors highlighted before continuing.’\"\r\n  state=\"bad\"\r\n  caption=\"Do not use an alert variant that is not related to its message.\"\r\n/>\r\n\r\n## Content\r\n\r\nAvoid using lengthy message content in an alert. Use dialogs or a [full page error message](/patterns/form-validation) to display longer messages.\r\n\r\nUse a title on an alert to provide a short description of the alert content.\r\n\r\n<DoDontCaution\r\n  imageSrc={alertFig5}\r\n  imageAlt=\"An image of an article titled ‘The perfect blend’ showing an info alert with a lengthy message that takes a lot of room to display among other page content.\"\r\n  state=\"caution\"\r\n  caption=\"Avoid using lengthy messages within an alert.\"\r\n/>\r\n\r\nUse the default icons with success, warning, error and info alerts.\r\n\r\nWhen using neutral alerts, specify an icon to be used from the [iconography guidance](/styles/icons). Always specify alt text when using any custom icon.\r\n\r\n## Related components\r\n\r\n- [Toasts](/components/toast)\r\n- [Error validation](/patterns/form-validation)\r\n",
      "path": "/components/alert",
      "navPriority": 2,
      "date": "2023-08-22",
      "title": "Alert",
      "status": "BETA",
      "subTitle": "Alerts display a short important message in a way that attracts attention without interrupting the current task.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/alert",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/alert"
        },
        {
          "title": "Code",
          "path": "/components/alert/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/alert/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\alerts\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.973Z",
        "lastModified": "2024-06-04T07:48:34.973Z",
        "size": 4749,
        "formattedSize": "4.6 KB"
      }
    },
    {
      "id": "components\\back-to-top\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nThe button is located on the bottom right-hand side of a page. This is where users expect to see the button and it's out of the way of most other page content and navigational elements.\r\n\r\nThe button targets the main landmark in order to move focus to the top of the content and not require keyboard users to tab through all other navigational components.\r\n\r\nWe’ve made sure the component is WCAG compliant with movable interaction and keyboard accessible elements. When using the back to top button, no motion is applied to the automatic scroll.\r\n\r\n## For Assistive Technology\r\n\r\nEven for short screens, the recommendation is to use a back to top button as it provides people using assistive technology a way to quickly get back to the top of the content.\r\n\r\n## Based on\r\n\r\nThe back to top component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.nngroup.com/articles/back-to-top/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Back to top\r\n    </ic-link>\r\n    , Nielsen Normal Group, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/standards-guidelines/act/rules/0ssw9k/proposed/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Scrollable element is keyboard accessible\r\n    </ic-link>\r\n    , W3, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/WCAG22/Understanding/animation-from-interactions\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      2.3.3 Animation from interactions\r\n    </ic-link>\r\n    , W3, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/WCAG22/Understanding/keyboard\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      2.1.1 Keyboard\r\n    </ic-link>\r\n    , W3, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/WCAG22/Understanding/keyboard-no-exception\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      2.1.3 Keyboard No Exception\r\n    </ic-link>\r\n    , W3, accessed March 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/back-to-top/accessibility",
      "date": "2024-04-15",
      "title": "Back to top",
      "status": "BETA",
      "subTitle": "The back to top component helps people quickly return to the top of a long page.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/back-to-top",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/back-to-top"
        },
        {
          "title": "Code",
          "path": "/components/back-to-top/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/back-to-top/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\back-to-top\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.271Z",
        "lastModified": "2024-05-20T13:20:43.271Z",
        "size": 2941,
        "formattedSize": "2.9 KB"
      }
    },
    {
      "id": "components\\back-to-top\\codex",
      "contents": "\r\nimport { IcButton } from \"@ukic/react\";\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-back-to-top target=\"main\" />`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcBackToTop target=\"main\" />`,\r\n  },\r\n];\r\n\r\n## Component demo\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <IcButton\r\n    variant=\"secondary\"\r\n    onClick={() => {\r\n      window.scrollTo(0, document.body.scrollHeight);\r\n    }}\r\n  >\r\n    Show Back to top\r\n  </IcButton>\r\n</ComponentPreview>\r\n\r\n## Back to top details\r\n\r\n<ComponentDetails component=\"ic-back-to-top\" />\r\n",
      "path": "/components/back-to-top/code",
      "date": "2023-02-03",
      "title": "Back to top",
      "status": "BETA",
      "subTitle": "The back to top component helps people quickly return to the top of a long page.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/back-to-top",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/back-to-top"
        },
        {
          "title": "Code",
          "path": "/components/back-to-top/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/back-to-top/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\back-to-top\\code.mdx",
        "createdAt": "2024-04-04T12:41:43.748Z",
        "lastModified": "2024-04-04T12:41:43.748Z",
        "size": 1120,
        "formattedSize": "1.1 KB"
      }
    },
    {
      "id": "components\\back-to-top\\guidancex",
      "contents": "\r\nimport { IcTypography, IcButton } from \"@ukic/react\";\r\nimport backToTopFig1 from \"./images/fig-1-do-show-the-back-to-top-button-on-the-bottom-right-hand-side.png\";\r\nimport backToTopFig2 from \"./images/fig-2-do-not-show-the-back-to-top-button-on-a-non-scrollable-page.png\";\r\nimport backToTopFig3 from \"./images/fig-3-dont-use-other-buttons-for-back-to-top.png\";\r\nimport backToTopFig4 from \"./images/fig-4-dont-show-back-to-top-anywhere-other-than-the-bottom-right.png\";\r\nimport backToTopFig5 from \"./images/fig-5-anchored-on-footer.png\";\r\n\r\n## Introduction\r\n\r\nAn example of the back to top component.\r\n\r\n<div id=\"scroll-to-target\" style={{ position: \"absolute\", top: \"-50px\" }}>\r\n  <IcTypography>Top of page</IcTypography>\r\n</div>\r\n\r\n<ComponentPreview>\r\n  <IcButton\r\n    onClick={() => {\r\n      window.scrollTo(0, document.body.scrollHeight);\r\n    }}\r\n  >\r\n    Show Back to top component\r\n  </IcButton>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse this component for pages with a lot of content that requires scrolling, such as intranets, reports and content-heavy apps.\r\n\r\nConsider using it on all apps to improve usability for everyone, including keyboard-only and some assistive technology users.\r\n\r\n<DoDontCaution\r\n  imageSrc={backToTopFig1}\r\n  imageAlt=\"An example page that is scrolled half way down and showing an overlaid back to top button in the bottom right-hand side.\"\r\n  state=\"good\"\r\n  caption=\"Display the back to top button when a page has been scrolled.\"\r\n/>\r\n\r\n## When not to use\r\n\r\nDon't use when the page is designed to fill the viewport without scrolling.\r\n\r\nDon't display the back to top button when the page is already scrolled to the top.\r\n\r\n<DoDontCaution\r\n  imageSrc={backToTopFig2}\r\n  imageAlt=\"An example page that fits within the viewport without scrolling. A back to top button is overlaid in the bottom right-hand side.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t show a back to top button when the page does not require scrolling, or is already scrolled to the top of the page.\"\r\n/>\r\n\r\nOnly use the provided back to top component. Don't use any other button in place of the back to top component.\r\n\r\n<DoDontCaution\r\n  imageSrc={backToTopFig3}\r\n  imageAlt=\"An example page that is scrolled half way down and displays a primary button reading ‘Back to top’ in the bottom right corner instead of the back to top component.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t use any other component for providing back to top functionality. Use the back to top button.\"\r\n/>\r\n\r\n## Interaction behaviour\r\n\r\nThe back to top button targets the `main` region in your code.\r\n\r\nAvoid setting focus to the top of the `body` because users will have to navigate through the header and navigation.\r\n\r\n## Layout and placement\r\n\r\nDon’t place the back to top button anywhere else as it may obscure important information or interactive components.\r\n\r\n<DoDontCaution\r\n  imageSrc={backToTopFig4}\r\n  imageAlt=\"An example page that is scrolled halfway that shows a back to top button overlaid in the bottom left-hand corner of the screen. The button obscures a list of filters that appear behind it.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t show the back to top button anywhere other than the right-hand side as it may obscure other content.  \"\r\n/>\r\n\r\nWhen the bottom of the page is reached, the back to top button anchors into place above the [footer](/components/footer).\r\n\r\n<DoDontCaution\r\n  imageSrc={backToTopFig5}\r\n  imageAlt=\"An example page that is scrolled all the way to the bottom showing a footer component with the back to top button positioned above it.\"\r\n  state=\"good\"\r\n  caption=\"The back to top button anchors above the footer when scrolled to the bottom of the page.\"\r\n/>\r\n\r\n## Motion\r\n\r\nWhen clicked, the component should navigate to the top of the page without any scrolling animation.\r\n",
      "path": "/components/back-to-top",
      "navPriority": 3,
      "date": "2023-02-03",
      "title": "Back to top",
      "status": "BETA",
      "subTitle": "The back to top component helps people quickly return to the top of a long page.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/back-to-top",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/back-to-top"
        },
        {
          "title": "Code",
          "path": "/components/back-to-top/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/back-to-top/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\back-to-top\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.974Z",
        "lastModified": "2024-06-04T07:48:34.974Z",
        "size": 4352,
        "formattedSize": "4.3 KB"
      }
    },
    {
      "id": "components\\badge\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nBadges provide people with a quick alert of indicating that something new is present or that something has changed. These should always be supplementary methods of conveying the information as they can be hard for everyone to understand their meaning. It is always best to show the information the badge represents in full elsewhere so that it can be understandable by everyone.\r\n\r\n## For Assistive Technology\r\n\r\nAs badges can be displayed or update due to a change in information, such as the number of new emails in an inbox, it is important to make this status change announced by a screen reader. Applying a live region will make sure that a screen reader will announce the change as it happens without requiring the element to be in focus.\r\n\r\nBadges allow an accessible label to be provided to add context to what is shown visibly. This can help people who use screen readers understand it better as they may not be able to perceive the visual context of the badge. For example, a badge showing 10 new notifications on an inbox button may be understandable to a sighted user from just the number ‘10’ on the visible label. However, it may aid a screen reader user to include ‘10 new notifications’ in its accessible label. Just make sure to always include the visible label within the accessible label.\r\n\r\n## Based on\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.nngroup.com/articles/indicators-validations-notifications/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Indicators, validations and notifications: Pick the correct communication\r\n      option\r\n    </ic-link>\r\n    , Nielsen Norman Group, published 26 July 2015, accessed August 2023\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/badge/accessibility",
      "date": "2024-04-15",
      "title": "Badge",
      "status": "BETA",
      "subTitle": "Badges are attached to other components to provide an indication that something new is available, or that something has changed.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/badge",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/badge"
        },
        {
          "title": "Code",
          "path": "/components/badge/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/badge/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\badge\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.271Z",
        "lastModified": "2024-05-20T13:20:43.271Z",
        "size": 2498,
        "formattedSize": "2.4 KB"
      }
    },
    {
      "id": "components\\badge\\codex",
      "contents": "\r\nimport {\r\n  IcButton,\r\n  IcBadge,\r\n  SlottedSVG,\r\n  IcChip,\r\n  IcTab,\r\n  IcTabPanel,\r\n  IcTabContext,\r\n  IcTabGroup,\r\n} from \"@ukic/react\";\r\nimport { useState } from \"react\";\r\n\r\n## Component demo\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button variant=\"secondary\" style=\"margin-right:16px\">\r\n  <ic-badge       \r\n    text-label=\"1000\"\r\n    max-number=\"99\"\r\n    slot=\"badge\"\r\n    variant=\"info\"\r\n  >\r\n  </ic-badge>\r\n  Coffee orders\r\n</ic-button>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcButton variant=\"secondary\" style={{marginRight:\"16px\"}}>\r\n  <IcBadge\r\n    textLabel=\"1000\"\r\n    maxNumber=\"99\"\r\n    slot=\"badge\"\r\n    variant=\"info\"\r\n  />\r\n  Coffee orders\r\n</IcButton>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDefault}>\r\n  <IcButton variant=\"secondary\" style={{ marginRight: \"16px\" }}>\r\n    <IcBadge textLabel=\"1000\" maxNumber=\"99\" slot=\"badge\" variant=\"info\" />\r\n    Coffee orders\r\n  </IcButton>\r\n</ComponentPreview>\r\n\r\n## Badge details\r\n\r\n<ComponentDetails component=\"ic-badge\" />\r\n\r\n## Variants\r\n\r\n### Sizes\r\n\r\nexport const snippetsSizes = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button size=\"small\" variant=\"secondary\" style=\"margin-right:16px\">\r\n  <ic-badge size=\"small\" text-label=\"8\" slot=\"badge\" variant=\"info\"></ic-badge>\r\n  Coffee orders\r\n</ic-button>\r\n<ic-button variant=\"secondary\" style=\"margin-right:16px\">\r\n  <ic-badge text-label=\"8\" slot=\"badge\" variant=\"info\"></ic-badge>\r\n  Coffee orders\r\n</ic-button>\r\n<ic-button size=\"large\" variant=\"secondary\" style=\"margin-right:16px\">\r\n  <ic-badge size=\"large\" text-label=\"8\" slot=\"badge\" variant=\"info\"></ic-badge>\r\n  Coffee orders\r\n</ic-button>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcButton size=\"small\" variant=\"secondary\">\r\n  <IcBadge size=\"small\" textLabel=\"8\" slot=\"badge\" variant=\"info\"/>\r\n  Coffee orders\r\n</IcButton>\r\n<IcButton variant=\"secondary\">\r\n  <IcBadge textLabel=\"8\" slot=\"badge\" variant=\"info\"/>\r\n  Coffee orders\r\n</IcButton>\r\n<IcButton size=\"large\" variant=\"secondary\">\r\n  <IcBadge size=\"large\" textLabel=\"8\" slot=\"badge\" variant=\"info\"/>\r\n  Coffee orders\r\n</IcButton>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsSizes}>\r\n  <IcButton size=\"small\" variant=\"secondary\" style={{ marginRight: \"16px\" }}>\r\n    <IcBadge textLabel=\"8\" slot=\"badge\" variant=\"info\" size=\"small\" />\r\n    Coffee orders\r\n  </IcButton>\r\n  <IcButton variant=\"secondary\" style={{ marginRight: \"16px\" }}>\r\n    <IcBadge textLabel=\"8\" slot=\"badge\" variant=\"info\" size=\"default\" />\r\n    Coffee orders\r\n  </IcButton>\r\n  <IcButton size=\"large\" variant=\"secondary\">\r\n    <IcBadge textLabel=\"8\" slot=\"badge\" variant=\"info\" size=\"large\" />\r\n    Coffee orders\r\n  </IcButton>\r\n</ComponentPreview>\r\n\r\n### Status\r\n\r\nexport const snippetsStatus = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button variant=\"secondary\" style=\"margin-right:16px\">\r\n  <ic-badge slot=\"badge\" text-label=\"8\" variant=\"neutral\"></ic-badge>\r\n  Coffee orders\r\n</ic-button>\r\n<ic-button variant=\"secondary\" style=\"margin-right:16px\">\r\n  <ic-badge slot=\"badge\" text-label=\"New\" variant=\"info\"></ic-badge>\r\n  Coffee orders\r\n</ic-button>\r\n<ic-button variant=\"secondary\" style=\"margin-right:16px\">\r\n  <ic-badge slot=\"badge\" text-label=\"Unavailable\" variant=\"error\"></ic-badge>\r\n  Coffee orders\r\n</ic-button>\r\n<ic-button variant=\"secondary\" style=\"margin-right:16px\">\r\n  <ic-badge slot=\"badge\" text-label=\"Available\" variant=\"success\"></ic-badge>\r\n  Coffee orders\r\n</ic-button>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcButton variant=\"secondary\" style={{marginRight:\"16px\"}}>\r\n  <IcBadge slot=\"badge\" textLabel=\"8\" variant=\"neutral\"/>\r\n  Coffee orders\r\n</IcButton>\r\n<IcButton variant=\"secondary\" style={{marginRight:\"16px\"}}>\r\n  <IcBadge slot=\"badge\" textLabel=\"New\" variant=\"info\"/>\r\n  Coffee orders\r\n</IcButton>\r\n<IcButton variant=\"secondary\" style={{marginRight:\"16px\"}}>\r\n  <IcBadge slot=\"badge\" textLabel=\"Unavailable\" variant=\"error\"/>\r\n  Coffee orders\r\n</IcButton>\r\n<IcButton variant=\"secondary\" style={{marginRight:\"16px\"}}>\r\n  <IcBadge slot=\"badge\" textLabel=\"Available\" variant=\"success\"/>\r\n  Coffee orders\r\n</IcButton>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsStatus}>\r\n  <IcButton variant=\"secondary\" style={{ marginRight: \"16px\" }}>\r\n    <IcBadge slot=\"badge\" textLabel=\"8\" variant=\"neutral\" />\r\n    Coffee orders\r\n  </IcButton>\r\n  <IcButton variant=\"secondary\" style={{ marginRight: \"16px\" }}>\r\n    <IcBadge slot=\"badge\" textLabel=\"New\" variant=\"info\" />\r\n    Coffee orders\r\n  </IcButton>\r\n  <IcButton variant=\"secondary\" style={{ marginRight: \"16px\" }}>\r\n    <IcBadge slot=\"badge\" textLabel=\"Unavailable\" variant=\"error\" />\r\n    Coffee orders\r\n  </IcButton>\r\n  <IcButton variant=\"secondary\" style={{ marginRight: \"16px\" }}>\r\n    <IcBadge slot=\"badge\" textLabel=\"Available\" variant=\"success\" />\r\n    Coffee orders\r\n  </IcButton>\r\n</ComponentPreview>\r\n\r\n### Types\r\n\r\nexport const snippetsInformation = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button variant=\"secondary\" style=\"margin-right:16px\">\r\n  <ic-badge slot=\"badge\" type=\"text\" text-label=\"8\" variant=\"info\"></ic-badge>\r\n  Coffee orders\r\n</ic-button>\r\n<ic-button variant=\"secondary\" style=\"margin-right:16px\">\r\n  <ic-badge slot=\"badge\" type=\"dot\" variant=\"info\"></ic-badge>\r\n  Coffee orders\r\n</ic-button>\r\n<ic-button variant=\"secondary\" style=\"margin-right:16px\">\r\n<ic-badge type=\"icon\" slot=\"badge\" variant=\"info\">\r\n  <svg\r\n    slot=\"badge-icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    aria-label=\"retry\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path\r\n      d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\r\n    />\r\n  </svg>\r\n</ic-badge> \r\n  Coffee orders\r\n</ic-button>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcButton variant=\"secondary\" style={{marginRight:\"16px\"}}>\r\n  <IcBadge slot=\"badge\" type=\"text\" textLabel=\"8\" variant=\"info\"/>\r\n  Coffee orders\r\n</IcButton>\r\n<IcButton variant=\"secondary\" style={{marginRight:\"16px\"}}>\r\n  <IcBadge slot=\"badge\" type=\"dot\" variant=\"info\"/>\r\n  Coffee orders\r\n</IcButton>\r\n<IcButton variant=\"secondary\" style={{marginRight:\"16px\"}}>\r\n  <IcBadge type=\"icon\" slot=\"badge\" variant=\"info\">\r\n    <svg\r\n      slot=\"badge-icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      aria-label=\"retry\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path\r\n        d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\r\n      />\r\n    </svg>\r\n  </IcBadge>\r\n  Coffee orders\r\n</IcButton>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsInformation}>\r\n  <div style={{ padding: \"16px\" }}>\r\n    <IcButton variant=\"secondary\" style={{ marginRight: \"16px\" }}>\r\n      <IcBadge textLabel=\"8\" slot=\"badge\" type=\"text\" variant=\"info\" />\r\n      Coffee orders\r\n    </IcButton>\r\n  </div>\r\n  <div style={{ padding: \"16px\" }}>\r\n    <IcButton variant=\"secondary\" style={{ marginRight: \"16px\" }}>\r\n      <IcBadge type=\"dot\" slot=\"badge\" variant=\"info\" />\r\n      Coffee orders\r\n    </IcButton>\r\n  </div>\r\n  <div style={{ padding: \"16px\" }}>\r\n    <IcButton variant=\"secondary\" style={{ marginRight: \"16px\" }}>\r\n      <IcBadge type=\"icon\" slot=\"badge\" variant=\"info\">\r\n        <SlottedSVG\r\n          width=\"24px\"\r\n          height=\"24px\"\r\n          slot=\"badge-icon\"\r\n          viewBox=\"0 0 24 24\"\r\n          aria-label=\"retry\"\r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n          <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\r\n        </SlottedSVG>\r\n      </IcBadge>\r\n      Coffee orders\r\n    </IcButton>\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Max number\r\n\r\nexport const snippetsMaxNumber = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<div style=\"padding:16px;\">\r\n  <ic-button variant=\"secondary\" style=\"margin-right:16px\">\r\n    <ic-badge \r\n      text-label=\"1000\" \r\n      max-number=\"99\" \r\n      slot=\"badge\" \r\n      variant=\"info\"\r\n    >\r\n    </ic-badge>\r\n    Coffee orders\r\n  </ic-button>\r\n</div>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<div style={{padding:\"16px\"}}>\r\n  <IcButton variant=\"secondary\" style={{marginRight:\"16px\"}}>\r\n    <IcBadge\r\n      textLabel=\"1000\"\r\n      maxNumber=\"99\"\r\n      slot=\"badge\"\r\n      variant=\"info\"\r\n    />\r\n    Coffee orders\r\n  </IcButton>\r\n</div>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsMaxNumber}>\r\n  <div style={{ padding: \"16px\" }}>\r\n    <IcButton variant=\"secondary\" style={{ marginRight: \"16px\" }}>\r\n      <IcBadge textLabel=\"1000\" maxNumber=\"99\" slot=\"badge\" variant=\"info\" />\r\n      Coffee orders\r\n    </IcButton>\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Positioning\r\n\r\nexport const snippetsNear = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<div style=\"padding:16px;\">\r\n  <ic-chip label=\"Americano\" style=\"margin-right:16px;\">\r\n    <ic-badge type=\"icon\" slot=\"badge\" position=\"near\" variant=\"success\">\r\n      <svg\r\n        slot=\"badge-icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        aria-label=\"success\"\r\n      >\r\n        <path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/>\r\n      </svg> \r\n    </ic-badge>\r\n  </ic-chip>\r\n    <ic-chip label=\"Americano\" style=\"margin-right:16px;\">\r\n    <ic-badge type=\"icon\" slot=\"badge\" position=\"far\" variant=\"success\">\r\n      <svg\r\n        slot=\"badge-icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        aria-label=\"success\"\r\n      >\r\n        <path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/>\r\n      </svg> \r\n    </ic-badge>\r\n  </ic-chip>\r\n</div>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<div style={{padding:\"16px\"}}>\r\n  <IcChip label=\"Americano\" style={{marginRight:\"16px\"}}>\r\n    <IcBadge type=\"icon\" slot=\"badge\" position=\"near\" variant=\"success\">\r\n      <svg\r\n        slot=\"badge-icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        aria-label=\"success\"\r\n      >\r\n        <path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/>\r\n      </svg> \r\n    </IcBadge>\r\n  </IcChip>\r\n    <IcChip label=\"Americano\" style={{marginRight:\"16px\"}}>\r\n    <IcBadge type=\"icon\" slot=\"badge\" position=\"far\" variant=\"success\">\r\n      <svg\r\n        slot=\"badge-icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        aria-label=\"success\"\r\n      >\r\n        <path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/>\r\n      </svg>\r\n    </IcBadge> \r\n  </IcChip>\r\n</div>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsNear}>\r\n  <div style={{ display: \"grid\" }}>\r\n    <div style={{ padding: \"16px\" }}>\r\n      <IcChip label=\"Americano\" style={{ marginRight: \"16px\" }}>\r\n        <IcBadge type=\"icon\" slot=\"badge\" position=\"near\" variant=\"success\">\r\n          <SlottedSVG\r\n            width=\"24px\"\r\n            height=\"24px\"\r\n            slot=\"badge-icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            aria-label=\"success\"\r\n          >\r\n            <path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" />\r\n          </SlottedSVG>\r\n        </IcBadge>\r\n      </IcChip>\r\n      <IcChip label=\"Americano\" style={{ marginRight: \"16px\" }}>\r\n        <IcBadge type=\"icon\" slot=\"badge\" position=\"far\" variant=\"success\">\r\n          <SlottedSVG\r\n            width=\"24px\"\r\n            height=\"24px\"\r\n            slot=\"badge-icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            aria-label=\"success\"\r\n          >\r\n            <path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" />\r\n          </SlottedSVG>\r\n        </IcBadge>\r\n      </IcChip>\r\n    </div>\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Position inline\r\n\r\nexport const snippetsInline = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-tab-context>\r\n  <ic-tab-group label=\"Example tab group\">\r\n    <ic-tab> About\r\n    </ic-tab>\r\n    <ic-tab>\r\n    Ingredients\r\n    </ic-tab>\r\n    <ic-tab>\r\n    Orders\r\n      <ic-badge\r\n        text-label=\"8\"\r\n        slot=\"badge\"\r\n        position=\"inline\"\r\n        size=\"large\"\r\n        accessible-label=\"1 notification found\"\r\n        variant=\"info\"\r\n      >\r\n      </ic-badge>\r\n    </ic-tab>\r\n  </ic-tab-group>\r\n  <ic-tab-panel>About page</ic-tab-panel>\r\n  <ic-tab-panel>Ingredients page</ic-tab-panel>\r\n  <ic-tab-panel>Orders page</ic-tab-panel>\r\n</ic-tab-context>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTabContext>\r\n  <IcTabGroup label=\"Example tab group\">\r\n    <IcTab>\r\n    About\r\n    </IcTab>\r\n    <IcTab>\r\n    Ingredients\r\n    </IcTab>\r\n    <IcTab>\r\n    Orders\r\n      <IcBadge\r\n        textLabel=\"8\"\r\n        slot=\"badge\"\r\n        position=\"inline\"\r\n        size=\"large\"\r\n        accessibleLabel=\"1 notification found\"\r\n        variant=\"info\"\r\n      />\r\n    </IcTab>\r\n  </IcTabGroup>\r\n  <IcTabPanel>About page</IcTabPanel>\r\n  <IcTabPanel>Ingredients page</IcTabPanel>\r\n  <IcTabPanel>Orders page</IcTabPanel>\r\n</IcTabContext>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsInline}>\r\n  <IcTabContext>\r\n    <IcTabGroup label=\"Example tab group\">\r\n      <IcTab>About</IcTab>\r\n      <IcTab>Ingredients</IcTab>\r\n      <IcTab>\r\n        Orders\r\n        <IcBadge\r\n          textLabel=\"8\"\r\n          slot=\"badge\"\r\n          position=\"inline\"\r\n          size=\"large\"\r\n          accessibleLabel=\"1 notification found\"\r\n          variant=\"info\"\r\n        />\r\n      </IcTab>\r\n    </IcTabGroup>\r\n    <IcTabPanel>About page</IcTabPanel>\r\n    <IcTabPanel>Ingredients page</IcTabPanel>\r\n    <IcTabPanel>Orders page</IcTabPanel>\r\n  </IcTabContext>\r\n</ComponentPreview>\r\n\r\n### Hide and show badge\r\n\r\nClick the button to hide and show the badge.\r\n\r\nexport const snippetsHideBadge = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<script>\r\n  function showHideBadge() {\r\n    badge = document.querySelector(\"ic-badge\");\r\n    if (badge.classList.contains(\"show\")) {\r\n      badge.visible = false;\r\n    } else {\r\n      badge.visible = true;\r\n    }\r\n  }\r\n</script>\r\n<div style=\"padding:16px;\">\r\n  <ic-button variant=\"secondary\" onclick=\"showHideBadge()\">\r\n    <ic-badge text-label=\"8\" slot=\"badge\"></ic-badge>\r\n    Coffee orders\r\n  </ic-button>\r\n</div> `,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `export const ToggleBadge = () => {\r\n  const [showBadge, setShowBadge] = useState(false);\r\n  const handleShowHideBadge = () => {\r\n    setShowBadge(!showBadge);\r\n  };\r\n  return (\r\n    <div style={{ padding: '16px' }}>\r\n      <IcButton variant=\"secondary\" onClick={handleShowHideBadge}>\r\n        <IcBadge\r\n          variant=\"info\"\r\n          textLabel=\"8\"\r\n          slot=\"badge\"\r\n          visible={showBadge}\r\n        />\r\n        Coffee orders\r\n      </IcButton>\r\n    </div>\r\n  );\r\n};`,\r\n  },\r\n];\r\n\r\nexport const ToggleBadge = () => {\r\n  const [showBadge, setShowBadge] = useState(false);\r\n  const handleShowHideBadge = () => {\r\n    setShowBadge(!showBadge);\r\n  };\r\n  return (\r\n    <div style={{ padding: \"16px\" }}>\r\n      <IcButton variant=\"secondary\" onClick={handleShowHideBadge}>\r\n        <IcBadge\r\n          variant=\"info\"\r\n          textLabel=\"8\"\r\n          slot=\"badge\"\r\n          visible={showBadge}\r\n        />\r\n        Coffee orders\r\n      </IcButton>\r\n    </div>\r\n  );\r\n};\r\n\r\n<ComponentPreview\r\n  style={{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  }}\r\n  snippets={snippetsHideBadge}\r\n>\r\n  <ToggleBadge />\r\n</ComponentPreview>\r\n\r\n### Accessible label\r\n\r\nexport const snippetsAccessibleLabel = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<div style=\"padding:16px;\">\r\n  <ic-button variant=\"secondary\" style=\"margin-right:16px\"> \r\n    <ic-badge\r\n      text-label=\"8\"\r\n      slot=\"badge\"\r\n      size=\"large\"\r\n      variant=\"info\"\r\n      accessible-label=\"8 coffee orders found\"\r\n    >\r\n    </ic-badge>\r\n    Coffee orders\r\n  </ic-button>\r\n</div>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<div style={{padding:\"16px\"}}>\r\n  <IcButton variant=\"secondary\" style={{marginRight:\"16px\"}}>\r\n    <IcBadge\r\n      textLabel=\"8\"\r\n      slot=\"badge\"\r\n      size=\"large\"\r\n      variant=\"info\"\r\n      accessibleLabel=\"8 coffee orders found\"\r\n    />\r\n    Coffee orders\r\n  </IcButton>\r\n</div>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsAccessibleLabel}>\r\n  <div style={{ padding: \"16px\" }}>\r\n    <IcButton variant=\"secondary\" style={{ marginRight: \"16px\" }}>\r\n      <IcBadge\r\n        textLabel=\"8\"\r\n        slot=\"badge\"\r\n        size=\"large\"\r\n        accessibleLabel=\"8 coffee orders found\"\r\n        variant=\"info\"\r\n      />\r\n      Coffee orders\r\n    </IcButton>\r\n  </div>\r\n</ComponentPreview>\r\n",
      "path": "/components/badge/code",
      "date": "2024-02-02",
      "title": "Badge",
      "status": "BETA",
      "subTitle": "Badges are attached to other components to provide an indication that something new is available, or that something has changed.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/badge",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/badge"
        },
        {
          "title": "Code",
          "path": "/components/badge/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/badge/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\badge\\code.mdx",
        "createdAt": "2024-05-20T13:20:43.271Z",
        "lastModified": "2024-05-20T13:20:43.271Z",
        "size": 17718,
        "formattedSize": "17.3 KB"
      }
    },
    {
      "id": "components\\badge\\guidancex",
      "contents": "\r\nimport { IcBadge, IcButton } from \"@ukic/react\";\r\nimport badgeFig1 from \"./images/fig-1-badge-types.png\";\r\nimport badgeFig2 from \"./images/fig-2-badge-notification-on-inbox.png\";\r\nimport badgeFig3 from \"./images/fig-3-text-badge-notification-on-new-list-item.png\";\r\nimport badgeFig4 from \"./images/fig-4-dont-use-text-badge-with-long-label.png\";\r\nimport badgeFig5 from \"./images/fig-5-use-dot-badges.png\";\r\nimport badgeFig6 from \"./images/fig-6-use-icon-badges.png\";\r\nimport badgeFig7 from \"./images/fig-7-dont-add-badges-to-non-components.png\";\r\nimport badgeFig9 from \"./images/fig-9-use-plus-symbol-for-large-numbers.png\";\r\nimport badgeFig10 from \"./images/fig-10-use-high-contrast-combinations.png\";\r\nimport badgeFig11 from \"./images/fig-11-dont-use-low-conotrast-combinations.png\";\r\nimport badgeFig12 from \"./images/fig-12-badge-positioning.png\";\r\nimport badgeFig13 from \"./images/fig-13-understandable-badge-content.png\";\r\nimport badgeFig14 from \"./images/fig-14-confusing-badge-content.png\";\r\n\r\n## Introduction\r\n\r\nAn example of the badge component.\r\n\r\n<ComponentPreview>\r\n  <IcButton variant=\"secondary\" style={{ marginRight: \"16px\" }}>\r\n    <IcBadge textLabel=\"1000\" maxNumber=\"99\" slot=\"badge\" variant=\"info\" />\r\n    Coffee orders\r\n  </IcButton>\r\n</ComponentPreview>\r\n\r\n## Component variants\r\n\r\nThere are three types of badge available:\r\n\r\n- Text badge: Contains a short text label.\r\n- Icon badge: Contains an icon.\r\n- Dot badge: Badge background without any content.\r\n\r\n<DoDontCaution\r\n  imageSrc={badgeFig1}\r\n  imageAlt=\"Three types of badges applied to a secondary button titled ‘inbox’.\"\r\n  caption=\"Three types of badge are available: a text, icon and a dot badge.\"\r\n/>\r\n\r\n## When to use\r\n\r\nUse badges to draw attention to new or updated information. For example, use them to display an item count such as the number of new notifications, or to display an icon such as a padlock icon for locked content.\r\n\r\n<DoDontCaution\r\n  imageSrc={badgeFig2}\r\n  imageAlt=\"An example app showing a top navigation bar that includes an icon button for messages. A badge is displayed on the messages icon button showing the number 8 in its label.\"\r\n  state=\"good\"\r\n  caption=\"Use text badges to draw attention to new information such as new messages in an inbox.\"\r\n/>\r\n\r\nUse text badges to attach short labels to other information. For example, a badge could be used to highlight a new item in a list. Remember to keep labels concise.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={badgeFig3}\r\n    imageAlt=\"Use text badges to add short labels to other page elements.\"\r\n    state=\"good\"\r\n    caption=\"A list of cards showing coffee-themed blog posts. The top card has a text badge displaying the label ‘New’.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={badgeFig4}\r\n    imageAlt=\"A list of cards showing coffee themed blog posts. The top card has a text badge displaying the label ‘Brand new content’.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t use long labels in text badges.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nUse a dot badge to indicate that something has changed or updated without displaying a text label or icon.\r\n\r\nUse a text badge with numerical label to show the number of updates.\r\n\r\nFor example, use a dot badge to highlight that new comments are available to review, without giving the number of new comments.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={badgeFig5}\r\n    imageAlt=\"A side navigation component with an icon button for accessing an inbox. The icon button shows a dot badge indicating that something is available in the inbox.\"\r\n    state=\"good\"\r\n    caption=\"Use dot badges as a subtle way to indicate the presence of something without using a text label or an icon.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nOnly use badges when the component that it is attached to allows navigation to where the information related to the badge is stored. For example, a button that navigates someone to their inbox may show a badge displaying the number of new notifications that can be found there.\r\n\r\nOne exception is when using icon badges to add additional meaning only. For example, use an icon badge with a padlock icon to indicate that something may be currently locked due to access rights.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={badgeFig6}\r\n    imageAlt=\"A side navigation showing an icon button for accessing a trends page. An icon badge is displayed showing a closed padlock icon indicating that it can’t be accessed.\"\r\n    state=\"good\"\r\n    caption=\"Use icon badges to add additional information. Here a lock icon is used to indicate limited access rights to a feature of the app.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nUse badges to convey status, but make sure to use a status icon on the badge to provide a clear way of understanding the status. Don’t rely only on the colour of the badge to indicate status.\r\n\r\nFor example, use a success status dot badge to indicate that something has gone online, but always try to back up the status message with textual messaging elsewhere on the page.\r\n\r\n## When not to use\r\n\r\nDon’t use text badges as the only method of showing information, back the message up elsewhere. For example, show a toast notification for a new message whilst also adding a text badge to an inbox icon button.\r\n\r\nAvoid attaching badges to non-interactive components. Aim to attach a badge to components that allow navigation to the information that the badge relates to.\r\n\r\nDon’t use an icon badge as the only means of showing information on a non-navigational component. Always back up the message by including written messaging elsewhere on the page or showing feedback when the component is clicked.\r\n\r\nFor example, if using an icon badge with a lock symbol to indicate limited access to a navigation button, then allow the navigation button to still be clicked, but show a message stating that it is locked using a dialog or alert.\r\n\r\n<DoDontCaution\r\n  imageSrc={badgeFig7}\r\n  imageAlt=\"An example app with a hero component with the title ‘Come and taste our cool beans.’ A text badge is attached to the title and shows the number 8.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t add badges to non-navigational components as it can be hard to understand what it means.\"\r\n/>\r\n\r\nAvoid using badges as the only way of indicating status. Always show information about the status in full on the page that the badged component navigates to.\r\n\r\nDon’t use multiple badges to indicate many different statuses at the same time as it is hard to understand what the different statuses could mean. When using badges to convey status, use one type of status badge at a time.\r\n\r\nFor an application showing different system statuses, don’t place multiple status badges on a component to show separate information such as online status as well as system health status.\r\n\r\nFor example, on an app for displaying coffee orders to baristas, don’t show multiple status badges on a single order. Don't display a badge to indicate time since the order was placed as well as a badge to indicate remaining number of products.\r\n\r\nAvoid using badges with more than four characters, including the ‘+’ symbol. Use the ‘maxNumber’ property to limit what is displayed before a ‘+’ symbol is added. For example, this can be used to show ‘99+’ notifications.\r\n\r\n<DoDontCaution\r\n  imageSrc={badgeFig9}\r\n  imageAlt=\"An example app with a top navigation showing an icon button for an inbox page. The inbox icon button shows a badge that reads ‘99+’.\"\r\n  state=\"bad\"\r\n  caption=\"Use the maxNumber property to limit large numbers in text badges and display a ‘+’ symbol instead.\"\r\n/>\r\n\r\n## Colour\r\n\r\nUse the different colour variations of badges to make sure it achieves at least 3:1 colour contrast ratio with its background.\r\n\r\nSpecify a custom colour for the badge, but take care to make sure the colour contrast requirements are met.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={badgeFig10}\r\n    imageAlt=\"A secondary button on a white background showing a badge with a contrasting blue colour.\"\r\n    state=\"good\"\r\n    caption=\"Use high contrast badges so that they stand out against background colours.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={badgeFig11}\r\n    imageAlt=\"A secondary button on a white background showing a badge with a light grey colour that has a low contrast. The badge is difficult to make out.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t use colour combinations with low contrast ratios.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Sizing\r\n\r\nUse the same sized badge for the size of the component that the badge is attached to. For example, use a large sized badge with a large sized button.\r\n\r\n## Layout and placement\r\n\r\nBadges are always positioned in the top right corner of the component they are attached to. Make sure the badge overlaps the border of the component by adjusting the badge’s positioning using the ‘far’ and ‘near’ positioning options. For square components use the ‘far’ positioning option, and for rounded components use the ‘near’ positioning.\r\n\r\nFor components that are adjacent to one another, such as tabs, use ‘inline’ badge positioning so that the badge sits in line with the component’s label.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={badgeFig12}\r\n    imageAlt=\"A secondary button with a badge using ‘far’ positioning, a chip with a badge using ‘near’ positioning, and a tab bar containing a tab with a badge using ‘inline’ positioning.\"\r\n    state=\"good\"\r\n    caption=\"Use the badge positioning options to change where a badge is placed on a component.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Content\r\n\r\nMake sure that it is obvious what the badge relates to. Only use badges when the component it is attached to is labelled clearly to indicate what the badge references. For example, a numeric badge on an inbox is easily understandable, whereas a numeric badge on a menu button may not be as clear as to what the badge represents.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={badgeFig13}\r\n    imageAlt=\"An app showing a top navigation with an icon button for an inbox page. It shows a badge showing the number 5, representing the number of messages in the inbox.\"\r\n    state=\"good\"\r\n    caption=\"Use badges where it is understandable what they represent. In this example the badge clearly indicates 5 messages in the inbox.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={badgeFig14}\r\n    imageAlt=\"An app showing a menu button with a badge showing the number 5. It is not clear what the number 5 represents.\"\r\n    state=\"caution\"\r\n    caption=\"Avoid using them in cases where the badge’s meaning is difficult to understand. In this example it is not clear what the 5 in the badge represents.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nWhen using text badges, keep the text label short and only use a single word. Avoid using more than four characters on a text badge. For example, use a text badge to label something as ‘New’. Don’t use badges to add long labels; consider adding that information elsewhere instead.\r\n\r\nIf displaying numbers in a text badge, then set the ‘maxNumber’ property to limit the number of characters shown. This will show a ‘+’ symbol if the value is larger than the maxNumber.\r\n\r\nAlways provide an accessible label to add context to a badge’s label for the benefit of people who use a screen reader. Make sure to include any visible label within the accessible label.\r\n\r\nTake care when using icon badges so that the icon is immediately understandable to its context. Don’t use abstract or ambiguous icons as this will make it hard to understand what the badge represents.\r\n\r\n## Accessibility considerations\r\n\r\nAlways provide a badge with an accessible label to add context for people who use screen readers. For example, a text badge displaying the number 10 might have an accessible label that reads ‘10 new notifications’.\r\n\r\nWhen using an icon badge, make sure that the icon alt-text makes sense to its function and use the accessible label to add context.\r\n\r\nWhen setting a badge’s colour, make sure it meets the minimum contrast requirement of 3:1 for non-text elements.\r\n\r\nIf a badge is added to a page because of a status update, make sure that screen readers announce its presence by using a live region.\r\n",
      "path": "/components/badge",
      "navPriority": 4,
      "date": "2024-05-10",
      "title": "Badge",
      "status": "BETA",
      "subTitle": "Badges are attached to other components to provide an indication that something new is available, or that something has changed.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/badge",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/badge"
        },
        {
          "title": "Code",
          "path": "/components/badge/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/badge/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\badge\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.975Z",
        "lastModified": "2024-06-04T07:48:34.975Z",
        "size": 12912,
        "formattedSize": "12.6 KB"
      }
    },
    {
      "id": "components\\breadcrumbs\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nBreadcrumbs are formed out of a set of links. Each of these links is individually focusable. The breadcrumbs form a navigation landmark with an accessible name of ‘breadcrumbs’ so that they can be easily accessed.\r\n\r\n## For Assistive Technology\r\n\r\nThe separators between links are added programmatically so that they aren't read out by screen readers. The separators are purely decorative so don't need to be announced to the user.\r\n\r\n## Based on\r\n\r\nThe breadcrumbs component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/TR/wai-aria-practices/examples/landmarks/navigation.html#:~:text=Navigation%20landmarks%20provide%20a%20way,website%20or%20page%20content%20navigation\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Navigation landmarks\r\n    </ic-link>\r\n    , WCS, accessed May 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://scottaohara.github.io/a11y_breadcrumbs/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      A11y breadcrumbs\r\n    </ic-link>\r\n    , Scott O’Hara, accessed May 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.nngroup.com/articles/breadcrumbs/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Breadcrumbs\r\n    </ic-link>\r\n    , Nielsen Norman Group, accessed May 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://w3c.github.io/aria-practices/examples/breadcrumb/index.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Breadcrumbs authoring practices\r\n    </ic-link>\r\n    , WCS, accessed May 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/breadcrumb/accessibility",
      "date": "2024-04-15",
      "title": "Breadcrumb",
      "status": "BETA",
      "subTitle": "Breadcrumbs show someone where they are in an app’s hierarchy and provide a secondary method of navigating back to parent pages.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/breadcrumb",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/breadcrumb"
        },
        {
          "title": "Code",
          "path": "/components/breadcrumb/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/breadcrumb/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\breadcrumbs\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.271Z",
        "lastModified": "2024-05-20T13:20:43.271Z",
        "size": 2468,
        "formattedSize": "2.4 KB"
      }
    },
    {
      "id": "components\\breadcrumbs\\codex",
      "contents": "\r\nimport { IcBreadcrumbGroup, IcBreadcrumb, IcLink } from \"@ukic/react\";\r\n\r\nimport { NavLink, MemoryRouter } from \"react-router-dom\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-breadcrumb-group>\r\n  <ic-breadcrumb page-title=\"Home\" href=\"#\"></ic-breadcrumb>\r\n  <ic-breadcrumb page-title=\"Beverages\" href=\"#\"></ic-breadcrumb>\r\n  <ic-breadcrumb \r\n    current=\"true\" \r\n    page-title=\"Coffee\" \r\n    href=\"#\"\r\n  >\r\n  </ic-breadcrumb>\r\n</ic-breadcrumb-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcBreadcrumbGroup>\r\n  <IcBreadcrumb pageTitle=\"Home\" href=\"#\" />\r\n  <IcBreadcrumb pageTitle=\"Beverages\" href=\"#\" />\r\n  <IcBreadcrumb \r\n    current \r\n    pageTitle=\"Coffee\"\r\n    href=\"#\"\r\n  />\r\n</IcBreadcrumbGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <IcBreadcrumbGroup>\r\n    <IcBreadcrumb\r\n      pageTitle=\"Home\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcBreadcrumb\r\n      pageTitle=\"Beverages\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcBreadcrumb\r\n      current\r\n      pageTitle=\"Coffee\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n  </IcBreadcrumbGroup>\r\n</ComponentPreview>\r\n\r\n## Breadcrumb details\r\n\r\n<ComponentDetails component=\"ic-breadcrumb\" />\r\n\r\n## Breadcrumb group details\r\n\r\n<ComponentDetails component=\"ic-breadcrumb-group\" />\r\n\r\n## Variants\r\n\r\n### Back\r\n\r\nexport const back = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-breadcrumb-group back-breadcrumb-only=\"true\">\r\n  <ic-breadcrumb page-title=\"Home\" href=\"#\"></ic-breadcrumb>\r\n  <ic-breadcrumb page-title=\"Beverages\" href=\"#\"></ic-breadcrumb>\r\n  <ic-breadcrumb \r\n    current=\"true\" \r\n    page-title=\"Coffee\" \r\n    href=\"#\"\r\n  >\r\n  </ic-breadcrumb>\r\n</ic-breadcrumb-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcBreadcrumbGroup backBreadcrumbOnly>\r\n  <IcBreadcrumb pageTitle=\"Home\" href=\"#\" />\r\n  <IcBreadcrumb pageTitle=\"Beverages\" href=\"#\" />\r\n  <IcBreadcrumb \r\n    current \r\n    pageTitle=\"Coffee\"\r\n    href=\"#\"\r\n  />\r\n</IcBreadcrumbGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={back}>\r\n  <IcBreadcrumbGroup backBreadcrumbOnly>\r\n    <IcBreadcrumb\r\n      pageTitle=\"Home\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcBreadcrumb\r\n      pageTitle=\"Beverages\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcBreadcrumb\r\n      current\r\n      pageTitle=\"Coffee\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n  </IcBreadcrumbGroup>\r\n</ComponentPreview>\r\n\r\n### With icons\r\n\r\nexport const withIcons = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-breadcrumb-group>\r\n  <ic-breadcrumb page-title=\"Home\" href=\"#\">\r\n    <svg\r\n      slot=\"icon\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n    </svg>\r\n  </ic-breadcrumb>\r\n  <ic-breadcrumb page-title=\"Beverages\" href=\"#\">\r\n    <svg\r\n      slot=\"icon\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M20 3H4v10c0 2.21 1.79 4 4 4h6c2.21 0 4-1.79 4-4v-3h2c1.11 0 2-.9 2-2V5c0-1.11-.89-2-2-2zm0 5h-2V5h2v3zM4 19h16v2H4z\"\r\n        fill=\"currentColor\"\r\n      />\r\n    </svg>\r\n  </ic-breadcrumb>\r\n  <ic-breadcrumb \r\n    current=\"true\" \r\n    page-title=\"Coffee\" \r\n    href=\"#\"\r\n  >\r\n    <svg\r\n      slot=\"icon\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M18.5 3H6c-1.1 0-2 .9-2 2v5.71c0 3.83 2.95 7.18 6.78 7.29 3.96.12 7.22-3.06 7.22-7v-1h.5c1.93 0 3.5-1.57 3.5-3.5S20.43 3 18.5 3zM16 5v3H6V5h10zm2.5 3H18V5h.5c.83 0 1.5.67 1.5 1.5S19.33 8 18.5 8zM4 19h16v2H4v-2z\"\r\n        fill=\"currentColor\"\r\n      />\r\n    </svg>\r\n  </ic-breadcrumb>\r\n</ic-breadcrumb-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcBreadcrumbGroup>\r\n  <IcBreadcrumb pageTitle=\"Home\" href=\"#\">\r\n    <SlottedSVG\r\n      slot=\"icon\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n    </SlottedSVG>\r\n  </IcBreadcrumb>\r\n  <IcBreadcrumb pageTitle=\"Beverages\" href=\"#\">\r\n    <SlottedSVG\r\n      slot=\"icon\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M20 3H4v10c0 2.21 1.79 4 4 4h6c2.21 0 4-1.79 4-4v-3h2c1.11 0 2-.9 2-2V5c0-1.11-.89-2-2-2zm0 5h-2V5h2v3zM4 19h16v2H4z\"\r\n        fill=\"currentColor\"\r\n      />\r\n    </SlottedSVG>\r\n  </IcBreadcrumb>\r\n  <IcBreadcrumb \r\n    pageTitle=\"Coffee\" \r\n    current\r\n    href=\"#\"\r\n  >\r\n    <SlottedSVG\r\n      slot=\"icon\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M18.5 3H6c-1.1 0-2 .9-2 2v5.71c0 3.83 2.95 7.18 6.78 7.29 3.96.12 7.22-3.06 7.22-7v-1h.5c1.93 0 3.5-1.57 3.5-3.5S20.43 3 18.5 3zM16 5v3H6V5h10zm2.5 3H18V5h.5c.83 0 1.5.67 1.5 1.5S19.33 8 18.5 8zM4 19h16v2H4v-2z\"\r\n        fill=\"currentColor\"\r\n      />\r\n    </SlottedSVG>\r\n  </IcBreadcrumb>\r\n</IcBreadcrumbGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={withIcons}>\r\n  <IcBreadcrumbGroup>\r\n    <IcBreadcrumb pageTitle=\"Home\" href=\"#\" onClick={(e) => e.preventDefault()}>\r\n      <svg\r\n        slot=\"icon\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n      </svg>\r\n    </IcBreadcrumb>\r\n    <IcBreadcrumb\r\n      pageTitle=\"Beverages\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    >\r\n      <svg\r\n        slot=\"icon\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M20 3H4v10c0 2.21 1.79 4 4 4h6c2.21 0 4-1.79 4-4v-3h2c1.11 0 2-.9 2-2V5c0-1.11-.89-2-2-2zm0 5h-2V5h2v3zM4 19h16v2H4z\"\r\n          fill=\"currentColor\"\r\n        />\r\n      </svg>\r\n    </IcBreadcrumb>\r\n    <IcBreadcrumb\r\n      pageTitle=\"Coffee\"\r\n      current\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    >\r\n      <svg\r\n        slot=\"icon\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M18.5 3H6c-1.1 0-2 .9-2 2v5.71c0 3.83 2.95 7.18 6.78 7.29 3.96.12 7.22-3.06 7.22-7v-1h.5c1.93 0 3.5-1.57 3.5-3.5S20.43 3 18.5 3zM16 5v3H6V5h10zm2.5 3H18V5h.5c.83 0 1.5.67 1.5 1.5S19.33 8 18.5 8zM4 19h16v2H4v-2z\"\r\n          fill=\"currentColor\"\r\n        />\r\n      </svg>\r\n    </IcBreadcrumb>\r\n  </IcBreadcrumbGroup>\r\n</ComponentPreview>\r\n\r\n### Collapsed\r\n\r\nexport const collapsed = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: ` <ic-breadcrumb-group collapsed=\"true\">\r\n  <ic-breadcrumb page-title=\"Home\" href=\"#\"></ic-breadcrumb>\r\n  <ic-breadcrumb page-title=\"Beverages\" href=\"#\"></ic-breadcrumb>\r\n  <ic-breadcrumb \r\n      current=\"true\" \r\n      page-title=\"Coffee\" \r\n      href=\"#\"\r\n    >\r\n    </ic-breadcrumb>\r\n</ic-breadcrumb-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcBreadcrumbGroup collapsed>\r\n    <IcBreadcrumb pageTitle=\"Home\" href=\"#\" />\r\n    <IcBreadcrumb pageTitle=\"Beverages\" href=\"#\" />\r\n    <IcBreadcrumb \r\n      pageTitle=\"Coffee\" \r\n      current\r\n      href=\"#\"\r\n    />\r\n</IcBreadcrumbGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={collapsed}>\r\n  <IcBreadcrumbGroup collapsed>\r\n    <IcBreadcrumb\r\n      pageTitle=\"Home\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcBreadcrumb\r\n      pageTitle=\"Beverages\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcBreadcrumb\r\n      pageTitle=\"Coffee\"\r\n      current\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n  </IcBreadcrumbGroup>\r\n</ComponentPreview>\r\n\r\n### With React Router\r\n\r\nexport const withReactRouter = [\r\n  {\r\n    language: \"React\",\r\n    snippet: `<MemoryRouter initialEntries={[\"/\"]}>\r\n  <IcBreadcrumbGroup>\r\n    <IcBreadcrumb pageTitle=\"Home\">\r\n      <IcLink>\r\n        <NavLink slot=\"router-item\" to=\"/\">Home</NavLink>\r\n      </IcLink>\r\n    </IcBreadcrumb>\r\n    <IcBreadcrumb pageTitle=\"Beverages\">\r\n      <IcLink>\r\n        <NavLink slot=\"router-item\" to=\"/\">Beverages</NavLink>\r\n      </IcLink>\r\n    </IcBreadcrumb>\r\n    <IcBreadcrumb pageTitle=\"Coffee\" current>\r\n      <IcLink>\r\n        <NavLink to=\"/\" slot=\"router-item\">Coffee</NavLink>\r\n      </IcLink>\r\n    </IcBreadcrumb>\r\n  </IcBreadcrumbGroup>\r\n</MemoryRouter>\r\n`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={withReactRouter}>\r\n  <MemoryRouter initialEntries={[\"/\"]}>\r\n    <IcBreadcrumbGroup>\r\n      <IcBreadcrumb pageTitle=\"Home\">\r\n        <IcLink>\r\n          <NavLink slot=\"router-item\" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n        </IcLink>\r\n      </IcBreadcrumb>\r\n      <IcBreadcrumb pageTitle=\"Beverages\">\r\n        <IcLink>\r\n          <NavLink slot=\"router-item\" to=\"/\">\r\n            Beverages\r\n          </NavLink>\r\n        </IcLink>\r\n      </IcBreadcrumb>\r\n      <IcBreadcrumb pageTitle=\"Coffee\" current>\r\n        <IcLink>\r\n          <NavLink to=\"/\" slot=\"router-item\">\r\n            Coffee\r\n          </NavLink>\r\n        </IcLink>\r\n      </IcBreadcrumb>\r\n    </IcBreadcrumbGroup>\r\n  </MemoryRouter>\r\n</ComponentPreview>\r\n",
      "path": "/components/breadcrumb/code",
      "date": "2024-02-02",
      "title": "Breadcrumb",
      "status": "BETA",
      "subTitle": "Breadcrumbs show someone where they are in an app’s hierarchy and provide a secondary method of navigating back to parent pages.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/breadcrumb",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/breadcrumb"
        },
        {
          "title": "Code",
          "path": "/components/breadcrumb/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/breadcrumb/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\breadcrumbs\\code.mdx",
        "createdAt": "2024-04-04T12:41:43.795Z",
        "lastModified": "2024-04-04T12:41:43.795Z",
        "size": 10625,
        "formattedSize": "10.4 KB"
      }
    },
    {
      "id": "components\\breadcrumbs\\guidancex",
      "contents": "\r\nimport { IcBreadcrumbGroup, IcBreadcrumb } from \"@ukic/react\";\r\nimport breadcrumbsFig1 from \"./images/fig-1-use-breadcrumbs-as-a-secondary-navigation-method.png\";\r\nimport breadcrumbsFig2 from \"./images/fig-2-dont-use-breadcrumbs-for-shallow-app-structures.png\";\r\nimport breadcrumbsFig3 from \"./images/fig-3-dont-include-current-page-in-breadcrumbs.png\";\r\nimport breadcrumbsFig4 from \"./images/fig-4-use-contrast-breadcrumbs-for-different-backgrounds.png\";\r\n\r\n## Introduction\r\n\r\nAn example of the breadcrumbs component.\r\n\r\n<ComponentPreview>\r\n  <IcBreadcrumbGroup>\r\n    <IcBreadcrumb\r\n      pageTitle=\"Home\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcBreadcrumb\r\n      pageTitle=\"Beverages\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcBreadcrumb\r\n      current=\"true\"\r\n      pageTitle=\"Coffee\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n  </IcBreadcrumbGroup>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse breadcrumbs to describe an app’s hierarchy and where the current page sits within it. Use breadcrumbs for apps that have a large number of pages within a complex structure.\r\n\r\nShow the current page’s parents, grandparents and other ancestors so that the user can easily move back up the hierarchy. Always show a link to the app’s homepage as the top-level link in the breadcrumb component.\r\n\r\nUse breadcrumbs as a secondary navigation option to supplement the app’s main navigation method.\r\n\r\n<DoDontCaution\r\n  imageSrc={breadcrumbsFig1}\r\n  imageAlt=\"Above the page header is a breadcrumb component with links to parent pages for ‘Coffees’, ‘Beverages’ and ‘Home’. This is separate from the site navigation.\"\r\n  state=\"good\"\r\n  caption=\"A breadcrumb providing a secondary method of navigation that supplements the main navigation from the top navigation.\"\r\n/>\r\n\r\nUse the ‘back breadcrumb’ for apps with simple structures that are only one or two levels deep. Show the current page’s immediate parent in the back breadcrumb link.\r\n\r\nUse a condensed breadcrumb to hide the middle steps between the page’s parent and the homepage. However, always allow the condensed breadcrumb to be expanded to show the full path.\r\n\r\n## When not to use\r\n\r\nDon’t use breadcrumbs as the primary method of navigating through an app’s pages. Always include a global navigation method to allow any page to be easily accessed from any other page.\r\n\r\nDon’t use breadcrumbs to show the history of recently visited pages. Only use breadcrumbs to show the location of the current page within an app’s structure.\r\n\r\nDon’t use breadcrumbs if the app’s structure is only one or two pages deep. Use the ‘back breadcrumb’ or use a different method to indicate the page’s position.\r\n\r\n<DoDontCaution\r\n  imageSrc={breadcrumbsFig2}\r\n  imageAlt=\"Above the page header is a breadcrumb component with links to parent pages for ‘Coffee’ and ‘Home’.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t use breadcrumbs for apps with structures that are only one or two pages deep.\"\r\n/>\r\n\r\nDon’t include the current page as a link within the breadcrumbs. Instead use clear titling on the page itself to label the current page. If displaying the current page within the breadcrumb, then make sure it is not clickable.\r\n\r\n<DoDontCaution\r\n  imageSrc={breadcrumbsFig3}\r\n  imageAlt=\"An example app called ‘A whole latte love’ showing a page titled ‘Latte’. A breadcrumb exists in the page header that includes links to the current page ‘Latte’, and its ancestors ‘Coffee’, ‘Beverages’ and ‘Home’.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t include the current page as a link within the breadcrumb.\"\r\n/>\r\n\r\nAvoid showing more than six levels in a breadcrumb. Consider your app’s information architecture and whether the site’s structure can be flattened. If this can’t be achieved, use hub pages as the first link in a breadcrumb, which themselves provide a method of returning back to the homepage.\r\n\r\n## Colour\r\n\r\nAlways use the default appearance of breadcrumbs to ensure that the links are recognisable as links. However, use the light or dark appearance if breadcrumbs are positioned on different coloured backgrounds to ensure good colour contrast.\r\n\r\n<DoDontCaution\r\n  imageSrc={breadcrumbsFig4}\r\n  imageAlt=\"An example app called ‘A whole latte love’ that shows a page titled ‘Latte’. A hero banner sits at the top of the page with a dark blue background. A breadcrumb component that sits on top of the dark hero banner uses white styled links to achieve high contrast.\"\r\n  state=\"good\"\r\n  caption=\"Use contrast styling if using breadcrumbs on different coloured backgrounds.\"\r\n/>\r\n\r\n## Content\r\n\r\nMake sure that the breadcrumb label is the exact title of the page it links to.\r\n\r\n## Layout and placement\r\n\r\nAlways position breadcrumbs at the top of page content but below main navigation components such as the [top navigation](/components/top-navigation).\r\n\r\n## Related components\r\n\r\n- [Page header](/components/page-header)\r\n",
      "path": "/components/breadcrumb",
      "navPriority": 5,
      "date": "2023-02-03",
      "title": "Breadcrumb",
      "status": "BETA",
      "subTitle": "Breadcrumbs show someone where they are in an app’s hierarchy and provide a secondary method of navigating back to parent pages.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/breadcrumb",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/breadcrumb"
        },
        {
          "title": "Code",
          "path": "/components/breadcrumb/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/breadcrumb/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\breadcrumbs\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.977Z",
        "lastModified": "2024-06-04T07:48:34.977Z",
        "size": 5653,
        "formattedSize": "5.5 KB"
      }
    },
    {
      "id": "components\\buttons\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nWhen interacting with a button using the keyboard, the button is triggered using the **space** or **enter** key when the button is focused.\r\n\r\n## For Assistive Technology\r\n\r\nButtons use the role of `button` as opposed to `link` in order to help users of assistive technology understand that the button is performing an action on the page instead of navigating them to a new location.\r\n\r\n## Based on\r\n\r\nThe button component is based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Button role\r\n    </ic-link>\r\n    , MDN web docs, accessed January 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.deque.com/blog/accessible-aria-buttons/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Building Accessible Buttons with ARIA\r\n    </ic-link>\r\n    , Deque University, accessed January 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/button/accessibility",
      "date": "2024-04-15",
      "title": "Button",
      "status": "BETA",
      "subTitle": "Buttons are used to allow or encourage people to take an action.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/button",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/button"
        },
        {
          "title": "Code",
          "path": "/components/button/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/button/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\buttons\\accessibility.mdx",
        "createdAt": "2024-05-21T11:54:23.352Z",
        "lastModified": "2024-05-21T11:54:23.352Z",
        "size": 1747,
        "formattedSize": "1.7 KB"
      }
    },
    {
      "id": "components\\buttons\\codex",
      "contents": "\r\nimport { IcButton } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button id='my-button' variant=\"primary\">Add to order</ic-button>\r\n<ic-button variant=\"secondary\">View coffees</ic-button>\r\n<ic-button variant=\"tertiary\">Find out more</ic-button>\r\n<ic-button variant=\"destructive\">Cancel order</ic-button>\r\n<script>\r\n  const btn = document.querySelector('#my-button');\r\n  btn.addEventListener('click', (ev) => {\r\n    console.log(ev);\r\n  })\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcButton variant=\"primary\" onClick={(ev) => console.log(ev)}>Add to order</IcButton>\r\n  <IcButton variant=\"secondary\">View coffees</IcButton>\r\n  <IcButton variant=\"tertiary\">Find out more</IcButton>\r\n  <IcButton variant=\"destructive\">Cancel order</IcButton>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }} snippets={snippetsDefault}>\r\n  <IcButton variant=\"primary\" onClick={(ev) => console.log(ev)}>\r\n    Add to order\r\n  </IcButton>\r\n  <IcButton variant=\"secondary\">View coffees</IcButton>\r\n  <IcButton variant=\"tertiary\">Find out more</IcButton>\r\n  <IcButton variant=\"destructive\">Cancel order</IcButton>\r\n</ComponentPreview>\r\n\r\n## Button details\r\n\r\n<ComponentDetails component=\"ic-button\" />\r\n\r\n## Variants\r\n\r\n### Other states\r\n\r\nexport const snippetsOtherStates = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button variant=\"primary\" disabled=\"true\">Add to order</ic-button>\r\n<ic-button variant=\"secondary\" loading=\"true\">Loading button</ic-button>\r\n<ic-button variant=\"primary\" dropdown=\"true\">Add to order</ic-button>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcButton variant=\"primary\" disabled>Add to order</IcButton>\r\n<IcButton variant=\"secondary\" loading>Loading button</IcButton>\r\n<IcButton variant=\"primary\" dropdown>Add to order</IcButton>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }} snippets={snippetsOtherStates}>\r\n  <IcButton variant=\"primary\" disabled>\r\n    Add to order\r\n  </IcButton>\r\n  <IcButton variant=\"secondary\" loading>\r\n    Loading button\r\n  </IcButton>\r\n  <IcButton variant=\"primary\" dropdown>\r\n    Add to order\r\n  </IcButton>\r\n</ComponentPreview>\r\n\r\n### With icon\r\n\r\nexport const snippetsWithIcon = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button variant=\"primary\">\r\n  <svg\r\n    slot=\"left-icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n    >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\r\n    <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"></path>\r\n  </svg>Refresh order status\r\n</ic-button>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcButton variant=\"primary\">\r\n  <SlottedSVG\r\n    slot=\"left-icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n    >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\r\n    <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"></path>\r\n  </SlottedSVG>\r\n  Refresh order status\r\n</IcButton>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }} snippets={snippetsWithIcon}>\r\n  <IcButton variant=\"primary\">\r\n    Refresh order status\r\n    <svg\r\n      slot=\"left-icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\r\n    </svg>\r\n  </IcButton>\r\n</ComponentPreview>\r\n\r\n### Icon Button\r\n\r\nexport const snippetsIcon = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button variant=\"icon\" aria-label=\"refresh\">\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n    >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\r\n    <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"></path>\r\n  </svg>\r\n</ic-button>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcButton variant=\"icon\" aria-label=\"refresh\">\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n    >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\r\n    <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"></path>\r\n  </svg>\r\n</IcButton>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }} snippets={snippetsIcon}>\r\n  <IcButton variant=\"icon\" aria-label=\"refresh\">\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\r\n    </svg>\r\n  </IcButton>\r\n</ComponentPreview>\r\n\r\n### Sizing\r\n\r\nexport const snippetsSizing = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button variant=\"primary\" size=\"small\">Add to order</ic-button>\r\n<ic-button variant=\"primary\">Add to order</ic-button>\r\n<ic-button variant=\"primary\" size=\"large\">Add to order</ic-button>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcButton variant=\"primary\" size=\"small\">Add to order</IcButton>\r\n<IcButton variant=\"primary\">Add to order</IcButton>\r\n<IcButton variant=\"primary\" size=\"large\">Add to order</IcButton>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }} snippets={snippetsSizing}>\r\n  <IcButton variant=\"primary\" size=\"small\">\r\n    Add to order\r\n  </IcButton>\r\n  <IcButton variant=\"primary\">Add to order</IcButton>\r\n  <IcButton variant=\"primary\" size=\"large\">\r\n    Add to order\r\n  </IcButton>\r\n</ComponentPreview>\r\n\r\n### Colour variants\r\n\r\nexport const snippetsColour = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button variant=\"primary\">\r\n    Add to order\r\n    </ic-button>\r\n<ic-button variant=\"primary\" appearance=\"dark\">Add to order</ic-button>\r\n<ic-button variant=\"primary\" appearance=\"light\">Add to order</ic-button>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcButton variant=\"primary\">\r\n    Add to order\r\n    </IcButton>\r\n<IcButton variant=\"primary\" appearance=\"dark\">Add to order</IcButton>\r\n<IcButton variant=\"primary\" appearance=\"light\">Add to order</IcButton>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }} snippets={snippetsColour}>\r\n  <IcButton variant=\"primary\">Add to order</IcButton>\r\n  <IcButton variant=\"primary\" appearance=\"dark\">\r\n    Add to order\r\n  </IcButton>\r\n  <IcButton variant=\"primary\" appearance=\"light\">\r\n    Add to order\r\n  </IcButton>\r\n</ComponentPreview>\r\n\r\n### File upload\r\n\r\nexport const FileUpload = () => {\r\n  function updateFileList(fileArray) {\r\n    const fileList = [];\r\n    Array.from(fileArray).forEach((file) => {\r\n      fileList.push(file.name);\r\n    });\r\n    return fileList.join(\", \");\r\n  }\r\n  return (\r\n    <IcButton\r\n      variant=\"primary\"\r\n      fileUpload\r\n      accept=\".doc, text/plain, .json, .png\"\r\n      onClick={() =>\r\n        document.addEventListener(\"icFileSelection\", (event) =>\r\n          console.log(updateFileList(event.detail))\r\n        )\r\n      }\r\n    >\r\n      Upload File\r\n    </IcButton>\r\n  );\r\n};\r\n\r\nexport const snippetsFileUpload = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button\r\n  variant=\"primary\"\r\n  id=\"file-button\"\r\n  file-upload=\"true\"\r\n  accept=\".doc, text/plain, .json, .png\"\r\n>\r\n  Upload File\r\n</ic-button>\r\n<script>\r\n  var file;\r\n  onclick = document\r\n    .querySelector(\"#file-button\")\r\n    .addEventListener(\"icFileSelection\", (ev) => {\r\n      const fileArray = ev.detail;\r\n      const fileList = [];\r\n      Array.from(fileArray).forEach((file) => {\r\n        fileList.push(file.name);\r\n      });\r\n      console.log(fileList.join(\", \"));\r\n    });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `export const FileUpload = () => {\r\n  function updateFileList(fileArray) {\r\n    const fileList = [];\r\n    Array.from(fileArray).forEach((file) => {\r\n      fileList.push(file.name);\r\n    });\r\n    return fileList.join(\", \");\r\n  }\r\n  return (\r\n    <IcButton\r\n      variant=\"primary\"\r\n      fileUpload\r\n      accept=\".doc, text/plain, .json, .png\"\r\n      onClick={(event) =>\r\n        document.addEventListener(\"icFileSelection\", (event) =>\r\n          console.log(updateFileList(event.detail))\r\n        )\r\n      }\r\n    >\r\n      Upload File\r\n    </IcButton>\r\n  ); \r\n};`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsFileUpload}>\r\n  <FileUpload />\r\n</ComponentPreview>\r\n",
      "path": "/components/button/code",
      "date": "2024-03-13",
      "title": "Button",
      "status": "BETA",
      "subTitle": "Buttons are used to allow or encourage people to take an action.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/button",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/button"
        },
        {
          "title": "Code",
          "path": "/components/button/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/button/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\buttons\\code.mdx",
        "createdAt": "2024-04-04T12:41:43.826Z",
        "lastModified": "2024-04-04T12:41:43.826Z",
        "size": 9898,
        "formattedSize": "9.7 KB"
      }
    },
    {
      "id": "components\\buttons\\guidancex",
      "contents": "\r\nimport { IcButton } from \"@ukic/react\";\r\nimport buttonFig1 from \"./images/fig-1-use-buttons-to-complete-actions-on-the-page-such-as-adding-or-deleting-an-item-confirming-or-closing-a-dialog-or-as-a-tool-in-a-toolbar.png\";\r\nimport buttonFig2 from \"./images/fig-2-do-not-use-buttons-to-navigate-users-to-a-new-page.png\";\r\nimport buttonFig3 from \"./images/fig-3-use-contrast-variants-on-different-coloured-backgrounds-to-ensure-good-contrast-and-avoid-colours-clashing.png\";\r\nimport buttonFig4 from \"./images/fig-4-make-sure-to-use-the-correct-button-variant-to-meet-minimum-contrast-requirements.png\";\r\nimport buttonFig5 from \"./images/fig-5-use-the-correct-buttons-sizes-to-match-other-UI-component-sizes.png\";\r\nimport buttonFig6 from \"./images/fig-6-do-not-mix-different-sized-components.png\";\r\nimport buttonFig7 from \"./images/fig-7-use-large-buttons-for-standalone-higher-priority-actions.png\";\r\nimport buttonFig8 from \"./images/fig-8-use-a-primary-button-for-the-most-important-action-or-when-you-want-to-influence-an-action.png\";\r\nimport buttonFig9 from \"./images/fig-9-two-primary-buttons-make-it-less-clear-what-the-expected-action-is.png\";\r\nimport buttonFig10 from \"./images/fig-10-use-multiple-secondary-buttons-to-provide-lower-priority-actions-and-a-primary-button-for-the-higher-priority-action.png\";\r\nimport buttonFig11 from \"./images/fig-11-use-tertiary-buttons-to-provide-a-dismissive-or-cancellation-action-when-paired-with-a-primary-button-that-provides-the-main-call-to-action.png\";\r\nimport buttonFig12 from \"./images/fig-12-use-a-primary-button-to-highlight-the-key-action-in-a-button-group.png\";\r\nimport buttonFig13 from \"./images/fig-13-do-not-use-different-button-types-for-different-actions-in-a-group.png\";\r\nimport buttonFig14 from \"./images/fig-14-position-primary-buttons-to-the-left-when-on-a-page.png\";\r\nimport buttonFig15 from \"./images/fig-15-do-position-primary-buttons-to-the-right-when-on-a-dialog.png\";\r\nimport buttonFig16 from \"./images/fig-16-use-concise-but-specific-labels.png\";\r\nimport buttonFig17 from \"./images/fig-17-do-not-use-long-labels-or-generic-labels.png\";\r\nimport buttonFig18 from \"./images/fig-18-use-icons-with-clear-meaning-to-add-clarity-to-the-action.png\";\r\nimport buttonFig19 from \"./images/fig-19-do-not-use-complicated-unrelated-or-ambiguous-icons-on-buttons.png\";\r\n\r\n## Component variants\r\n\r\nThere are five variants of button:\r\n\r\n- Primary buttons\r\n- Secondary buttons\r\n- Tertiary buttons\r\n- Destructive buttons\r\n- Icon buttons\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }}>\r\n  <IcButton variant=\"primary\">Add to order</IcButton>\r\n  <IcButton variant=\"secondary\">View coffees</IcButton>\r\n  <IcButton variant=\"tertiary\">Find out more</IcButton>\r\n  <IcButton variant=\"destructive\">Cancel order</IcButton>\r\n  <IcButton variant=\"icon\" aria-label=\"Coffee cup\">\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </IcButton>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\n### Primary buttons\r\n\r\nUse primary buttons to provide high emphasis to a key action. Use them for the most important action on a page or within a container.\r\n\r\n### Secondary buttons\r\n\r\nUse secondary buttons to provide medium emphasis for less important actions on a page or within a container.\r\n\r\nGroup these buttons to provide a set of actions of equal priority.\r\n\r\n### Tertiary buttons\r\n\r\nUse tertiary buttons to provide low emphasis for low priority actions on a page or within a container that aren't important or used frequently.\r\n\r\nUse tertiary buttons for dismissive actions such as to close a dialog, navigate back a step or to cancel an action.\r\n\r\n### Destructive buttons\r\n\r\nUse destructive buttons for actions that can't be reversed. For example, use them for a delete action that can't be undone.\r\n\r\n### Icon buttons\r\n\r\nIcon buttons work like a normal button but don't include a visible text label. Use them to provide a compact method of triggering an action.\r\n\r\nUse icon buttons for well understood actions that are represented clearly by the icon's visual content. For example, a 'bin' icon indicates a delete function. Read more about [iconography](/styles/icons) for guidance on selecting and creating icons.\r\n\r\nAlways provide a textual description available programmatically and a visible label that is displayed using a tooltip when hovering on an icon button.\r\n\r\n## When not to use\r\n\r\n### Buttons and links\r\n\r\nButtons should trigger actions and affect content on the current page or container. To navigate to a new page or open a new tab use links instead.\r\n\r\n<DoDontCaution\r\n  imageSrc={buttonFig1}\r\n  imageAlt=\"An example page showing a primary button labelled 'submit' at the bottom of a page.\"\r\n  state=\"good\"\r\n  caption=\"Use buttons to complete actions on the page such as adding or deleting an item, confirming or closing a dialog, or as a tool in a toolbar.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={buttonFig2}\r\n  imageAlt=\"An example of a page with a hero banner with the title 'Today's good mood is sponsored by coffee.' A secondary button is displayed on the hero banner acting as a link to a new page called 'Get some coffee'.\"\r\n  state=\"bad\"\r\n  caption=\"Don't use buttons to navigate users to a new page.\"\r\n/>\r\n\r\n## Interaction behaviour\r\n\r\nWhen an action triggers a background task, use the button loading state to provide feedback to the user that something is happening.\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }}>\r\n  <IcButton variant=\"secondary\" loading>\r\n    Loading\r\n  </IcButton>\r\n</ComponentPreview>\r\n\r\n## Colour\r\n\r\nDon't change a button colour as this makes them less recognisable as actions.\r\n\r\n### Appearance\r\n\r\nPrimary, secondary, tertiary and icon buttons have default, light and dark appearance options.\r\n\r\nUse different button appearances when placing buttons on coloured backgrounds to ensure good contrast and avoid colours clashing. Use light appearance buttons on dark backgrounds and use dark appearance buttons on light backgrounds.\r\n\r\nWhen you use the UI Kit components together they will select the appropriate variant.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={buttonFig3}\r\n    imageAlt=\"Button variants on a white background, dark button variants on light coloured backgrounds, and light button variants on dark backgrounds.\"\r\n    state=\"good\"\r\n    caption=\"Use different appearance options on different coloured backgrounds to ensure good contrast and avoid colours clashing.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={buttonFig4}\r\n    imageAlt=\"A bad example showing dark button variants used on a white background, coloured button variants on coloured backgrounds, and dark button variants on dark backgrounds.\"\r\n    state=\"bad\"\r\n    caption=\"Use the correct button appearance to meet minimum contrast requirements.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Sizing\r\n\r\nButtons have three different sizing options: default, small and large.\r\n\r\nUse components of the same size together. For example, use a default sized button with a default sized input component, or use a small sized button with a small sized input component.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={buttonFig5}\r\n    imageAlt=\"A form with correctly sized components. A normal sized input component is paired with normal sized button, and a small sized input component is paired with a small sized button.\"\r\n    state=\"good\"\r\n    caption=\"Use the correct buttons sizes to match other UI component sizes.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={buttonFig6}\r\n    imageAlt=\"A form with incorrectly sized components. A normal sized input component is paired with small sized button, and a small sized input component is paired with a normal sized button.\"\r\n    state=\"bad\"\r\n    caption=\"Don't mix different sized components.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nUse large buttons only for high emphasis actions that sit independently from other UI elements.\r\n\r\n<DoDontCaution\r\n  imageSrc={buttonFig7}\r\n  imageAlt=\"A page showing a large sized button on its own at the bottom of the page content.\"\r\n  state=\"good\"\r\n  caption=\"Use large buttons for standalone, higher priority actions.\"\r\n/>\r\n\r\n## Layout and placement\r\n\r\n### Button hierarchy\r\n\r\nUse only one primary button on a page or within a container. Show the most important action with a primary button.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={buttonFig8}\r\n    imageAlt=\"A dialog box reading 'Are you sure you want to continue?' using a primary button for the important 'continue' action and a tertiary button for the lower priority 'Go back' dismissive action.\"\r\n    state=\"good\"\r\n    caption=\"Use a primary button for the most important action or when you want to influence an action.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={buttonFig9}\r\n    imageAlt=\"A dialog box reading 'Are you sure you want to continue?' using one primary button for the 'Continue' action and another primary button for the 'Go back' action.\"\r\n    state=\"bad\"\r\n    caption=\"Two primary buttons make it less clear what the expected action is.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nUse secondary buttons to perform secondary or lower priority actions.\r\n\r\nGroup multiple secondary actions to provide a set of possible actions with an equal priority.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={buttonFig10}\r\n    imageAlt=\"A dialog reading 'How would you like to continue?' showing a single primary button for the 'save' action and two secondary buttons for the 'save as...' and 'duplicate' actions.\"\r\n    state=\"good\"\r\n    caption=\"Use multiple secondary buttons to provide lower priority actions, whilst using a primary button for the higher priority action.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={buttonFig11}\r\n    imageAlt=\"A dialog that reads 'Are you sure you want to continue?' showing a primary button for the 'continue' action, as well as a tertiary button providing the dismissive 'Go back' action.\"\r\n    state=\"good\"\r\n    caption=\"Use tertiary buttons to provide a dismissive or cancellation action when paired with a primary button that provides the main call to action.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n### Button grouping\r\n\r\nGroup buttons to provide a set of actions.\r\n\r\nHighlight the primary action in the group using a primary button. Use all secondary or all tertiary buttons for the rest of the actions.\r\n\r\nDon't mix secondary and text buttons to provide multiple actions in a group.\r\n\r\n<DoDontCaution\r\n  imageSrc={buttonFig12}\r\n  imageAlt=\"An example page showing a button group containing a primary button indicating the main ‘Submit’ call to action and two secondary buttons for the lower priority ‘Duplicate’ and ‘Save as’ options.\"\r\n  state=\"good\"\r\n  caption=\"Use a primary button to highlight the key action in a button group.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={buttonFig13}\r\n  imageAlt=\"An example page showing a button group comprised of a tertiary button for the ‘Cancel’ action, a destructive button for the ‘Delete’ action, a secondary button for the ‘Save as’ action and a primary button for the ‘submit’.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t use different button types for different actions in a group.\"\r\n/>\r\n\r\nPlace primary buttons on the left of a button group unless presented in a modal window where they should be located on the right. This follows common reading patterns when viewing a page and a dialog.\r\n\r\n<DoDontCaution\r\n  imageSrc={buttonFig14}\r\n  imageAlt=\"An example page showing a button group positioned in the main page content aligned to the left of the page. The group has a primary button positioned on the left and two secondary buttons to its right.\"\r\n  state=\"good\"\r\n  caption=\"Position primary buttons to the left when on a page.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={buttonFig15}\r\n  imageAlt=\"A dialog showing a button group positioned to the right. The group has a primary button positioned on the right of the group and two secondary buttons on its left.\"\r\n  state=\"good\"\r\n  caption=\"Position primary buttons to the right when on a dialog.\"\r\n/>\r\n\r\n## Content\r\n\r\n### Labels\r\n\r\nFollow the [content style](/styles/content-style) guidelines when writing button labels.\r\n\r\nAdd useful labels to buttons so that they don't rely on context. Avoid using long labels and keep them specific and concise.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={buttonFig16}\r\n    imageAlt=\"A dialog with the heading ‘Are you sure you want to continue?’. There are two buttons in the modal with labels which read ‘go back’ and ‘continue’.\"\r\n    state=\"good\"\r\n    caption=\"Use concise but specific labels.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={buttonFig17}\r\n    imageAlt=\"A dialog with the heading ‘Are you sure you want to continue?’. There are two buttons in the modal with labels which read ‘No, take me out of here’ and ‘yes, continue to the next section’.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t use long labels or generic labels.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nAlways specify an accessible label for the button. The accessible label can include more detail than is described in the visible label, but make sure that the visible label text is included within the accessible label.\r\n\r\nFor example, a button may have a visible label that reads ‘Submit’. The accessible label may read ‘Submit form’. This includes more information to aid assistive technology users, but still includes the full visible label.\r\n\r\n### Icons\r\n\r\nUse an icon on a button to provide additional meaning or to aid in recognition. All button types can display an icon.\r\n\r\nMake sure that the icon is understandable and relevant to the action.\r\n\r\nAlways provide alternative descriptions for icons if they aren't decorative. Only use icons if they are necessary.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={buttonFig18}\r\n    imageAlt=\"A set of buttons with icons that clearly relate to the action. The icons used are a circle arrow for refresh, a floppy disk for save, a back arrow for go back, and a bin for delete.\"\r\n    state=\"good\"\r\n    caption=\"Use icons with clear meaning to add clarity to the action.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={buttonFig19}\r\n    imageAlt=\"A set of buttons with icons that are unrelated to the action. The icons used are a Christmas tree for refresh, a padlock for save, a box rectangle for go back and a box cross for delete.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t use complicated, unrelated or ambiguous icons on buttons.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Accessibility considerations\r\n\r\nAdd labels to all icon buttons using a [tooltip](/components/tooltip), which is useful to sighted users too.\r\n\r\nUse useful and context-free labels. If necessary, add additional context in the accessible label.\r\n\r\n## Related components\r\n\r\n- [Links](/components/link)\r\n- [Tooltips](/components/tooltip)\r\n",
      "path": "/components/button",
      "navPriority": 6,
      "date": "2024-05-10",
      "title": "Button",
      "status": "BETA",
      "subTitle": "Buttons are used to allow or encourage people to take an action.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/button",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/button"
        },
        {
          "title": "Code",
          "path": "/components/button/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/button/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\buttons\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.978Z",
        "lastModified": "2024-06-04T07:48:34.978Z",
        "size": 15592,
        "formattedSize": "15.2 KB"
      }
    },
    {
      "id": "components\\cards\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nInteractive and static cards inherit the accessibility features of the components within the card. Clickable cards act as links, and therefore inherit the accessibility features of links.\r\n\r\n## For Assistive Technology\r\n\r\nScreen readers should always read the heading first, even when an image is placed at the top of the card. To achieve this, we've re-ordered content using CSS Flexbox layout so that visually the image appears first but is placed after the heading section in HTML.\r\n\r\nThe container of interactive and static cards is not clickable, and therefore is not focusable. When navigating within the page, the focus switches between the different interactive components of the card.\r\n\r\nIn the case of clickable cards, since the whole area is interactive, then the whole container is focusable.\r\n\r\nClickable cards inherit the accessibility features of the link style, using an `<a href=\"\">` to wrap the whole component.\r\n\r\nProvide as much detail as possible to the purpose of any link or button present within interactive cards, or to the action of a clickable card. If you can't show this within the component, use the `class=”visuallyhidden”` to add descriptive text about the purpose of the call to action(s).\r\n\r\nWhen cards are arranged in group, these should be placed within an unordered list `<ul>`, with each card marked as a list item `<li>` to provide navigational cues for screen readers.\r\n\r\n## Based on\r\n\r\nThe cards component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.nomensa.com/blog/how-build-accessible-cards-block-links\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      How to build accessible cards-block links\r\n    </ic-link>\r\n    , Joel Strohmeier, accessed May 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://adrianroselli.com/2020/02/block-links-cards-clickable-regions-etc.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Block Links, Cards, Clickable Regions, Rows, Etc.\r\n    </ic-link>\r\n    , Adrian Roselli, accessed May 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://inclusive-components.design/card\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Cards\r\n    </ic-link>\r\n    , Inclusive components, accessed May 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://a11y-style-guide.com/style-guide/section-cards.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Cards\r\n    </ic-link>\r\n    , A11y style guide, accessed May 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://bbc.github.io/gel/components/card/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Cards\r\n    </ic-link>\r\n    , BBC, accessed May 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/card/accessibility",
      "date": "2024-04-15",
      "title": "Card",
      "status": "BETA",
      "subTitle": "Cards are containers used to display structured information or interactive content.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/card",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/card"
        },
        {
          "title": "Code",
          "path": "/components/card/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/card/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\cards\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.271Z",
        "lastModified": "2024-05-20T13:20:43.271Z",
        "size": 3538,
        "formattedSize": "3.5 KB"
      }
    },
    {
      "id": "components\\cards\\codex",
      "contents": "\r\nimport {\r\n  IcCard,\r\n  IcStatusTag,\r\n  IcButton,\r\n  IcTypography,\r\n  SlottedSVG,\r\n  IcBadge,\r\n} from \"@ukic/react\";\r\n\r\nexport const CardIcon = () => (\r\n  <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\r\n  </svg>\r\n);\r\n\r\nexport const InteractionIcon = () => (\r\n  <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"16\"\r\n    height=\"16\"\r\n    fill=\"currentColor\"\r\n    class=\"bi bi-three-dots-vertical\"\r\n    viewBox=\"0 0 16 16\"\r\n  >\r\n    <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n  </svg>\r\n);\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card \r\n    heading=\"Americano order\" \r\n    subheading=\"Name: Michael\" \r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n    style=\"width:360px;\">\r\n  <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n  <ic-button variant=\"icon\" title=\"More information\" slot=\"interaction-button\">\r\n      <svg\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"16\"\r\n        height=\"16\"\r\n        fill=\"currentColor\"\r\n        class=\"bi bi-three-dots-vertical\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n      </svg>\r\n  </ic-button>\r\n  <ic-status-tag slot=\"adornment\" label=\"In Progress\" small=\"true\"></ic-status-tag>\r\n    <svg\r\n        slot=\"image-mid\"\r\n        style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        maxHeight: \"20.375rem\",\r\n        maxWidth: \"20.375rem\",\r\n      }}\r\n        viewBox=\"0 0 1600 1250\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" y=\"-350\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </svg>\r\n    <div \r\n      slot=\"interaction-controls\" \r\n      style={{ display: \"flex\", gap: \"16px\" \r\n      }}>\r\n      <ic-button variant=\"primary\">Accept</ic-button>\r\n      <ic-button variant=\"secondary\">Cancel</ic-button>\r\n    </div>\r\n    <ic-typography slot=\"expanded-content\" variant=\"body\">\r\n      To cancel your order click cancel.\r\n    </ic-typography>\r\n</ic-card>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard \r\n    heading=\"Americano order\" \r\n    subheading=\"Name: Michael\" \r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n    style={{width: \"360px\"}}>\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n  <IcButton variant=\"icon\" title=\"More information\" slot=\"interaction-button\">\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"16\"\r\n        height=\"16\"\r\n        fill=\"currentColor\"\r\n        class=\"bi bi-three-dots-vertical\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n      </SlottedSVG>\r\n  </IcButton> \r\n  <IcStatusTag slot=\"adornment\" label=\"In Progress\" small />\r\n    <SlottedSVG\r\n      slot=\"image-mid\"\r\n      style={{\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      maxHeight: \"20.375rem\",\r\n      maxWidth: \"20.375rem\",\r\n      }}\r\n      viewBox=\"0 0 1600 1250\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" y=\"-350\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </SlottedSVG>\r\n  <div \r\n      slot=\"interaction-controls\" \r\n      style={{ display: \"flex\", gap: \"16px\" \r\n      }}>\r\n      <IcButton variant=\"primary\">Accept</IcButton>\r\n      <IcButton variant=\"secondary\">Cancel</IcButton>\r\n    </div>\r\n    <IcTypography slot=\"expanded-content\" variant=\"body\">\r\n      To cancel your order click cancel.\r\n    </IcTypography>\r\n</IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <IcCard\r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n    expandable\r\n    style={{ width: \"360px\" }}\r\n  >\r\n    <IcStatusTag slot=\"adornment\" status=\"warning\" label=\"In Progress\" small />\r\n    <IcButton variant=\"icon\" title=\"More information\" slot=\"interaction-button\">\r\n      <svg\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"16\"\r\n        height=\"16\"\r\n        fill=\"currentColor\"\r\n        class=\"bi bi-three-dots-vertical\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n      </svg>\r\n    </IcButton>\r\n    <svg\r\n      slot=\"image-mid\"\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        maxHeight: \"20.375rem\",\r\n        maxWidth: \"20.375rem\",\r\n      }}\r\n      viewBox=\"0 0 1600 1250\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" y=\"-350\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </svg>\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n    <div slot=\"interaction-controls\" style={{ display: \"flex\", gap: \"16px\" }}>\r\n      <IcButton variant=\"primary\">Accept</IcButton>\r\n      <IcButton variant=\"secondary\">Cancel</IcButton>\r\n    </div>\r\n    <IcTypography slot=\"expanded-content\" variant=\"body\">\r\n      To cancel your order click cancel.\r\n    </IcTypography>\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n## Card details\r\n\r\n<ComponentDetails component=\"ic-card\" />\r\n\r\n## Variants\r\n\r\n### Heading only\r\n\r\nexport const headingOnly = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card heading=\"Americano order\"></ic-card>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard heading=\"Americano order\"></IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={headingOnly}>\r\n  <IcCard heading=\"Americano order\" />\r\n</ComponentPreview>\r\n\r\n### With icon\r\n\r\nexport const withIcon = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card heading=\"Americano order\">\r\n  \r\n  <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n</ic-card>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard heading=\"Americano order\">\r\n  <SlottedSVG     \r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </SlottedSVG>\r\n</IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={withIcon}>\r\n  <IcCard heading=\"Americano order\">\r\n    <SlottedSVG\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n### Message\r\n\r\nexport const withMessage = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card heading=\"Americano order\" message=\"Extras: Double espresso shot and oat milk.\">\r\n  <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n</ic-card>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard heading=\"Americano order\" message=\"Extras: Double espresso shot and oat milk.\">\r\n  <SlottedSVG     \r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </SlottedSVG>\r\n</IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={withMessage}>\r\n  <IcCard\r\n    heading=\"Americano order\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n  >\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n### With subheading\r\n\r\nexport const withSubHeading = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\">\r\n  <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n</ic-card>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\">\r\n  <SlottedSVG     \r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n    </SlottedSVG>\r\n</IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={withSubHeading}>\r\n  <IcCard\r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n  >\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n### Interaction button\r\n\r\nexport const interactionButton = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\">\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n    </svg>\r\n  <ic-button variant=\"icon\" title=\"More information\" slot=\"interaction-button\">\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      fill=\"currentColor\"\r\n      class=\"bi bi-three-dots-vertical\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n    </svg>\r\n  </ic-button>\r\n</ic-card>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\">\r\n    <SlottedSVG     \r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n    </SlottedSVG>\r\n  <IcButton variant=\"icon\" title=\"More information\" slot=\"interaction-button\">\r\n    <SlottedSVG slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      fill=\"currentColor\"\r\n      class=\"bi bi-three-dots-vertical\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n    </SlottedSVG>\r\n  </IcButton>\r\n</IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={interactionButton}>\r\n  <IcCard\r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n  >\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n    <IcButton variant=\"icon\" title=\"More information\" slot=\"interaction-button\">\r\n      <InteractionIcon />\r\n    </IcButton>\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n### Adornment\r\n\r\nexport const adornment = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\">\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n    </svg>\r\n  <ic-status-tag slot=\"adornment\" status=\"warning\" label=\"In Progress\" size=\"small\"></ic-status-tag>\r\n</ic-card>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\">\r\n    <SlottedSVG \r\n      slot=\"icon\"   \r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n    </SlottedSVG>\r\n  <IcStatusTag slot=\"adornment\" status=\"warning\" label=\"In Progress\" size=\"small\" />\r\n</IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={adornment}>\r\n  <IcCard\r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n  >\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n    <IcStatusTag\r\n      slot=\"adornment\"\r\n      status=\"warning\"\r\n      label=\"In Progress\"\r\n      size=\"small\"\r\n    />\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n### Top image\r\n\r\nexport const topImage = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\"\r\n  style=\"width:360px;\">\r\n    <svg\r\n      slot=\"image-top\"\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        maxHeight: \"20.375rem\",\r\n        maxWidth: \"20.375rem\",\r\n      }}\r\n      viewBox=\"0 0 1600 1250\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" y=\"-350\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </svg>\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n    </svg>\r\n    <ic-button variant=\"icon\" title=\"More information\" slot=\"interaction-button\">\r\n      <svg\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"16\"\r\n        height=\"16\"\r\n        fill=\"currentColor\"\r\n        class=\"bi bi-three-dots-vertical\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n      </svg>\r\n    </ic-button>\r\n  <ic-status-tag slot=\"adornment\" status=\"warning\" label=\"In Progress\" size=\"small\"></ic-status-tag>\r\n</ic-card>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\"\r\n  style={{width: \"360px\"}}>\r\n    <SlottedSVG\r\n      slot=\"image-top\"\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        maxHeight: \"20.375rem\",\r\n        maxWidth: \"20.375rem\",\r\n      }}\r\n      viewBox=\"0 0 1600 1250\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" y=\"-350\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </SlottedSVG>\r\n    <SlottedSVG\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n    </SlottedSVG>\r\n    <IcButton variant=\"icon\" title=\"More information\" slot=\"interaction-button\">\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"16\"\r\n        height=\"16\"\r\n        fill=\"currentColor\"\r\n        class=\"bi bi-three-dots-vertical\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n      </SlottedSVG>\r\n  </IcButton> \r\n  <IcStatusTag slot=\"adornment\" status=\"warning\" label=\"In Progress\" size=\"small\" />\r\n</IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={topImage}>\r\n  <IcCard\r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n    style={{ width: \"360px\" }}\r\n  >\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n    <IcStatusTag\r\n      slot=\"adornment\"\r\n      status=\"warning\"\r\n      label=\"In Progress\"\r\n      size=\"small\"\r\n    />\r\n    <IcButton variant=\"icon\" title=\"More information\" slot=\"interaction-button\">\r\n      <InteractionIcon />\r\n    </IcButton>\r\n    <svg\r\n      slot=\"image-top\"\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        maxHeight: \"20.375rem\",\r\n        maxWidth: \"20.375rem\",\r\n      }}\r\n      viewBox=\"0 0 1600 1250\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" y=\"-350\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </svg>\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n### Middle image\r\n\r\nexport const midImage = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\"\r\n  style=\"width:360px;\">\r\n <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n  <ic-button variant=\"icon\" title=\"More information\" slot=\"interaction-button\">\r\n    <svg\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"16\"\r\n        height=\"16\"\r\n        fill=\"currentColor\"\r\n        class=\"bi bi-three-dots-vertical\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n      </svg>\r\n  </ic-button>\r\n  <ic-status-tag slot=\"adornment\" status=\"warning\" label=\"In Progress\" size=\"small\"></ic-status-tag>\r\n    <svg\r\n      slot=\"image-mid\"\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        maxHeight: \"20.375rem\",\r\n        maxWidth: \"20.375rem\",\r\n      }}\r\n      viewBox=\"0 0 1600 1250\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" y=\"-350\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </svg>\r\n</ic-card>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\"\r\n  style={{width: \"360px\"}}>\r\n    <SlottedSVG\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n    </SlottedSVG>\r\n  <IcButton variant=\"icon\" title=\"More information\" slot=\"interaction-button\">\r\n    <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"16\"\r\n        height=\"16\"\r\n        fill=\"currentColor\"\r\n        class=\"bi bi-three-dots-vertical\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n      </SlottedSVG>\r\n  </IcButton> \r\n  <IcStatusTag slot=\"adornment\" status=\"warning\" label=\"In Progress\" size=\"small\" />\r\n    <SlottedSVG\r\n      slot=\"image-mid\"\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        maxHeight: \"20.375rem\",\r\n        maxWidth: \"20.375rem\",\r\n      }}\r\n      viewBox=\"0 0 1600 1250\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" y=\"-350\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </SlottedSVG>\r\n</IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={midImage}>\r\n  <IcCard\r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n    style={{ width: \"360px\" }}\r\n  >\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n    <IcButton variant=\"icon\" title=\"More information\" slot=\"interaction-button\">\r\n      <InteractionIcon />\r\n    </IcButton>\r\n    <IcStatusTag\r\n      slot=\"adornment\"\r\n      status=\"warning\"\r\n      label=\"In Progress\"\r\n      size=\"small\"\r\n    />\r\n    <svg\r\n      slot=\"image-mid\"\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        maxHeight: \"20.375rem\",\r\n        maxWidth: \"20.375rem\",\r\n      }}\r\n      viewBox=\"0 0 1600 1250\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" y=\"-350\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </svg>\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n### Interaction controls\r\n\r\nexport const interactionControls = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\">\r\n <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\r\n  </svg>\r\n  <div slot=\"interaction-controls\" style=\"display:flex;gap:16px;\">\r\n    <ic-button variant=\"primary\">Accept</ic-button>\r\n    <ic-button variant=\"secondary\">Cancel</ic-button>\r\n  </div>\r\n</ic-card>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\">\r\n <SlottedSVG\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\r\n  </SlottedSVG>\r\n  <div slot=\"interaction-controls\" style={{display: \"flex\", gap: \"16px\"}}>\r\n    <IcButton variant=\"primary\">Accept</IcButton>\r\n    <IcButton variant=\"secondary\">Cancel</IcButton>\r\n  </div>\r\n</IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={interactionControls}>\r\n  <IcCard\r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n  >\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n    <div slot=\"interaction-controls\" style={{ display: \"flex\", gap: \"16px\" }}>\r\n      <IcButton variant=\"primary\">Accept</IcButton>\r\n      <IcButton variant=\"secondary\">Cancel</IcButton>\r\n    </div>\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n### Expandable\r\n\r\nexport const expandable = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\"\r\n  expandable=\"true\">\r\n  <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n     <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n  <div slot=\"interaction-controls\" style=\"display:flex;gap:16px;\">\r\n    <ic-button variant=\"primary\">Accept</ic-button>\r\n    <ic-button variant=\"secondary\">Cancel</ic-button>\r\n  </div>\r\n  <ic-typography slot=\"expanded-content\" variant=\"body\">\r\n    To cancel your order click cancel.\r\n  </ic-typography>\r\n</ic-card>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\"\r\n  expandable>\r\n  <SlottedSVG\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n     <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </SlottedSVG>\r\n  <div slot=\"interaction-controls\" style={{display: \"flex\", gap: \"16px\"}}>\r\n    <IcButton variant=\"primary\">Accept</IcButton>\r\n    <IcButton variant=\"secondary\">Cancel</IcButton>\r\n  </div>\r\n  <IcTypography slot=\"expanded-content\" variant=\"body\">\r\n    To cancel your order click cancel.\r\n  </IcTypography>\r\n</IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={expandable}>\r\n  <IcCard\r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n    expandable\r\n  >\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n    <div slot=\"interaction-controls\" style={{ display: \"flex\", gap: \"16px\" }}>\r\n      <IcButton variant=\"primary\">Accept</IcButton>\r\n      <IcButton variant=\"secondary\">Cancel</IcButton>\r\n    </div>\r\n    <IcTypography slot=\"expanded-content\" variant=\"body\">\r\n      To cancel your order click cancel.\r\n    </IcTypography>\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n### Clickable link\r\n\r\nexport const clickableLink = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\"\r\n  clickable=\"true\"\r\n  href=\"#\">\r\n <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n</ic-card>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\"\r\n  clickable\r\n  href=\"#\">\r\n <SlottedSVG\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </SlottedSVG>\r\n</IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={clickableLink}>\r\n  <IcCard\r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n    clickable=\"true\"\r\n    href=\"#\"\r\n    onClick={(e) => e.preventDefault()}\r\n  >\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n### Clickable button\r\n\r\nexport const clickableBtn = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card\r\n  id=\"clickable-card\"\r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\"\r\n  clickable=\"true\">\r\n <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n</ic-card>\r\n<script>\r\n  const card = document.querySelector('#clickable-card');\r\n  card.addEventListener('click', (ev) => {\r\n    console.log(ev);\r\n  })\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\" \r\n  clickable\r\n  onClick={(ev) => console.log(ev)}>\r\n <SlottedSVG\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n   <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </SlottedSVG>\r\n</IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={clickableBtn}>\r\n  <IcCard\r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n    clickable=\"true\"\r\n    onClick={(ev) => console.log(ev)}\r\n  >\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n### With badge\r\n\r\nexport const withBadge = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\"\r\n  clickable=\"true\"\r\n  href=\"#\">\r\n <ic-badge text-label=\"New\" slot=\"badge\" variant=\"info\" size=\"large\"></ic-badge>\r\n <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n</ic-card>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\" \r\n  clickable\r\n  href=\"#\">\r\n <IcBadge size=\"large\" textLabel=\"New\" slot=\"badge\" variant=\"info\"/>\r\n <SlottedSVG\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </SlottedSVG>\r\n</IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={withBadge}>\r\n  <IcCard\r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n    clickable=\"true\"\r\n    href=\"#\"\r\n    onClick={(e) => e.preventDefault()}\r\n  >\r\n    <IcBadge size=\"large\" textLabel=\"New\" slot=\"badge\" variant=\"info\" />\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n### Disabled\r\n\r\nexport const disabled = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\"\r\n  clickable=\"true\" \r\n  disabled=\"true\">\r\n <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n     <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n</ic-card>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\" \r\n  clickable\r\n  disabled>\r\n <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n</IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={disabled}>\r\n  <IcCard\r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n    clickable\r\n    disabled\r\n  >\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n### Full width\r\n\r\nexport const fullWidth = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-card \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\"\r\n  fullWidth=\"true\"\r\n  clickable=\"true\"> \r\n <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n</ic-card>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCard \r\n  heading=\"Americano order\" \r\n  subheading=\"Name: Michael\" \r\n  message=\"Extras: Double espresso shot and oat milk.\"\r\n  fullWidth\r\n  clickable>\r\n <SlottedSVG\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n     <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </SlottedSVG>\r\n</IcCard>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={fullWidth}>\r\n  <IcCard\r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n    clickable=\"true\"\r\n    fullWidth=\"true\"\r\n  >\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n### Wrapped by link\r\n\r\nexport const wrapped = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<a href=\"/\">\r\n  <ic-card \r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"> \r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n    </svg>\r\n  </ic-card>\r\n</a>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<a href=\"/\">\r\n  <IcCard \r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"> \r\n  <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n    </svg>\r\n  </IcCard>\r\n</a>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={wrapped}>\r\n  <a\r\n    href=\"/\"\r\n    onClick={(e) => e.preventDefault()}\r\n    style={{ textDecoration: \"none\", color: \"var(--ic-architechtural-black)\" }}\r\n    aria-label=\"Americano order card\"\r\n  >\r\n    <IcCard\r\n      heading=\"Americano order\"\r\n      subheading=\"Name: Michael\"\r\n      message=\"Extras: Double espresso shot and oat milk.\"\r\n    >\r\n      <svg\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </svg>\r\n    </IcCard>\r\n  </a>\r\n</ComponentPreview>\r\n",
      "path": "/components/card/code",
      "date": "2024-02-02",
      "title": "Card",
      "status": "BETA",
      "subTitle": "Cards are containers used to display structured information or interactive content.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/card",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/card"
        },
        {
          "title": "Code",
          "path": "/components/card/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/card/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\cards\\code.mdx",
        "createdAt": "2024-05-20T13:20:43.271Z",
        "lastModified": "2024-05-20T13:20:43.271Z",
        "size": 49654,
        "formattedSize": "48.5 KB"
      }
    },
    {
      "id": "components\\cards\\guidancex",
      "contents": "\r\nimport { IcCard, IcButton, IcTypography, IcStatusTag } from \"@ukic/react\";\r\nimport cardsFig1 from \"./images/fig-1-card-anatomy.png\";\r\nimport cardsFig2 from \"./images/fig-2-heading-area-anatomy.png\";\r\nimport cardsFig3 from \"./images/fig-3-place-images-either-at-the-top-or-in-the-middle-of-cards-if-content-is-present.png\";\r\nimport cardsFig4 from \"./images/fig-4-dont-place-images-below-content.png\";\r\nimport cardsFig5 from \"./images/fig-5-interaction-area-anatomy.png\";\r\nimport cardsFig6 from \"./images/fig-6-dont-mix-card-variants-when-arranged-in-a-group.png\";\r\nimport cardsFig7 from \"./images/fig-7-dont-vertically-align-cards-with-different-widths.png\";\r\nimport cardsFig10 from \"./images/fig-10-use-the-show-less-show-more-pattern-when-adding-long-portions-of-text-to-the-content-area.png\";\r\nimport cardsFig11 from \"./images/fig-11-avoid-displaying-lengthy-descriptions-in-the-content-area.png\";\r\n\r\n## Component variants\r\n\r\nThere are three variants of cards:\r\n\r\n- Interactive cards\r\n- Static cards\r\n- Clickable cards\r\n\r\n<ComponentPreview>\r\n  <IcCard\r\n    heading=\"Americano order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: Double espresso shot and oat milk.\"\r\n    expandable\r\n    style={{ width: \"360px\" }}\r\n  >\r\n    <IcStatusTag slot=\"adornment\" status=\"warning\" label=\"In Progress\" small />\r\n    <IcButton variant=\"icon\" title=\"More information\" slot=\"interaction-button\">\r\n      <svg\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"16\"\r\n        height=\"16\"\r\n        fill=\"currentColor\"\r\n        class=\"bi bi-three-dots-vertical\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n      </svg>\r\n    </IcButton>\r\n    <svg\r\n      slot=\"image-mid\"\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        maxHeight: \"20.375rem\",\r\n        maxWidth: \"20.375rem\",\r\n      }}\r\n      viewBox=\"0 0 1600 1250\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" y=\"-350\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </svg>\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n    <div slot=\"interaction-controls\" style={{ display: \"flex\", gap: \"16px\" }}>\r\n      <IcButton variant=\"primary\">Accept</IcButton>\r\n      <IcButton variant=\"secondary\">Cancel</IcButton>\r\n    </div>\r\n    <IcTypography slot=\"expanded-content\" variant=\"body\">\r\n      To cancel your order click cancel.\r\n    </IcTypography>\r\n  </IcCard>\r\n</ComponentPreview>\r\n\r\n### Interactive cards\r\n\r\nInteractive cards contain different types of content and actions. The container itself is not interactive but can have interactive components.\r\n\r\n### Clickable cards\r\n\r\nClickable cards provide a single action that is triggered by clicking anywhere on the card.\r\n\r\n### Static cards\r\n\r\nStatic cards are non-interactive and contain static content only.\r\n\r\n## Anatomy\r\n\r\nThe following section describes the different areas of content on a card.\r\n\r\n<DoDontCaution\r\n  imageSrc={cardsFig1}\r\n  imageAlt=\"A diagram showing the positioning of the different areas within a card. The areas are a heading area, an image area, a content area, an interaction area, and an expandable area.\"\r\n  state=\"none\"\r\n  caption=\"A card includes a heading area, an image area, a content area, an interaction area and an expandable area.\"\r\n/>\r\n\r\n### 1. Heading area\r\n\r\n<DoDontCaution\r\n  imageSrc={cardsFig2}\r\n  imageAlt=\"A diagram showing the positioning of the different sections within the heading area. The area is split up into three different rows. The first row houses section 'A' on the left, section 'B' in the middle, and section 'E' on the right. The second row houses section 'C', and the third row houses section 'D'.\"\r\n  state=\"none\"\r\n  caption=\"A card's heading area includes five elements.\"\r\n/>\r\n\r\nThe heading area can contain:\r\n\r\n- A: Icon/Avatar\r\n- B: Heading\r\n- C: Subtitle\r\n- D: Adornment, for example [status tags](/components/status-tag)\r\n- E: More options icon button (only for interactive cards)\r\n\r\n### 2. Image\r\n\r\nInclude an image either at the top or in the middle of the card. Don't place images below content if this is included in the card.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={cardsFig3}\r\n    imageAlt=\"Two example cards vertically aligned, where the top card displays an image above the heading area and content area, and the bottom card displays an image below the heading area and above the content area.\"\r\n    state=\"good\"\r\n    caption=\"Place images either at the top or in the middle of cards if content is present.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={cardsFig4}\r\n    imageAlt=\"An example card where an image is displayed below the heading and content area.\"\r\n    state=\"bad\"\r\n    caption=\"Don't place images below content.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n### 3. Content area\r\n\r\nAdd a descriptive message within the card content section. Interactive and static cards can include a 'see more' link to expand hidden content.\r\n\r\nSince clickable cards can only contain one interaction, text can't be hidden.\r\n\r\n### 4. Interaction area (interactive cards only)\r\n\r\n<DoDontCaution\r\n  imageSrc={cardsFig5}\r\n  imageAlt=\"A diagram showing the positioning of the different sections within the interaction area. The area features one row with two different sections, 'A' on the left and 'E' on the far right.\"\r\n  state=\"none\"\r\n  caption=\"A card's interaction area includes two elements.\"\r\n/>\r\n\r\nAdd interactive components to the interaction area at the bottom of the card (A). Avoid using too many interactions. The interaction area is only found in interactive cards.\r\n\r\nUse any type of button in the interaction area to provide actions.\r\n\r\nInclude an expand button (E) if you include content in the [expandable area](/components/card#5-expandable-area-interactive-cards-only).\r\n\r\n### 5. Expandable area (interactive cards only)\r\n\r\nUse an expandable area to hold content that either doesn't fit in the collapsed card or doesn't align to the above areas.\r\n\r\nThis area can be expanded by clicking the “expand” button found on the interaction bar.\r\n\r\n## Layout and placement\r\n\r\n### Grouping\r\n\r\nWhen arranging multiple cards together, try to use the same card variant for each.\r\n\r\n<DoDontCaution\r\n  imageSrc={cardsFig6}\r\n  imageAlt=\"An image showing a three static cards, one interactive card, and one clickable card arranged in a group.\"\r\n  state=\"caution\"\r\n  caption=\"Avoid mixing card variants when arranged in a group.\"\r\n/>\r\n\r\n### Sizing\r\n\r\nWhen cards are shown in columns, make sure cards are vertically aligned and maintain the same width for all cards.\r\n\r\nWhen arranging cards in rows, try to match the vertical height of the cards by including similar amounts of content so that they automatically align horizontally.\r\n\r\n<DoDontCaution\r\n  imageSrc={cardsFig7}\r\n  imageAlt=\"An image showing six cards arranged into three rows and two columns, and the width of the cards changes for each row.\"\r\n  state=\"bad\"\r\n  caption=\"Don't vertically align cards with different widths.\"\r\n/>\r\n\r\n## Content\r\n\r\nKeep headings, subheadings and adornments clear and concise.\r\n\r\n### Image\r\n\r\nUse the pre-defined aspect ratios for images in cards. These are:\r\n\r\n- 16:9\r\n- 1:1\r\n- 9:16\r\n- 4:1\r\n- 4:3\r\n- 3:4\r\n\r\nSet an image to fit within the image container to show the whole image, but this may introduce empty areas in the image container if the image does not match the container aspect ratio. Alternatively, set the image to fill the image container, but be aware this may crop some of the image’s content.\r\n\r\nUse a custom image aspect ratio if your image doesn't fit into one of the pre-defined options.\r\n\r\nImages should always feature an `alt` attribute. Set the `alt` equal to a descriptive alternative when an image is informational.\r\n\r\n### Content area\r\n\r\nIf placing several lines of text in the content area, use a 'see more' link to make the content expandable.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={cardsFig10}\r\n    imageAlt=\"An example card titled ‘Your order' with two rows of content in the content area. The second line displays truncated content and a 'see more' clickable text button.\"\r\n    state=\"good\"\r\n    caption=\"Use a ‘see more’ link when adding long text to the content area.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={cardsFig11}\r\n    imageAlt=\"An example card titled 'Your order' with nine rows of content in the content area.\"\r\n    state=\"caution\"\r\n    caption=\"Avoid displaying lengthy descriptions in the content area.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Custom cards\r\n\r\nCards can also be used as custom containers if the pre-defined options don't meet your needs. When designing a custom card, make sure to respect the general anatomy and structure of cards as defined in this document.\r\n\r\nAny interactive components must be placed either within the interaction bar, or the expandable area. Make sure the interactive area is always placed at the bottom of a collapsed card.\r\n\r\nCards support one single image. If you need to place two or more images, place the additional images in the expandable area.\r\n\r\nDon't include any interactive components within a clickable card as these will interfere with the clickable card’s own action.\r\n",
      "path": "/components/card",
      "navPriority": 7,
      "date": "2023-02-03",
      "title": "Card",
      "status": "BETA",
      "subTitle": "Cards are containers used to display structured information or interactive content.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/card",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/card"
        },
        {
          "title": "Code",
          "path": "/components/card/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/card/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\cards\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.979Z",
        "lastModified": "2024-06-04T07:48:34.979Z",
        "size": 10871,
        "formattedSize": "10.6 KB"
      }
    },
    {
      "id": "components\\checkboxes\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nWhen interacting with checkboxes on a keyboard, the **tab** key moves the focus to each checkbox within a checklist. The checkbox is then checked using the **space** key when the field is focused.\r\n\r\nWhen child fields are displayed beneath checkboxes, the field acts as the child of the checkbox. The field should be included within the focus order so that it's focused directly after the checkbox it belongs to.\r\n\r\nWhen a child field is dynamically displayed after checking a checkbox, then it should be announced as required due to the user’s selection.\r\n\r\n## For Assistive Technology\r\n\r\nThe label of a checkbox group is announced by a screen reader before the checkbox options are announced.\r\n\r\nScreen readers will read out the label of the checkbox as well as whether it's checked or not. Checking the checkbox will result in it being read out again.\r\n\r\n## Based on\r\n\r\nThe checkbox component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.a11ymatters.com/pattern/checkbox/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Accessible Checkbox\r\n    </ic-link>\r\n    , A11y Matters, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Input type = checkbox\r\n    </ic-link>\r\n    , MDN web docs, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/checkbox_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      ARIA Checkbox role\r\n    </ic-link>\r\n    , MDN Web docs, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.scottohara.me/blog/2018/11/02/tabbing-into-tabs.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Trouble tabbing to tabs and cheeky checking checkboxes\r\n    </ic-link>\r\n    , Scott O’hara, accessed March 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/checkbox/accessibility",
      "date": "2024-04-15",
      "title": "Checkbox",
      "status": "BETA",
      "subTitle": "Use checkboxes as part of a form, in dialogs and in control areas such as filters or settings.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/checkbox",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/checkbox"
        },
        {
          "title": "Code",
          "path": "/components/checkbox/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/checkbox/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\checkboxes\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.286Z",
        "lastModified": "2024-05-20T13:20:43.286Z",
        "size": 2830,
        "formattedSize": "2.8 KB"
      }
    },
    {
      "id": "components\\checkboxes\\codex",
      "contents": "\r\nimport { IcCheckboxGroup, IcCheckbox, IcTextField } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-checkbox-group label=\"Select your extras\" name=\"default\">\r\n  <ic-checkbox value=\"extra\" label=\"Extra shot (50p)\"></ic-checkbox>\r\n  <ic-checkbox value=\"Soya milk\" label=\"Soya milk\" checked ></ic-checkbox>\r\n  <ic-checkbox value=\"keep cup\" label=\"Takeaway cup\" disabled=\"true\" ></ic-checkbox>\r\n</ic-checkbox-group>\r\n<script>\r\n  const checkboxGroup = document.querySelector('ic-checkbox-group');\r\n  checkboxGroup.addEventListener('icChange', (ev) => console.log('icChange', ev.detail.value));\r\n  const checkboxes = document.querySelector('ic-checkbox');\r\n  checkboxes.forEach((checkbox) => {\r\n    checkbox.addEventListener('icCheck', (ev) => {\r\n      console.log('icCheck', ev);\r\n    })\r\n  })\r\n</script>\r\n`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCheckboxGroup label=\"Select your extras\" name=\"default\" onIcChange={(ev) => console.log(\"onIcChange\", ev.detail.value)}>\r\n  <IcCheckbox value=\"extra\" label=\"Extra shot (50p)\" onIcCheck={(ev) => console.log(\"onIcCheck\", ev)} />\r\n  <IcCheckbox value=\"Soya milk\" label=\"Soya milk\" checked />\r\n  <IcCheckbox value=\"keep cup\" label=\"Takeaway cup\" disabled />\r\n</IcCheckboxGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDefault} style={{ marginTop: \"24px\" }}>\r\n  <IcCheckboxGroup\r\n    label=\"Select your extras\"\r\n    name=\"default\"\r\n    onIcChange={(ev) => console.log(\"onIcChange\", ev.detail.value)}\r\n  >\r\n    <IcCheckbox\r\n      value=\"extra\"\r\n      label=\"Extra shot (50p)\"\r\n      onIcCheck={(ev) => console.log(\"onIcCheck\", ev)}\r\n    />\r\n    <IcCheckbox value=\"Soya milk\" label=\"Soya milk\" checked />\r\n    <IcCheckbox value=\"keep cup\" label=\"Takeaway cup\" disabled />\r\n  </IcCheckboxGroup>\r\n</ComponentPreview>\r\n\r\n## Checkbox group details\r\n\r\n<ComponentDetails component=\"ic-checkbox-group\" />\r\n\r\n## Checkbox details\r\n\r\n<ComponentDetails component=\"ic-checkbox\" />\r\n\r\n## Variants\r\n\r\n### Hidden label\r\n\r\nexport const snippetsHiddenLabel = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-checkbox-group label=\"Select your extras\" hide-label=\"true\" name=\"1\">\r\n  <ic-checkbox value=\"valueName1\" label=\"Extra shot (50p)\"></ic-checkbox>\r\n  <ic-checkbox value=\"valueName2\" label=\"Soya milk\" checked=\"true\"></ic-checkbox>\r\n</ic-checkbox-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCheckboxGroup label=\"Select your extras\" hideLabel name=\"1\">\r\n  <IcCheckbox value=\"valueName1\" label=\"Extra shot (50p)\" />\r\n  <IcCheckbox value=\"valueName2\" label=\"Soya milk\" checked />\r\n</IcCheckboxGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsHiddenLabel} style={{ marginTop: \"24px\" }}>\r\n  <IcCheckboxGroup label=\"Select your extras\" hideLabel name=\"1\">\r\n    <IcCheckbox value=\"valueName1\" label=\"Extra shot (50p)\" />\r\n    <IcCheckbox value=\"valueName2\" label=\"Soya milk\" checked />\r\n  </IcCheckboxGroup>\r\n</ComponentPreview>\r\n\r\n### Helper text\r\n\r\nexport const snippetsHelperText = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-checkbox-group label=\"Select your extras\" name=\"1\" helper-text=\"Additional charges may apply.\">\r\n  <ic-checkbox value=\"valueName1\" label=\"Extra shot (50p)\"></ic-checkbox>\r\n  <ic-checkbox value=\"valueName2\" label=\"Soya milk\" checked=\"true\"></ic-checkbox>\r\n</ic-checkbox-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCheckboxGroup label=\"Select your extras\" name=\"1\" helperText=\"Additional charges may apply.\">\r\n  <IcCheckbox value=\"valueName1\" label=\"Extra shot (50p)\" />\r\n  <IcCheckbox value=\"valueName2\" label=\"Soya milk\" checked />\r\n</IcCheckboxGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsHelperText} style={{ marginTop: \"24px\" }}>\r\n  <IcCheckboxGroup\r\n    label=\"Select your extras\"\r\n    name=\"1\"\r\n    helperText=\"Additional charges may apply.\"\r\n  >\r\n    <IcCheckbox value=\"valueName1\" label=\"Extra shot (50p)\" />\r\n    <IcCheckbox value=\"valueName2\" label=\"Soya milk\" checked />\r\n  </IcCheckboxGroup>\r\n</ComponentPreview>\r\n\r\n### Sizes\r\n\r\nexport const snippetsSizes = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-checkbox-group label=\"Select your extras\" name=\"1\" size=\"small\">\r\n  <ic-checkbox value=\"valueName1\" label=\"Extra shot (50p)\"></ic-checkbox>\r\n  <ic-checkbox value=\"valueName2\" label=\"Soya milk\" checked=\"true\"></ic-checkbox>\r\n</ic-checkbox-group>\r\n<ic-checkbox-group label=\"Select your extras\" name=\"2\">\r\n  <ic-checkbox value=\"valueName1\" label=\"Extra shot (50p)\"></ic-checkbox>\r\n  <ic-checkbox value=\"valueName2\" label=\"Soya milk\" checked=\"true\"></ic-checkbox>\r\n</ic-checkbox-group>\r\n<ic-checkbox-group label=\"Select your extras\" name=\"3\" size=\"large\">\r\n  <ic-checkbox value=\"valueName1\" label=\"Extra shot (50p)\"></ic-checkbox>\r\n  <ic-checkbox value=\"valueName2\" label=\"Soya milk\" checked=\"true\"></ic-checkbox>\r\n</ic-checkbox-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCheckboxGroup label=\"Select your extras\" name=\"1\" size=\"small\">\r\n  <IcCheckbox value=\"valueName1\" label=\"Extra shot (50p)\" />\r\n  <IcCheckbox value=\"valueName2\" label=\"Soya milk\" checked />\r\n</IcCheckboxGroup>\r\n<IcCheckboxGroup label=\"Select your extras\" name=\"2\">\r\n  <IcCheckbox value=\"valueName1\" label=\"Extra shot (50p)\" />\r\n  <IcCheckbox value=\"valueName2\" label=\"Soya milk\" checked />\r\n</IcCheckboxGroup>\r\n<IcCheckboxGroup label=\"Select your extras\" name=\"3\" size=\"large\">\r\n  <IcCheckbox value=\"valueName1\" label=\"Extra shot (50p)\" />\r\n  <IcCheckbox value=\"valueName2\" label=\"Soya milk\" checked />\r\n</IcCheckboxGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsSizes} style={{ gap: \"24px\" }}>\r\n  <IcCheckboxGroup label=\"Select your extras\" name=\"1\" size=\"small\">\r\n    <IcCheckbox value=\"valueName1\" label=\"Extra shot (50p)\" />\r\n    <IcCheckbox value=\"valueName2\" label=\"Soya milk\" checked />\r\n  </IcCheckboxGroup>\r\n  <IcCheckboxGroup label=\"Select your extras\" name=\"2\">\r\n    <IcCheckbox value=\"valueName1\" label=\"Extra shot (50p)\" />\r\n    <IcCheckbox value=\"valueName2\" label=\"Soya milk\" checked />\r\n  </IcCheckboxGroup>\r\n  <IcCheckboxGroup label=\"Select your extras\" name=\"3\" size=\"large\">\r\n    <IcCheckbox value=\"valueName1\" label=\"Extra shot (50p)\" />\r\n    <IcCheckbox value=\"valueName2\" label=\"Soya milk\" checked />\r\n  </IcCheckboxGroup>\r\n</ComponentPreview>\r\n\r\n### Setting each checkbox size\r\n\r\nexport const snippetsSettingEachCheckboxSize = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-checkbox value=\"valueName1\" label=\"Extra shot (50p)\" size=\"small\" />\r\n<ic-checkbox value=\"valueName2\" label=\"Extra shot (50p)\" />\r\n<ic-checkbox value=\"valueName3\" label=\"Extra shot (50p)\" size=\"large\" />`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCheckbox value=\"valueName1\" label=\"Extra shot (50p)\" size=\"small\" />\r\n<IcCheckbox value=\"valueName2\" label=\"Extra shot (50p)\" />\r\n<IcCheckbox value=\"valueName3\" label=\"Extra shot (50p)\" size=\"large\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsSettingEachCheckboxSize}\r\n  style={{\r\n    gap: \"24px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  }}\r\n>\r\n  <IcCheckbox value=\"valueName1\" label=\"Extra shot (50p)\" size=\"small\" />\r\n  <IcCheckbox value=\"valueName2\" label=\"Extra shot (50p)\" />\r\n  <IcCheckbox value=\"valueName3\" label=\"Extra shot (50p)\" size=\"large\" />\r\n</ComponentPreview>\r\n\r\n### Conditional\r\n\r\nexport const snippetsConditional = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-checkbox-group label=\"Which coffee do you like best?\" name=\"conditional\">\r\n  <ic-checkbox value=\"americano\" label=\"Americano\"></ic-checkbox>\r\n  <ic-checkbox value=\"espresso\" label=\"Espresso\"></ic-checkbox>\r\n  <ic-checkbox value=\"flatwhite\" label=\"Flat white\"></ic-checkbox>\r\n  <ic-checkbox value=\"latte\" label=\"Latte\"></ic-checkbox>\r\n  <ic-checkbox value=\"cappuccino\" label=\"Cappuccino\"></ic-checkbox>\r\n  <ic-checkbox value=\"other\" label=\"Other\">\r\n    <ic-text-field\r\n      slot=\"additional-field\"\r\n      label=\"Please let us know...\"\r\n    ></ic-text-field>\r\n  </ic-checkbox>\r\n</ic-checkbox-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCheckboxGroup label=\"Which coffee do you like best?\" name=\"conditional\">\r\n  <IcCheckbox value=\"americano\" label=\"Americano\" />\r\n  <IcCheckbox value=\"espresso\" label=\"Espresso\" />\r\n  <IcCheckbox value=\"flatwhite\" label=\"Flat white\" />\r\n  <IcCheckbox value=\"latte\" label=\"Latte\" />\r\n  <IcCheckbox value=\"cappuccino\" label=\"Cappuccino\" />\r\n  <IcCheckbox value=\"other\" label=\"Other\">\r\n    <IcTextField\r\n      slot=\"additional-field\"\r\n      label=\"Please let us know...\"\r\n    />\r\n  </IcCheckbox>\r\n</IcCheckboxGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsConditional} style={{ marginTop: \"24px\" }}>\r\n  <IcCheckboxGroup label=\"Which coffee do you like best?\" name=\"conditional\">\r\n    <IcCheckbox value=\"americano\" label=\"Americano\" />\r\n    <IcCheckbox value=\"espresso\" label=\"Espresso\" />\r\n    <IcCheckbox value=\"flatwhite\" label=\"Flat white\" />\r\n    <IcCheckbox value=\"latte\" label=\"Latte\" />\r\n    <IcCheckbox value=\"cappuccino\" label=\"Cappuccino\" />\r\n    <IcCheckbox value=\"other\" label=\"Other\">\r\n      <IcTextField slot=\"additional-field\" label=\"Please let us know...\" />\r\n    </IcCheckbox>\r\n  </IcCheckboxGroup>\r\n</ComponentPreview>\r\n\r\n### Conditional dynamic\r\n\r\nexport const snippetsConditionalDynamic = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-checkbox-group label=\"Which coffee do you like best?\" name=\"dynamic\">\r\n  <ic-checkbox value=\"americano\" label=\"Americano\"></ic-checkbox>\r\n  <ic-checkbox value=\"espresso\" label=\"Espresso\"></ic-checkbox>\r\n  <ic-checkbox value=\"flatwhite\" label=\"Flat white\"></ic-checkbox>\r\n  <ic-checkbox value=\"latte\" label=\"Latte\"></ic-checkbox>\r\n  <ic-checkbox value=\"cappuccino\" label=\"Cappuccino\"></ic-checkbox>\r\n  <ic-checkbox additional-field-display=\"dynamic\" value=\"other\" label=\"Other\">\r\n    <ic-text-field\r\n      slot=\"additional-field\"\r\n      label=\"Please let us know...\"\r\n    ></ic-text-field>\r\n  </ic-checkbox>\r\n</ic-checkbox-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCheckboxGroup label=\"Which coffee do you like best?\" name=\"dynamic\">\r\n  <IcCheckbox value=\"americano\" label=\"Americano\" />\r\n  <IcCheckbox value=\"espresso\" label=\"Espresso\" />\r\n  <IcCheckbox value=\"flatwhite\" label=\"Flat white\" />\r\n  <IcCheckbox value=\"latte\" label=\"Latte\" />\r\n  <IcCheckbox value=\"cappuccino\" label=\"Cappuccino\" />\r\n  <IcCheckbox additionalFieldDisplay=\"dynamic\" value=\"other\" label=\"Other\">\r\n    <IcTextField\r\n      slot=\"additional-field\"\r\n      label=\"Please let us know...\"\r\n    />\r\n  </IcCheckbox>\r\n</IcCheckboxGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsConditionalDynamic}\r\n  style={{ marginRight: \"16px\" }}\r\n>\r\n  <div style={{ width: \"350px\" }}>\r\n    <IcCheckboxGroup label=\"Which coffee do you like best?\" name=\"dynamic\">\r\n      <IcCheckbox value=\"americano\" label=\"Americano\" />\r\n      <IcCheckbox value=\"espresso\" label=\"Espresso\" />\r\n      <IcCheckbox value=\"flatwhite\" label=\"Flat white\" />\r\n      <IcCheckbox value=\"latte\" label=\"Latte\" />\r\n      <IcCheckbox value=\"cappuccino\" label=\"Cappuccino\" />\r\n      <IcCheckbox additionalFieldDisplay=\"dynamic\" value=\"other\" label=\"Other\">\r\n        <IcTextField slot=\"additional-field\" label=\"Please let us know...\" />\r\n      </IcCheckbox>\r\n    </IcCheckboxGroup>\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Validation\r\n\r\nexport const snippetsValidation = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-checkbox-group label=\"Select your extras\" name=\"1\" validation-status=\"error\" validation-text=\"Sorry, this is currently unavailable.\">\r\n  <ic-checkbox value=\"valueName1\" label=\"Extra shot (50p)\"></ic-checkbox>\r\n  <ic-checkbox value=\"valueName2\" label=\"Soya milk\" checked=\"true\"></ic-checkbox>\r\n</ic-checkbox-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCheckboxGroup label=\"Select your extras\" name=\"1\" validationStatus=\"error\" validationText=\"Sorry, this is currently unavailable.\">\r\n  <IcCheckbox value=\"valueName1\" label=\"Extra shot (50p)\" />\r\n  <IcCheckbox value=\"valueName2\" label=\"Soya milk\" checked />\r\n</IcCheckboxGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsValidation} style={{ marginTop: \"24px\" }}>\r\n  <IcCheckboxGroup\r\n    label=\"Select your extras\"\r\n    name=\"1\"\r\n    validationStatus=\"error\"\r\n    validationText=\"Sorry, this is currently unavailable.\"\r\n  >\r\n    <IcCheckbox value=\"valueName1\" label=\"Extra shot (50p)\" />\r\n    <IcCheckbox value=\"valueName2\" label=\"Soya milk\" checked />\r\n  </IcCheckboxGroup>\r\n</ComponentPreview>\r\n\r\n### Indeterminate\r\n\r\nexport const snippetsIndeterminate = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-checkbox-group label=\"Select your preferred drinks\" name=\"1\">\r\n  <ic-checkbox value=\"drinks\" label=\"Drinks\" checked=\"true\" indeterminate=\"true\">\r\n    <ic-checkbox-group label=\"Coffee\" hide-label=\"true\" slot=\"additional-field\" name=\"2\">\r\n      <ic-checkbox value=\"tea\" label=\"Tea\"></ic-checkbox>\r\n      <ic-checkbox value=\"coffee\" label=\"Coffee\" checked=\"true\" indeterminate=\"true\">\r\n        <ic-checkbox-group label=\"Coffees\" hide-label=\"true\" slot=\"additional-field\" name=\"3\">\r\n          <ic-checkbox value=\"mocha\" label=\"Mocha\"></ic-checkbox>\r\n          <ic-checkbox value=\"espresso\" label=\"Espresso\" checked=\"true\"></ic-checkbox>\r\n          <ic-checkbox value=\"cappuccino\" label=\"Cappuccino\"></ic-checkbox>\r\n        </ic-checkbox-group>\r\n      </ic-checkbox>\r\n      <ic-checkbox value=\"juice\" label=\"Juice\"></ic-checkbox>\r\n    </ic-checkbox-group>\r\n  </ic-checkbox>\r\n</ic-checkbox-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcCheckboxGroup label=\"Select your preferred drinks\" name=\"1\">\r\n  <IcCheckbox value=\"drinks\" label=\"Drinks\" checked indeterminate>\r\n    <IcCheckboxGroup name=\"2\" label=\"Coffee\" hideLabel slot=\"additional-field\">\r\n      <IcCheckbox value=\"tea\" label=\"Tea\" />\r\n      <IcCheckbox value=\"coffee\" label=\"Coffee\" checked indeterminate>\r\n        <IcCheckboxGroup label=\"Coffees\" hideLabel slot=\"additional-field\" name=\"3\">\r\n          <IcCheckbox value=\"mocha\" label=\"Mocha\" />\r\n          <IcCheckbox value=\"espresso\" label=\"Espresso\" checked />\r\n          <IcCheckbox value=\"cappuccino\" label=\"Cappuccino\" />\r\n        </IcCheckboxGroup>\r\n      </IcCheckbox>\r\n      <IcCheckbox value=\"juice\" label=\"Juice\" />\r\n    </IcCheckboxGroup>\r\n  </IcCheckbox>\r\n</IcCheckboxGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsIndeterminate}\r\n  style={{ marginTop: \"24px\" }}\r\n>\r\n  <IcCheckboxGroup label=\"Select your preferred drinks\" name=\"1\">\r\n    <IcCheckbox value=\"drinks\" label=\"Drinks\" checked indeterminate>\r\n      <IcCheckboxGroup\r\n        name=\"2\"\r\n        label=\"Coffee\"\r\n        hideLabel\r\n        slot=\"additional-field\"\r\n      >\r\n        <IcCheckbox value=\"tea\" label=\"Tea\" />\r\n        <IcCheckbox value=\"coffee\" label=\"Coffee\" checked indeterminate>\r\n          <IcCheckboxGroup\r\n            label=\"Coffees\"\r\n            hideLabel\r\n            slot=\"additional-field\"\r\n            name=\"3\"\r\n          >\r\n            <IcCheckbox value=\"mocha\" label=\"Mocha\" />\r\n            <IcCheckbox value=\"espresso\" label=\"Espresso\" checked />\r\n            <IcCheckbox value=\"cappuccino\" label=\"Cappuccino\" />\r\n          </IcCheckboxGroup>\r\n        </IcCheckbox>\r\n        <IcCheckbox value=\"juice\" label=\"Juice\" />\r\n      </IcCheckboxGroup>\r\n    </IcCheckbox>\r\n  </IcCheckboxGroup>\r\n</ComponentPreview>\r\n",
      "path": "/components/checkbox/code",
      "date": "2024-01-18",
      "title": "Checkbox",
      "status": "BETA",
      "subTitle": "Use checkboxes as part of a form, in dialogs and in control areas such as filters or settings.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/checkbox",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/checkbox"
        },
        {
          "title": "Code",
          "path": "/components/checkbox/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/checkbox/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\checkboxes\\code.mdx",
        "createdAt": "2024-04-04T12:41:43.858Z",
        "lastModified": "2024-04-04T12:41:43.858Z",
        "size": 15949,
        "formattedSize": "15.6 KB"
      }
    },
    {
      "id": "components\\checkboxes\\guidancex",
      "contents": "\r\nimport { IcCheckboxGroup, IcCheckbox } from \"@ukic/react\";\r\nimport checkboxFig1 from \"./images/fig-1-use-the-checklist-to-provide-a-number-of-options.png\";\r\nimport checkboxFig2 from \"./images/fig-2-use-single-checkboxes-to-allow-a-person-to-agree-to-a-statement.png\";\r\nimport checkboxFig3 from \"./images/fig-3-a-nested-checklist-that-shows-indeterminate-states-of-a-parent-checkbox-when-only-some-of-its-children-are-selected.png\";\r\nimport checkboxFig4 from \"./images/fig-4-use-dense-sizing-options-for-compact-layouts.png\";\r\nimport checkboxFig5 from \"./images/fig-5-checklist-error-state-shown-correctly.png\";\r\nimport checkboxFig6 from \"./images/fig-6-single-checkbox-error-state-shown-correctly.png\";\r\nimport checkboxFig7 from \"./images/fig-7-checkbox-child-input-error-shown-correctly.png\";\r\nimport checkboxFig8 from \"./images/fig-8-checkbox-child-input-error-shown-incorrectly.png\";\r\nimport checkboxFig9 from \"./images/fig-9-use-clear-and-concise-wording-in-checkbox-labels.png\";\r\nimport checkboxFig10 from \"./images/fig-10-do-not-use-ambiguous-wording.png\";\r\n\r\n## Introduction\r\n\r\nAn example of the checkbox component.\r\n\r\n<ComponentPreview>\r\n  <IcCheckboxGroup label=\"Select your extras\" name=\"1\">\r\n    <IcCheckbox value=\"extra\" label=\"Extra shot (50p)\" />\r\n    <IcCheckbox value=\"Soya milk\" label=\"Soya milk\" checked />\r\n    <IcCheckbox value=\"keep cup\" label=\"Takeaway cup\" disabled />\r\n  </IcCheckboxGroup>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse checkboxes to allow a user to select any number of options from a list. Checkboxes are grouped into a checkbox group to provide multiple options. Any number of options can be selected and any type of checkbox can be included within the checkbox group.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={checkboxFig1}\r\n    imageAlt=\"A checklist asking the question ‘What are your favourite types of coffee?’ with six options where two are checked.\"\r\n    state=\"good\"\r\n    caption=\"Use the checkbox group to provide a number of options that can be selected.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nUse a single checkbox on its own to allow a user to agree with a statement. For example, use a single checkbox to allow a user to mark whether they agree to a terms and conditions statement.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={checkboxFig2}\r\n    imageAlt=\"A single unchecked checkbox with a label that reads “I agree to the terms and conditions, and privacy statement”.\"\r\n    state=\"good\"\r\n    caption=\"Use single checkboxes to allow a person to agree to a statement.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nUse a checkbox with a conditional field to display a related additional element when that checkbox is selected. The conditional field can be set to static so that it is always visible and becomes enabled once the checkbox is selected. If the conditional field is set to dynamic the field is displayed only when the checkbox is selected.\r\n\r\n## When not to use\r\n\r\nDon’t use checkboxes when only one option from a list can be selected. For single select lists, use [radio buttons](/components/radio).\r\n\r\n## Interaction behaviour\r\n\r\nCheckboxes have three possible selection states: selected, unselected and indeterminate.\r\n\r\nDisplay the indeterminate selection state when the selection of child elements is mixed. Use the indeterminate checkbox to quickly select or de-select all child elements with one click.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={checkboxFig3}\r\n    imageAlt=\"A checkbox group asking ‘Which hot drinks do you like?’. A checkbox with label ‘coffee’ shows its indeterminate state as only one of its two child checkboxes is selected.\"\r\n    state=\"good\"\r\n    caption=\"A nested checkbox group that shows an indeterminate state on a parent checkbox when only some of its children are selected.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nCheckboxes are selected or unselected by clicking any part of the checkbox, including the label.\r\n\r\n### Sizing\r\n\r\nUse small sized checkbox groups for compact layouts. Always use small components with other small input components.\r\n\r\n<DoDontCaution\r\n  imageSrc={checkboxFig4}\r\n  imageAlt=\"Two forms containing a checklist and a text input. One uses default sizing resulting in larger spacing between components. The other uses small sizing that reduces space between components and results in a shorter vertical height for the same form.\"\r\n  state=\"good\"\r\n  caption=\"Use small sizing for compact layouts.\"\r\n/>\r\n\r\n### Validation\r\n\r\nThere are two types of error that can occur on a checkbox: a checkbox input error or an error on a checkbox’s conditional field.\r\n\r\nA checkbox input error is when the checkbox or checkbox group component itself is responsible for the error. This is shown using the checkbox error state.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={checkboxFig5}\r\n    imageAlt=\"A checklist asking 'What are your favourite types of coffee?' with helper text stating 'Select at least one'. Six options are shown but all are unchecked. An error message is displayed below the checklist reading 'Please select at least one option'.\"\r\n    state=\"good\"\r\n    caption=\"Checkbox group error state shown correctly.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={checkboxFig6}\r\n    imageAlt=\"An unchecked checkbox with label 'I agree to the terms and conditions and privacy statement' alongside a submit button. An error state is shown after the checkbox reading 'Please agree before continuing'.\"\r\n    state=\"good\"\r\n    caption=\"Single checkbox error state shown correctly.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nFor errors on a checkbox’s conditional field, the error is shown only on the conditional field itself and not the wider checkbox or checkbox group component.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={checkboxFig7}\r\n    imageAlt=\"A checklist asking ‘What are your favourite types of coffee’. Six options are shown and one labelled ‘Flat white’ is selected and shows a conditional field that asks ‘How frothy do you like it?’. An error message is displayed below the conditional field reading ‘Please provide an answer’.\"\r\n    state=\"good\"\r\n    caption=\"Checkbox conditional field error shown correctly.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={checkboxFig8}\r\n    imageAlt=\"A checklist asking ‘What are your favourite types of coffee?’. Six options are shown and one labelled ‘Flat white’ is selected and shows a child field that asks ‘How frothy do you like it?’. An error message is displayed below the child field reading ‘Please provide an answer’. Another error message is displayed below the checklist repeating the same error message.\"\r\n    state=\"bad\"\r\n    caption=\"Checkbox conditional field error shown incorrectly. Only the field needs to show the error state and not the parent checkbox or checkbox group.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Content\r\n\r\n### Labels\r\n\r\nFollow the [content style guidelines](/styles/content-style) for checkbox group labels as well as each individual checkbox label. Use the checkbox group label to ask the question, and use the checkbox options to provide possible answers.\r\n\r\nMake sure to use labels that make it easy to understand what selecting the checkbox represents. Avoid using ambiguous labels that make it unclear whether to select a checkbox or not.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={checkboxFig9}\r\n    imageAlt=\"A short form asking the user to agree to the terms and conditions. A single unchecked checkbox with label ‘I agree to the terms and conditions and privacy statement’ is shown alongside a submit button.\"\r\n    state=\"good\"\r\n    caption=\"Use clear and concise wording in checkbox labels that makes it easy to understand what selecting the box represents.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={checkboxFig10}\r\n    imageAlt=\"A short form asking the user to agree to the terms and conditions. A single unchecked checkbox with label ‘These are our terms and conditions and privacy statement’ is shown alongside a submit button.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t use ambiguous wording that makes it hard to understand what selecting the box represents.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Related components\r\n\r\n- [Radio button](/components/radio)\r\n",
      "path": "/components/checkbox",
      "navPriority": 8,
      "date": "2023-02-03",
      "title": "Checkbox",
      "status": "BETA",
      "subTitle": "Use checkboxes as part of a form, in dialogs or in control areas such as filters or settings.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/checkbox",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/checkbox"
        },
        {
          "title": "Code",
          "path": "/components/checkbox/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/checkbox/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\checkboxes\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.980Z",
        "lastModified": "2024-06-04T07:48:34.980Z",
        "size": 8822,
        "formattedSize": "8.6 KB"
      }
    },
    {
      "id": "components\\chips\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nChips can have `aria-labelledby` or `aria-label` tags that provide additional content to the visible label. However, the visible label must be included within the accessible label.\r\n\r\nWhen an interactive chip is disabled, the `aria-disabled` tag is set to `true`.\r\n\r\nMake sure that focus is moved to an intuitive element of the page after a chip is dismissed.\r\n\r\nWhen an icon is slotted into a chip, ensure it either has an accessible label provided through alt text on an `<img>`, a title element within an `<svg>`, or an `aria-label`. If the icon is purely decorative, use `aria-hidden=true` to hide it from assistive technology.\r\n\r\n## For Assistive Technology\r\n\r\nDismissible chips use the role of button as opposed to link in order to help users of assistive technologies understand that the button is performing an action on the page instead of navigating them to a new location. Users should be aware that activating the button will remove the chip from the list.\r\n\r\n## Based on\r\n\r\nThe chips component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      ARIA: button role\r\n    </ic-link>\r\n    , MDN web docs, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.lightningdesignsystem.com/components/pills/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Pills\r\n    </ic-link>\r\n    , Lightning Design System, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://ej2.syncfusion.com/angular/documentation/chips/accessibility/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Accessibility in Angular Chips component\r\n    </ic-link>\r\n    , Syncfusion, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.telerik.com/kendo-react-ui/components/button/chiplist/accessibility/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Accessibility: WAI-ARIA support\r\n    </ic-link>\r\n    , KendoReact, accessed July 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/chip/accessibility",
      "date": "2024-04-15",
      "title": "Chip",
      "status": "BETA",
      "subTitle": "Chips are used to filter and present data.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/chip",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/chip"
        },
        {
          "title": "Code",
          "path": "/components/chip/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/chip/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\chips\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.286Z",
        "lastModified": "2024-05-20T13:20:43.286Z",
        "size": 2862,
        "formattedSize": "2.8 KB"
      }
    },
    {
      "id": "components\\chips\\codex",
      "contents": "\r\nimport { IcChip } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-chip label=\"Americano\" dismissible=\"true\" id='my-chip'>\r\n  <svg\r\n    slot=\"icon\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"currentColor\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-label=\"coffee\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n</ic-chip>\r\n<ic-chip label=\"Cappuccino\">\r\n  <svg\r\n    slot=\"icon\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"currentColor\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-label=\"coffee\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n</ic-chip>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcChip label=\"Americano\" dismissible onIcDismiss={(ev) => console.log(ev)}>\r\n  <SlottedSVG\r\n    slot=\"icon\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"currentColor\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-label=\"coffee\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </SlottedSVG>\r\n</IcChip>\r\n<IcChip label=\"Cappuccino\">\r\n  <SlottedSVG\r\n    slot=\"icon\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"currentColor\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-label=\"coffee\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </SlottedSVG>\r\n</IcChip>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  style={{\r\n    gap: \"8px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  }}\r\n  snippets={snippetsDefault}\r\n>\r\n  <IcChip label=\"Americano\" dismissible>\r\n    <svg\r\n      slot=\"icon\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      aria-label=\"coffee\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </IcChip>\r\n  <IcChip label=\"Cappuccino\">\r\n    <svg\r\n      slot=\"icon\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      aria-label=\"coffee\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </IcChip>\r\n</ComponentPreview>\r\n\r\n## Chip details\r\n\r\n<ComponentDetails component=\"ic-chip\" />\r\n\r\n## Variants\r\n\r\n### Outline\r\n\r\nexport const snippetsOutline = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-chip label=\"Americano\" variant=\"outlined\">\r\n  <svg\r\n    slot=\"icon\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"currentColor\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-label=\"coffee\"\r\n  >\r\n    <path d=\"M2,21H20V19H2M20,8H18V5H20M20,3H4V13A4,4 0 0,0 8,17H14A4,4 0 0,0 18,13V10H20A2,2 0 0,0 22,8V5C22,3.89 21.1,3 20,3Z\"/>\r\n  </svg>\r\n</ic-chip>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcChip label=\"Americano\" variant=\"outlined\">\r\n  <SlottedSVG\r\n    slot=\"icon\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"currentColor\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-label=\"coffee\"\r\n  >\r\n    <path d=\"M2,21H20V19H2M20,8H18V5H20M20,3H4V13A4,4 0 0,0 8,17H14A4,4 0 0,0 18,13V10H20A2,2 0 0,0 22,8V5C22,3.89 21.1,3 20,3Z\"/>\r\n  </SlottedSVG>\r\n</IcChip>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  style={{\r\n    gap: \"8px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  }}\r\n  snippets={snippetsOutline}\r\n>\r\n  <IcChip label=\"Americano\" variant=\"outlined\">\r\n    <svg\r\n      slot=\"icon\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      aria-label=\"coffee\"\r\n    >\r\n      <path d=\"M2,21H20V19H2M20,8H18V5H20M20,3H4V13A4,4 0 0,0 8,17H14A4,4 0 0,0 18,13V10H20A2,2 0 0,0 22,8V5C22,3.89 21.1,3 20,3Z\" />\r\n    </svg>\r\n  </IcChip>\r\n</ComponentPreview>\r\n\r\n### Dismissible\r\n\r\nexport const snippetsDismissible = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-chip label=\"Americano\" dismissible=\"true\" id='my-chip'>\r\n  <svg\r\n    slot=\"icon\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"currentColor\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-label=\"coffee\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n</ic-chip>\r\n<script>\r\n  const chip = document.querySelector('#my-chip');\r\n  chip.addEventListener('icDismiss', (ev) => console.log(ev));\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcChip label=\"Americano\" dismissible onIcDismiss={(ev) => console.log(ev)}>\r\n  <SlottedSVG\r\n    slot=\"icon\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"currentColor\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-label=\"coffee\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </SlottedSVG>\r\n</IcChip>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  style={{\r\n    gap: \"8px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  }}\r\n  snippets={snippetsDismissible}\r\n>\r\n  <IcChip label=\"Americano\" dismissible onIcDismiss={(ev) => console.log(ev)}>\r\n    <svg\r\n      slot=\"icon\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      aria-label=\"coffee\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </IcChip>\r\n</ComponentPreview>\r\n\r\n### Disabled\r\n\r\nexport const snippetsDisabled = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-chip label=\"Americano\" dismissible=\"true\" disabled=\"true\">\r\n  <svg\r\n    slot=\"icon\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"currentColor\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-label=\"coffee\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </svg>\r\n</ic-chip>\r\n<ic-chip label=\"Americano\" variant=\"outlined\" dismissible=\"true\" disabled=\"true\">\r\n  <svg\r\n    slot=\"icon\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"currentColor\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-label=\"coffee\"\r\n  >\r\n    <path d=\"M2,21H20V19H2M20,8H18V5H20M20,3H4V13A4,4 0 0,0 8,17H14A4,4 0 0,0 18,13V10H20A2,2 0 0,0 22,8V5C22,3.89 21.1,3 20,3Z\"/>\r\n  </svg>\r\n</ic-chip>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcChip label=\"Americano\" dismissible disabled>\r\n  <SlottedSVG\r\n    slot=\"icon\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"currentColor\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-label=\"coffee\"\r\n  >\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\"/>\r\n  </SlottedSVG>\r\n</IcChip>\r\n<IcChip label=\"Americano\" variant=\"outlined\" dismissible disabled>\r\n  <SlottedSVG\r\n    slot=\"icon\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"currentColor\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-label=\"coffee\"\r\n  >\r\n    <path d=\"M2,21H20V19H2M20,8H18V5H20M20,3H4V13A4,4 0 0,0 8,17H14A4,4 0 0,0 18,13V10H20A2,2 0 0,0 22,8V5C22,3.89 21.1,3 20,3Z\"/>\r\n  </SlottedSVG>\r\n</IcChip>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  style={{\r\n    gap: \"8px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  }}\r\n  snippets={snippetsDisabled}\r\n>\r\n  <IcChip label=\"Americano\" dismissible disabled>\r\n    <svg\r\n      slot=\"icon\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      aria-label=\"coffee\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </IcChip>\r\n  <IcChip label=\"Americano\" variant=\"outlined\" dismissible disabled>\r\n    <svg\r\n      slot=\"icon\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      aria-label=\"coffee\"\r\n    >\r\n      <path d=\"M2,21H20V19H2M20,8H18V5H20M20,3H4V13A4,4 0 0,0 8,17H14A4,4 0 0,0 18,13V10H20A2,2 0 0,0 22,8V5C22,3.89 21.1,3 20,3Z\" />\r\n    </svg>\r\n  </IcChip>\r\n</ComponentPreview>\r\n",
      "path": "/components/chip/code",
      "date": "2024-02-28",
      "title": "Chip",
      "status": "BETA",
      "subTitle": "Chips are used to filter and present data.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/chip",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/chip"
        },
        {
          "title": "Code",
          "path": "/components/chip/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/chip/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\chips\\code.mdx",
        "createdAt": "2024-04-04T12:41:43.873Z",
        "lastModified": "2024-04-04T12:41:43.873Z",
        "size": 9311,
        "formattedSize": "9.1 KB"
      }
    },
    {
      "id": "components\\chips\\guidancex",
      "contents": "\r\nimport { IcChip } from \"@ukic/react\";\r\nimport chipsFig1 from \"./images/fig-1-use-dismissible-chips-for-filtering-multiple-item.png\";\r\nimport chipsFig2 from \"./images/fig-2-do-use-static-chip-to-display-descriptive-non-interactive-information.png\";\r\nimport chipsFig3 from \"./images/fig-3-do-not-replace-status-tags-for-static-chips.png\";\r\nimport chipsFig4 from \"./images/fig-4-do-use-status-tags-to-display-status.png\";\r\nimport chipsFig5 from \"./images/fig-5-avoid-using-long-labels-as-it-will-force-the-text-to-wrap.png\";\r\nimport chipsVid1 from \"./images/anim-1-do-allow-users-to-re-select-the-item-after-it-has-been-dismissed.mp4\";\r\nimport chipsVid2 from \"./images/anim-2-do-not-use-dismissible-chips-when-the-user-will-not-be-able-to-re-select-the-dismissed-item.mp4\";\r\n\r\n## Component variants\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }}>\r\n  <IcChip label=\"Americano\" dismissible>\r\n    <svg\r\n      slot=\"icon\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </IcChip>\r\n  <IcChip label=\"Cappuccino\">\r\n    <svg\r\n      slot=\"icon\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </IcChip>\r\n</ComponentPreview>\r\n\r\nThere are two types of chip: dismissible chips and static chips. Dismissible chips have both filled and outline variants and are interactive, whereas static chips simply present information and aren't actionable.\r\n\r\n### Dismissible chips\r\n\r\nUse a dismissible chip to show selected data from a user action that can be cleared by dismissing the chip. This is often used in the context of filtering and selection.\r\n\r\n#### Filled\r\n\r\nUse filled dismissible chips to provide high emphasis on the displayed information.\r\n\r\n#### Outlined\r\n\r\nUse outlined dismissible chips to provide low emphasis on the displayed information.\r\n\r\n### Static chips\r\n\r\nUse static chips to display information that does not need clearing. They aren't interactive, so they don't present any action and they can't be dismissed.\r\n\r\n## When to use\r\n\r\n### Dismissible chips\r\n\r\nUse dismissible chips when you need to choose multiple items from a list but need to show items after they've been chosen.\r\n\r\nCommon use cases include:\r\n\r\n- A list showing which filters have been selected for a search.\r\n- Choosing multiple recipients of a message.\r\n\r\n<DoDontCaution\r\n  imageSrc={chipsFig1}\r\n  imageAlt=\"A correct example of a series of dismissible chips being used in a multi-select dropdown to display a list of selected items.\"\r\n  state=\"good\"\r\n  caption=\"Use dismissible chips for filtering multiple items.\"\r\n/>\r\n\r\n### Static chips\r\n\r\nUse static chips when you need to simply display a piece of information with no interaction, such as a label.\r\n\r\nCommon use cases include:\r\n\r\n- Labelling or drawing attention to a particular card or row because of its state.\r\n\r\n- Displaying the current location of an item.\r\n\r\n<DoDontCaution\r\n  imageSrc={chipsFig2}\r\n  imageAlt=\"A correct example of three static chips labelled 'Published 18 May 2021', '#UI', and '#Components' right below the header of a page titled 'Guidance'.\"\r\n  state=\"good\"\r\n  caption=\"Use static chips to display descriptive, non-interactive information.\"\r\n/>\r\n\r\n## When not to use\r\n\r\n### Dismissible chips\r\n\r\nDon't use dismissible chips where the user can't re-select the item presented in the chip.\r\n\r\nFor example, if used to show a selected filter, after dismissing the chip and clearing the filter, it can be applied again later.\r\n\r\n<video\r\n  width=\"100%\"\r\n  muted\r\n  controls\r\n  loop\r\n  title=\"An animation showing the user dismissing a chip labelled 'Roasted' and the option not re-appearing in the filter section.\"\r\n>\r\n  <source src={chipsVid1} type=\"video/mp4\" />\r\n</video>\r\n\r\nDon't use dismissible chips when the user will not be able to re-select the dismissed item.\r\n\r\n<video\r\n  width=\"100%\"\r\n  muted\r\n  controls\r\n  loop\r\n  title=\"An animation showing the behaviour of a dismissible chip as it re-appears in the filter section when the user dismisses it.\"\r\n>\r\n  <source src={chipsVid2} type=\"video/mp4\" />\r\n</video>\r\n\r\nAllow users to re-select the item after it has been dismissed.\r\n\r\n### Static chips\r\n\r\nDon't use static chips to show status. Use [status tags](/components/status-tag) instead.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={chipsFig4}\r\n    imageAlt=\"Three chips, of which a neutral tag labelled 'Idle, a warning tag labelled 'Offline', and success tag labelled 'Online' displaying the status of three coffee machines.\"\r\n    state=\"good\"\r\n    caption=\"Use status tags to display status.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={chipsFig3}\r\n    imageAlt=\"Three static chips labelled 'Idle', 'Offline', and 'Online' displaying the status of three coffee machines.\"\r\n    state=\"bad\"\r\n    caption=\"Don't use static chips to denote status.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Layout and placement\r\n\r\n### Chip grouping\r\n\r\nWhen using chips in a group, make sure they are left aligned and are positioned next to each other in a row.\r\n\r\nOnly position chips on multiple rows if there isn't enough horizontal space to show them on one, or if they are segmented into labelled groups.\r\n\r\n## Content\r\n\r\n### Labels\r\n\r\nUse concise labels for better readability. Longer labels will force the text to wrap.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={chipsFig5}\r\n    imageAlt=\"An example of a long label being wrapped on two lines.\"\r\n    state=\"caution\"\r\n    caption=\"Avoid using long labels as it will force the text to wrap.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n### Icons\r\n\r\nUse an icon on the left of a dismissible or static chip to provide additional meaning.\r\n\r\nWhen including an icon in a chip make sure that the icon is understandable and relevant to the information presented.\r\n\r\nAlways provide alternative descriptions for icons, or mark them as decorative. Don't use icons if they aren't necessary.\r\n\r\n## Related components\r\n\r\n- [Status tags](/components/status-tag)\r\n",
      "path": "/components/chip",
      "navPriority": 9,
      "date": "2024-02-28",
      "title": "Chip",
      "status": "BETA",
      "subTitle": "Chips are used to filter and present data.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/chip",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/chip"
        },
        {
          "title": "Code",
          "path": "/components/chip/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/chip/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\chips\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.981Z",
        "lastModified": "2024-06-04T07:48:34.981Z",
        "size": 6824,
        "formattedSize": "6.7 KB"
      }
    },
    {
      "id": "components\\classification-banner\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nClassification banners use colours that have been designed for maximum legibility across a range of colour vision impairments.\r\n\r\n## For Assistive Technology\r\n\r\nFor screen reader users, classification banners feature a hidden label: “The protective marking of this page is:”. The classification banner is also announced as a landmark region.\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/classification-banner/accessibility",
      "date": "2024-04-15",
      "title": "Classification banner",
      "status": "BETA",
      "subTitle": "Classification banners are used to show the data classification (also known as protective marking) of an app.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/classification-banner",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/classification-banner"
        },
        {
          "title": "Code",
          "path": "/components/classification-banner/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/classification-banner/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\classification-banner\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.286Z",
        "lastModified": "2024-05-20T13:20:43.286Z",
        "size": 1223,
        "formattedSize": "1.2 KB"
      }
    },
    {
      "id": "components\\classification-banner\\codex",
      "contents": "\r\nimport { IcClassificationBanner } from \"@ukic/react\";\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-classification-banner></ic-classification-banner>\r\n<ic-classification-banner classification=\"official\"></ic-classification-banner>\r\n<ic-classification-banner classification=\"official-sensitive\"></ic-classification-banner>\r\n<ic-classification-banner classification=\"secret\"></ic-classification-banner>\r\n<ic-classification-banner classification=\"top-secret\"></ic-classification-banner>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcClassificationBanner inline />\r\n<IcClassificationBanner classification=\"official\"/>\r\n<IcClassificationBanner classification=\"official-sensitive\"/>\r\n<IcClassificationBanner classification=\"secret\"/>\r\n<IcClassificationBanner classification=\"top-secret\"/>`,\r\n  },\r\n];\r\n\r\n## Component demo\r\n\r\n<ComponentPreview snippets={snippets} style={{ gap: \"8px\" }}>\r\n  <IcClassificationBanner inline />\r\n  <IcClassificationBanner classification=\"official\" inline />\r\n  <IcClassificationBanner classification=\"official-sensitive\" inline />\r\n  <IcClassificationBanner classification=\"secret\" inline />\r\n  <IcClassificationBanner classification=\"top-secret\" inline />\r\n</ComponentPreview>\r\n\r\n## Classification banner details\r\n\r\n<ComponentDetails component=\"ic-classification-banner\" />\r\n\r\n## Variants\r\n\r\nexport const snippetsVariants = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-classification-banner classification=\"official\" up-to=\"true\" country=\"us\" additional-selectors=\"ukic\"></ic-classification-banner>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcClassificationBanner classification=\"official\" upTo=\"true\" country=\"us\" additionalSelectors=\"ukic\"/>`,\r\n  },\r\n];\r\n\r\n### Up to, country and additional selectors\r\n\r\n<ComponentPreview snippets={snippetsVariants} style={{ gap: \"8px\" }}>\r\n  <IcClassificationBanner\r\n    classification=\"official\"\r\n    inline\r\n    upTo=\"true\"\r\n    country=\"us\"\r\n    additionalSelectors=\"ukic\"\r\n  />\r\n</ComponentPreview>\r\n",
      "path": "/components/classification-banner/code",
      "date": "2023-02-03",
      "title": "Classification banner",
      "status": "BETA",
      "subTitle": "Classification banners are used to show the data classification (also known as protective marking) of an app.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/classification-banner",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/classification-banner"
        },
        {
          "title": "Code",
          "path": "/components/classification-banner/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/classification-banner/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\classification-banner\\code.mdx",
        "createdAt": "2024-04-04T12:41:43.889Z",
        "lastModified": "2024-04-04T12:41:43.889Z",
        "size": 2691,
        "formattedSize": "2.6 KB"
      }
    },
    {
      "id": "components\\classification-banner\\guidancex",
      "contents": "\r\nimport { IcClassificationBanner } from \"@ukic/react\";\r\n\r\n## Introduction\r\n\r\nProtective markings indicate the level of sensitivity of classified or controlled information.\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }}>\r\n  <IcClassificationBanner inline />\r\n  <IcClassificationBanner classification=\"official\" inline />\r\n  <IcClassificationBanner classification=\"official-sensitive\" inline />\r\n  <IcClassificationBanner classification=\"secret\" inline />\r\n  <IcClassificationBanner classification=\"top-secret\" inline />\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nAll apps, except public ones, require a classification banner. When multiple pieces of information require different markings, use classification banners on each component.\r\n\r\n## Layout and placement\r\n\r\nPlace a single banner at the bottom of the viewport. The banner is always fixed and should not scroll with the page.\r\n\r\n## Content\r\n\r\nIf there is information on a single page that has multiple different classifications, display the maximum classification with the text prefix of `UP TO`.\r\n\r\n## Colour\r\n\r\nDon’t alter or customise the [classification banner colours](/styles/colour#classification) as they've been designed to meet accessibility requirements.\r\n\r\n## Accessibility consideration\r\n\r\nMake sure the classification banner is the first item that is read out to people who use screen readers. Put the component at the top of the DOM/HTML.\r\n",
      "path": "/components/classification-banner",
      "navPriority": 10,
      "date": "2023-02-03",
      "title": "Classification banner",
      "status": "BETA",
      "subTitle": "Classification banners are used to show the data classification (also known as protective marking) of an app.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/classification-banner",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/classification-banner"
        },
        {
          "title": "Code",
          "path": "/components/classification-banner/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/classification-banner/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\classification-banner\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.982Z",
        "lastModified": "2024-06-04T07:48:34.982Z",
        "size": 2076,
        "formattedSize": "2.0 KB"
      }
    },
    {
      "id": "components\\data-entity\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nThe data entity component is descriptive and designed to inform the user in a comprehensive format about their inputs before making a submission. By including an interaction area, it provides users with a direct link or action to interact with an individual row.\r\n\r\n## For Assistive Technology\r\n\r\nThe data entity can either be interactive or non-interactive. It is therefore included in the tab-indexing for keyboard navigation as individual entity items, allowing it to be read out by screen readers using the aria-current attribute.\r\n\r\n## Based on\r\n\r\nThe data entity component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://design-system.service.gov.uk/patterns/check-answers/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Check answers\r\n    </ic-link>\r\n    , GOV.UK Design System, accessed September 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://dwpdigital.blog.gov.uk/2016/07/08/a-live-service-is-not-the-end-of-the-story/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      A live service is not the end of the story\r\n    </ic-link>\r\n    , DWP Digital, accessed September 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://ons-design-system.netlify.app/patterns/check-answers/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Help users to check answers\r\n    </ic-link>\r\n    , ONS, accessed September 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/data-entity/accessibility",
      "date": "2024-04-15",
      "title": "Data entity",
      "status": "BETA",
      "subTitle": "The data entity component displays a group of related data in a consistent and easy to consume way.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/data-entity",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/data-entity"
        },
        {
          "title": "Code",
          "path": "/components/data-entity/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/data-entity/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\data-entity\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.286Z",
        "lastModified": "2024-05-20T13:20:43.286Z",
        "size": 2271,
        "formattedSize": "2.2 KB"
      }
    },
    {
      "id": "components\\data-entity\\codex",
      "contents": "\r\nimport {\r\n  IcDataEntity,\r\n  IcDataRow,\r\n  IcLink,\r\n  IcTypography,\r\n  IcTextField,\r\n  IcButton,\r\n  IcStatusTag,\r\n} from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-data-entity heading=\"Order details\">\r\n    <ic-data-row label=\"Order name\" value=\"Michael\">\r\n      <ic-link href=\"#\" slot=\"end-component\">\r\n        Edit\r\n      </ic-link>\r\n    </ic-data-row>\r\n    <ic-data-row label=\"Drink\" value=\"Americano\">\r\n      <ic-link href=\"#\" slot=\"end-component\">\r\n        Edit\r\n      </ic-link>\r\n    </ic-data-row>\r\n    <ic-data-row label=\"Milk option\" value=\"Soya milk\">\r\n      <ic-link href=\"#\" slot=\"end-component\">\r\n        Edit\r\n      </ic-link>\r\n    </ic-data-row>\r\n    <ic-data-row label=\"Price\" value=\"£3.25\">\r\n      <ic-link href=\"#\" slot=\"end-component\">\r\n        Edit\r\n      </ic-link>\r\n    </ic-data-row>\r\n    <ic-data-row label=\"Payment method\">\r\n      <ic-typography variant=\"body\" slot=\"value\">\r\n        VISA ending 5896\r\n      </ic-typography>\r\n      <ic-link href=\"#\" slot=\"end-component\">\r\n        Edit\r\n      </ic-link>\r\n    </ic-data-row>\r\n    <ic-data-row label=\"Download receipt\" value=\"CoffeeOrder_X46w32.pdf\">\r\n      <ic-button variant=\"icon\" aria-label=\"Download\" slot=\"end-component\">\r\n        <svg viewBox=\"0 0 24 24\" height=\"24px\" width=\"24px\">\r\n          <path\r\n            d=\"M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n        </svg>\r\n      </ic-button>\r\n    </ic-data-row>\r\n  </ic-data-entity>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `  <IcDataEntity heading=\"Order details\">\r\n    <IcDataRow label=\"Order name\" value=\"Michael\">\r\n      <IcLink href=\"#\" slot=\"end-component\">\r\n        Edit\r\n      </IcLink>\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Drink\" value=\"Americano\">\r\n      <IcLink href=\"#\" slot=\"end-component\">\r\n        Edit\r\n      </IcLink>\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Milk option\" value=\"Soya milk\">\r\n      <IcLink href=\"#\" slot=\"end-component\">\r\n        Edit\r\n      </IcLink>\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Price\" value=\"£3.25\">\r\n      <IcLink href=\"#\" slot=\"end-component\">\r\n        Edit\r\n      </IcLink>\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Payment method\">\r\n      <IcTypography variant=\"body\" slot=\"value\">\r\n        VISA ending 5896\r\n      </IcTypography>\r\n      <IcLink href=\"#\" slot=\"end-component\">\r\n        Edit\r\n      </IcLink>\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Download receipt\" value=\"CoffeeOrder_X46w32.pdf\">\r\n      <IcButton variant=\"icon\" aria-label=\"Download\" slot=\"end-component\">\r\n        <SlottedSVG viewBox=\"0 0 24 24\" height=\"24px\" width=\"24px\">\r\n          <path\r\n            d=\"M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n        </SlottedSVG>\r\n      </IcButton>\r\n    </IcDataRow>\r\n  </IcDataEntity>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <IcDataEntity heading=\"Order details\" style={{ width: \"90%\" }}>\r\n    <IcDataRow label=\"Order name\" value=\"Michael\">\r\n      <IcLink href=\"#\" onClick={(e) => e.preventDefault()} slot=\"end-component\">\r\n        Edit\r\n      </IcLink>\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Drink\" value=\"Americano\">\r\n      <IcLink href=\"#\" onClick={(e) => e.preventDefault()} slot=\"end-component\">\r\n        Edit\r\n      </IcLink>\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Milk option\" value=\"Soya milk\">\r\n      <IcLink href=\"#\" onClick={(e) => e.preventDefault()} slot=\"end-component\">\r\n        Edit\r\n      </IcLink>\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Price\" value=\"£3.25\">\r\n      <IcLink href=\"#\" onClick={(e) => e.preventDefault()} slot=\"end-component\">\r\n        Edit\r\n      </IcLink>\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Payment method\">\r\n      <IcTypography variant=\"body\" slot=\"value\">\r\n        VISA ending 5896\r\n      </IcTypography>\r\n      <IcLink href=\"#\" onClick={(e) => e.preventDefault()} slot=\"end-component\">\r\n        Edit\r\n      </IcLink>\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Download receipt\" value=\"CoffeeOrder_X46w32.pdf\">\r\n      <IcButton variant=\"icon\" aria-label=\"Download\" slot=\"end-component\">\r\n        <svg viewBox=\"0 0 24 24\" height=\"24px\" width=\"24px\">\r\n          <path\r\n            d=\"M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n        </svg>\r\n      </IcButton>\r\n    </IcDataRow>\r\n  </IcDataEntity>\r\n</ComponentPreview>\r\n\r\n## Data row details\r\n\r\n<ComponentDetails component=\"ic-data-row\" />\r\n\r\n## Data entity details\r\n\r\n<ComponentDetails component=\"ic-data-entity\" />\r\n\r\n## Variants\r\n\r\n### With status tags\r\n\r\nexport const withStatusTags = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-data-entity heading=\"Order details\">\r\n    <ic-data-row label=\"Order name\" value=\"Michael\">\r\n    </ic-data-row>\r\n    <ic-data-row label=\"Drink\" value=\"Americano\">\r\n      <ic-status-tag\r\n        status=\"warning\"\r\n        label=\"In Progress\"\r\n        variant=\"filled\"\r\n        slot=\"end-component\"\r\n      />\r\n    </ic-data-row>\r\n    <ic-data-row label=\"Milk option\" value=\"Soya milk\">\r\n    </ic-data-row>\r\n    <ic-data-row label=\"Price\" value=\"£3.25\">\r\n    </ic-data-row>\r\n    <ic-data-row label=\"Payment method\">\r\n      <ic-typography variant=\"body\" slot=\"value\">\r\n        VISA ending 5896\r\n      </ic-typography>\r\n      <ic-status-tag\r\n        label=\"Not Confirmed\"\r\n        variant=\"filled\"\r\n        slot=\"end-component\"\r\n      />\r\n    </ic-data-row>\r\n  </ic-data-entity>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDataEntity heading=\"Order details\">\r\n    <IcDataRow label=\"Order name\" value=\"Michael\">\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Drink\" value=\"Americano\">\r\n      <IcStatusTag\r\n        status=\"warning\"\r\n        label=\"In Progress\"\r\n        variant=\"filled\"\r\n        slot=\"end-component\"\r\n      />\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Milk option\" value=\"Soya milk\">\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Price\" value=\"£3.25\">\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Payment method\">\r\n      <IcTypography variant=\"body\" slot=\"value\">\r\n        VISA ending 5896\r\n      </IcTypography>\r\n      <IcStatusTag\r\n        label=\"Not Confirmed\"\r\n        variant=\"filled\"\r\n        slot=\"end-component\"\r\n      />\r\n    </IcDataRow>\r\n  </IcDataEntity>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={withStatusTags}>\r\n  <IcDataEntity heading=\"Order details\" style={{ width: \"90%\" }}>\r\n    <IcDataRow label=\"Order name\" value=\"Michael\" />\r\n    <IcDataRow label=\"Drink\" value=\"Americano\">\r\n      <IcStatusTag\r\n        status=\"warning\"\r\n        label=\"In Progress\"\r\n        variant=\"filled\"\r\n        slot=\"end-component\"\r\n      />\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Milk option\" value=\"Soya milk\" />\r\n    <IcDataRow label=\"Price\" value=\"£3.25\" />\r\n    <IcDataRow label=\"Payment method\">\r\n      <IcTypography variant=\"body\" slot=\"value\">\r\n        VISA ending 5896\r\n      </IcTypography>\r\n      <IcStatusTag\r\n        label=\"Not Confirmed\"\r\n        variant=\"filled\"\r\n        slot=\"end-component\"\r\n      />\r\n    </IcDataRow>\r\n  </IcDataEntity>\r\n</ComponentPreview>\r\n\r\n### Size small\r\n\r\nexport const smallSnippet = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-data-entity heading=\"Personal details\" size=\"small\">\r\n  <ic-data-row label=\"Name\" value=\"Michael Johnson\">\r\n    <ic-status-tag\r\n      status=\"success\"\r\n      label=\"confirmed\"\r\n      variant=\"filled\"\r\n      slot=\"end-component\"\r\n      size=\"small\"\r\n    ></ic-status-tag>\r\n  </ic-data-row>\r\n  <ic-data-row label=\"Date of birth\" value=\"16 October 1995\">\r\n    <ic-status-tag\r\n      status=\"warning\"\r\n      label=\"in review\"\r\n      variant=\"filled\"\r\n      slot=\"end-component\"\r\n      size=\"small\"\r\n    ></ic-status-tag>\r\n  </ic-data-row>\r\n  <ic-data-row label=\"Telephone\" value=\"07449 7654873\">\r\n    <ic-status-tag\r\n      status=\"warning\"\r\n      label=\"in review\"\r\n      variant=\"filled\"\r\n      slot=\"end-component\"\r\n      size=\"small\"\r\n    ></ic-status-tag>\r\n  </ic-data-row>\r\n  <ic-data-row label=\"Email\" value=\"mjohnson@coffee.gov\">\r\n    <ic-status-tag\r\n      status=\"success\"\r\n      label=\"confirmed\"\r\n      variant=\"filled\"\r\n      slot=\"end-component\"\r\n      size=\"small\"\r\n    ></ic-status-tag>\r\n  </ic-data-row>\r\n  <ic-data-row label=\"Address\">\r\n    <ic-typography variant=\"body\" slot=\"value\">\r\n      383 Coffee Drive\r\n      <br />\r\n      London\r\n      <br />\r\n      SW7 988\r\n      <br />\r\n      United Kingdom\r\n    </ic-typography>\r\n    <ic-status-tag\r\n      label=\"not confirmed\"\r\n      variant=\"filled\"\r\n      slot=\"end-component\"\r\n      size=\"small\"\r\n    ></ic-status-tag>\r\n  </ic-data-row>\r\n</ic-data-entity>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDataEntity heading=\"Personal details\" size=\"small\">\r\n  <IcDataRow label=\"Name\" value=\"Michael Johnson\">\r\n    <IcStatusTag\r\n      status=\"success\"\r\n      label=\"confirmed\"\r\n      variant=\"filled\"\r\n      slot=\"end-component\"\r\n      size=\"small\"\r\n    />\r\n  </IcDataRow>\r\n  <IcDataRow label=\"Date of birth\" value=\"16 October 1995\">\r\n    <IcStatusTag\r\n      status=\"warning\"\r\n      label=\"in review\"\r\n      variant=\"filled\"\r\n      slot=\"end-component\"\r\n      size=\"small\"\r\n    />\r\n  </IcDataRow>\r\n  <IcDataRow label=\"Telephone\" value=\"07449 7654873\">\r\n    <IcStatusTag\r\n      status=\"warning\"\r\n      label=\"in review\"\r\n      variant=\"filled\"\r\n      slot=\"end-component\"\r\n      size=\"small\"\r\n    />\r\n  </IcDataRow>\r\n  <IcDataRow label=\"Email\" value=\"mjohnson@coffee.gov\">\r\n    <IcStatusTag\r\n      status=\"success\"\r\n      label=\"confirmed\"\r\n      variant=\"filled\"\r\n      slot=\"end-component\"\r\n      size=\"small\"\r\n    />\r\n  </IcDataRow>\r\n  <IcDataRow label=\"Address\">\r\n    <IcTypography variant=\"body\" slot=\"value\">\r\n      383 Coffee Drive\r\n      <br />\r\n      London\r\n      <br />\r\n      SW7 988\r\n      <br />\r\n      United Kingdom\r\n    </IcTypography>\r\n    <IcStatusTag\r\n      label=\"not confirmed\"\r\n      variant=\"filled\"\r\n      slot=\"end-component\"\r\n      size=\"small\"\r\n    />\r\n  </IcDataRow>\r\n</IcDataEntity>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={smallSnippet}>\r\n  <IcDataEntity\r\n    heading=\"Personal details\"\r\n    size=\"small\"\r\n    style={{ width: \"90%\" }}\r\n  >\r\n    <IcDataRow label=\"Name\" value=\"Michael Johnson\" />\r\n    <IcDataRow label=\"Date of birth\" value=\"16 October 1995\" />\r\n    <IcDataRow label=\"Telephone\" value=\"07449 7654873\" />\r\n    <IcDataRow label=\"Email\" value=\"mjohnson@coffee.gov\" />\r\n    <IcDataRow label=\"Address\">\r\n      <IcTypography variant=\"body\" slot=\"value\">\r\n        383 Coffee Drive\r\n        <br />\r\n        London\r\n        <br />\r\n        SW7 988\r\n        <br />\r\n        United Kingdom\r\n      </IcTypography>\r\n    </IcDataRow>\r\n  </IcDataEntity>\r\n</ComponentPreview>\r\n\r\n### Editable example\r\n\r\nexport const editableExample = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-data-entity heading=\"Order details\">\r\n  <ic-data-row label=\"Order name\"> \r\n    <ic-text-field \r\n      slot=\"value\" \r\n      label=\"Order name\" \r\n      value=\"Michael\" \r\n      readonly \r\n      hide-label \r\n      full-width\r\n    />\r\n  </ic-data-row>\r\n  <ic-data-row label=\"Drink\">\r\n    <ic-text-field \r\n      slot=\"value\" \r\n      label=\"Drink\" \r\n      value=\"Americano\" \r\n      readonly \r\n      hide-label \r\n      full-width\r\n    />\r\n  </ic-data-row>\r\n  <ic-data-row label=\"Milk option\">\r\n    <ic-text-field \r\n      slot=\"value\" \r\n      label=\"Milk option\" \r\n      value=\"Soya milk\" \r\n      readonly \r\n      hide-label \r\n      full-width\r\n    />\r\n  </ic-data-row>\r\n  <ic-data-row label=\"Price\">\r\n    <ic-text-field \r\n      slot=\"value\" \r\n      label=\"Price\" \r\n      value=\"£3.25\" \r\n      readonly \r\n      hide-label \r\n      full-width\r\n    />\r\n  </ic-data-row>\r\n  <ic-data-row label=\"Payment method\">\r\n    <ic-text-field \r\n      slot=\"value\" \r\n      label=\"Payment method\" \r\n      value=\"VISA ending 5896\"  \r\n      readonly \r\n      hide-label \r\n      full-width\r\n    />\r\n  </ic-data-row>\r\n</ic-data-entity>\r\n<ic-button id='confirm-button' style=\"margin-right: var(--ic-space-md);margin-top: var(--ic-space-lg);\">\r\n  Confirm\r\n</ic-button>\r\n<ic-button id='edit-button' variant=\"secondary\" style=\"margin-top: var(--ic-space-lg);\">\r\n  Edit\r\n</ic-button>\r\n<script>\r\n  const textFields = document.querySelectorAll('ic-text-field');\r\n  const confirmBtn = document.querySelector('#confirm-button');\r\n  confirmBtn.addEventListener('click', () => {\r\n    textFields.forEach((textField) => {\r\n      textField.setAttribute('readonly', '');\r\n    });\r\n  });\r\n  const editBtn = document.querySelector('#edit-button');\r\n  editBtn.addEventListener('click', () => {\r\n    textFields.forEach((textField) => {\r\n      textField.removeAttribute('readonly');\r\n    });\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDataEntity heading=\"Order details\">\r\n  <IcDataRow label=\"Order name\">\r\n    <IcTextField\r\n      slot=\"value\"\r\n      label=\"Order name\"\r\n      value=\"Michael\"\r\n      readonly\r\n      hide-label\r\n      full-width\r\n    />\r\n  </IcDataRow>\r\n  <IcDataRow label=\"Drink\" value=\"Americano\">\r\n    <IcTextField\r\n      slot=\"value\"\r\n      label=\"Drink\"\r\n      value=\"Americano\"\r\n      readonly\r\n      hide-label\r\n      full-width\r\n    />\r\n  </IcDataRow>\r\n  <IcDataRow label=\"Milk option\" value=\"Soya milk\">\r\n    <IcTextField\r\n      slot=\"value\"\r\n      label=\"Milk option\"\r\n      value=\"Soya milk\"\r\n      readonly\r\n      hide-label\r\n      full-width\r\n    />\r\n  </IcDataRow>\r\n  <IcDataRow label=\"Price\" value=\"£3.25\">\r\n    <IcTextField\r\n      slot=\"value\"\r\n      label=\"Price\"\r\n      value=\"£3.25\"\r\n      readonly\r\n      hide-label\r\n      full-width\r\n    />\r\n  </IcDataRow>\r\n  <IcDataRow label=\"Payment method\">\r\n    <IcTextField\r\n      slot=\"value\"\r\n      label=\"Payment method\"\r\n      value=\"VISA ending 5896\"\r\n      readonly\r\n      hide-label\r\n      full-width\r\n    />\r\n  </IcDataRow>\r\n</IcDataEntity>\r\n<IcButton\r\n  onClick={() => {\r\n    const textFields = document.querySelectorAll('ic-text-field');\r\n    textFields.forEach((textField) => {\r\n      textField.setAttribute('readonly', '');\r\n    })\r\n  }}\r\n  style={{\r\n    marginRight: \"var(--ic-space-md)\",\r\n    marginTop: \"var(--ic-space-lg)\",\r\n  }}\r\n>\r\n  Confirm\r\n</IcButton>\r\n<IcButton\r\n  onClick={() => {\r\n    const textFields = document.querySelectorAll('ic-text-field');\r\n    textFields.forEach((textField) => {\r\n      textField.removeAttribute('readonly');\r\n    })\r\n  }}\r\n  variant=\"secondary\"\r\n  style={{ marginTop: \"var(--ic-space-lg)\" }}\r\n>\r\n  Edit\r\n</IcButton>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={editableExample} style={{ display: \"block\" }}>\r\n  <IcDataEntity heading=\"Order details\" style={{ width: \"90%\" }}>\r\n    <IcDataRow label=\"Order name\">\r\n      <IcTextField\r\n        slot=\"value\"\r\n        label=\"Order name\"\r\n        value=\"Michael\"\r\n        readonly\r\n        hide-label\r\n        full-width\r\n      />\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Drink\" value=\"Americano\">\r\n      <IcTextField\r\n        slot=\"value\"\r\n        label=\"Drink\"\r\n        value=\"Americano\"\r\n        readonly\r\n        hide-label\r\n        full-width\r\n      />\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Milk option\" value=\"Soya milk\">\r\n      <IcTextField\r\n        slot=\"value\"\r\n        label=\"Milk option\"\r\n        value=\"Soya milk\"\r\n        readonly\r\n        hide-label\r\n        full-width\r\n      />\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Price\" value=\"£3.25\">\r\n      <IcTextField\r\n        slot=\"value\"\r\n        label=\"Price\"\r\n        value=\"£3.25\"\r\n        readonly\r\n        hide-label\r\n        full-width\r\n      />\r\n    </IcDataRow>\r\n    <IcDataRow label=\"Payment method\">\r\n      <IcTextField\r\n        slot=\"value\"\r\n        label=\"Payment method\"\r\n        value=\"VISA ending 5896\"\r\n        readonly\r\n        hide-label\r\n        full-width\r\n      />\r\n    </IcDataRow>\r\n  </IcDataEntity>\r\n  <IcButton\r\n    onClick={() => {\r\n      const textFields = document.querySelectorAll(\"ic-text-field\");\r\n      textFields.forEach((textField) => {\r\n        textField.setAttribute(\"readonly\", \"\");\r\n      });\r\n    }}\r\n    style={{\r\n      marginRight: \"var(--ic-space-md)\",\r\n      marginTop: \"var(--ic-space-lg)\",\r\n    }}\r\n  >\r\n    Confirm\r\n  </IcButton>\r\n  <IcButton\r\n    onClick={() => {\r\n      const textFields = document.querySelectorAll(\"ic-text-field\");\r\n      textFields.forEach((textField) => {\r\n        textField.removeAttribute(\"readonly\");\r\n      });\r\n    }}\r\n    variant=\"secondary\"\r\n    style={{ marginTop: \"var(--ic-space-lg)\" }}\r\n  >\r\n    Edit\r\n  </IcButton>\r\n</ComponentPreview>\r\n",
      "path": "/components/data-entity/code",
      "date": "2024-02-02",
      "title": "Data entity",
      "status": "BETA",
      "subTitle": "The data entity component displays a group of related data in a consistent and easy to consume way.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/data-entity",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/data-entity"
        },
        {
          "title": "Code",
          "path": "/components/data-entity/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/data-entity/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\data-entity\\code.mdx",
        "createdAt": "2024-04-04T12:41:43.889Z",
        "lastModified": "2024-04-04T12:41:43.889Z",
        "size": 16963,
        "formattedSize": "16.6 KB"
      }
    },
    {
      "id": "components\\data-entity\\guidancex",
      "contents": "\r\nimport { IcDataEntity, IcDataRow } from \"@ukic/react\";\r\nimport dataEntityFig1 from \"./images/fig-1-assign-interactions-to-individual-rows-within-the-interaction-area,-or-the-full-data-entity-table-by-using-buttons-at-the-end-of-the-table.png\";\r\nimport dataEntityFig2 from \"./images/fig-2-make-sure-the-data-in-the-cell-displays-in-its-correct-format.png\";\r\nimport dataEntityFig3 from \"./images/fig-3-do-not-pass-non-text-data-in-a-text-format.png\";\r\nimport dataEntityFig4 from \"./images/fig-4-set-the-width-of-all-data-entity-tables-on-a-page-to-the-same-size.png\";\r\nimport dataEntityFig5 from \"./images/fig-5-do-not-set-different-widths-for-different-data-entity-tables.png\";\r\nimport dataEntityFig6 from \"./images/fig-6-make-sure-that-a-data-entity-table-always-has-a-section-header.png\";\r\nimport dataEntityFig7 from \"./images/fig-7-do-not-omit-section-headers-from-data-entity-tables.png\";\r\n\r\n## Introduction\r\n\r\nAn example of the data entity component.\r\n\r\n<ComponentPreview>\r\n  <IcDataEntity heading=\"Order details\">\r\n    <IcDataRow label=\"Drink\" value=\"Espresso\" />\r\n    <IcDataRow label=\"Order name\" value=\"Michael\" />\r\n    <IcDataRow label=\"Price\" value=\"£2.80\" />\r\n  </IcDataEntity>\r\n</ComponentPreview>\r\n\r\n## Interaction behaviour\r\n\r\nUse the interaction area in a data entity row to provide an action to that row's data. For example, providing an edit link could display an edit screen so that the value can be changed.\r\n\r\nTo include interactions that affect the whole data entity, design a pattern using buttons with clear labels.\r\n\r\n<DoDontCaution\r\n  imageSrc={dataEntityFig1}\r\n  imageAlt=\"A data entity titled ‘Personal details’ with six rows. The first five include an ‘edit’ link button, while the sixth includes a download icon button. At the end of the data table there are two buttons, one labelled ‘submit’, and the second labelled ‘edit’.\"\r\n  state=\"good\"\r\n  caption=\"Assign interactions to individual rows within the interaction area, or the full data entity by using buttons at the end of the table.\"\r\n/>\r\n\r\n## Content\r\n\r\nCells display the following types of data in a specific format:\r\n\r\n- Text\r\n- Numbers\r\n- Date\r\n- Telephone\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={dataEntityFig2}\r\n    imageAlt=\"A data entity titled ‘details’ with four rows. The first row has a text entry in a text format, the second has a number in a number format, the third has a date in the correct date format, and the fourth has a telephone in the correct telephone format.\"\r\n    state=\"good\"\r\n    caption=\"Make sure the data in the cell displays in its correct format.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={dataEntityFig3}\r\n    imageAlt=\"A data entity titled ‘details’ with four rows. All four rows are displayed in normal text formatting even though they display a date, number and telephone.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t pass non-text data in a text format.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Sizing\r\n\r\nWhen multiple data entities are present on a page, make sure to size them all equally.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={dataEntityFig4}\r\n    imageAlt=\"An image of two data entities. The top component, labelled ‘personal details’ is the same width as the bottom one, labelled ‘order details’.\"\r\n    state=\"good\"\r\n    caption=\"Set the width of all data entities on a page to the same size.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={dataEntityFig5}\r\n    imageAlt=\"An image of two data entities. The top component, labelled ‘personal details’ is wider than the bottom one, labelled ‘order details’.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t set different widths for different data entities.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Layout and placement\r\n\r\nAlways include a section header, even when using a single row.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={dataEntityFig6}\r\n    imageAlt=\"An image of a data entity titled ‘Payment details’ with three rows.\"\r\n    state=\"good\"\r\n    caption=\"Make sure that a data entity always has a section header.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={dataEntityFig7}\r\n    imageAlt=\"An image of a data entity with three rows, but no title.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t omit section headers from data entities.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n",
      "path": "/components/data-entity",
      "navPriority": 11,
      "date": "2023-02-03",
      "title": "Data entity",
      "status": "BETA",
      "subTitle": "The data entity component displays a group of related data in a consistent and easy to consume way.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/data-entity",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/data-entity"
        },
        {
          "title": "Code",
          "path": "/components/data-entity/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/data-entity/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\data-entity\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.983Z",
        "lastModified": "2024-06-04T07:48:34.983Z",
        "size": 4880,
        "formattedSize": "4.8 KB"
      }
    },
    {
      "id": "components\\data-table\\codex",
      "contents": "\r\nimport { IcDataTable } from \"@ukic/canary-react\";\r\nimport { IcButton } from \"@ukic/react\";\r\nimport { useRef } from \"react\";\r\nimport {\r\n  COLUMNS,\r\n  DATA,\r\n  LONG_COLUMNS,\r\n  LONG_DATA,\r\n  ROW_HEADER_COLUMNS,\r\n  ROW_HEADER_DATA,\r\n  COLUMN_OVERRIDES,\r\n  ROW_OVERRIDES_DATA,\r\n  CELL_OVERRIDES_DATA,\r\n} from \"./story-data\";\r\n\r\n## Component demo\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-data-table caption=\"Basic Table\"></ic-data-table>\r\n<script>\r\n  const dataTable = document.querySelector(\"ic-data-table\");\r\n  const columns = [\r\n    {\r\n      key: \"firstName\",\r\n      title: \"First name\",\r\n      // dataType types: \"string\" | \"number\" | \"address\" | \"element\" | \"date\";\r\n      dataType: \"string\",\r\n    },\r\n    {\r\n      key: \"lastName\",\r\n      title: \"Last name\",\r\n      dataType: \"string\",\r\n    },\r\n    {\r\n      key: \"age\",\r\n      title: \"Age\",\r\n      dataType: \"number\",\r\n    },\r\n  ];\r\n  const data = [\r\n    {\r\n      firstName: \"Joe\",\r\n      lastName: \"Bloggs\",\r\n      age: 30,\r\n    },\r\n    {\r\n      firstName: \"Sarah\",\r\n      lastName: \"Smith\",\r\n      age: 28,\r\n    },\r\n    {\r\n      firstName: \"Mark\",\r\n      lastName: \"Owens\",\r\n      age: 45,\r\n    },\r\n  ];\r\n  dataTable.columns = columns;\r\n  dataTable.data = data;\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const columns = [\r\n  {\r\n    key: \"firstName\",\r\n    title: \"First name\",\r\n    dataType: \"string\",\r\n  },\r\n  {\r\n    key: \"lastName\",\r\n    title: \"Last name\",\r\n    dataType: \"string\",\r\n  },\r\n  {\r\n    key: \"age\",\r\n    title: \"Age\",\r\n    dataType: \"number\",\r\n  },\r\n];\r\nconst data = [\r\n  {\r\n    firstName: \"Joe\",\r\n    lastName: \"Bloggs\",\r\n    age: 30,\r\n  },\r\n  {\r\n    firstName: \"Sarah\",\r\n    lastName: \"Smith\",\r\n    age: 28,\r\n  },\r\n  {\r\n    firstName: \"Mark\",\r\n    lastName: \"Owens\",\r\n    age: 45,\r\n  },\r\n];\r\nconst DataTable = () => (\r\n  <IcDataTable caption=\"Basic\" columns={columns} data={data} />\r\n);`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDefault}>\r\n  <IcDataTable caption=\"Basic\" columns={COLUMNS} data={DATA} />\r\n</ComponentPreview>\r\n\r\n## Data table details\r\n\r\n<ComponentDetails component=\"ic-data-table\" canary />\r\n\r\n## Variants\r\n\r\n### Embedded\r\n\r\nexport const snippetsEmbedded = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-data-table caption=\"Embedded Table\" embedded=\"true\"></ic-data-table>\r\n<script>\r\n  const dataTable = document.querySelector(\"ic-data-table\");\r\n  // Copy columns and data arrays for 'basic' example\r\n  dataTable.columns = columns;\r\n  dataTable.data = data;\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDataTable\r\n  caption=\"Embedded\"\r\n  columns={columns} // Copy columns array for 'basic' example\r\n  data={data} // Copy data array for 'basic' example\r\n  embedded\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsEmbedded}>\r\n  <IcDataTable caption=\"Embedded\" columns={COLUMNS} data={DATA} embedded />\r\n</ComponentPreview>\r\n\r\n### Dense\r\n\r\nexport const snippetsDense = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-data-table caption=\"Dense Table\" density=\"dense\"></ic-data-table>\r\n<script>\r\n  const dataTable = document.querySelector(\"ic-data-table\");\r\n  // Copy columns and data arrays for 'basic' example\r\n  dataTable.columns = columns;\r\n  dataTable.data = data;\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDataTable\r\n  caption=\"Dense\"\r\n  columns={columns} // Copy columns array for 'basic' example\r\n  data={data} // Copy data array for 'basic' example\r\n  density=\"dense\"\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDense}>\r\n  <IcDataTable caption=\"Dense\" columns={COLUMNS} data={DATA} density=\"dense\" />\r\n</ComponentPreview>\r\n\r\n### Spacious\r\n\r\nexport const snippetsSpacious = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-data-table caption=\"Spacious Table\" density=\"spacious\"></ic-data-table>\r\n<script>\r\n  const dataTable = document.querySelector(\"ic-data-table\");\r\n  // Copy columns and data arrays for 'basic' example\r\n  dataTable.columns = columns;\r\n  dataTable.data = data;\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDataTable\r\n  caption=\"Spacious\"\r\n  columns={columns} // Copy columns array for 'basic' example\r\n  data={data} // Copy data array for 'basic' example\r\n  density=\"spacious\"\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsSpacious}>\r\n  <IcDataTable\r\n    caption=\"Spacious\"\r\n    columns={COLUMNS}\r\n    data={DATA}\r\n    density=\"spacious\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Sticky column headers\r\n\r\nexport const snippetsStickyColumnHeaders = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-data-table\r\n  style=\"height: 150px\"\r\n  caption=\"Sticky header Table\"\r\n  sticky-column-headers=\"true\"\r\n></ic-data-table>\r\n<script>\r\n  const dataTable = document.querySelector(\"ic-data-table\");\r\n  const long_columns = [\r\n    {\r\n      key: \"employeeNumber\",\r\n      title: \"Employee number\",\r\n      dataType: \"number\",\r\n      columnAlignment: { horizontal: \"left\" },\r\n    },\r\n    {\r\n      key: \"name\",\r\n      title: \"Name\",\r\n      dataType: \"string\",\r\n    },\r\n    ...\r\n  ];\r\n  const long_data = [\r\n    {\r\n      employeeNumber: 1,\r\n      name: \"Joe Bloggs\",\r\n      age: 30,\r\n    },\r\n    ...\r\n  ];\r\n  dataTable.columns = long_columns;\r\n  dataTable.data = long_data;\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const long_columns = [\r\n  {\r\n    key: \"employeeNumber\",\r\n    title: \"Employee number\",\r\n    dataType: \"number\",\r\n    columnAlignment: { horizontal: \"left\" },\r\n  },\r\n  {\r\n    key: \"name\",\r\n    title: \"Name\",\r\n    dataType: \"string\",\r\n  },\r\n  ...\r\n];\r\nconst long_data = [\r\n  {\r\n    employeeNumber: 1,\r\n    name: \"Joe Bloggs\",\r\n    age: 30,\r\n  },\r\n  ...\r\n];\r\nreturn (\r\n  <IcDataTable\r\n    style={{ height: '300px' }}\r\n    caption=\"Sticky Column Headers\"\r\n    columns={long_columns}\r\n    data={long_data}\r\n    stickyColumnHeaders\r\n  />\r\n);`,\r\n  },\r\n];\r\n\r\nexport const StickyColumnHeaders = () => {\r\n  const dataTableEl = useRef(null);\r\n  const stickHeader = (sticky) => {\r\n    dataTableEl.current.stickyColumnHeaders = sticky;\r\n  };\r\n  return (\r\n    <>\r\n      <IcDataTable\r\n        style={{ height: \"300px\" }}\r\n        ref={dataTableEl}\r\n        caption=\"Sticky Column Headers\"\r\n        columns={LONG_COLUMNS}\r\n        data={LONG_DATA}\r\n      />\r\n      <IcButton onClick={() => stickHeader(true)}>Stick Header</IcButton>\r\n      <IcButton onClick={() => stickHeader(false)}>Unstick Header</IcButton>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={snippetsStickyColumnHeaders}>\r\n  <StickyColumnHeaders />\r\n</ComponentPreview>\r\n\r\n### Row headers\r\n\r\nexport const snippetsRowHeaders = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-data-table caption=\"Row headers\"></ic-data-table>\r\n<script>\r\n  const dataTable = document.querySelector(\"ic-data-table\");\r\n  const columns = [\r\n    {\r\n      key: \"header\",\r\n      title: \"Job type\",\r\n      dataType: \"string\",\r\n    },\r\n    {\r\n      key: \"firstName\",\r\n      title: \"First name\",\r\n      dataType: \"string\",\r\n    },\r\n    ...\r\n  ];\r\n  const data = [\r\n    {\r\n      // Each data row requires a 'header' key/value pair like below\r\n      header: { title: 'Employee' },\r\n      firstName: \"Joe\",\r\n      lastName: \"Bloggs\",\r\n      age: 30,\r\n    },\r\n    ...\r\n  ];\r\n  dataTable.columns = columns;\r\n  dataTable.data = data;\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const columns = [\r\n  {\r\n    key: 'header',\r\n    title: 'Job Title',\r\n    dataType: 'string'\r\n  },\r\n  {\r\n    key: \"firstName\",\r\n    title: \"First name\",\r\n    dataType: \"string\",\r\n  },\r\n  ...\r\n];\r\nconst data = [\r\n  {\r\n    header: { title: 'Employee' },\r\n    firstName: \"Joe\",\r\n    lastName: \"Bloggs\",\r\n    age: 30,\r\n  },\r\n  ...\r\n];\r\nconst DataTable = () => (\r\n  <IcDataTable\r\n    caption=\"Row Headers\"\r\n    columns={columns}\r\n    data={data}\r\n  />\r\n);`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsRowHeaders}>\r\n  <IcDataTable\r\n    caption=\"Row Headers\"\r\n    columns={ROW_HEADER_COLUMNS}\r\n    data={ROW_HEADER_DATA}\r\n  />\r\n</ComponentPreview>\r\n\r\n### Sortable\r\n\r\nexport const snippetsSortable = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-data-table caption=\"Sort\" sortable=\"true\"></ic-data-table>\r\n<script>\r\n  const dataTable = document.querySelector(\"ic-data-table\");\r\n  // Copy columns and data arrays for 'basic' example\r\n  dataTable.columns = columns;\r\n  dataTable.data = data;\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDataTable\r\n  caption=\"Sort\"\r\n  columns={columns} // Copy columns array for 'basic' example\r\n  data={data} // Copy data array for 'basic' example\r\n  sortable\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsSortable}>\r\n  <IcDataTable caption=\"Sortable\" columns={COLUMNS} data={DATA} sortable />\r\n</ComponentPreview>\r\n\r\n### Sort options\r\n\r\nexport const snippetsSortOptions = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-data-table caption=\"Sort Options\" sortable=\"true\"></ic-data-table>\r\n<script>\r\n  const dataTable = document.querySelector(\"ic-data-table\");\r\n  dataTable.sortOptions = {\r\n    sortOrders: ['descending', 'unsorted'],\r\n    defaultColumn: 'firstName'\r\n  };\r\n  // Copy columns and data arrays for 'basic' example\r\n  dataTable.columns = columns;\r\n  dataTable.data = data;\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDataTable\r\n  caption=\"Sort Options\"\r\n  columns={columns} // Copy columns array for 'basic' example\r\n  data={data} // Copy data array for 'basic' example\r\n  sortable\r\n  sortOptions={{\r\n    sortOrders: [\"descending\", \"unsorted\"],\r\n    defaultColumn: \"firstName\",\r\n  }}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsSortOptions}>\r\n  <IcDataTable\r\n    caption=\"Sort Options\"\r\n    columns={COLUMNS}\r\n    data={DATA}\r\n    sortable\r\n    sortOptions={{\r\n      sortOrders: [\"descending\", \"unsorted\"],\r\n      defaultColumn: \"firstName\",\r\n    }}\r\n  />\r\n</ComponentPreview>\r\n\r\n### Pagination\r\n\r\nexport const snippetsPagination = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-data-table caption=\"Pagination\" show-pagination=\"true\"></ic-data-table>\r\n<script>\r\n  const dataTable = document.querySelector(\"ic-data-table\");\r\n  dataTable.paginationOptions = {\r\n    itemsPerPage: [\r\n      { label: \"5\", value: \"5\" },\r\n      { label: \"10\", value: \"10\" },\r\n      { label: \"15\", value: \"15\" },\r\n    ],\r\n    itemsPerPageControl: true,\r\n  };\r\n  const long_columns = [\r\n    {\r\n      key: \"employeeNumber\",\r\n      title: \"Employee number\",\r\n      dataType: \"number\",\r\n      columnAlignment: { horizontal: \"left\" },\r\n    },\r\n    {\r\n      key: \"name\",\r\n      title: \"Name\",\r\n      dataType: \"string\",\r\n    },\r\n    ...\r\n  ];\r\n  const long_data = [\r\n    {\r\n      employeeNumber: 1,\r\n      name: \"Joe Bloggs\",\r\n      age: 30,\r\n    },\r\n    ...\r\n  ];\r\n  dataTable.columns = long_columns;\r\n  dataTable.data = long_data;\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const long_columns = [\r\n  {\r\n    key: \"employeeNumber\",\r\n    title: \"Employee number\",\r\n    dataType: \"number\",\r\n    columnAlignment: { horizontal: \"left\" },\r\n  },\r\n  {\r\n    key: \"name\",\r\n    title: \"Name\",\r\n    dataType: \"string\",\r\n  },\r\n  ...\r\n];\r\nconst long_data = [\r\n  {\r\n    employeeNumber: 1,\r\n    name: \"Joe Bloggs\",\r\n    age: 30,\r\n  },\r\n  ...\r\n];\r\nreturn (\r\n  <IcDataTable\r\n    caption=\"Pagination\"\r\n    columns={long_columns}\r\n    data={long_data}\r\n    showPagination\r\n    paginationOptions={{\r\n      itemsPerPage: [\r\n        { label: \"5\", value: \"5\" },\r\n        { label: \"10\", value: \"10\" },\r\n        { label: \"15\", value: \"15\" },\r\n      ],\r\n      itemsPerPageControl: true,\r\n    }}\r\n  />\r\n);`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsPagination}>\r\n  <IcDataTable\r\n    caption=\"Pagination\"\r\n    columns={LONG_COLUMNS}\r\n    data={LONG_DATA}\r\n    showPagination\r\n    paginationOptions={{\r\n      itemsPerPage: [\r\n        { label: \"5\", value: \"5\" },\r\n        { label: \"10\", value: \"10\" },\r\n        { label: \"15\", value: \"15\" },\r\n      ],\r\n      itemsPerPageControl: true,\r\n    }}\r\n  />\r\n</ComponentPreview>\r\n\r\n### Column overrides\r\n\r\nexport const snippetsColumnOverrides = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-data-table caption=\"Column Overrides\"></ic-data-table>\r\n<script>\r\n  const dataTable = document.querySelector(\"ic-data-table\");\r\n  const columns = [\r\n    {\r\n      key: \"firstName\",\r\n      title: \"First name\",\r\n      dataType: \"string\",\r\n      columnAlignment: { horizontal: 'center', vertical: 'middle'},\r\n      emphasis: 'high',\r\n    },\r\n    ...\r\n  ];\r\n  dataTable.columns = columns;\r\n  dataTable.data = data; // Copy data array for 'basic' example\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const columns = [\r\n  {\r\n    key: \"firstName\",\r\n    title: \"First name\",\r\n    dataType: \"string\",\r\n    columnAlignment: { horizontal: 'center', vertical: 'middle'},\r\n    emphasis: 'high',\r\n  },\r\n  ...\r\n];\r\nreturn (\r\n  <IcDataTable\r\n    caption=\"Column overrides\"\r\n    columns={columns}\r\n    data={data} // Copy data array for 'basic' example\r\n  />\r\n);`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsColumnOverrides}>\r\n  <IcDataTable\r\n    caption=\"Column overrides\"\r\n    columns={COLUMN_OVERRIDES}\r\n    data={DATA}\r\n  />\r\n</ComponentPreview>\r\n\r\n### Row overrides\r\n\r\nexport const snippetsRowOverrides = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-data-table caption=\"Row Overrides\"></ic-data-table>\r\n<script>\r\n  const dataTable = document.querySelector(\"ic-data-table\");\r\n  const columns = [\r\n    {\r\n      key: \"header\",\r\n      title: \"Job type\",\r\n      dataType: \"string\",\r\n    },\r\n    {\r\n      key: \"firstName\",\r\n      title: \"First name\",\r\n      dataType: \"string\",\r\n    },\r\n    ...\r\n  ];\r\n  const data = [\r\n    {\r\n      header: {\r\n        title: 'Employee',\r\n        rowAlignment: 'middle',\r\n        emphasis: 'high'\r\n      }\r\n      firstName: \"Joe\",\r\n      lastName: \"Bloggs\",\r\n      age: 30,\r\n    },\r\n    ...\r\n  ];\r\n  dataTable.columns = columns;\r\n  dataTable.data = data;\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const columns = [\r\n  {\r\n    key: \"header\",\r\n    title: \"Job type\",\r\n    dataType: \"string\",\r\n  },\r\n  {\r\n    key: \"firstName\",\r\n    title: \"First name\",\r\n    dataType: \"string\",\r\n  },\r\n  ...\r\n];\r\nconst data = [\r\n  {\r\n    header: {\r\n      title: 'Employee',\r\n      rowAlignment: 'middle',\r\n      emphasis: 'high'\r\n    }\r\n    firstName: \"Joe\",\r\n    lastName: \"Bloggs\",\r\n    age: 30,\r\n  },\r\n  ...\r\n];\r\nreturn (\r\n  <IcDataTable\r\n    caption=\"Row overrides\"\r\n    columns={columns}\r\n    data={data}\r\n  />\r\n);`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsRowOverrides}>\r\n  <IcDataTable\r\n    caption=\"Row overrides\"\r\n    columns={ROW_HEADER_COLUMNS}\r\n    data={ROW_OVERRIDES_DATA}\r\n  />\r\n</ComponentPreview>\r\n\r\n### Cell overrides\r\n\r\nexport const snippetsCellOverrides = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-data-table caption=\"Cell Overrides\"></ic-data-table>\r\n<script>\r\n  const dataTable = document.querySelector(\"ic-data-table\");\r\n  const data = [\r\n    {\r\n      firstName: {\r\n        data: \"Joe\",\r\n        cellAlignment: { horizontal: \"center\", vertical: \"middle\" },\r\n        emphasis: \"high\",\r\n      },\r\n      lastName: \"Bloggs\",\r\n      age: 30,\r\n    },\r\n    ...\r\n  ];\r\n  dataTable.columns = columns; // Copy columns array for 'basic' example\r\n  dataTable.data = data;\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const data = [\r\n  {\r\n    firstName: {\r\n      data: \"Joe\",\r\n      cellAlignment: { horizontal: \"center\", vertical: \"middle\" },\r\n      emphasis: \"high\",\r\n    },\r\n    lastName: \"Bloggs\",\r\n    age: 30,\r\n  },\r\n  ...\r\n];\r\nreturn (\r\n  <IcDataTable\r\n    caption=\"Cell overrides\"\r\n    columns={columns} // Copy columns array for 'basic' example\r\n    data={data}\r\n  />\r\n);`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsCellOverrides}>\r\n  <IcDataTable\r\n    caption=\"Cell overrides\"\r\n    columns={COLUMNS}\r\n    data={CELL_OVERRIDES_DATA}\r\n  />\r\n</ComponentPreview>\r\n",
      "path": "/components/data-table/code",
      "date": "2024-04-30",
      "title": "Data table",
      "status": "CANARY",
      "subTitle": "Use a data table to organise and display large quantities of related data.",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/data-table"
        },
        {
          "title": "Code",
          "path": "/components/data-table/code"
        }
      ],
      "meta": {
        "relativePath": "components\\data-table\\code.mdx",
        "createdAt": "2024-05-20T13:20:43.286Z",
        "lastModified": "2024-05-20T13:20:43.286Z",
        "size": 16240,
        "formattedSize": "15.9 KB"
      }
    },
    {
      "id": "components\\data-table\\guidancex",
      "contents": "\r\nimport { IcAlert, IcLink } from \"@ukic/react\";\r\nimport { IcDataTable } from \"@ukic/canary-react\";\r\nimport { COLUMNS, DATA } from \"./story-data\";\r\n\r\n<IcAlert\r\n  heading=\"Canary component\"\r\n  variant=\"info\"\r\n  message=\"This component is new and its guidance will be updated over time.\"\r\n/>\r\n\r\n## Canary components\r\n\r\nCanary components are unstable components that are released for testing purposes.\r\n\r\nWe value any feedback from users willing to try them in their applications.\r\n\r\nThese components should not be used in production apps without understanding the risk that changes may occur in order to fix bugs or improve functionality.\r\n\r\nFor more information on canary components, read our approach to [releases and versions](/get-started/releases-versions).\r\n\r\n<p>\r\n  Additional details on the props and events for this component can be found in\r\n  the ICDS{\" \"}\r\n  <IcLink\r\n    href=\"https://mi6.github.io/ic-ui-kit/branches/develop/canary-web-components/?path=/docs/web-components-data-table--docs\"\r\n    target=\"_blank\"\r\n  >\r\n    Canary Web Components\r\n  </IcLink>{\" \"}\r\n  and{\" \"}\r\n  <IcLink\r\n    href=\"https://mi6.github.io/ic-ui-kit/branches/develop/canary-react/?path=/docs/react-components-data-table--docs\"\r\n    target=\"_blank\"\r\n  >\r\n    Canary React\r\n  </IcLink>{\" \"}\r\n  storybooks.\r\n</p>\r\n\r\n## Component demo\r\n\r\n<ComponentPreview>\r\n  <IcDataTable caption=\"Basic\" columns={COLUMNS} data={DATA} />\r\n</ComponentPreview>\r\n",
      "path": "/components/data-table",
      "navPriority": 12,
      "date": "2024-04-30",
      "title": "Data table",
      "status": "CANARY",
      "subTitle": "Use a data table to organise and display large quantities of related data.",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/data-table"
        },
        {
          "title": "Code",
          "path": "/components/data-table/code"
        }
      ],
      "meta": {
        "relativePath": "components\\data-table\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.984Z",
        "lastModified": "2024-06-04T07:48:34.984Z",
        "size": 1787,
        "formattedSize": "1.7 KB"
      }
    },
    {
      "id": "components\\date-input\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\n### Keyboard navigation\r\n\r\nThe day, month and year values of a date input focus from left to right with focus moving between each date element.\r\n\r\nThe day, month and year values can be updated using the up and down arrow keys. For example, if hovering day input, people can use the arrow keys to increase or decrease the day.\r\n\r\nPressing tab and shift tab will move the cursor between day, month and year. Pressing forward slash or dash (hyphen), will move the cursor from left to right as these are commonly used date separators.\r\n\r\nPeople can copy and paste into a date input component to quickly input a date into the date input field.\r\n\r\n## For assistive technology\r\n\r\n### Screen readers\r\n\r\nTo aid people in understanding how to navigate through a date input, the label, helper text and date input description are initially read out. The description announced for the date input includes the date format (if there is custom helper text) and how to add values using the arrow keys.\r\n\r\nWhen selecting the day using the arrow keys, the day and then the phrase 'day' is announced, for example \"01, day\".\r\n\r\nWhen selecting the month using arrow keys, the following message is announced, \"01 – January, month\".\r\n\r\nWhen selecting the year using arrow keys, the year and phrase 'year' are announced. For example, \"2024, year\".\r\n\r\nIf further updates to the input are made once day, month and year have been set, the screen reader will announce \"Selected date: _date changed to_\". For example, if the input was changed from 01/01/2023 to 02/01/2023, it will announce \"Selected date: Monday 2, January 2023\". \r\n\r\n## Based on\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/WCAG22/Understanding/concurrent-input-mechanisms.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Concurrent input mechanisms\r\n    </ic-link>\r\n    , Web Content Accessibility Guidelines (WCAG) 2.2, World Wide Web Consortium,\r\n    published 05 October 2023, accessed February 2024.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/TR/WCAG22/#identify-input-purpose\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Identify input purpose\r\n    </ic-link>\r\n    , Web Content Accessibility Guidelines (WCAG) 2.2, World Wide Web Consortium,\r\n    published 05 October 2023, accessed February 2024.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/TR/WCAG22/#input-modalities\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Input modalities\r\n    </ic-link>\r\n    , Web Content Accessibility Guidelines (WCAG) 2.2, World Wide Web Consortium,\r\n    published 05 October 2023, accessed February 2024.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/TR/WCAG22/#input-assistance\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Input assistance\r\n    </ic-link>\r\n    , Web Content Accessibility Guidelines (WCAG) 2.2, World Wide Web Consortium,\r\n    published 05 October 2023, accessed February 2024.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/date-input/accessibility",
      "date": "2024-04-30",
      "title": "Date input",
      "status": "CANARY",
      "subTitle": "A date input is used when gathering a specific date in a text-based format.",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/date-input"
        },
        {
          "title": "Code",
          "path": "/components/date-input/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/date-input/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\date-input\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:34.985Z",
        "lastModified": "2024-06-04T07:48:34.985Z",
        "size": 3703,
        "formattedSize": "3.6 KB"
      }
    },
    {
      "id": "components\\date-input\\codex",
      "contents": "\r\nimport { IcButton } from \"@ukic/react\";\r\nimport { IcDateInput } from \"@ukic/canary-react\";\r\n\r\n## Component demo\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-date-input label=\"When would you like to collect your coffee?\"></ic-date-input>\r\n<script>\r\n  const dateInput = document.querySelector(\"ic-date-input\");\r\n  dateInput.addEventListener(\"icChange\", function ({ detail }) {\r\n    console.log(detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDateInput\r\n  label=\"When would you like to collect your coffee?\"\r\n  onChange={({ detail }) => console.log(detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsDefault}\r\n  style={{\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"8px\",\r\n    alignItems: \"center\",\r\n  }}\r\n>\r\n  <IcDateInput\r\n    label=\"When would you like to collect your coffee?\"\r\n    onChange={({ detail }) => console.log(detail.value)}\r\n  />\r\n</ComponentPreview>\r\n\r\n## Date input details\r\n\r\n<ComponentDetails component=\"ic-date-input\" canary />\r\n\r\n## Variants\r\n\r\n### With values\r\n\r\n#### String\r\n\r\nexport const snippetsStringValue = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-date-input label=\"When would you like to collect your coffee?\" value=\"21/01/2001\"></ic-date-input>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDateInput label=\"When would you like to collect your coffee?\" value=\"21/01/2001\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsStringValue}>\r\n  <IcDateInput\r\n    label=\"When would you like to collect your coffee?\"\r\n    value=\"21/01/2001\"\r\n  />\r\n</ComponentPreview>\r\n\r\n#### Date object\r\n\r\nexport const snippetsDateObject = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-date-input label=\"When would you like to collect your coffee?\"></ic-date-input>\r\n<script>\r\n  const dateInputDate = document.querySelector(\"ic-date-input\");\r\n  dateInputDate.value = new Date(\"28 November 2021\");\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDateInput\r\n  label=\"When would you like to collect your coffee?\"\r\n  value={new Date(\"28 November 2021\")}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDateObject}>\r\n  <IcDateInput\r\n    label=\"When would you like to collect your coffee?\"\r\n    value={new Date(\"28 November 2021\")}\r\n  />\r\n</ComponentPreview>\r\n\r\n#### Zulu datetime\r\n\r\nexport const snippetsZulu = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-date-input label=\"When would you like to collect your coffee?\"></ic-date-input>\r\n<script>\r\n  const dateInputDate = document.querySelector(\"ic-date-input\");\r\n  dateInputDate.value = new Date(\"1 May 1990\").toISOString();\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDateInput\r\n  label=\"When would you like to collect your coffee?\"\r\n  value={new Date(\"1 May 1990\").toISOString()}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsZulu}>\r\n  <IcDateInput\r\n    label=\"When would you like to collect your coffee?\"\r\n    value={new Date(\"1 May 1990\").toISOString()}\r\n  />\r\n</ComponentPreview>\r\n\r\n#### String with hyphens\r\n\r\nexport const snippetsHyphens = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-date-input label=\"When would you like to collect your coffee?\"></ic-date-input>\r\n<script>\r\n  const dateInputDate = document.querySelector(\"ic-date-input\");\r\n  dateInputDate.value = \"25-05-2005\";\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDateInput label=\"When would you like to collect your coffee?\" value=\"25-05-2005\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsHyphens}>\r\n  <IcDateInput\r\n    label=\"When would you like to collect your coffee?\"\r\n    value=\"25-05-2005\"\r\n  />\r\n</ComponentPreview>\r\n\r\n#### Epoch date\r\n\r\nexport const snippetsEpoch = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-date-input label=\"When would you like to collect your coffee?\"></ic-date-input>\r\n<script>\r\n  const dateInputDate = document.querySelector(\"ic-date-input\");\r\n  dateInputString.value = Date.now();\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDateInput\r\n  label=\"When would you like to collect your coffee?\"\r\n  value={Date.now()}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsEpoch}>\r\n  <IcDateInput\r\n    label=\"When would you like to collect your coffee?\"\r\n    value={Date.now()}\r\n  />\r\n</ComponentPreview>\r\n\r\n### Required\r\n\r\nexport const snippetsRequired = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-date-input label=\"When would you like to collect your coffee?\" required=\"true\"></ic-date-input>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDateInput label=\"When would you like to collect your coffee?\" required />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsRequired}>\r\n  <IcDateInput label=\"When would you like to collect your coffee?\" required />\r\n</ComponentPreview>\r\n\r\n### Disabled\r\n\r\nexport const snippetsDisabled = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-date-input label=\"When would you like to collect your coffee?\" disabled=\"true\"></ic-date-input>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDateInput label=\"When would you like to collect your coffee?\" disabled />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDisabled}>\r\n  <IcDateInput label=\"When would you like to collect your coffee?\" disabled />\r\n</ComponentPreview>\r\n\r\n### Sizes\r\n\r\nexport const snippetsSizes = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-date-input label=\"When would you like to collect your coffee?\" size=\"small\"></ic-date-input>\r\n<ic-date-input label=\"When would you like to collect your coffee?\"></ic-date-input>\r\n<ic-date-input label=\"When would you like to collect your coffee?\" size=\"large\"></ic-date-input>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDateInput label=\"When would you like to collect your coffee?\" size=\"small\" />\r\n<IcDateInput label=\"When would you like to collect your coffee?\" />\r\n<IcDateInput label=\"When would you like to collect your coffee?\" size=\"large\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsSizes}\r\n  style={{\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"8px\",\r\n    alignItems: \"center\",\r\n  }}\r\n>\r\n  <IcDateInput\r\n    label=\"When would you like to collect your coffee?\"\r\n    size=\"small\"\r\n  />\r\n  <IcDateInput label=\"When would you like to collect your coffee?\" />\r\n  <IcDateInput\r\n    label=\"When would you like to collect your coffee?\"\r\n    size=\"large\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Custom helper text\r\n\r\nexport const snippetsCustomHelperText = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-date-input\r\n  label=\"When would you like to collect your coffee?\"\r\n  helper-text=\"We will have your order ready for you on this date\"\r\n></ic-date-input>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDateInput\r\n  label=\"When would you like to collect your coffee?\"\r\n  helperText=\"We will have your order ready for you on this date\"\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsCustomHelperText}>\r\n  <IcDateInput\r\n    label=\"When would you like to collect your coffee?\"\r\n    helperText=\"We will have your order ready for you on this date\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Custom validation\r\n\r\nexport const snippetsValidation = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-date-input\r\n  label=\"When would you like to collect your coffee?\"\r\n  validation-status=\"error\"\r\n  validation-text=\"There is a coffee shortage forecast for that day. Please choose a different date.\"\r\n></ic-date-input>\r\n<ic-date-input\r\n  label=\"When would you like to collect your coffee?\"\r\n  validation-status=\"warning\"\r\n  validation-text=\"Please be aware that there may be a coffee shortage on that day.\"\r\n></ic-date-input>\r\n<ic-date-input\r\n  label=\"When would you like to collect your coffee?\"\r\n  validation-status=\"success\"\r\n  validation-text=\"Your coffee will be available for you to collect on this day.\"\r\n></ic-date-input>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDateInput\r\n  label=\"When would you like to collect your coffee?\"\r\n  validationStatus=\"error\"\r\n  validationText=\"There is a coffee shortage forecast for that day. Please choose a different date.\"\r\n/>\r\n<IcDateInput\r\n  label=\"When would you like to collect your coffee?\"\r\n  validationStatus=\"warning\"\r\n  validationText=\"Please be aware that there may be a coffee shortage on that day.\"\r\n/>\r\n<IcDateInput\r\n  label=\"When would you like to collect your coffee?\"\r\n  validationStatus=\"success\"\r\n  validationText=\"Your coffee will be available for you to collect on this day.\"\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsValidation}\r\n  style={{\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"8px\",\r\n    alignItems: \"center\",\r\n  }}\r\n>\r\n  <IcDateInput\r\n    label=\"When would you like to collect your coffee?\"\r\n    validationStatus=\"error\"\r\n    validationText=\"There is a coffee shortage forecast for that day. Please choose a different date.\"\r\n  />\r\n  <IcDateInput\r\n    label=\"When would you like to collect your coffee?\"\r\n    validationStatus=\"warning\"\r\n    validationText=\"Please be aware that there may be a coffee shortage on that day.\"\r\n  />\r\n  <IcDateInput\r\n    label=\"When would you like to collect your coffee?\"\r\n    validationStatus=\"success\"\r\n    validationText=\"Your coffee will be available for you to collect on this day.\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Disabled past dates\r\n\r\nexport const snippetsDisabledPastDates = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-date-input label=\"When would you like to collect your coffee?\" disable-past=\"true\"></ic-date-input>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDateInput label=\"When would you like to collect your coffee?\" disablePast />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDisabledPastDates}>\r\n  <IcDateInput\r\n    label=\"When would you like to collect your coffee?\"\r\n    disablePast\r\n  />\r\n</ComponentPreview>\r\n\r\n### Disabled future dates\r\n\r\nexport const snippetsDisabledFutureDates = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-date-input label=\"When would you like to collect your coffee?\" disable-future=\"true\"></ic-date-input>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDateInput label=\"When would you like to collect your coffee?\" disableFuture />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDisabledFutureDates}>\r\n  <IcDateInput\r\n    label=\"When would you like to collect your coffee?\"\r\n    disableFuture\r\n  />\r\n</ComponentPreview>\r\n\r\n### Min and max\r\n\r\nexport const snippetsMinMax = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<ic-date-input\r\n  label=\"When would you like to collect your coffee?\"\r\n  min=\"02/01/2023\"\r\n  max=\"20-07-2023\"\r\n></ic-date-input>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDateInput\r\n  label=\"When would you like to collect your coffee?\"\r\n  min=\"02/01/2023\"\r\n  max=\"20-07-2023\"\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsMinMax}>\r\n  <IcDateInput\r\n    label=\"When would you like to collect your coffee?\"\r\n    min=\"02/01/2023\"\r\n    max=\"20-07-2023\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Form\r\n\r\nexport const snippetsForm = [\r\n  {\r\n    language: \"Web components\",\r\n    snippet: `<form>\r\n  <ic-date-input label=\"When would you like to collect your coffee?\" value=\"13/03/1951\"></ic-date-input>\r\n  <ic-button type=\"submit\" value=\"Submit\"></ic-button>\r\n  <ic-button type=\"reset\" value=\"Reset\"></ic-button>\r\n  <script>\r\n    document.querySelector(\"form\").addEventListener(\"submit\", (ev) => {\r\n      ev.preventDefault();\r\n      console.log(ev);\r\n    });\r\n  </script>\r\n</form>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const formSubmit = (ev) => {\r\n  ev.preventDefault();\r\n  console.log(ev);\r\n};\r\nreturn (\r\n  <form onSubmit={formSubmit}>\r\n    <IcDateInput label=\"When would you like to collect your coffee?\" value=\"13/03/1951\" />\r\n    <IcButton type=\"submit\">Submit</IcButton>\r\n    <IcButton type=\"reset\">Reset</IcButton>\r\n  </form>\r\n);`,\r\n  },\r\n];\r\n\r\nexport const FormDateInput = () => {\r\n  const formSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    console.log(ev);\r\n  };\r\n  return (\r\n    <form onSubmit={formSubmit}>\r\n      <IcDateInput\r\n        label=\"When would you like to collect your coffee?\"\r\n        value=\"13/03/1951\"\r\n      />\r\n      <IcButton type=\"submit\">Submit</IcButton>\r\n      <IcButton type=\"reset\">Reset</IcButton>\r\n    </form>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={snippetsForm}>\r\n  <FormDateInput />\r\n</ComponentPreview>\r\n",
      "path": "/components/date-input/code",
      "date": "2024-04-30",
      "title": "Date input",
      "status": "CANARY",
      "subTitle": "A date input is used when gathering a specific date in a text-based format.",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/date-input"
        },
        {
          "title": "Code",
          "path": "/components/date-input/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/date-input/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\date-input\\code.mdx",
        "createdAt": "2024-05-20T13:20:43.296Z",
        "lastModified": "2024-05-20T13:20:43.296Z",
        "size": 12903,
        "formattedSize": "12.6 KB"
      }
    },
    {
      "id": "components\\date-input\\guidancex",
      "contents": "\r\nimport { IcAlert, IcLink } from \"@ukic/react\";\r\nimport { IcDateInput } from \"@ukic/canary-react\";\r\nimport fig1 from \"./images/fig-1-do-use-date-input-to-collect-distant-dates.png\";\r\nimport fig2 from \"./images/fig-2-do-use-seperate-date-input-when-capturing-partial-dates.png\";\r\nimport fig3 from \"./images/fig-3-with-helper-text.png\";\r\nimport fig4 from \"./images/fig-4-with-no-helper-text.png\";\r\nimport fig5 from \"./images/fig-5-adjust-input-size-to-match-other-form-components.png\";\r\nimport fig6 from \"./images/fig-6-dont-use-mixed-size-components.png\";\r\nimport fig7 from \"./images/fig-7-short-date-input-width.png\";\r\nimport fig8 from \"./images/fig-8-matched-date-input-width.png\";\r\nimport fig9 from \"./images/fig-9-excessive-matched-date-input-width.png\";\r\nimport fig10 from \"./images/fig-10-success-validation.png\";\r\nimport fig11 from \"./images/fig-11-error-validation-correct.png\";\r\n\r\n<IcAlert\r\n  heading=\"Canary component\"\r\n  variant=\"info\"\r\n  message=\"This component is new and its guidance will be updated over time.\"\r\n/>\r\n\r\n## Canary components\r\n\r\nCanary components are unstable components that are released for testing purposes.\r\n\r\nWe value any feedback from users willing to try them in their applications.\r\n\r\nThese components should not be used in production apps without understanding the risk that changes may occur in order to fix bugs or improve functionality.\r\n\r\nFor more information on canary components, read our approach to [releases and versions](/get-started/releases-versions).\r\n\r\n<p>\r\n  Additional details on the props and events for this component can be found in\r\n  the ICDS{\" \"}\r\n  <IcLink\r\n    href=\"https://mi6.github.io/ic-ui-kit/branches/develop/canary-web-components/?path=/docs/web-components-date-input--docs\"\r\n    target=\"_blank\"\r\n  >\r\n    Canary Web Components\r\n  </IcLink>{\" \"}\r\n  and{\" \"}\r\n  <IcLink\r\n    href=\"https://mi6.github.io/ic-ui-kit/branches/develop/canary-react/?path=/docs/react-components-date-input--docs\"\r\n    target=\"_blank\"\r\n  >\r\n    Canary React\r\n  </IcLink>{\" \"}\r\n  storybooks.\r\n</p>\r\n\r\n## Component demo\r\n\r\n<ComponentPreview>\r\n  <IcDateInput label=\"When would you like to collect your coffee?\" />\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse a date input when asking people for a date they already know or can input without the use of a calendar.\r\n\r\nUse a date input to select a past, present or future date. For example, use a date input when asking for a person’s birthday as it may be quicker than navigating through a [date picker](/components/date-picker).\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={fig1}\r\n    imageAlt=\"A date input being used to select a birthday\"\r\n    caption=\"Use a date input to collect distant dates.\"\r\n    state=\"good\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## When not to use\r\n\r\nDo not use a date input when asking for parts of a date where some elements may not be known. For example, knowing the month and year, but not the day. Instead, consider using three separate fields for date, month and year, and set all to optional.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={fig2}\r\n    imageAlt=\"Three separate date inputs being used to capture day month and year independently.\"\r\n    caption=\"Three separate input fields can be used when capturing partial dates.\"\r\n    state=\"good\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Content\r\n\r\n### Labels\r\n\r\nUse [content styling](/styles/content-style/principles) for help with building effective labels for people using date input.\r\n\r\n### Helper text\r\n\r\nUse helper text to provide additional information.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={fig3}\r\n    imageAlt=\"An example of the benefits of using helper text in a date input.\"\r\n    caption=\"Use helper text to give context to the current required input.\"\r\n    state=\"good\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={fig4}\r\n    imageAlt=\"An example of a date input with no helper text included.\"\r\n    caption=\"Avoiding helper text removes context.\"\r\n    state=\"bad\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Date formatting\r\n\r\nUse the date input `dateFormat` property to change the default input format between DD/MM/YYYY, MM/DD/YYYY and YYYY/MM/DD. Use differing labels on the helper text and within a date input, when catering for regional input preferences.\r\n\r\n## Interaction behaviour\r\n\r\nUse the `disablePast` property when using date input to gather information about future dates, such as hotel bookings.\r\n\r\nUse the `disableFuture` property when using a date input to gather information about days in the past, such as birthdays.\r\n\r\nSet the default date on a date input to help people quickly complete the input by sticking with the default value. For example, set the default date to the next available delivery date when asking for a delivery date preference.\r\n\r\nDo not use default date when using date input to collect a date far in the past. For example, do not use “now” as default when asking for date of birth. Instead, use placeholder text of date format until the user selects their input.\r\n\r\nUse `html autofocus` to automatically focus a date input when it is the only input on a page.\r\n\r\nDo not use `html autofocus` on a date input when it is part of a form with other inputs.\r\n\r\nYou can copy and paste a complete date into the date input.\r\n\r\n## Sizing\r\n\r\nUse the date input size properties to change its vertical size and achieve compact or spacious layouts.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={fig5}\r\n    imageAlt=\"A date input matching the height of the button component next to it.\"\r\n    caption=\"Adjust a date input’s size properties to help it match the rest of your form.\"\r\n    state=\"good\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={fig6}\r\n    imageAlt=\"A date input that is larger than the button component it is next to.\"\r\n    caption=\"Don’t mix different sized components.\"\r\n    state=\"bad\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n### Width\r\n\r\nEnsure the width of the date input allows enough space for the full length of a person’s potential input.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={fig7}\r\n    imageAlt=\"A date input matching the width of its expected input.\"\r\n    caption=\"Where appropriate to form size, adjust the width of a date input to match other elements.\"\r\n    state=\"good\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={fig8}\r\n    imageAlt=\"A date input matching the width of other elements in a form.\"\r\n    state=\"bad\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n<DoDontCaution\r\n  imageSrc={fig9}\r\n  imageAlt=\"A date input matching the width of a much longer form element.\"\r\n  caption=\"Avoid matching a date input to considerably wider form elements.\"\r\n  state=\"caution\"\r\n/>\r\n\r\n## Validation\r\n\r\nUse validation on input fields to tell people when any warning or errors occur within their input. The date input component offers some standard validation scenarios as well as a method for creating custom validation scenarios.\r\n\r\nUse the custom validation options to configure your own validation scenarios. For example, if it is required that the input date must be after another specific date then use an error validation message if the input date doesn’t meet the condition.\r\n\r\nUse error, warning or success validation messages according to the validation scenario.\r\n\r\nUse error messaging when the person can’t proceed without fixing their input, and use a warning message when the input can be used, but may not be expected. For example, when capturing a date of birth, show a warning message if it would indicate the person being unreasonably old, such as with 01/01/1880.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={fig10}\r\n    imageAlt=\"A date input showing the successful validation of an input.\"\r\n    caption=\"Use success validation when checking input against limited availability.\"\r\n    state=\"good\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={fig11}\r\n    imageAlt=\"A date input correctly displaying an invalid entry errored state.\"\r\n    caption=\"Use the correct validation message with each validation state.\"\r\n    state=\"good\"\r\n  />\r\n</DoubleDoDontCaution>\r\n",
      "path": "/components/date-input",
      "navPriority": 13,
      "date": "2024-05-20",
      "title": "Date input",
      "status": "CANARY",
      "subTitle": "A date input is used when gathering a specific date in a text-based format.",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/date-input"
        },
        {
          "title": "Code",
          "path": "/components/date-input/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/date-input/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\date-input\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.987Z",
        "lastModified": "2024-06-04T07:48:34.987Z",
        "size": 8492,
        "formattedSize": "8.3 KB"
      }
    },
    {
      "id": "components\\date-picker\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nA [date input](/components/date-input) is contained within the date picker.\r\n\r\nFocus is managed in three sections within the date picker. The top section is managed left to right, through month and year selectors. The middle section contains the calendar view or month / year list, with focus depending on navigation method used. The bottom section contains the ‘go to today’ and ‘clear’ buttons, with focus managed left to right.\r\n\r\nThe date picker should act as a focus trap so the user only cycles through the date picker dropdown when the date picker is open.\r\n\r\nUse the clear icon in a [date input](/components/date-input) or clear button in a date picker to clear an input.\r\n\r\nThe date picker can be navigated with keyboard only input.\r\n\r\n## For Assistive Technology\r\n\r\nWhen moving to a date selection, screen readers will announce in the format “Monday 06 October 2023”.\r\n\r\nWhen focussing the date picker calendar dates, screen readers will announce the date as weekday, date, month and year sequentially, for example “Choose Wednesday, 8 November 2023”.\r\n\r\nWhen focus is trapped in the date picker dropdown screen, reader should announce route to exit focus. For example, “ic-date-picker, 03 July 2024, press ESC to exit”.\r\n\r\nThe date picker will only open when users select the date picker icon from within date input.\r\n\r\n## Based on\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/examples/datepicker-dialog/ \"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Web Content Accessibility Guidelines (WCAG) 2.2, World Wide Web Consortium\r\n    </ic-link>\r\n    , published 24 July 2023, accessed August 2023.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-datepicker/ \"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Web Content Accessibility Guidelines (WCAG) 2.2, World Wide Web Consortium\r\n    </ic-link>\r\n    , published 05 June 2018, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.nngroup.com/articles/date-input/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Date picker UX design guidelines, Nielson Norman Group\r\n    </ic-link>\r\n    , published 22 January 2017.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.aditus.io/patterns/accordion/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Web Content Accessibility Guidelines (WCAG) 2.2, World Wide Web Consortium\r\n    </ic-link>\r\n    , published 20 June 2023, accessed February 2024.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/date-picker/accessibility",
      "date": "2024-05-01",
      "title": "Date picker",
      "status": "CANARY",
      "subTitle": "A date picker is a type of drop-down control that allows people to easily view and select dates.",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/date-picker"
        },
        {
          "title": "Code",
          "path": "/components/date-picker/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/date-picker/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\date-picker\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:34.988Z",
        "lastModified": "2024-06-04T07:48:34.988Z",
        "size": 3332,
        "formattedSize": "3.3 KB"
      }
    },
    {
      "id": "components\\date-picker\\codex",
      "contents": "\r\nimport { IcDatePicker } from \"@ukic/canary-react\";\r\nimport { useState } from \"react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web Component\",\r\n    snippet: `<ic-date-picker label=\"When would you like to collect your coffee?\" />`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDatePicker label=\"When would you like to collect your coffee?\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <IcDatePicker label=\"When would you like to collect your coffee?\" />\r\n</ComponentPreview>\r\n\r\n## Date picker details\r\n\r\n<ComponentDetails component=\"ic-date-picker\" canary />\r\n\r\n## Variants\r\n\r\n### Sizes\r\n\r\nSet the size of the date picker by using the `size` prop. This prop takes the values `small`, `default` or `large`. Depending on the chosen size, the prop will apply styling to increase or decrease the amount of spacing within the component.\r\n\r\nexport const sizes = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-date-picker label=\"When would you like to collect your coffee?\" size=\"small\"></ic-date-picker>\r\n<ic-date-picker label=\"When would you like to collect your coffee?\" size=\"default\"></ic-date-picker>\r\n<ic-date-picker label=\"When would you like to collect your coffee?\" size=\"large\"></ic-date-picker>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDatePicker label=\"When would you like to collect your coffee?\" size=\"small\" />\r\n<IcDatePicker label=\"When would you like to collect your coffee?\" />\r\n<IcDatePicker label=\"When would you like to collect your coffee?\" size=\"large\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={sizes} style={{ flexDirection: \"column\" }}>\r\n  <div\r\n    style={{\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      gap: \"16px\",\r\n    }}\r\n  >\r\n    <IcDatePicker\r\n      label=\"When would you like to collect your coffee?\"\r\n      size=\"small\"\r\n    />\r\n    <IcDatePicker label=\"When would you like to collect your coffee?\" />\r\n    <IcDatePicker\r\n      label=\"When would you like to collect your coffee?\"\r\n      size=\"large\"\r\n    />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Max width\r\n\r\nSet the size of the input field by using the `--input-width` CSS custom property. The picker will grow, but not exceed its maximum supported width.\r\n\r\nexport const maxWidth = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-date-picker style=\"--input-width: 500px\" label=\"When would you like to collect your coffee?\" size=\"small\"></ic-date-picker>\r\n<ic-date-picker style=\"--input-width: 500px\" label=\"When would you like to collect your coffee?\" size=\"default\"></ic-date-picker>\r\n<ic-date-picker style=\"--input-width: 500px\" label=\"When would you like to collect your coffee?\" size=\"large\"></ic-date-picker>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDatePicker style={{ \"--input-width\": \"500px\" }} label=\"When would you like to collect your coffee?\" size=\"small\" />\r\n<IcDatePicker style={{ \"--input-width\": \"500px\" }} label=\"When would you like to collect your coffee?\" />\r\n<IcDatePicker style={{ \"--input-width\": \"500px\" }} label=\"When would you like to collect your coffee?\" size=\"large\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={maxWidth} style={{ flexDirection: \"column\" }}>\r\n  <div\r\n    style={{\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      gap: \"16px\",\r\n    }}\r\n  >\r\n    <IcDatePicker\r\n      style={{ \"--input-width\": \"500px\" }}\r\n      label=\"When would you like to collect your coffee?\"\r\n      size=\"small\"\r\n    />\r\n    <IcDatePicker\r\n      style={{ \"--input-width\": \"500px\" }}\r\n      label=\"When would you like to collect your coffee?\"\r\n    />\r\n    <IcDatePicker\r\n      style={{ \"--input-width\": \"500px\" }}\r\n      label=\"When would you like to collect your coffee?\"\r\n      size=\"large\"\r\n    />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Disabled\r\n\r\nexport const disabled = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-date-picker label=\"When would you like to collect your coffee?\" disabled></ic-date-picker>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDatePicker label=\"When would you like to collect your coffee?\" disabled />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={disabled} style={{ flexDirection: \"column\" }}>\r\n  <IcDatePicker label=\"When would you like to collect your coffee?\" disabled />\r\n</ComponentPreview>\r\n\r\n### Date formats\r\n\r\nThe `dateFormat` prop determines how dates are displayed. The supported formats are `DD/MM/YYYY`, `MM/DD/YYYY` or `YYYY/MM/DD`.\r\nThe default format is `DD/MM/YYYY`.\r\n\r\nexport const dateFormats = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-date-picker label=\"When would you like to collect your coffee?\" ></ic-date-picker>\r\n<ic-date-picker label=\"When would you like to collect your coffee?\" date-format=\"MM/DD/YYYY\" ></ic-date-picker>\r\n<ic-date-picker label=\"When would you like to collect your coffee?\" date-format=\"YYYY/MM/DD\" ></ic-date-picker>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDatePicker label=\"When would you like to collect your coffee?\" />\r\n<IcDatePicker label=\"When would you like to collect your coffee?\" dateFormat=\"MM/DD/YYYY\" />\r\n<IcDatePicker label=\"When would you like to collect your coffee?\" dateFormat=\"YYYY/MM/DD\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={dateFormats} style={{ flexDirection: \"column\" }}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n    <IcDatePicker label=\"When would you like to collect your coffee?\" />\r\n    <IcDatePicker\r\n      label=\"When would you like to collect your coffee?\"\r\n      dateFormat=\"MM/DD/YYYY\"\r\n    />\r\n    <IcDatePicker\r\n      label=\"When would you like to collect your coffee?\"\r\n      dateFormat=\"YYYY/MM/DD\"\r\n    />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Value\r\n\r\nThe `value` prop sets the date in the input field. The value can be in any format supported by the `dateFormat` prop, in ISO 8601 date string format (yyyy-mm-dd) or as a JavaScript Date object.\r\n\r\nexport const valueSnippet = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-date-picker label=\"When would you like to collect your coffee?\" value=\"01/01/2024\" ></ic-date-picker>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDatePicker label=\"When would you like to collect your coffee?\" value=\"01/01/2024\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={valueSnippet} style={{ flexDirection: \"column\" }}>\r\n  <IcDatePicker\r\n    label=\"When would you like to collect your coffee?\"\r\n    value=\"01/01/2024\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Open at date\r\n\r\nIf no `value` is set, the `openAtDate` prop can be used to specify the date in view when the calendar view is opened. If not set to a value, the calendar will default to showing the current date.\r\n\r\nThe supported formats are the same as for the `value` prop.\r\n\r\nexport const openDate = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-date-picker label=\"When would you like to collect your coffee?\" helper-text=\"The calendar will open showing 25th December 2024, if no date selected\" open-at-date=\"2024-12-25\" ></ic-date-picker>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDatePicker label=\"When would you like to collect your coffee?\" helperText=\"The calendar will open showing 25th December 2024, if no date selected\" openAtDate=\"2024-12-25\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={openDate} style={{ flexDirection: \"column\" }}>\r\n  <IcDatePicker\r\n    label=\"When would you like to collect your coffee?\"\r\n    helperText=\"The calendar will open showing 25th December 2024, if no date selected\"\r\n    openAtDate=\"2024-12-25\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Start of week\r\n\r\nThe first day of the week can be changed by setting the `startOfWeek` prop. This is a numeric value where 0 = Sunday, 1 = Monday, etc. up to 6 = Saturday.\r\n\r\nexport const startWeek = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-date-picker label=\"When would you like to collect your coffee?\" start-of-week=\"0\"></ic-date-picker>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDatePicker label=\"When would you like to collect your coffee?\" startOfWeek=\"0\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={startWeek} style={{ flexDirection: \"column\" }}>\r\n  <IcDatePicker\r\n    label=\"When would you like to collect your coffee?\"\r\n    startOfWeek=\"0\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Disable days of week\r\n\r\nSpecific days of the week can be disabled from selection by setting the `disableDays` prop. The value can be set as an array of numeric values where 0 = Sunday, 1 = Monday, etc. up to 6 = Saturday.\r\n\r\nexport const disabledDaysOfWeek = [0, 6];\r\n\r\nexport const disableDays = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-date-picker id=\"weekday-picker\" label=\"When would you like to collect your coffee?\" ></ic-date-picker>\r\n<script>\r\n  document.querySelector(\"#weekday-picker\").disableDays = [0, 6];\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const disabledDaysOfWeek = [0, 6 <IcDatePicker label=\"When would you like to collect your coffee?\" disableDays={disabledDaysOfWeek} />;`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={disableDays} style={{ flexDirection: \"column\" }}>\r\n  <IcDatePicker\r\n    label=\"When would you like to collect your coffee?\"\r\n    disableDays={disabledDaysOfWeek}\r\n  />\r\n</ComponentPreview>\r\n\r\n### Max and min\r\n\r\nThe `max` and `min` props can be used to limit the range of dates available for selection. Values can be in any format supported by the `dateFormat` prop, in ISO 8601 date string format (yyyy-mm-dd) or as a JavaScript Date object.\r\n\r\nexport const maxMin = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-date-picker label=\"When would you like to collect your coffee?\" helper-text=\"Choose a date between the 1st and 31st of July\" min=\"2024-07-01\" max=\"2024-07-31\" show-picker-today-button=\"false\" ></ic-date-picker>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDatePicker label=\"When would you like to collect your coffee?\" helperText=\"Choose a date between the 1st and 31st of July\" min=\"2024-07-01\" max=\"2024-07-31\" showPickerTodayButton=\"false\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={maxMin} style={{ flexDirection: \"column\" }}>\r\n  <IcDatePicker\r\n    label=\"When would you like to collect your coffee?\"\r\n    helperText=\"Choose a date between the 1st and 31st of July\"\r\n    min=\"2024-07-01\"\r\n    max=\"2024-07-31\"\r\n    showPickerTodayButton=\"false\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Disable dates in past\r\n\r\nDates before today can be disabled with the `disablePast` prop.\r\n\r\nexport const disablePast = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-date-picker label=\"When would you like to collect your coffee?\" disable-past ></ic-date-picker>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDatePicker label=\"When would you like to collect your coffee?\" disablePast />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={disablePast} style={{ flexDirection: \"column\" }}>\r\n  <IcDatePicker\r\n    label=\"When would you like to collect your coffee?\"\r\n    disablePast\r\n  />\r\n</ComponentPreview>\r\n\r\n### Disable dates in future\r\n\r\nDates after today can be disabled with the `disableFuture` prop.\r\n\r\nexport const disableFuture = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-date-picker label=\"When would you like to collect your coffee?\" disable-future ></ic-date-picker>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDatePicker label=\"When would you like to collect your coffee?\" disableFuture />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={disableFuture} style={{ flexDirection: \"column\" }}>\r\n  <IcDatePicker\r\n    label=\"When would you like to collect your coffee?\"\r\n    disableFuture\r\n  />\r\n</ComponentPreview>\r\n\r\n### Days outside month hidden\r\n\r\nDays outside of the current month in view can be hidden by setting the `showDaysOutsideMonth` prop to `false`.\r\n\r\nexport const dayHidden = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-date-picker label=\"When would you like to collect your coffee?\" show-days-outside-month=\"false\" ></ic-date-picker>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDatePicker label=\"When would you like to collect your coffee?\" showDaysOutsideMonth=\"false\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={dayHidden} style={{ flexDirection: \"column\" }}>\r\n  <IcDatePicker\r\n    label=\"When would you like to collect your coffee?\"\r\n    showDaysOutsideMonth=\"false\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Today and clear buttons hidden\r\n\r\nThe 'Go to today' and 'Clear' buttons can be hidden from the calendar view by setting the `showPickerTodayButton` and `showPickerClearButton` props to `false`.\r\n\r\nexport const btnHidden = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-date-picker label=\"When would you like to collect your coffee?\" show-picker-today-button=\"false\" show-picker-clear-button=\"false\" ></ic-date-picker>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDatePicker label=\"When would you like to collect your coffee?\" showPickerTodayButton=\"false\" showPickerClearButton=\"false\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={btnHidden} style={{ flexDirection: \"column\" }}>\r\n  <IcDatePicker\r\n    label=\"When would you like to collect your coffee?\"\r\n    showPickerTodayButton=\"false\"\r\n    showPickerClearButton=\"false\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Javascript dates\r\n\r\nAny prop that accepts a date value can be set to a Javascript Date object. The following example sets the `value`, `max` and `min` props.\r\n\r\nexport const jsDates = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-date-picker id=\"js-date-picker\" label=\"When would you like to collect your coffee?\" helper-text=\"Choose a date between the 1st and 31st of July\" show-picker-today-button=\"false\" ></ic-date-picker>\r\n<script>\r\n  const datePicker = document.querySelector(\"#js-date-picker\");\r\n  datePicker.min = new Date(2024, 6, 1);\r\n  datePicker.max = new Date(2024, 6, 31);\r\n  datePicker.value = new Date(2024, 6, 15);\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcDatePicker label=\"When would you like to collect your coffee?\" min={new Date(2024, 6, 1)} max={new Date(2024, 6, 31)} value={new Date(2024, 6, 15)} helperText=\"Choose a date between the 1st and 31st of July\" showPickerTodayButton=\"false\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={jsDates} style={{ flexDirection: \"column\" }}>\r\n  <IcDatePicker\r\n    label=\"When would you like to collect your coffee?\"\r\n    min={new Date(2024, 6, 1)}\r\n    max={new Date(2024, 6, 31)}\r\n    value={new Date(2024, 6, 15)}\r\n    helperText=\"Choose a date between the 1st and 31st of July\"\r\n    showPickerTodayButton=\"false\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### IcChange Event\r\n\r\nThe `IcChange` event is emitted by the date picker when the selected date changes.\r\n\r\nexport const change = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-date-picker id=\"js-date-picker\" label=\"When would you like to collect your coffee?\" helper-text=\"Choose a date between the 1st and 31st of July\" show-picker-today-button=\"false\" ></ic-date-picker>\r\n<script>\r\n  const datePicker = document.querySelector(\"#js-date-picker\");\r\n  datePicker.min = new Date(2024, 6, 1);\r\n  datePicker.max = new Date(2024, 6, 31);\r\n  datePicker.value = new Date(2024, 6, 15);\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `export const DatePickerWithIcChange = () => {\r\n  const [selectedDate, setSelectedDate] = useState('Selected date:');\r\n  const [value, setValue] = useState();\r\n  const dateChangedHandler = (event) => {\r\n    setValue(event.detail.value);\r\n    setSelectedDate(\"Selected date:\" + event.detail.value);\r\n  }\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"50px\" }}>\r\n      <IcDatePicker\r\n        label=\"When would you like to collect your coffee?\"\r\n        onIcChange={dateChangedHandler}\r\n        value={value}\r\n      />\r\n      <span>\r\n        {selectedDate}\r\n      </span>  \r\n    </div>\r\n  );\r\n};`,\r\n  },\r\n];\r\n\r\nexport const DatePickerWithIcChange = () => {\r\n  const [selectedDate, setSelectedDate] = useState(\"Selected date:\");\r\n  const [value, setValue] = useState();\r\n  const dateChangedHandler = (event) => {\r\n    setValue(event.detail.value);\r\n    setSelectedDate(`Selected date: ${event.detail.value}`);\r\n  };\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"50px\" }}>\r\n      <IcDatePicker\r\n        label=\"When would you like to collect your coffee?\"\r\n        onIcChange={dateChangedHandler}\r\n        value={value}\r\n      />\r\n      <span>{selectedDate}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={change} style={{ flexDirection: \"column\" }}>\r\n  <DatePickerWithIcChange />\r\n</ComponentPreview>\r\n",
      "path": "/components/date-picker/code",
      "date": "2024-05-01",
      "title": "Date picker",
      "status": "CANARY",
      "subTitle": "A date picker is a type of drop-down control that allows people to easily view and select dates.",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/date-picker"
        },
        {
          "title": "Code",
          "path": "/components/date-picker/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/date-picker/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\date-picker\\code.mdx",
        "createdAt": "2024-06-04T07:48:34.989Z",
        "lastModified": "2024-06-04T07:48:34.989Z",
        "size": 17040,
        "formattedSize": "16.6 KB"
      }
    },
    {
      "id": "components\\date-picker\\guidancex",
      "contents": "\r\nimport { IcAlert, IcLink } from \"@ukic/react\";\r\nimport { IcDatePicker } from \"@ukic/canary-react\";\r\nimport figure1 from \"./images/fig1-use-date-picker-to-visualise-dates.png\";\r\nimport figure2 from \"./images/fig2-avoid-using-for-distant-dates.png\";\r\nimport figure3 from \"./images/fig3-custom-width.png\";\r\nimport figure4 from \"./images/fig4-clear-error-message.png\";\r\n\r\n<IcAlert\r\n  heading=\"Canary component\"\r\n  variant=\"info\"\r\n  message=\"This component is new and its guidance will be updated over time.\"\r\n/>\r\n\r\n## Canary components\r\n\r\nCanary components are unstable components that are released for testing purposes.\r\n\r\nWe value any feedback from users willing to try them in their applications.\r\n\r\nThese components should not be used in production apps without understanding the risk that changes may occur in order to fix bugs or improve functionality.\r\n\r\nFor more information on canary components, read our approach to [releases and versions](/get-started/releases-versions).\r\n\r\n<p>\r\n  Additional details on the props and events for this component can be found in\r\n  the ICDS{\" \"}\r\n  <IcLink\r\n    href=\"https://mi6.github.io/ic-ui-kit/branches/develop/canary-web-components/?path=/docs/web-components-date-picker--docs\"\r\n    target=\"_blank\"\r\n  >\r\n    Canary Web Components\r\n  </IcLink>{\" \"}\r\n  and{\" \"}\r\n  <IcLink\r\n    href=\"https://mi6.github.io/ic-ui-kit/branches/develop/canary-react/?path=/docs/react-components-date-picker--docs\"\r\n    target=\"_blank\"\r\n  >\r\n    Canary React\r\n  </IcLink>{\" \"}\r\n  storybooks.\r\n</p>\r\n\r\n## Component demo\r\n\r\n<ComponentPreview>\r\n  <IcDatePicker label=\"When would you like to collect your coffee?\" />\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse a date picker to select an event that is near to the present time.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={figure1}\r\n    imageAlt=\"A date picker being used to select a nearby date\"\r\n    caption=\"Use a date picker to visualise and select dates.\"\r\n    state=\"good\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nUse a date picker to select a date that is known or desired, such as an appointment.\r\n\r\nUse a date picker to select a single date where visualising that date could be useful.\r\n\r\nUse a date picker when there is a need to view a date in context. For example, if there is a need to see which day of the week a future event occurs.\r\n\r\n## When not to use\r\n\r\nAvoid using a date picker for well-known dates, such as dates of birth, because it is often easier to type this into a field. For example, if selecting 30/07/1966, consider using [date input](/components/date-input) as a date picker would require many clicks to arrive at the same date.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={figure2}\r\n    imageAlt=\"A date picker being used to select a very distant date\"\r\n    caption=\"Avoid using a date picker when dealing with distant dates.\"\r\n    state=\"caution\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Sizing\r\n\r\nUse the date picker size properties to change its vertical size and achieve compact or spacious layouts.\r\n\r\n### Width\r\n\r\nUse the resizing options to increase or decrease width to match other elements in a form.\r\n\r\nUse the [date input](/components/date-input) resizing options to change size of the input and calendar between minimum and maximum widths. For example, to create a larger date picker, resize width of [date input](/components/date-input).\r\n\r\n<DoDontCaution\r\n  imageSrc={figure3}\r\n  imageAlt=\"Two date picker examples at their maximum and minimum width\"\r\n  caption=\"Change the width of the date input to adjust the date picker width.\"\r\n  state=\"good\"\r\n/>\r\n\r\n## Content\r\n\r\n### Labels\r\n\r\nUse [content styling](/styles/content-style/principles) for help with building effective labels for people using date input.\r\n\r\n### Helper text\r\n\r\nUse helper text to indicate restrictions in your date input such as not allowing weekends.\r\n\r\n### Placeholder\r\n\r\nUse a placeholder to demonstrate an example of the desired input. Do not add essential information into the placeholder as it will be hidden when a date is entered into the field.\r\n\r\n## Interaction\r\n\r\nSet `open-at-date` to specify the date in view when the date picker is opened. If no date is set, the date picker will default to showing the current date.\r\n\r\nThe [date input](/components/date-input) and the date picker update according to any input made. For example, if 10/10/2100 is entered in the [date input](/components/date-input), the date picker will open to display the selection.\r\n\r\n## Validation\r\n\r\n### Standard\r\n\r\nSee [date input](/components/date-input#validation) for detailed guidance on how to display errors within the date picker.\r\n\r\n{\" \"}\r\n\r\n<DoDontCaution\r\n  imageSrc={figure4}\r\n  imageAlt=\"A date picker with error caused by choosing a date outside of allowed range.\"\r\n  caption=\"Make sure to be clear and instructive when writing error messages. Avoid ambiguity or terms like please when writing error messages.\"\r\n  state=\"good\"\r\n/>\r\n",
      "path": "/components/date-picker",
      "navPriority": 14,
      "date": "2024-05-20",
      "title": "Date picker",
      "status": "CANARY",
      "subTitle": "A date picker is a type of drop-down control that allows people to easily view and select dates.",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/date-picker"
        },
        {
          "title": "Code",
          "path": "/components/date-picker/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/date-picker/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\date-picker\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.990Z",
        "lastModified": "2024-06-04T07:48:34.990Z",
        "size": 5395,
        "formattedSize": "5.3 KB"
      }
    },
    {
      "id": "components\\dialog\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nDialogs always include a dismiss button in the top right to provide a consistent way to quickly close a dialog and return to the previous page. Often, 'cancel' buttons are included in the interaction area at the bottom of the modal. These provide a specific decision to cancel the task, as opposed to simply closing the modal.\r\n\r\nWhen a dialog is open, the page in the background is effectively disabled. It cannot be scrolled and focus cannot be moved to any element on it. This is so that the user's attention is constrained to the content of the dialog until they choose an action to continue.\r\n\r\nFor dialogs that contain a primary action, focus is automatically applied to the primary action button when opened. This is so that it is easy to perform the main call-to-action if included.\r\n\r\nHowever, if a destructive action button is used, then focus is automatically applied to the dismiss button, as accidentally triggering the destructive action could be problematic. It also emphasises the user decision to choose to continue with the destructive action.\r\n\r\nIf a dialog contains interactive elements such as inputs or selection methods, then focus is automatically applied to the first interaction element in the body section. This follows a logical tab order when completing a task in a dialog.\r\n\r\nWhen a dialog is closed, focus returns to the element that triggered the dialog in the first place. This helps the user pick up where they left off.\r\n\r\n## For Assistive Technology\r\n\r\nDialogs resize to become full-screen on smaller devices to make use of all of the available screen space. This is especially useful when text is resized or the browser window is zoomed.\r\n\r\nDialogs always appear centred so that a consistent location is used to find them. This can be helpful to users of screen magnifiers as the position of dialogs is consistent and therefore easier to find if displayed outside of the magnified area.\r\n\r\nDialogs are announced by screen readers when displayed and their content can be navigated through using the virtual cursor.\r\n\r\n## Based on\r\n\r\nThe dialog component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.scottohara.me/blog/2023/01/26/use-the-dialog-element.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Use the dialog element (reasonably)\r\n    </ic-link>\r\n    , Scott O'Hara, published 26th January 2023, accessed February 2023.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.smashingmagazine.com/2021/07/accessible-dialog-from-scratch/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Creating An Accessible Dialog From Scratch\r\n    </ic-link>\r\n    , Kitty Giraudel, published 28th July 2021, accessed February 2023.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.nngroup.com/articles/modal-nonmodal-dialog/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Modal & Nonmodal Dialogs: When (& When Not) to Use Them\r\n    </ic-link>\r\n    , Therese Fessenden, NNg, published April 23rd 2017, accessed February 2023.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://adrianroselli.com/2020/10/dialog-focus-in-screen-readers.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Dialog Focus in Screen Readers\r\n    </ic-link>\r\n    , Adrian Roselli, updated 26th January 2023, accessed February 2023.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/dialog/accessibility",
      "date": "2024-04-15",
      "title": "Dialog",
      "status": "BETA",
      "subTitle": "Dialogs are modal windows that interrupt the user's current task to bring something important to attention.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/dialog",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/dialog"
        },
        {
          "title": "Code",
          "path": "/components/dialog/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/dialog/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\dialog\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.302Z",
        "lastModified": "2024-05-20T13:20:43.302Z",
        "size": 4203,
        "formattedSize": "4.1 KB"
      }
    },
    {
      "id": "components\\dialog\\codex",
      "contents": "\r\nimport {\r\n  IcAlert,\r\n  IcDialog,\r\n  IcButton,\r\n  IcCheckboxGroup,\r\n  IcCheckbox,\r\n  IcTypography,\r\n  IcSelect,\r\n} from \"@ukic/react\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nexport const buttonProps = [\r\n  {\r\n    label: \"Go back\",\r\n    onclick: \"this.cancelDialog()\",\r\n  },\r\n  {\r\n    label: \"Continue\",\r\n    onclick: \"alert('Added to basket'); this.open = false;\",\r\n  },\r\n];\r\n\r\n## Component demo\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<script>\r\n  const dialog = document.querySelector(\"#default-dialog\");\r\n  function showDialog() {    \r\n    dialog.open = true;\r\n  }\r\n  // Used if dismiss button is clicked\r\n  function hideDialog() { \r\n    if (dialog.open) {\r\n      dialog.open = false;\r\n    }   \r\n  }\r\n  function dialogConfirmed(ev) {\r\n    alert(\"Added to basket\");\r\n    dialog.open = false;\r\n  }\r\n  dialog.addEventListener(\"icDialogConfirmed\", dialogConfirmed);\r\n  dialog.addEventListener(\"icDialogClosed\", hideDialog);\r\n</script>\r\n<ic-button onclick=\"showDialog()\">Launch dialog</ic-button>\r\n<ic-dialog id=\"default-dialog\" heading=\"Are you sure?\" label=\"Coffee order\">\r\n  <ic-typography>\r\n    You are about to add 'Americano' to your basket. Are you sure you want to continue?\r\n  </ic-typography>\r\n</ic-dialog>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const [openDialog, setOpenDialog] = useState(false);\r\nconst handleDialogOpen = () => setOpenDialog(true);\r\nconst handleDialogClose = () => setOpenDialog(false);\r\nreturn (\r\n  <>\r\n    <IcButton onClick={handleDialogOpen}>Launch dialog</IcButton>\r\n    <IcDialog\r\n      heading=\"Are you sure?\"\r\n      label=\"Coffee order\"\r\n      open={openDialog}\r\n      // Set state to false if dismiss button is clicked\r\n      onIcDialogClosed={openDialog && handleDialogClose}\r\n      onIcDialogConfirmed={handleDialogClose}\r\n      onIcDialogCancelled={handleDialogClose}\r\n    >\r\n      <IcTypography>\r\n        You are about to add 'Americano' to your basket. Are you sure you want\r\n        to continue?\r\n      </IcTypography>\r\n    </IcDialog>\r\n  </>\r\n)\r\n    `,\r\n  },\r\n];\r\n\r\nexport const DefaultDialog = () => {\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const handleDialogOpen = () => setOpenDialog(true);\r\n  const handleDialogClose = () => setOpenDialog(false);\r\n  return (\r\n    <>\r\n      <IcButton onClick={handleDialogOpen}>Launch dialog</IcButton>\r\n      <IcDialog\r\n        heading=\"Are you sure?\"\r\n        label=\"Coffee order\"\r\n        open={openDialog}\r\n        onIcDialogClosed={openDialog && handleDialogClose} // Event fired when dismiss button is clicked\r\n        onIcDialogConfirmed={handleDialogClose}\r\n        onIcDialogCancelled={handleDialogClose}\r\n      >\r\n        <IcTypography>\r\n          You are about to add 'Americano' to your basket. Are you sure you want\r\n          to continue?\r\n        </IcTypography>\r\n      </IcDialog>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={snippetsDefault}>\r\n  <DefaultDialog />\r\n</ComponentPreview>\r\n\r\n## Dialog details\r\n\r\n<ComponentDetails component=\"ic-dialog\" />\r\n\r\n## Variants\r\n\r\n### Sizes\r\n\r\nexport const snippetsSizes = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<script>\r\n  const dialog = document.querySelector(\"#size-dialog\");\r\n  function showDialog() {\r\n    dialog.open = true;\r\n  }\r\n  function hideDialog() {\r\n    if (dialog.open) {\r\n      dialog.open = false;\r\n    }\r\n  }\r\n  function dialogConfirmed(ev) {\r\n    alert(\"Added to basket\");\r\n    dialog.open = false;\r\n  }\r\n  const dialog = document.querySelector(\"ic-dialog\");\r\n  dialog.addEventListener(\"icDialogConfirmed\", dialogConfirmed);\r\n  dialog.addEventListener(\"icDialogClosed\", hideDialog);\r\n</script>\r\n<ic-button onclick=\"showDialog('#size-dialog')\">Launch sizes dialog</ic-button>\r\n<ic-dialog\r\n  id=\"size-dialog\"\r\n  size=\"large\" // \"small\" | \"medium\" | \"large\"\r\n  heading=\"Are you sure?\"\r\n  label=\"Coffee order\"\r\n>\r\n  <ic-typography>\r\n    You are about to add 'Americano' to your basket. Are you sure you want to continue?\r\n  </ic-typography>\r\n</ic-dialog>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const [openDialog, setOpenDialog] = useState(false);\r\nconst handleDialogOpen = () => setOpenDialog(true);\r\nconst handleDialogClose = () => setOpenDialog(false);\r\nreturn (\r\n  <>\r\n    <IcButton onClick={handleDialogOpen}>Launch sizes dialog</IcButton>\r\n    <IcDialog\r\n      size=\"large\" // \"small\" | \"medium\" | \"large\"\r\n      open={openDialog}\r\n      label=\"Coffee order\" \r\n      heading=\"Are you sure?\"\r\n      onIcDialogClosed={openDialog && handleDialogClose}\r\n      onIcDialogConfirmed={handleDialogClose}\r\n      onIcDialogCancelled={handleDialogClose}\r\n    >\r\n      <IcTypography>\r\n        You are about to add 'Americano' to your basket. Are you sure you want to\r\n        continue?\r\n      </IcTypography>\r\n    </IcDialog>\r\n  </>\r\n);`,\r\n  },\r\n];\r\n\r\nexport const SizesDialogs = () => {\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const handleDialogOpen = () => setOpenDialog(true);\r\n  const handleDialogClose = () => setOpenDialog(false);\r\n  return (\r\n    <>\r\n      <IcButton onClick={handleDialogOpen}>Launch sizes dialog</IcButton>\r\n      <IcDialog\r\n        size=\"large\"\r\n        open={openDialog}\r\n        label=\"Coffee order\"\r\n        heading=\"Are you sure?\"\r\n        onIcDialogClosed={openDialog && handleDialogClose}\r\n        onIcDialogConfirmed={handleDialogClose}\r\n        onIcDialogCancelled={handleDialogClose}\r\n      >\r\n        <IcTypography>\r\n          You are about to add 'Americano' to your basket. Are you sure you want\r\n          to continue?\r\n        </IcTypography>\r\n      </IcDialog>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={snippetsSizes}>\r\n  <SizesDialogs />\r\n</ComponentPreview>\r\n\r\n### With status alerts\r\n\r\nexport const snippetsAlert = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<script>\r\n  const dialog = document.querySelector(\"#status-dialog\");\r\n  function showDialog() {\r\n    dialog.open = true;\r\n  }\r\n  function hideDialog() {\r\n    if (dialog.open) {\r\n      dialog.open = false;\r\n    }\r\n  }\r\n  function dialogConfirmed(ev) {\r\n    alert(\"Added to basket\");\r\n    dialog.open = false;\r\n  }\r\n  const dialog = document.querySelector(\"ic-dialog\");\r\n  dialog.addEventListener(\"icDialogConfirmed\", dialogConfirmed);\r\n  dialog.addEventListener(\"icDialogClosed\", hideDialog);\r\n</script>\r\n<ic-button onclick=\"showDialog('#status-dialog')\">Launch status dialog</ic-button>\r\n<ic-dialog\r\n  id=\"status-dialog\"\r\n  heading=\"Are you sure?\"\r\n  label=\"Coffee order\"\r\n  size=\"medium\"\r\n>\r\n  <ic-alert\r\n    slot=\"alert\"\r\n    heading=\"They're both good\"\r\n    message=\"Some say tea is just as good as coffee.\"\r\n    variant=\"neutral\" // \"neutral\" | \"info\" | \"warn\" | \"error\" | \"success\"\r\n    title-above=\"true\"\r\n  >\r\n  </ic-alert>\r\n  <ic-typography>\r\n    You are about to add 'Americano' to your basket. Are you sure you want to continue?\r\n  </ic-typography>\r\n</ic-dialog>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const [openDialog, setOpenDialog] = useState(false);\r\nconst handleDialogOpen = () => setOpenDialog(true);\r\nconst handleDialogClose = () => setOpenlDialog(false);\r\nreturn (\r\n  <>\r\n    <IcButton\r\n      variant=\"primary\"\r\n      onClick={handleDialogOpen}\r\n    >\r\n      Launch status dialog\r\n    </IcButton>\r\n    <IcDialog\r\n      open={openDialog}\r\n      heading=\"Are you sure?\"\r\n      label=\"Coffee order\"\r\n      onIcDialogClosed={openDialog && handleDialogClose}\r\n      onIcDialogConfirmed={handleDialogClose}\r\n      onIcDialogCancelled={handleDialogClose}\r\n      size=\"medium\"\r\n    >\r\n      <IcAlert\r\n        slot=\"alert\"\r\n        heading=\"They're both good\"\r\n        message=\"Some say tea is just as good as coffee.\"\r\n        variant=\"neutral\" // \"neutral\" | \"info\" | \"warn\" | \"error\" | \"success\" \r\n        titleAbove\r\n      />\r\n      <IcTypography>\r\n        You are about to add 'Americano' to your basket. Are you sure you want\r\n        to continue?\r\n      </IcTypography>\r\n    </IcDialog>\r\n  </>\r\n);`,\r\n  },\r\n];\r\n\r\nexport const AlertDialog = () => {\r\n  const dialogEl = useRef(null);\r\n  const addTitleAboveAttribute = () => {\r\n    dialogEl.current\r\n      .querySelector(\"ic-alert\")\r\n      .setAttribute(\"title-above\", \"true\");\r\n  };\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const handleDialogOpen = () => {\r\n    addTitleAboveAttribute();\r\n    setOpenDialog(true);\r\n  };\r\n  const handleDialogClose = () => setOpenDialog(false);\r\n  return (\r\n    <>\r\n      <IcButton variant=\"primary\" onClick={handleDialogOpen}>\r\n        Launch dialog\r\n      </IcButton>\r\n      <IcDialog\r\n        ref={dialogEl}\r\n        open={openDialog}\r\n        heading=\"Are you sure?\"\r\n        label=\"Coffee order\"\r\n        onIcDialogClosed={openDialog && handleDialogClose}\r\n        onIcDialogConfirmed={handleDialogClose}\r\n        onIcDialogCancelled={handleDialogClose}\r\n        size=\"medium\"\r\n      >\r\n        <IcAlert\r\n          slot=\"alert\"\r\n          heading=\"They're both good\"\r\n          message=\"Some say tea is just as good as coffee.\"\r\n          variant=\"neutral\"\r\n          titleAbove\r\n        />\r\n        <IcTypography>\r\n          You are about to add 'Americano' to your basket. Are you sure you want\r\n          to continue?\r\n        </IcTypography>\r\n      </IcDialog>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={snippetsAlert}>\r\n  <AlertDialog />\r\n</ComponentPreview>\r\n\r\n### Button variations\r\n\r\nexport const snippetsCustomButtons = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<script>\r\n  const singleButtonDialog = document.querySelector(\"#single-button-dialog\");\r\n  const threeButtonsDialog = document.querySelector(\"#three-buttons-dialog\");\r\n  const destructiveButtonDialog = document.querySelector(\"#destructive-dialog\");\r\n  function showDialog(id) {\r\n    document.querySelector(id).open = true;\r\n  }\r\n  function hideDialog(ev) {\r\n    if (ev.target.open) {\r\n      ev.target.open = false;\r\n    }\r\n  }\r\n  function dialogConfirmed(ev) {\r\n    alert(\"Confirmed\");\r\n    ev.target.open = false;\r\n  }\r\n  singleButtonDialog.buttonProps = [\r\n    { label: \"Confirm\", onclick: \"alert('Confirmed');this.open = false;\" },\r\n  ];\r\n  threeButtonsDialog.buttonProps = [\r\n    { label: \"Cancel\", onclick: \"this.open = false;\" },\r\n    { label: \"Options\", onclick: \"alert('Options...');\" },\r\n    { label: \"Confirm\", onclick: \"alert('Confirmed'); this.open = false;\" },\r\n  ];\r\n  destructiveButtonDialog.buttonProps = [\r\n    { label: \"Confirm\", onclick: \"alert('Confirmed'); this.open = false;\" },\r\n  ];\r\n  singleButtonDialog.addEventListener('icDialogClosed', hideDialog);\r\n  threeButtonsDialog.addEventListener('icDialogClosed', hideDialog);\r\n  destructiveButtonDialog.addEventListener('icDialogClosed', hideDialog);\r\n</script>\r\n  <ic-button onclick=\"showDialog('#no-button-dialog')\">Launch no button dialog</ic-button>\r\n  <ic-button onclick=\"showDialog('#single-button-dialog')\">Launch single button dialog</ic-button>\r\n  <ic-button onclick=\"showDialog('#three-buttons-dialog')\">Launch three button dialog</ic-button>\r\n  <ic-button onclick=\"showDialog('#destructive-dialog')\">Launch destructive button dialog</ic-button>\r\n  <ic-dialog\r\n    id=\"no-button-dialog\"\r\n    buttons=\"false\"\r\n    label=\"None\"\r\n    heading=\"This dialog has no default buttons\"\r\n  >\r\n    Sorry, you cannot place orders at the moment. Please try again later.\r\n  </ic-dialog>\r\n  <ic-dialog id=\"single-button-dialog\" label=\"Single\" heading=\"This dialog has a single button\">\r\n    <ic-typography>\r\n      Your order for an Americano coffee has been placed.\r\n    </ic-typography>\r\n  </ic-dialog>\r\n  <ic-dialog id=\"three-buttons-dialog\" label=\"Three buttons\" heading=\"This dialog has three default buttons\">\r\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n    tempor incididunt ut labore et dolore magna aliqua.\r\n  </ic-dialog>\r\n  <ic-dialog\r\n    id=\"destructive-dialog\"\r\n    destructive=\"true\"\r\n    label=\"Destructive\" \r\n    heading=\"This dialog has a default destructive button\"\r\n  >\r\n    <ic-typography>\r\n      You are about to cancel your order for an Americano. Are you sure you want to continue?\r\n    </ic-typography>\r\n  </ic-dialog>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const [openNoButtonDialog, setOpenNoButtonDialog] = useState(false);\r\nconst [openSingleButtonDialog, setOpenSingleButtonDialog] = useState(false);\r\nconst [openThreeButtonsDialog, setOpenThreeButtonsDialog] = useState(false);\r\nconst [openDestructiveButtonDialog, setOpenDestructiveButtonDialog] = useState(false);\r\nconst handleNoButtonDialogOpen = () => setOpenNoButtonDialog(true);\r\nconst handleSingleButtonDialogOpen = () => setOpenSingleButtonDialog(true);\r\nconst handleThreeButtonsDialogOpen = () => setOpenThreeButtonsDialog(true);\r\nconst handleDestructiveButtonDialogOpen = () => setOpenDestructiveButtonDialog(true);\r\nconst handleDialogClose = () => {\r\n  setOpenNoButtonDialog(false);\r\n  setOpenSingleButtonDialog(false);\r\n  setOpenThreeButtonsDialog(false);\r\n  setOpenDestructiveButtonDialog(false);\r\n}\r\nreturn (\r\n  <>\r\n    <div style={{ display: \"flex\", gap: \"8px\", flexWrap: \"wrap\" }}>\r\n      <IcButton onClick={handleNoButtonDialogOpen}>\r\n        Launch no button dialog\r\n      </IcButton>\r\n      <IcButton onClick={handleSingleButtonDialogOpen}>\r\n        Launch single button dialog\r\n      </IcButton>\r\n      <IcButton onClick={handleThreeButtonsDialogOpen}>\r\n        Launch three button dialog\r\n      </IcButton>\r\n      <IcButton onClick={handleDestructiveButtonDialogOpen}>\r\n        Launch destructive button dialog\r\n      </IcButton>\r\n    </div>\r\n    <IcDialog\r\n      open={openNoButtonDialog}\r\n      buttons={false}\r\n      label=\"None\"\r\n      heading=\"This dialog has no default buttons\"\r\n      onIcDialogClosed={openNoButtonDialog && handleDialogClose}\r\n      onIcDialogConfirmed={handleDialogClose}\r\n      onIcDialogCancelled={handleDialogClose}\r\n    >\r\n      <IcTypography>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n        eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n      </IcTypography>\r\n    </IcDialog>\r\n    <IcDialog\r\n      open={openSingleButtonDialog}\r\n      label=\"Single\"\r\n      heading=\"This dialog has a single button\"\r\n      buttonProps={[\r\n        { label: \"Confirm\", onclick: \"alert('Confirmed'); this.hideDialog()\" },\r\n      ]}\r\n      onIcDialogClosed={openSingleButtonDialog && handleDialogClose}\r\n      onIcDialogConfirmed={handleDialogClose}\r\n      onIcDialogCancelled={handleDialogClose}\r\n    >\r\n      <IcTypography>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n        eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n      </IcTypography>\r\n    </IcDialog>\r\n    <IcDialog\r\n      open={openThreeButtonsDialog}\r\n      label=\"Triple\"\r\n      heading=\"This dialog has three default buttons\"\r\n      buttonProps={[\r\n        { label: \"Close\", onclick: \"this.hideDialog()\" },\r\n        { label: \"Options\", onclick: \"alert('Options...')\" },\r\n        { label: \"Confirm\", onclick: \"alert('Confirmed'); this.hideDialog()\" },\r\n      ]}\r\n      onIcDialogClosed={openThreeButtonsDialog && handleDialogClose}\r\n      onIcDialogConfirmed={handleDialogClose}\r\n      onIcDialogCancelled={handleDialogClose}\r\n    >\r\n      <IcTypography>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n        eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n      </IcTypography>\r\n    </IcDialog>\r\n    <IcDialog\r\n      open={openDestructiveButtonDialog}\r\n      destructive\r\n      label=\"Destructive\"\r\n      heading=\"This dialog has a default destructive button\"\r\n      buttonProps={[\r\n        { label: \"Confirm\", onclick: \"alert('Confirmed'); this.hideDialog()\" },\r\n      ]}\r\n      onIcDialogClosed={openDestructiveButtonDialog && handleDialogClose}\r\n      onIcDialogConfirmed={handleDialogClose}\r\n      onIcDialogCancelled={handleDialogClose}\r\n    >\r\n      <IcTypography>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n        eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n      </IcTypography>\r\n    </IcDialog>\r\n  </>\r\n);`,\r\n  },\r\n];\r\n\r\nexport const CustomButtonsDialog = () => {\r\n  const [openNoButtonDialog, setOpenNoButtonDialog] = useState(false);\r\n  const [openSingleButtonDialog, setOpenSingleButtonDialog] = useState(false);\r\n  const [openThreeButtonsDialog, setOpenThreeButtonsDialog] = useState(false);\r\n  const [openDestructiveButtonDialog, setOpenDestructiveButtonDialog] =\r\n    useState(false);\r\n  const handleNoButtonDialogOpen = () => setOpenNoButtonDialog(true);\r\n  const handleSingleButtonDialogOpen = () => setOpenSingleButtonDialog(true);\r\n  const handleThreeButtonsDialogOpen = () => setOpenThreeButtonsDialog(true);\r\n  const handleDestructiveButtonDialogOpen = () =>\r\n    setOpenDestructiveButtonDialog(true);\r\n  const handleDialogClose = () => {\r\n    setOpenNoButtonDialog(false);\r\n    setOpenSingleButtonDialog(false);\r\n    setOpenThreeButtonsDialog(false);\r\n    setOpenDestructiveButtonDialog(false);\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ display: \"flex\", gap: \"8px\", flexWrap: \"wrap\" }}>\r\n        <IcButton onClick={handleNoButtonDialogOpen}>\r\n          Launch no button dialog\r\n        </IcButton>\r\n        <IcButton onClick={handleSingleButtonDialogOpen}>\r\n          Launch single button dialog\r\n        </IcButton>\r\n        <IcButton onClick={handleThreeButtonsDialogOpen}>\r\n          Launch three button dialog\r\n        </IcButton>\r\n        <IcButton onClick={handleDestructiveButtonDialogOpen}>\r\n          Launch destructive button dialog\r\n        </IcButton>\r\n      </div>\r\n      <IcDialog\r\n        open={openNoButtonDialog}\r\n        buttons={false}\r\n        label=\"None\"\r\n        heading=\"This dialog has no default buttons\"\r\n        onIcDialogClosed={openNoButtonDialog && handleDialogClose}\r\n        onIcDialogConfirmed={handleDialogClose}\r\n        onIcDialogCancelled={handleDialogClose}\r\n      >\r\n        <IcTypography>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n        </IcTypography>\r\n      </IcDialog>\r\n      <IcDialog\r\n        open={openSingleButtonDialog}\r\n        label=\"Single\"\r\n        heading=\"This dialog has a single button\"\r\n        buttonProps={[\r\n          {\r\n            label: \"Confirm\",\r\n            onclick: \"alert('Confirmed'); this.hideDialog()\",\r\n          },\r\n        ]}\r\n        onIcDialogClosed={openSingleButtonDialog && handleDialogClose}\r\n        onIcDialogConfirmed={handleDialogClose}\r\n        onIcDialogCancelled={handleDialogClose}\r\n      >\r\n        <IcTypography>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n        </IcTypography>\r\n      </IcDialog>\r\n      <IcDialog\r\n        open={openThreeButtonsDialog}\r\n        label=\"Triple\"\r\n        heading=\"This dialog has three default buttons\"\r\n        buttonProps={[\r\n          { label: \"Close\", onclick: \"this.hideDialog()\" },\r\n          { label: \"Options\", onclick: \"alert('Options...')\" },\r\n          {\r\n            label: \"Confirm\",\r\n            onclick: \"alert('Confirmed'); this.hideDialog()\",\r\n          },\r\n        ]}\r\n        onIcDialogClosed={openThreeButtonsDialog && handleDialogClose}\r\n        onIcDialogConfirmed={handleDialogClose}\r\n        onIcDialogCancelled={handleDialogClose}\r\n      >\r\n        <IcTypography>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n        </IcTypography>\r\n      </IcDialog>\r\n      <IcDialog\r\n        open={openDestructiveButtonDialog}\r\n        destructive\r\n        label=\"Destructive\"\r\n        heading=\"This dialog has a default destructive button\"\r\n        buttonProps={[\r\n          {\r\n            label: \"Confirm\",\r\n            onclick: \"alert('Confirmed'); this.hideDialog()\",\r\n          },\r\n        ]}\r\n        onIcDialogClosed={openDestructiveButtonDialog && handleDialogClose}\r\n        onIcDialogConfirmed={handleDialogClose}\r\n        onIcDialogCancelled={handleDialogClose}\r\n      >\r\n        <IcTypography>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n        </IcTypography>\r\n      </IcDialog>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={snippetsCustomButtons}>\r\n  <CustomButtonsDialog />\r\n</ComponentPreview>\r\n\r\n### Slotted buttons\r\n\r\nexport const snippetsSlottedButtons = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<script>\r\n  const dialog = document.querySelector(\"#slotted-dialog\");\r\n  function showDialog() {    \r\n    dialog.open = true;\r\n  }\r\n  function hideDialog() {\r\n    if (dialog.open) {\r\n      dialog.open = false;\r\n    }\r\n  }\r\n  function addToBasket() {\r\n    alert(\"Added to basket\");\r\n    dialog.open = false;\r\n  }\r\n  dialog.addEventListener('icDialogClosed', hideDialog);\r\n  dialog.addEventListener('icDialogCancelled', hideDialog);\r\n</script>\r\n<ic-button onclick=\"showDialog()\">Launch dialog</ic-button>\r\n<ic-dialog id=\"slotted-dialog\" heading=\"Are you sure?\" label=\"Coffee order\">\r\n  <ic-typography>\r\n    You are about to add 'Americano' to your basket. Are you sure you want to continue?\r\n  </ic-typography>\r\n  <ic-button slot=\"dialog-controls\" variant=\"secondary\" onclick=\"hideDialog()\">\r\n    Go back\r\n  </ic-button>\r\n  <ic-button slot=\"dialog-controls\" onclick=\"addToBasket()\">\r\n    Add to basket\r\n  </ic-button>\r\n</ic-dialog>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const [openDialog, setOpenDialog] = useState(false);\r\nconst handleDialogOpen = () => setOpenDialog(true);\r\nconst handleDialogClose = () => setOpenDialog(false);\r\nconst handleAddToBasket = () => {\r\n  alert(\"Added to basket\");\r\n  setOpenDialog(false);\r\n}\r\nreturn (\r\n  <>\r\n    <IcButton onClick={handleDialogOpen}>Launch slotted buttons dialog</IcButton>\r\n    <IcDialog\r\n      heading=\"Are you sure?\"\r\n      label=\"Coffee order\"\r\n      open={openDialog}\r\n      onIcDialogClosed={openDialog && handleDialogClose}\r\n    >\r\n      <IcTypography>\r\n        You are about to add 'Americano' to your basket. Are you sure you want\r\n        to continue?\r\n      </IcTypography>\r\n      <IcButton slot=\"dialog-controls\" variant=\"secondary\" onClick={handleDialogClose}>\r\n        Go back\r\n      </IcButton>\r\n      <IcButton slot=\"dialog-controls\" onClick={handleAddToBasket}>\r\n        Add to basket\r\n      </IcButton>\r\n    </IcDialog>\r\n  </>\r\n);`,\r\n  },\r\n];\r\n\r\nexport const SlottedButtonsDialog = () => {\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const handleDialogOpen = () => setOpenDialog(true);\r\n  const handleDialogClose = () => setOpenDialog(false);\r\n  const handleAddToBasket = () => {\r\n    alert(\"Added to basket\");\r\n    setOpenDialog(false);\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton onClick={handleDialogOpen}>Launch dialog</IcButton>\r\n      <IcDialog\r\n        heading=\"Are you sure?\"\r\n        label=\"Coffee order\"\r\n        open={openDialog}\r\n        onIcDialogClosed={openDialog && handleDialogClose}\r\n      >\r\n        <IcTypography>\r\n          You are about to add 'Americano' to your basket. Are you sure you want\r\n          to continue?\r\n        </IcTypography>\r\n        <IcButton\r\n          slot=\"dialog-controls\"\r\n          variant=\"secondary\"\r\n          onClick={handleDialogClose}\r\n        >\r\n          Go back\r\n        </IcButton>\r\n        <IcButton slot=\"dialog-controls\" onClick={handleAddToBasket}>\r\n          Add to basket\r\n        </IcButton>\r\n      </IcDialog>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={snippetsSlottedButtons}>\r\n  <SlottedButtonsDialog />\r\n</ComponentPreview>\r\n\r\n### Interactive content\r\n\r\nexport const interactiveContentSnippet = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<script>\r\n  const dialog = document.querySelector(\"#interactive-content-dialog\");\r\n  const checkGroup = document.querySelector(\"ic-checkbox-group\");\r\n  let termsAgreed = false;\r\n  function showDialog() {\r\n    dialog.open = true;\r\n  }\r\n  function hideDialog() {\r\n    if (dialog.open) {\r\n      dialog.open = false;\r\n    }\r\n  }\r\n  function toggleTermsAgreed() {\r\n    termsAgreed = !termsAgreed;\r\n  }\r\n  function dialogConfirmed(ev) {\r\n    const message = (termsAgreed) ? \"Terms agreed\" : \"Terms not agreed\";\r\n    alert(message);\r\n    ev.target.open = false;\r\n  }\r\n  dialog.addEventListener(\"icDialogConfirmed\", dialogConfirmed);\r\n  dialog.addEventListener(\"icDialogClosed\", hideDialog);\r\n  checkGroup.addEventListener(\"icChange\", toggleTermsAgreed);\r\n</script>\r\n<ic-button onclick=\"showDialog()\">Launch dialog</ic-button>\r\n<ic-dialog \r\n  id=\"interactive-content-dialog\" \r\n  label=\"Coffee order\"\r\n  heading=\"Please agree to our terms and conditions\"\r\n>\r\n  <ic-typography>\r\n    Before continuing, please agree to our terms and conditions.\r\n  </ic-typography>\r\n  <ic-checkbox-group \r\n    name=\"terms\" \r\n    label=\"terms and conditions\" \r\n    hide-label=\"true\"\r\n    style=\"marginTop: 8px\"\r\n  >\r\n    <ic-checkbox label=\"I agree to the terms and conditions.\" value=\"agree\"></ic-checkbox>\r\n  </ic-checkbox-group>\r\n</ic-dialog>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const [termsAgreed, setTermsAgreed] = useState(false);\r\nconst [openDialog, setOpenDialog] = useState(false);\r\nconst handleDialogOpen = () => setOpenDialog(true);\r\nconst handleDialogClose = () => setOpenDialog(false);\r\nconst toggleTermsAgreed = () => {\r\n  setTermsAgreed(!termsAgreed);\r\n}\r\nconst termsDialogConfirmed = (ev) => {\r\n  const message = (termsAgreed) ? \"Terms agreed\" : \"Terms not agreed\";\r\n  alert(message);\r\n  setOpenDialog(false);\r\n} \r\nreturn (\r\n  <>\r\n    <IcButton onClick={handleDialogOpen}>Launch dialog</IcButton>\r\n    <IcDialog\r\n      open={openDialog}\r\n      label=\"Coffee order\"\r\n      heading=\"Please agree to our terms and conditions\"\r\n      onIcDialogClosed={openDialog && handleDialogClose}\r\n      onIcDialogConfirmed={termsDialogConfirmed}\r\n      onIcDialogCancelled={handleDialogClose}\r\n    >\r\n      <IcTypography>\r\n        Before continuing, please agree to our terms and conditions.\r\n      </IcTypography>\r\n      <IcCheckboxGroup \r\n        name=\"terms\" \r\n        label=\"terms and conditions\" \r\n        hideLabel\r\n        onIcChange={toggleTermsAgreed}\r\n        style={{ marginTop: \"8px\" }} \r\n      >\r\n        <IcCheckbox\r\n          label=\"I agree to the terms and conditions.\"\r\n          value=\"agree\"\r\n        />\r\n      </IcCheckboxGroup>\r\n    </IcDialog>\r\n  </>\r\n);`,\r\n  },\r\n];\r\n\r\nexport const InteractiveContent = () => {\r\n  const [termsAgreed, setTermsAgreed] = useState(false);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const handleDialogOpen = () => setOpenDialog(true);\r\n  const handleDialogClose = () => setOpenDialog(false);\r\n  const toggleTermsAgreed = () => {\r\n    setTermsAgreed(!termsAgreed);\r\n  };\r\n  const termsDialogConfirmed = () => {\r\n    const message = termsAgreed ? \"Terms agreed\" : \"Terms not agreed\";\r\n    alert(message);\r\n    setOpenDialog(false);\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton onClick={handleDialogOpen}>Launch dialog</IcButton>\r\n      <IcDialog\r\n        open={openDialog}\r\n        label=\"Coffee order\"\r\n        heading=\"Please agree to our terms and conditions\"\r\n        onIcDialogClosed={openDialog && handleDialogClose}\r\n        onIcDialogConfirmed={termsDialogConfirmed}\r\n        onIcDialogCancelled={handleDialogClose}\r\n      >\r\n        <IcTypography>\r\n          Before continuing, please agree to our terms and conditions.\r\n        </IcTypography>\r\n        <IcCheckboxGroup\r\n          name=\"terms\"\r\n          label=\"terms and conditions\"\r\n          hideLabel\r\n          onIcChange={toggleTermsAgreed}\r\n          style={{ marginTop: \"8px\" }}\r\n        >\r\n          <IcCheckbox\r\n            label=\"I agree to the terms and conditions.\"\r\n            value=\"agree\"\r\n          />\r\n        </IcCheckboxGroup>\r\n      </IcDialog>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={interactiveContentSnippet}>\r\n  <InteractiveContent />\r\n</ComponentPreview>\r\n\r\n### Background close prevented\r\n\r\nexport const noCloseSnippet = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<script>\r\n  const dialog = document.querySelector(\"#no-close-dialog\");\r\n  function showDialog() {\r\n    dialog.open = true;\r\n  }\r\n  function hideDialog() {\r\n    if (dialog.open) {\r\n      dialog.open = false;\r\n    }\r\n  }\r\n  function dialogConfirmed(ev) {\r\n    alert(\"Confirmed!\");\r\n    ev.target.open = false;\r\n  }\r\n  dialog.addEventListener(\"icDialogClosed\", hideDialog);\r\n  dialog.addEventListener(\"icDialogCancelled\", hideDialog);\r\n  dialog.addEventListener(\"icDialogConfirmed\", dialogConfirmed);\r\n</script>\r\n<ic-button onclick=\"showDialog()\">Launch dialog</ic-button>\r\n<ic-dialog\r\n  id=\"no-close-dialog\"\r\n  close-on-backdrop-click=\"false\" \r\n  label=\"Background close prevented\"\r\n  heading=\"This dialog can't be closed by clicking the background\"\r\n>\r\n  <ic-typography>\r\n    You are about to add 'Americano' to your basket. Are you sure you want to continue?\r\n  </ic-typography>\r\n</ic-dialog>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const [openDialog, setOpenDialog] = useState(false);\r\nconst handleDialogOpen = () => setOpenDialog(true);    \r\nconst handleDialogClose = () => setOpenDialog(false);    \r\nconst handleConfirmDialog = (ev) => {    \r\n  alert(\"Confirmed!\");\r\n  setOpenDialog(false);\r\n};\r\nreturn (\r\n  <>\r\n    <IcButton onClick={handleDialogOpen}>Launch dialog</IcButton>\r\n    <IcDialog\r\n      open={openDialog}\r\n      closeOnBackdropClick={false} \r\n      label=\"Background close prevented\"\r\n      heading=\"This dialog can't be closed by clicking the background\"\r\n      onIcDialogClosed={openDialog && handleDialogClose} \r\n      onIcDialogConfirmed={handleConfirmDialog} \r\n      onIcDialogCancelled={handleDialogClose} \r\n    >\r\n      <IcTypography>\r\n        You are about to add 'Americano' to your basket. Are you sure you want to continue?\r\n      </IcTypography>\r\n    </IcDialog>\r\n  </>\r\n);`,\r\n  },\r\n];\r\n\r\nexport const NoCloseContent = () => {\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const handleDialogOpen = () => setOpenDialog(true);\r\n  const handleDialogClose = () => setOpenDialog(false);\r\n  const handleConfirmDialog = () => {\r\n    alert(\"Confirmed!\");\r\n    setOpenDialog(false);\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton onClick={handleDialogOpen}>Launch dialog</IcButton>\r\n      <IcDialog\r\n        open={openDialog}\r\n        closeOnBackdropClick={false}\r\n        label=\"Background close prevented\"\r\n        heading=\"This dialog can't be closed by clicking the background\"\r\n        onIcDialogClosed={openDialog && handleDialogClose}\r\n        onIcDialogConfirmed={handleConfirmDialog}\r\n        onIcDialogCancelled={handleDialogClose}\r\n      >\r\n        <IcTypography>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n        </IcTypography>\r\n      </IcDialog>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={noCloseSnippet}>\r\n  <NoCloseContent />\r\n</ComponentPreview>\r\n\r\n### Events\r\n\r\nexport const eventsSnippet = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<script>\r\n  const dialog = document.querySelector(\"#ev-dialog\");\r\n  function showDialog() {\r\n    evDialog.open = true;\r\n  }\r\n  function hideDialog() {\r\n    if (dialog.open) {\r\n      dialog.open = false;\r\n    }\r\n  }\r\n  function dialogConfirmed() {          \r\n    alert(\"Dialog confirmed\");\r\n    dialog.open = false;\r\n  }\r\n  function dialogCancelled() {\r\n    alert(\"Dialog cancelled\");\r\n  }\r\n  function dialogOpened() {\r\n    alert(\"Dialog opened\");\r\n  }\r\n  function dialogClosed() {\r\n    alert(\"Dialog closed\");\r\n    hideDialog();\r\n  }\r\n  function cancelDialog(){\r\n    alert(\"Slotted cancel button\");\r\n    dialog.open = false;\r\n  }\r\n  function confirmDialog(){\r\n    alert(\"Slotted confirm button\");\r\n    dialog.open = false;\r\n  }\r\n  dialog.addEventListener(\"icDialogConfirmed\", dialogConfirmed);\r\n  dialog.addEventListener(\"icDialogCancelled\", dialogCancelled);\r\n  dialog.addEventListener(\"icDialogOpened\", dialogOpened);\r\n  dialog.addEventListener(\"icDialogClosed\", dialogClosed);\r\n</script>\r\n<ic-button onclick=\"showDialog()\">Launch dialog</ic-button>\r\n<ic-dialog id=\"ev-dialog\" heading=\"Are you sure?\" label=\"Coffee order\">\r\n  <ic-typography>\r\n    You are about to add 'Americano' to your basket. Are you sure you want to continue?\r\n  </ic-typography>\r\n  <ic-button variant=\"tertiary\" onclick=\"cancelDialog()\" slot=\"dialog-controls\">\r\n    Cancel\r\n  </ic-button>\r\n  <ic-button onclick=\"confirmDialog()\" slot=\"dialog-controls\">\r\n    Confirm\r\n  </ic-button>\r\n</ic-dialog>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const [openDialog, setOpenDialog] = useState(false);\r\nconst handleDialogOpen = () => setOpenDialog(true);\r\nconst handleDialogClose = () => setOpenDialog(false);\r\nconst handleDialogOpened = () => alert(\"Dialog opened\");\r\nconst handleDialogClosed = () => {\r\n  alert(\"Dialog closed\");\r\n  if (openDialog) {\r\n    handleDialogClose();\r\n  }\r\n}\r\nconst handleDialogCancelled = () => {\r\n  alert(\"Dialog cancelled\");\r\n  setOpenDialog(false);\r\n}\r\nconst handleDialogConfirmed = () => {\r\n  alert(\"Dialog confirmed\");\r\n  setOpenDialog(false);\r\n};\r\nconst handleSlottedCancel = () => {\r\n  alert('Slotted cancel button');\r\n  setOpenDialog(false);\r\n};\r\nconst handleSlottedConfirm = () => {\r\n  alert('Slotted confirm button');\r\n  setOpenDialog(false);\r\n};\r\nreturn (\r\n  <>\r\n    <IcButton onClick={handleDialogOpen}>Launch dialog</IcButton>\r\n    <IcDialog\r\n      open={openDialog}\r\n      heading=\"This dialog utilises events\"\r\n      label=\"Events\"\r\n      onIcDialogOpened={handleDialogOpened}\r\n      onIcDialogConfirmed={handleDialogConfirmed}\r\n      onIcDialogCancelled={handleDialogCancelled}\r\n      onIcDialogClosed={handleDialogClosed}\r\n    >\r\n      <IcTypography>\r\n        You are about to add 'Americano' to your basket. Are you sure you want to continue?\r\n      </IcTypography>\r\n      <IcButton variant=\"tertiary\" onClick={handleSlottedCancel} slot=\"dialog-controls\">\r\n        Cancel\r\n      </IcButton>\r\n      <IcButton onClick={handleSlottedConfirm} slot=\"dialog-controls\">\r\n        Confirm\r\n      </IcButton>\r\n    </IcDialog>\r\n  </>\r\n);`,\r\n  },\r\n];\r\n\r\nexport const EventsContent = () => {\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const handleDialogOpen = () => setOpenDialog(true);\r\n  const handleDialogClose = () => setOpenDialog(false);\r\n  const handleDialogOpened = () => alert(\"Dialog opened\");\r\n  const handleDialogClosed = () => {\r\n    alert(\"Dialog closed\");\r\n    if (openDialog) {\r\n      handleDialogClose();\r\n    }\r\n  };\r\n  const handleDialogCancelled = () => {\r\n    alert(\"Dialog cancelled\");\r\n    setOpenDialog(false);\r\n  };\r\n  const handleDialogConfirmed = () => {\r\n    alert(\"Dialog confirmed\");\r\n    setOpenDialog(false);\r\n  };\r\n  const handleSlottedCancel = () => {\r\n    alert(\"Slotted cancel button\");\r\n    setOpenDialog(false);\r\n  };\r\n  const handleSlottedConfirm = () => {\r\n    alert(\"Slotted confirm button\");\r\n    setOpenDialog(false);\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton onClick={handleDialogOpen}>Launch dialog</IcButton>\r\n      <IcDialog\r\n        open={openDialog}\r\n        heading=\"This dialog utilises events\"\r\n        label=\"Events\"\r\n        onIcDialogOpened={handleDialogOpened}\r\n        onIcDialogConfirmed={handleDialogConfirmed}\r\n        onIcDialogCancelled={handleDialogCancelled}\r\n        onIcDialogClosed={handleDialogClosed}\r\n      >\r\n        <IcTypography>\r\n          You are about to add 'Americano' to your basket. Are you sure you want\r\n          to continue?\r\n        </IcTypography>\r\n        <IcButton\r\n          variant=\"tertiary\"\r\n          onClick={handleSlottedCancel}\r\n          slot=\"dialog-controls\"\r\n        >\r\n          Cancel\r\n        </IcButton>\r\n        <IcButton onClick={handleSlottedConfirm} slot=\"dialog-controls\">\r\n          Confirm\r\n        </IcButton>\r\n      </IcDialog>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={eventsSnippet}>\r\n  <EventsContent />\r\n</ComponentPreview>\r\n\r\n### Disabled height constraint\r\n\r\nexport const popoutElements = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<script>\r\n  const milkSelect = document.querySelector('ic-select');\r\n  const dialog = document.querySelector('ic-dialog');\r\n  milkSelect.options = [\r\n    { value: 'whole', label: 'Whole' },\r\n    { value: 'semiskinned', label: 'Semi Skinned' },\r\n    { value: 'oat', label: 'Oat' },\r\n    { value: 'almond', label: 'Almond' }\r\n  ];\r\n  function showDialog() {\r\n    dialog.open = true;\r\n  }\r\n  function hideDialog() {\r\n    if (dialog.open) {\r\n      dialog.open = false;\r\n    }\r\n  }\r\n  dialog.addEventListener('icDialogClosed', hideDialog);\r\n  dialog.addEventListener('icDialogCancelled', hideDialog);\r\n</script>\r\n<ic-button onclick='showDialog()'>Launch disabled height constraint dialog</ic-button>\r\n<ic-dialog\r\n  label='Coffee order'\r\n  heading='Please add your milk?'\r\n  disable-height-constraint='true'\r\n>\r\n  <ic-typography>Sure, let's dive into the delightful world of milk, where dairy dreams and coffee collide in the harmonious dance of a flat white. Picture this: you stroll into your favorite coffee haunt, the aroma of freshly ground beans tickling your senses. You approach the counter, ready to make a crucial decision – what kind of milk will accompany your flat white?</ic-typography><br/>\r\n  <ic-typography>In the end, whether you go for the classic, embrace the trendy, or opt for the exotic, the flat white remains a canvas waiting to be painted with your milk of choice. So, next time you're at the coffee counter, let your taste buds embark on a journey – a journey where milk and coffee meet, and every sip tells a story, sprinkled with a dash of humor and a whole lot of flavor. Cheers to the caffeinated adventure!</ic-typography><br/>\r\n  <ic-select label='Please select a type of milk'></ic-select>\r\n</ic-dialog>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const [openDialog, setOpenDialog] = useState(false);\r\nconst handleDialogOpen = () => setOpenDialog(true);\r\nconst handleDialogClose = () => setOpenDialog(false);\r\nreturn (\r\n  <>\r\n    <IcButton onClick={handleDialogOpen}>Launch disabled height constraint dialog</IcButton>\r\n    <IcDialog\r\n      label='Coffee order'\r\n      heading=\"Please add your milk\"\r\n      disableHeightConstraint \r\n      open={openDialog}\r\n      onIcDialogConfirmed={openDialog && handleDialogClose}\r\n      onIcDialogConfirmed={handleDialogClose}\r\n      onIcDialogCancelled={handleDialogClose}\r\n    >\r\n      <IcTypography>Sure, let's dive into the delightful world of milk, where dairy dreams and coffee collide in the harmonious dance of a flat white. Picture this: you stroll into your favorite coffee haunt, the aroma of freshly ground beans tickling your senses. You approach the counter, ready to make a crucial decision – what kind of milk will accompany your flat white?</IcTypography><br/>\r\n      <IcTypography>In the end, whether you go for the classic, embrace the trendy, or opt for the exotic, the flat white remains a canvas waiting to be painted with your milk of choice. So, next time you're at the coffee counter, let your taste buds embark on a journey – a journey where milk and coffee meet, and every sip tells a story, sprinkled with a dash of humor and a whole lot of flavor. Cheers to the caffeinated adventure!</IcTypography><br/>\r\n      <IcSelect \r\n        label='Select a type of milk'\r\n        options={[\r\n          { value: 'whole', label: 'Whole' },\r\n          { value: 'semiskinned', label: 'Semi Skinned' },\r\n          { value: 'oat', label: 'Oat' },\r\n          { value: 'almond', label: 'Almond' }\r\n        ]}\r\n      />\r\n    </IcDialog>\r\n  </>\r\n)`,\r\n  },\r\n];\r\n\r\nexport const DialogWithPopout = () => {\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const handleDialogOpen = () => setOpenDialog(true);\r\n  const handleDialogClose = () => setOpenDialog(false);\r\n  return (\r\n    <>\r\n      <IcButton onClick={handleDialogOpen}>\r\n        Launch disabled height constraint dialog\r\n      </IcButton>\r\n      <IcDialog\r\n        label=\"Coffee order\"\r\n        heading=\"Please add your milk\"\r\n        disableHeightConstraint\r\n        open={openDialog}\r\n        onIcDialogClosed={openDialog && handleDialogClose}\r\n        onIcDialogConfirmed={handleDialogClose}\r\n        onIcDialogCancelled={handleDialogClose}\r\n      >\r\n        <IcTypography>\r\n          Sure, let's dive into the delightful world of milk, where dairy dreams\r\n          and coffee collide in the harmonious dance of a flat white. Picture\r\n          this: you stroll into your favorite coffee haunt, the aroma of freshly\r\n          ground beans tickling your senses. You approach the counter, ready to\r\n          make a crucial decision – what kind of milk will accompany your flat\r\n          white?\r\n        </IcTypography>\r\n        <br />\r\n        <IcTypography>\r\n          In the end, whether you go for the classic, embrace the trendy, or opt\r\n          for the exotic, the flat white remains a canvas waiting to be painted\r\n          with your milk of choice. So, next time you're at the coffee counter,\r\n          let your taste buds embark on a journey – a journey where milk and\r\n          coffee meet, and every sip tells a story, sprinkled with a dash of\r\n          humor and a whole lot of flavor. Cheers to the caffeinated adventure!\r\n        </IcTypography>\r\n        <br />\r\n        <IcSelect\r\n          label=\"Select a type of milk\"\r\n          options={[\r\n            { value: \"whole\", label: \"Whole\" },\r\n            { value: \"semiskinned\", label: \"Semi Skinned\" },\r\n            { value: \"oat\", label: \"Oat\" },\r\n            { value: \"almond\", label: \"Almond\" },\r\n          ]}\r\n        />\r\n      </IcDialog>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={popoutElements}>\r\n  <DialogWithPopout />\r\n</ComponentPreview>\r\n",
      "path": "/components/dialog/code",
      "date": "2023-10-26",
      "title": "Dialog",
      "status": "BETA",
      "subTitle": "Dialogs are modal windows that interrupt the user's current task to bring something important to attention.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/dialog",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/dialog"
        },
        {
          "title": "Code",
          "path": "/components/dialog/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/dialog/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\dialog\\code.mdx",
        "createdAt": "2024-04-04T12:41:43.904Z",
        "lastModified": "2024-04-04T12:41:43.904Z",
        "size": 42296,
        "formattedSize": "41.3 KB"
      }
    },
    {
      "id": "components\\dialog\\guidancex",
      "contents": "\r\nimport { IcDialog, IcButton, IcTypography } from \"@ukic/react\";\r\nimport { useRef } from \"react\";\r\nimport dialogFig1 from \"./images/fig-1-use-action-buttons-to-provide-user-with-choice.png\";\r\nimport dialogFig2 from \"./images/fig-2-use-inputs-to-get-important-information-from-users.png\";\r\nimport dialogFig3 from \"./images/fig-3-use-dialogs-to-show-additional-info.png\";\r\nimport dialogFig4 from \"./images/fig-4-use-status-alert-to-provide-status-information.png\";\r\nimport dialogFig5 from \"./images/fig-5-use-destructive-actions.png\";\r\nimport dialogFig6 from \"./images/fig-6-avoid-including-complex-content.png\";\r\nimport dialogFig7 from \"./images/fig-7-dialog-anatomy.png\";\r\n\r\n## Introduction\r\n\r\nDialogs prompt users for additional information to proceed with their task. Dialogs appear modally, meaning that the user must take action to acknowledge the dialog before continuing.\r\n\r\nDialogs work best when used for short tasks or to alert the user to information relevant for their current task. A dialog appears on top of the main page content and is persistent until dismissed.\r\n\r\n## Component demo\r\n\r\nexport const DialogExample = () => {\r\n  const dialogEl = useRef(null);\r\n  const showDialog = () => {\r\n    dialogEl.current.open = true;\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton onclick={showDialog} aria-label=\"Launch dialog\">\r\n        Launch dialog\r\n      </IcButton>\r\n      <IcDialog\r\n        heading=\"Are you sure?\"\r\n        label=\"Coffee order\"\r\n        ref={dialogEl}\r\n        buttonProps={[\r\n          { label: \"Cancel\", onclick: \"this.cancelDialog()\" },\r\n          {\r\n            label: \"Confirm\",\r\n            onclick: \"alert('Confirmed!'); this.open = false;\",\r\n          },\r\n        ]}\r\n      >\r\n        <IcTypography>\r\n          You are about to add 'Americano' to your basket. Are you sure you want\r\n          to continue?\r\n        </IcTypography>\r\n      </IcDialog>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview\r\n  style={{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  }}\r\n>\r\n  <DialogExample />\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse dialogs to interrupt the user flow to display, collect or confirm information that is important to enable the user to continue their task.\r\n\r\nAdd action buttons to a dialog to present the user with a set of actions to choose from to continue.\r\n\r\n<DoDontCaution\r\n  imageSrc={dialogFig1}\r\n  imageAlt=\"An example dialog message for a coffee order saying 'Are you sure?' with buttons for 'Continue' and 'Go back'.\"\r\n  state=\"good\"\r\n  caption=\"Use dialogs with buttons to present the user with a required action.\"\r\n/>\r\n\r\nAdd interactive content inside a dialog's content area to capture key input, such as providing confirmation of understanding by checking a checkbox.\r\n\r\n<DoDontCaution\r\n  imageSrc={dialogFig2}\r\n  imageAlt=\"An example dialog for a coffee order that says 'Please agree to our terms and conditions.' The dialog has a checkbox in its content that allows the user to signify agreement. There are two buttons for 'continue' and 'go back'.\"\r\n  state=\"good\"\r\n  caption=\"Use dialogs with interactive content in the content area to capture key input from a user before continuing.\"\r\n/>\r\n\r\nUse dialogs to show additional information that can be opened from the underlying page. These dialogs can be passive and contain no actions other than a dismiss button to close the dialog.\r\n\r\n<DoDontCaution\r\n  imageSrc={dialogFig3}\r\n  imageAlt=\": An example dialog containing additional information about the 'Americano' product.\"\r\n  state=\"good\"\r\n  caption=\"Use dialogs to provide additional information that isn't displayed on the underlying page.\"\r\n/>\r\n\r\nAdd a status [alert](/components/alert) to a dialog to provide additional meaning in relation to a specific status. These can include any alert status variant.\r\n\r\n<DoDontCaution\r\n  imageSrc={dialogFig4}\r\n  imageAlt=\"An example dialog for a coffee order asking if the user is sure they want to continue adding the product 'Americano' to their basket. It contains a warning alert that says 'Only a few left'.\"\r\n  state=\"good\"\r\n  caption=\"Use a status alert within a dialog to highlight important information related to the dialog's content.\"\r\n/>\r\n\r\nUse dialogs when a destructive action is about to take place. Ask the user to confirm if they want to continue to conduct the action and provide a way of cancelling the action.\r\n\r\n<DoDontCaution\r\n  imageSrc={dialogFig5}\r\n  imageAlt=\"An example dialog for removing an item from a basket. It provides a destructive action button for 'Remove' and a secondary button for 'Go back'.\"\r\n  state=\"good\"\r\n  caption=\"Use a dialog for destructive actions to give the user an option to back out at the last minute.\"\r\n/>\r\n\r\n## When not to use\r\n\r\nAvoid using dialogs to contain complicated tasks or processes. Instead consider if such complex tasks could be placed on a page themselves.\r\n\r\n<DoDontCaution\r\n  imageSrc={dialogFig6}\r\n  imageAlt=\"An example dialog containing a multi-step form for selecting and adding drinks to an order. A stepper with four steps is used with multiple form elements inside each step.\"\r\n  state=\"caution\"\r\n  caption=\"Whilst you can put any content within a dialog, avoid placing complex tasks in one and consider placing it on the main page itself.\"\r\n/>\r\n\r\nDon't place important information inside a dialog if it is not part of the main flow of task. Such information can be missed so consider placing it on the page itself. Avoid repeating information in a dialog that is displayed on the page itself.\r\n\r\nDon't use dialogs when information from the main page content is required to complete a task within a dialog. Keep all information required to complete the task in a dialog within the dialog. If more information is required, consider if dialogs may not be suitable for the task.\r\n\r\nAvoid overusing dialogs to bring every decision in a task to the user's attention. Use dialogs for the key actions in a task instead. Dialogs may be ignored if used too frequently.\r\n\r\nOnly show dialogs after a user action has triggered it, and make sure its content is contextual to the user action. Don't show dialogs if a user has not performed a specific action on the page.\r\n\r\n## Interaction behaviour\r\n\r\nDisplay dialogs after users complete a specific action on a page such as clicking a 'submit' button.\r\n\r\nAlways make sure the dismiss button is included within a dialog, and select whether to allow the dialog to close by clicking on the background scrim.\r\n\r\nWhen a dialog is displayed, the page content in the background cannot be interacted with.\r\n\r\nContent can scroll within the body of a dialog, whilst the header section and interaction section are sticky at the top and bottom of the dialog window.\r\n\r\n## Sizing\r\n\r\nSet the dialog's size dependent on the amount of content that is being displayed in it. Large dialogs take up most of the screen so are good to use when there is a lot of content to display such as a table. Small dialogs only use a small amount of the screen so are best used for short additional information.\r\n\r\nOn extra small breakpoints all dialogs automatically change to their full-screen setting to provide maximum space for their content.\r\n\r\n## Content\r\n\r\nAlways give dialogs a meaningful heading and describe the task that the dialog contains.\r\n\r\nAdd an optional label to a dialog to add categorisation or other secondary information.\r\n\r\nSpecify any content within the dialog's body section, but take care not to place too much information in a dialog if it is best placed as a page itself. Also, consider using a full page instead of a dialog when lots of interactive elements are required.\r\n\r\nAlways follow the [content style](/styles/content-style) when writing textual content.\r\n\r\n<DoDontCaution\r\n  imageSrc={dialogFig7}\r\n  imageAlt=\"A diagram showing the anatomy of a dialog. It has three areas, a title area at the top, a content area in the middle, and an action area at the bottom.\"\r\n  state=\"none\"\r\n  caption=\"Dialogs have three sections: a title area, a content area and an action area.\"\r\n/>\r\n\r\nWhen adding interactive content to a dialog and it has popover elements, to avoid the elements being cut off within the content area, use the prop `disableHeightConstraint` to allow the dialog to stretch to contain its content.\r\n",
      "path": "/components/dialog",
      "navPriority": 15,
      "date": "2023-10-24",
      "title": "Dialog",
      "status": "BETA",
      "subTitle": "Dialogs are modal windows that interrupt the user's current task to bring something important to attention.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/dialog",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/dialog"
        },
        {
          "title": "Code",
          "path": "/components/dialog/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/dialog/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\dialog\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.991Z",
        "lastModified": "2024-06-04T07:48:34.991Z",
        "size": 8791,
        "formattedSize": "8.6 KB"
      }
    },
    {
      "id": "components\\empty-state\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nProviding an empty state is good practice as it informs people that nothing is present when something could be. They allow actions to be provided so that people can continue their tasks and understand that something might be missing.\r\n\r\nThe empty state component’s text elements provide a way of clearly indicating what the problem is, why it happened, and what action is best to perform next.\r\n\r\nInteractive elements within the empty state follow a logical tabbing order.\r\n\r\n## For Assistive Technology\r\n\r\nEmpty state components should be announced by a screen reader if they appear due to another user action on a page. They may constitute a status change on the page so should be announced by a screen region after the change has occurred.\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/empty-state/accessibility",
      "date": "2024-04-15",
      "title": "Empty state",
      "status": "BETA",
      "subTitle": "Use the empty state component when there is no content to display. It provides a consistent way of communicating to people what to do next.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/empty-state",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/empty-state"
        },
        {
          "title": "Code",
          "path": "/components/empty-state/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/empty-state/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\empty-state\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:34.992Z",
        "lastModified": "2024-06-04T07:48:34.992Z",
        "size": 1572,
        "formattedSize": "1.5 KB"
      }
    },
    {
      "id": "components\\empty-state\\codex",
      "contents": "\r\nimport { IcEmptyState, IcButton, IcLink } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-empty-state \r\n    heading=\"Hmm...there's nothing here\" \r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\" \r\n    body=\"Take a look at our favourite coffees instead, there's much more of those.\">\r\n    <svg slot=\"image\" viewBox=\"0 0 1600 1600\">\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </svg>\r\n    <ic-button slot=\"actions\">Go to favourite coffees</ic-button>\r\n    <ic-link slot=\"actions\" href=\"/\">\r\n      Customer support\r\n    </ic-link>\r\n</ic-empty-state>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcEmptyState \r\n    heading=\"Hmm...there's nothing here\" \r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\" \r\n    body=\"Take a look at our favourite coffees instead, there's much more of those.\" \r\n    >\r\n    <SlottedSVG slot=\"image\" viewBox=\"0 0 1600 1600\">\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </SlottedSVG>\r\n    <IcButton slot=\"actions\">Go to favourite coffees</IcButton>\r\n    <IcLink slot=\"actions\" href=\"/\">\r\n      Customer support\r\n    </IcLink>\r\n  </IcEmptyState>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <IcEmptyState\r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those.\"\r\n  >\r\n    <svg slot=\"image\" viewBox=\"0 0 1600 1600\">\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </svg>\r\n    <IcButton slot=\"actions\">Go to favourite coffees</IcButton>\r\n    <IcLink slot=\"actions\" href=\"#\" onClick={(e) => e.preventDefault()}>\r\n      Customer support\r\n    </IcLink>\r\n  </IcEmptyState>\r\n</ComponentPreview>\r\n\r\n## Empty state details\r\n\r\n<ComponentDetails component=\"ic-empty-state\" />\r\n\r\n## Variants\r\n\r\n### Actions slot\r\n\r\nexport const actionsSnippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-empty-state \r\n    heading=\"Hmm...there's nothing here\" \r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\" \r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\"\r\n>\r\n    <ic-button slot=\"actions\">Go to favourite coffees</ic-button>\r\n    <ic-link slot=\"actions\" href=\"/\">Customer support</ic-link>\r\n</ic-empty-state>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcEmptyState \r\n    heading=\"Hmm...there's nothing here\" \r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\" \r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\"\r\n>\r\n    <IcButton slot=\"actions\">Go to favourite coffees</IcButton>\r\n    <IcLink slot=\"actions\" href=\"/\">Customer support</IcLink>\r\n</IcEmptyState>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={actionsSnippets}>\r\n  <IcEmptyState\r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\"\r\n  >\r\n    <IcButton slot=\"actions\">Go to favourite coffees</IcButton>\r\n    <IcLink slot=\"actions\" href=\"#\" onClick={(e) => e.preventDefault()}>\r\n      Customer support\r\n    </IcLink>\r\n  </IcEmptyState>\r\n</ComponentPreview>\r\n\r\n### Image slot\r\n\r\nexport const imageSnippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-empty-state \r\n    heading=\"Hmm...there's nothing here\" \r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\" \r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\"\r\n>\r\n    <svg\r\n      slot=\"image\"\r\n      viewBox=\"0 0 1600 1600\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </svg>\r\n</ic-empty-state>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcEmptyState \r\n    heading=\"Hmm...there's nothing here\" \r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\" \r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\"\r\n>\r\n    <SlottedSVG\r\n      slot=\"image\"\r\n      viewBox=\"0 0 1600 1600\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </SlottedSVG>\r\n</IcEmptyState>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={imageSnippets}>\r\n  <IcEmptyState\r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\"\r\n  >\r\n    <svg slot=\"image\" viewBox=\"0 0 1600 1600\">\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </svg>\r\n  </IcEmptyState>\r\n</ComponentPreview>\r\n\r\n### Image size\r\n\r\nexport const imageLargeSnippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-empty-state \r\n    image-size=\"large\" \r\n    heading=\"Hmm...there's nothing here\" \r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\" \r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\"\r\n>\r\n    <svg\r\n      slot=\"image\"\r\n      viewBox=\"0 0 1600 1600\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </svg>\r\n</ic-empty-state>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcEmptyState \r\n    imageSize=\"large\" \r\n    heading=\"Hmm...there's nothing here\" \r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\" \r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\"\r\n>\r\n    <SlottedSVG\r\n      slot=\"image\"\r\n      viewBox=\"0 0 1600 1600\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </SlottedSVG>\r\n</IcEmptyState>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={imageLargeSnippets}>\r\n  <IcEmptyState\r\n    imageSize=\"large\"\r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\"\r\n  >\r\n    <svg slot=\"image\" viewBox=\"0 0 1600 1600\">\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </svg>\r\n  </IcEmptyState>\r\n</ComponentPreview>\r\n\r\n### Icon in the image slot\r\n\r\nexport const iconSnippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-empty-state \r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\"\r\n>\r\n  <svg\r\n    slot=\"image\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"#D07932\"\r\n  >\r\n    <title id=\"warning-title\">Warning</title>\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n    <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\r\n  </svg>\r\n</ic-empty-state>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcEmptyState \r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\"\r\n>\r\n  <SlottedSVG\r\n    slot=\"image\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"#D07932\"\r\n  >\r\n    <title id=\"warning-title\">Warning</title>\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n    <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\r\n  </SlottedSVG>\r\n</IcEmptyState>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={iconSnippets}>\r\n  <IcEmptyState\r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\"\r\n  >\r\n    <svg\r\n      slot=\"image\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"#D07932\"\r\n    >\r\n      <title id=\"warning-title\">Warning</title>\r\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n      <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\r\n    </svg>\r\n  </IcEmptyState>\r\n</ComponentPreview>\r\n\r\n### Right aligned\r\n\r\nexport const rightSnippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-empty-state \r\n    aligned=\"right\" \r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\">\r\n</ic-empty-state>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcEmptyState \r\n    aligned=\"right\" \r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\" \r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={rightSnippets}>\r\n  <IcEmptyState\r\n    aligned=\"right\"\r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Center aligned\r\n\r\nexport const centreSnippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-empty-state \r\n    aligned=\"center\" \r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\">\r\n</ic-empty-state>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcEmptyState \r\n    aligned=\"center\" \r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\"\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={centreSnippets}>\r\n  <IcEmptyState\r\n    aligned=\"center\"\r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those, or try again.\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Max lines\r\n\r\nexport const maxLinesSnippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-empty-state \r\n    body-max-lines=\"1\" \r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those. Please try looking again or come back later. We're very sorry for any inconvenience this may cause you.\">\r\n</ic-empty-state>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcEmptyState \r\n    bodyMaxLines=\"1\" \r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those. Please try looking again or come back later. We're very sorry for any inconvenience this may cause you.\"\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={maxLinesSnippets}>\r\n  <IcEmptyState\r\n    bodyMaxLines=\"1\"\r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those. Please try looking again or come back later. We're very sorry for any inconvenience this may cause you.\"\r\n  />\r\n</ComponentPreview>\r\n",
      "path": "/components/empty-state/code",
      "date": "2023-08-09",
      "title": "Empty state",
      "status": "BETA",
      "subTitle": "Use the empty state component when there is no content to display. It provides a consistent way of communicating to people what to do next.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/empty-state",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/empty-state"
        },
        {
          "title": "Code",
          "path": "/components/empty-state/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/empty-state/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\empty-state\\code.mdx",
        "createdAt": "2024-04-04T12:41:43.920Z",
        "lastModified": "2024-04-04T12:41:43.920Z",
        "size": 20242,
        "formattedSize": "19.8 KB"
      }
    },
    {
      "id": "components\\empty-state\\guidancex",
      "contents": "\r\nimport { IcEmptyState, IcButton, IcLink } from \"@ukic/react\";\r\nimport emptyStateFig1 from \"./images/fig-1-data-table-with-empty-state.png\";\r\nimport emptyStateFig2 from \"./images/fig-2-use-empty-state-for-access-rights.png\";\r\nimport emptyStateFig3 from \"./images/fig-3-use-empty-state-with-positive-messaging.png\";\r\nimport emptyStateFig4 from \"./images/fig-4-use-empty-states-as-starting-points-for-flows.png\";\r\nimport emptyStateFig5 from \"./images/fig-5-dont-use-empty-states-for-messages-unrelated-to-empty-state.png\";\r\nimport emptyStateFig6 from \"./images/fig-6-dont-use-empty-state-for-loading-messages.png\";\r\nimport emptyStateFig7 from \"./images/fig-7-use-empty-states-on-a-full-screen.png\";\r\nimport emptyStateFig8 from \"./images/fig-8-use-empty-states-on-a-side-panel.png\";\r\nimport emptyStateFig9 from \"./images/fig-9-use-empty-states-on-other-containers.png\";\r\nimport emptyStateFig10 from \"./images/fig-10-empty-state-anatomy.png\";\r\nimport emptyStateFig11 from \"./images/fig-11-avoid-using-too-many-actions.png\";\r\nimport emptyStateFig12 from \"./images/fig-12-dont-use-other-component-in-interaction-area.png\";\r\n\r\n## Component demo\r\n\r\n<ComponentPreview>\r\n  <IcEmptyState\r\n    heading=\"Hmm...there's nothing here\"\r\n    subheading=\"We don't currently have any favourite teas, probably because coffee is much better.\"\r\n    body=\"Take a look at our favourite coffees instead, there's much more of those.\"\r\n  >\r\n    <svg slot=\"image\" viewBox=\"0 0 1600 1600\">\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"1600\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </svg>\r\n    <IcButton slot=\"actions\">Go to favourite coffees</IcButton>\r\n    <IcLink slot=\"actions\" href=\"#\" onClick={(e) => e.preventDefault()}>\r\n      Customer support\r\n    </IcLink>\r\n  </IcEmptyState>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse an empty state component to communicate to people that no content is available to display. Use them to engage people and guide them on what is best to do next by including a button or a link to the next best action.\r\n\r\nEmpty states are used for many different reasons such as:\r\n\r\n- No content yet exists due to the first-time use of the functionality.\r\n- Data was not successfully loaded.\r\n- A query or search term yielded no results.\r\n- Data was removed resulting in nothing remaining to display.\r\n\r\nUse empty states when no data can be displayed in a component’s contents. For example, show an empty state when no data is available to display in a data table, or if a search term didn’t find any results.\r\n\r\n<DoDontCaution\r\n  imageSrc={emptyStateFig1}\r\n  imageAlt=\"An example app called ‘We love coffee’ with a page displaying favourite teas. An empty data table is displayed with an empty state that reads ‘There’s nothing here’.\"\r\n  state=\"good\"\r\n  caption=\"Use empty states when there is no data available to display.\"\r\n/>\r\n\r\nUse empty states to highlight access issues. If a user does not have access to some content, use an empty state to provide this messaging as well as a means of continuing.\r\n\r\n<DoDontCaution\r\n  imageSrc={emptyStateFig2}\r\n  imageAlt=\"An example app showing favourite coffees. The ‘americano’ product is selected, but show’s a ‘locked’ status on it. A drawer is displayed containing an empty state component that reads ‘Sorry, you don’t have access to this at the moment’.\"\r\n  state=\"good\"\r\n  caption=\"Use empty states to show access rights issue if the content is not available to that user.\"\r\n/>\r\n\r\nEmpty states are not always due to errors, so use positive messaging as well. For example, in a to-do list app, all items might have been cleared and so the empty state message may be celebratory.\r\n\r\n<DoDontCaution\r\n  imageSrc={emptyStateFig3}\r\n  imageAlt=\"An example app that shows new orders for coffee that need to be fulfilled. After the orders have been completed, an empty state component is displayed showing a positive message that reads ‘All done! Have a cuppa’.\"\r\n  state=\"good\"\r\n  caption=\"Use empty states for positive messaging when empty is the desirable state, such as in a ticketing system or to-do list.\"\r\n/>\r\n\r\nUse empty states as starting points for processes that require people to add input into an app. For example, a calendar entry may have no events yet, so use an empty state to prompt for an event to be added.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={emptyStateFig4}\r\n    imageAlt=\"An example app showing a product customisation page for an Americano coffee. A section appears titled ‘Extras’ and an empty state message is displayed prompting the user to ‘add extras’.\"\r\n    state=\"good\"\r\n    caption=\"Use the empty state component as a starting point for a process, such as adding extras to a product customisation.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## When not to use\r\n\r\nAvoid using custom components instead of empty states. The empty state component creates an easily understandable, consistent method of indicating that no data is available and therefore what to do next.\r\n\r\nDon’t use empty states to communicate other messages to people that are not related to something being empty, use [alerts](/components/alert) or [toasts](/components/toasts) instead. Only use empty states in situations where no data is present to display.\r\n\r\n<DoDontCaution\r\n  imageSrc={emptyStateFig5}\r\n  imageAlt=\"A blog post titled ‘The perfect blend’. An empty state component is used inline with the content that reads ‘This is a brand new post’.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t use empty states to convey messages that are not related to an empty state.\"\r\n/>\r\n\r\nDon’t use empty states to show error messages that could otherwise be displayed using other [form validation](/patterns/form-validation) patterns. Only use empty states to show errors relating to data not being loaded successfully.\r\n\r\nDon’t use empty states to indicate something is loading, instead use a [loading indicator](/components/loading-indicator).\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={emptyStateFig6}\r\n    imageAlt=\"An empty state component being used to indicate that an order history is loading.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t use empty state components for loading messages.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Sizing\r\n\r\nEmbed empty states in components that would otherwise show data. For example, use them in containers, cards, dialogs or data tables.\r\n\r\nUse an empty state on a full screen in case something couldn’t be loaded, or there is no content available yet. For example, use an empty state to show a 404 message.\r\n\r\n<DoDontCaution\r\n  imageSrc={emptyStateFig7}\r\n  imageAlt=\"An empty state component displayed on a full screen that reads ‘There’s nothing here.’\"\r\n  state=\"none\"\r\n  caption=\"Use empty states on full screen page if no data is available to display.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={emptyStateFig8}\r\n  imageAlt=\"An example app with a side panel displayed over the page content containing an empty state component that reads ‘No comments yet’.\"\r\n  state=\"none\"\r\n  caption=\"Use empty states in other containers such as drawers and side panels.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={emptyStateFig9}\r\n  imageAlt=\"A grid of cards for coffee products with one card showing an empty state component that reads ‘Woops, this coffee cup is empty’.\"\r\n  state=\"none\"\r\n  caption=\"Use empty states within other components and containers when no data is present.\"\r\n/>\r\n\r\n## Layout and placement\r\n\r\nSet the alignment of the empty state to match the component or container it sits in.\r\n\r\nPlace empty states at the top and don’t resize the container, keep it sized the same as if the primary content was displayed instead.\r\n\r\n## Content\r\n\r\nUse the empty state to clearly communicate to someone what has happened, why they are seeing the empty state and what to do next.\r\n\r\n<DoDontCaution\r\n  imageSrc={emptyStateFig10}\r\n  imageAlt=\"A diagram showing the different elements that make up the empty state component. These are an image or icon, a title, a subtitle, some body text, and an interaction area.\"\r\n  state=\"none\"\r\n  caption=\"The empty state component has an image or icon, a title, a subtitle, some body text and an interaction area.\"\r\n/>\r\n\r\nAdd an illustration, image or icon to an empty state to provide additional recognition or reinforce the written message.\r\n\r\nUse the empty state heading to clearly indicate the state of the empty content.\r\n\r\nUse the subheading to add more detail and explain why this may have happened.\r\n\r\nUse the body to explain how to rectify the issue, or to explain what is best to do next.\r\n\r\nUse the interaction area to include actions and links that will help people to continue through the app. Always include either a primary button or a navigation link, and occasionally include a secondary button or link if other routes are possible.\r\n\r\nHowever, avoid placing too many actions in the interaction area as this will cause confusion about what to do next.\r\n\r\n<DoDontCaution\r\n  imageSrc={emptyStateFig11}\r\n  imageAlt=\"An empty state component that has three buttons and three links within its interaction area.\"\r\n  state=\"caution\"\r\n  caption=\"Avoid placing too many actions within the interaction area.\"\r\n/>\r\n\r\nDon’t place other interactive components, such as inputs, in an empty state’s interaction area. If input needs to be collected, then do this on a full page or on a dialog.\r\n\r\n<DoDontCaution imageSrc={emptyStateFig12} imageAlt=\"\" state=\"bad\" caption=\"\" />\r\n\r\n## Accessibility considerations\r\n\r\nIf an empty state is displayed as a result of a change on a page, make sure it is announced by a screen reader using a live region.\r\n\r\n## Related components\r\n\r\n- [Alert](/components/alert).\r\n- [Loading indicator](/components/loading-indicator).\r\n",
      "path": "/components/empty-state",
      "navPriority": 16,
      "date": "2023-08-31",
      "title": "Empty state",
      "status": "BETA",
      "subTitle": "Use the empty state component when there is no content to display. It provides a consistent way of communicating to people what to do next.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/empty-state",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/empty-state"
        },
        {
          "title": "Code",
          "path": "/components/empty-state/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/empty-state/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\empty-state\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.993Z",
        "lastModified": "2024-06-04T07:48:34.993Z",
        "size": 11152,
        "formattedSize": "10.9 KB"
      }
    },
    {
      "id": "components\\footer\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nThe footer acts as a container for additional information and links. All footer content needs to align to that component's accessibility guidelines.\r\n\r\n## For Assistive Technology\r\n\r\nAs above, all content of the footer should follow their relevant assistive technology guidelines.\r\n\r\nAny logos that are included in the footer need to have alt-text assigned. The alt-text should simply be the name of the organisation or entity that the logo describes.\r\n\r\nThe footer uses the HTML footer page region to allow quick navigation between page regions when using assistive technology. It assigns the `contentinfo` ARIA landmark to adhere to proper page structure and semantics.\r\n\r\n## Based on\r\n\r\nThe footer component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/tutorials/page-structure/regions/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Page Regions\r\n    </ic-link>\r\n    , W3, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/contentinfo_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      ARIA: contentinfo role\r\n    </ic-link>\r\n    , MDN web docs, accessed March 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/footer/accessibility",
      "date": "2024-04-15",
      "title": "Footer",
      "status": "BETA",
      "subTitle": "Footers are placed at the bottom of the page and can be used for additional links not found in the main navigation.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/footer",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/footer"
        },
        {
          "title": "Code",
          "path": "/components/footer/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/footer/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\footer\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.318Z",
        "lastModified": "2024-05-20T13:20:43.318Z",
        "size": 2074,
        "formattedSize": "2.0 KB"
      }
    },
    {
      "id": "components\\footer\\codex",
      "contents": "\r\nimport { IcFooter, IcLink, IcFooterLink, IcFooterLinkGroup } from \"@ukic/react\";\r\n\r\nimport { NavLink, MemoryRouter } from \"react-router-dom\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-footer\r\n    description=\"The UK Intelligence Community Design System (ICDS) is a joint project by MI6, GCHQ, MI5, and partners.\"\r\n    caption=\"All content is available under the Open Government Licence v3.0, except source code and code examples which are available under the MIT Licence.\">\r\n    <ic-footer-link slot=\"link\" href=\"/\">\r\n      Accessibility\r\n    </ic-footer-link>\r\n    <ic-footer-link slot=\"link\" href=\"/\">\r\n      Styles\r\n    </ic-footer-link>\r\n    <ic-footer-link slot=\"link\" href=\"/\">\r\n      Components\r\n    </ic-footer-link>\r\n    <ic-footer-link slot=\"link\" href=\"/\">\r\n      Patterns\r\n    </ic-footer-link>\r\n</ic-footer>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcFooter\r\n    description=\"The UK Intelligence Community Design System (ICDS) is a joint project by MI6, GCHQ, MI5, and partners.\"\r\n    caption=\"All content is available under the Open Government Licence v3.0, except source code and code examples which are available under the MIT Licence.\">\r\n    <IcFooterLink slot=\"link\" href=\"/\">\r\n      Accessibility\r\n    </IcFooterLink>\r\n    <IcFooterLink slot=\"link\" href=\"/\">\r\n      Styles\r\n    </IcFooterLink>\r\n    <IcFooterLink slot=\"link\" href=\"/\">\r\n      Components\r\n    </IcFooterLink>\r\n    <IcFooterLink slot=\"link\" href=\"/\">\r\n      Patterns\r\n    </IcFooterLink>\r\n</IcFooter>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <IcFooter\r\n    description=\"The UK Intelligence Community Design System (ICDS) is a joint project by MI6, GCHQ, MI5, and partners.\"\r\n    caption=\"All content is available under the Open Government Licence v3.0, except source code and code examples which are available under the MIT Licence.\"\r\n  >\r\n    <IcFooterLink slot=\"link\" href=\"/\">\r\n      Accessibility\r\n    </IcFooterLink>\r\n    <IcFooterLink slot=\"link\" href=\"/\">\r\n      Styles\r\n    </IcFooterLink>\r\n    <IcFooterLink slot=\"link\" href=\"/\">\r\n      Components\r\n    </IcFooterLink>\r\n    <IcFooterLink slot=\"link\" href=\"/\">\r\n      Patterns\r\n    </IcFooterLink>\r\n  </IcFooter>\r\n</ComponentPreview>\r\n\r\n## Footer details\r\n\r\n<ComponentDetails component=\"ic-footer\" />\r\n\r\n## Footer link details\r\n\r\n<ComponentDetails component=\"ic-footer-link\" />\r\n\r\n## Footer link group details\r\n\r\n<ComponentDetails component=\"ic-footer-link-group\" />\r\n\r\n## Variants\r\n\r\n### Grouped links\r\n\r\nexport const snippetsGroupedLinks = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-footer\r\n    group-links=\"true\"\r\n    description=\"The ICDS is maintained by the Design Practice Team. If you've got a question or want to feedback, \r\n          please get in touch.\">\r\n    <ic-footer-link-group slot=\"link\" group-title=\"Grouped heading\">\r\n      <ic-footer-link href=\"/\">Accessibility</ic-footer-link>\r\n      <ic-footer-link href=\"/\">Styles</ic-footer-link>\r\n      <ic-footer-link href=\"/\">Components</ic-footer-link>\r\n      <ic-footer-link href=\"/\">Patterns</ic-footer-link>\r\n    </ic-footer-link-group>\r\n    <ic-footer-link-group slot=\"link\" group-title=\"Grouped heading\">\r\n      <ic-footer-link href=\"/\">Accessibility</ic-footer-link>\r\n      <ic-footer-link href=\"/\">Styles</ic-footer-link>\r\n      <ic-footer-link href=\"/\">Components</ic-footer-link>\r\n      <ic-footer-link href=\"/\">Patterns</ic-footer-link>\r\n    </ic-footer-link-group>\r\n    <ic-footer-link-group slot=\"link\" group-title=\"Grouped heading\">\r\n      <ic-footer-link href=\"/\">Accessibility</ic-footer-link>\r\n      <ic-footer-link href=\"/\">Styles</ic-footer-link>\r\n      <ic-footer-link href=\"/\">Components</ic-footer-link>\r\n      <ic-footer-link href=\"/\">Patterns</ic-footer-link>\r\n    </ic-footer-link-group>\r\n  </ic-footer>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcFooter\r\n    groupLinks\r\n    description=\"The ICDS is maintained by the Design Practice Team. If you've got a question or want to feedback, \r\n          please get in touch.\">\r\n    <IcFooterLinkGroup slot=\"link\" groupTitle=\"Grouped heading\">\r\n      <IcFooterLink href=\"/\">Accessibility</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Styles</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Components</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Patterns</IcFooterLink>\r\n    </IcFooterLinkGroup>\r\n    <IcFooterLinkGroup slot=\"link\" groupTitle=\"Grouped heading\">\r\n      <IcFooterLink href=\"/\">Accessibility</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Styles</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Components</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Patterns</IcFooterLink>\r\n    </IcFooterLinkGroup>\r\n    <IcFooterLinkGroup slot=\"link\" groupTitle=\"Grouped heading\">\r\n      <IcFooterLink href=\"/\">Accessibility</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Styles</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Components</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Patterns</IcFooterLink>\r\n    </IcFooterLinkGroup>\r\n  </IcFooter>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsGroupedLinks}>\r\n  <IcFooter\r\n    groupLinks\r\n    description=\"The ICDS is maintained by the Design Practice Team. If you've got a question or want to feedback, \r\n          please get in touch.\"\r\n  >\r\n    <IcFooterLinkGroup slot=\"link\" groupTitle=\"Grouped heading\">\r\n      <IcFooterLink href=\"/\">Accessibility</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Styles</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Components</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Patterns</IcFooterLink>\r\n    </IcFooterLinkGroup>\r\n    <IcFooterLinkGroup slot=\"link\" groupTitle=\"Grouped heading\">\r\n      <IcFooterLink href=\"/\">Accessibility</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Styles</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Components</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Patterns</IcFooterLink>\r\n    </IcFooterLinkGroup>\r\n    <IcFooterLinkGroup slot=\"link\" groupTitle=\"Grouped heading\">\r\n      <IcFooterLink href=\"/\">Accessibility</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Styles</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Components</IcFooterLink>\r\n      <IcFooterLink href=\"/\">Patterns</IcFooterLink>\r\n    </IcFooterLinkGroup>\r\n  </IcFooter>\r\n</ComponentPreview>\r\n\r\n### Logo links\r\n\r\nexport const snippetsLogoLinks = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-footer description=\"The ICDS is maintained by the Design Practice Team. If you've got a question or want to feedback, please get in touch.\">\r\n  <ic-footer-link slot=\"link\" href=\"/\">Accessibility</ic-footer-link>\r\n  <ic-footer-link slot=\"link\" href=\"/\">Styles</ic-footer-link>\r\n  <ic-footer-link slot=\"link\" href=\"/\">Components</ic-footer-link>\r\n  <ic-footer-link slot=\"link\" href=\"/\">Patterns</ic-footer-link>\r\n    <div slot=\"logo\">\r\n      <ic-footer-link href=\"/\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"48px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"48px\"\r\n          fill=\"#FFFFFF\"\r\n        >\r\n          <path\r\n            d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n      </svg>\r\n      </ic-footer-link>\r\n      <ic-footer-link href=\"/\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"48px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"48px\"\r\n          fill=\"#FFFFFF\"\r\n        >\r\n          <path\r\n            d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n        </svg>\r\n      </ic-footer-link>\r\n    </div>\r\n</ic-footer>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcFooter description=\"The ICDS is maintained by the Design Practice Team. If you've got a question or want to feedback, please get in touch.\">\r\n  <IcFooterLink slot=\"link\" href=\"/\">Accessibility</IcFooterLink>\r\n  <IcFooterLink slot=\"link\" href=\"/\">Styles</IcFooterLink>\r\n  <IcFooterLink slot=\"link\" href=\"/\">Components</IcFooterLink>\r\n  <IcFooterLink slot=\"link\" href=\"/\">Patterns</IcFooterLink>\r\n  <div slot=\"logo\">\r\n    <IcFooterLink href=\"/\">\r\n      <SlottedSVG\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"48px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"48px\"\r\n        fill=\"#FFFFFF\"\r\n      >\r\n        <path\r\n          d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n      </SlottedSVG>\r\n    </IcFooterLink>\r\n    <IcFooterLink href=\"/\">\r\n      <SlottedSVG\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"48px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"48px\"\r\n        fill=\"#FFFFFF\"\r\n      >\r\n        <path\r\n          d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n      </SlottedSVG>\r\n    </IcFooterLink>\r\n  </div>\r\n</IcFooter>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsLogoLinks}>\r\n  <IcFooter description=\"The ICDS is maintained by the Design Practice Team. If you've got a question or want to feedback, please get in touch.\">\r\n    <IcFooterLink slot=\"link\" href=\"/\">\r\n      Accessibility\r\n    </IcFooterLink>\r\n    <IcFooterLink slot=\"link\" href=\"/\">\r\n      Styles\r\n    </IcFooterLink>\r\n    <IcFooterLink slot=\"link\" href=\"/\">\r\n      Components\r\n    </IcFooterLink>\r\n    <IcFooterLink slot=\"link\" href=\"/\">\r\n      Patterns\r\n    </IcFooterLink>\r\n    <div\r\n      slot=\"logo\"\r\n      style={{\r\n        display: \"flex\",\r\n        gap: \"var(--ic-space-lg)\",\r\n      }}\r\n    >\r\n      <IcFooterLink href=\"/\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"48px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"48px\"\r\n          fill=\"#FFFFFF\"\r\n        >\r\n          <path\r\n            d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n        </svg>\r\n      </IcFooterLink>\r\n      <IcFooterLink href=\"/\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"48px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"48px\"\r\n          fill=\"#FFFFFF\"\r\n        >\r\n          <path\r\n            d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n        </svg>\r\n      </IcFooterLink>\r\n    </div>\r\n  </IcFooter>\r\n</ComponentPreview>\r\n\r\n### With React Router\r\n\r\nexport const withReactRouter = [\r\n  {\r\n    language: \"React\",\r\n    snippet: `<MemoryRouter initialEntries={[\"/\"]}>\r\n  <Routes>\r\n      <Route path=\"/\" element={() => <IcTypography>This is the accessibility page</IcTypography>} />\r\n      <Route path=\"/Styles\" element={() => <IcTypography>This page is about styles</IcTypography>} />\r\n  </Routes>\r\n  <IcFooter description=\"The ICDS is maintained by the Design Practice Team. If you've got a question or want to feedback, please get in touch.\" caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\" \r\n  > \r\n    <IcFooterLink slot=\"link\">\r\n      <NavLink to=\"/\">Accessibility</NavLink>\r\n    </IcFooterLink>\r\n    <IcFooterLink slot=\"link\">\r\n      <NavLink to=\"/Styles\">Styles</NavLink>\r\n    </IcFooterLink>\r\n    <div slot=\"logo\" style={{\r\n    width: \"100px\",\r\n    height: \"100px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"var(--ic-theme-primary)\",\r\n    color: \"var(--ic-theme-text)\"\r\n  }}>\r\n      Logo\r\n    </div>\r\n  </IcFooter>\r\n</MemoryRouter>\r\n    `,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={withReactRouter}\r\n  style={{ flexDirection: \"column\" }}\r\n>\r\n  <MemoryRouter initialEntries={[\"/\"]}>\r\n    <IcFooter\r\n      description=\"The ICDS is maintained by the Design Practice Team. If you've got a question or want to feedback, please get in touch.\"\r\n      caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\"\r\n    >\r\n      <IcFooterLink slot=\"link\">\r\n        <NavLink to=\"/\">Accessibility</NavLink>\r\n      </IcFooterLink>\r\n      <IcFooterLink slot=\"link\">\r\n        <NavLink to=\"/Styles\">Styles</NavLink>\r\n      </IcFooterLink>\r\n      <div\r\n        slot=\"logo\"\r\n        style={{\r\n          width: \"100px\",\r\n          height: \"100px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          backgroundColor: \"var(--ic-theme-primary)\",\r\n          color: \"var(--ic-theme-text)\",\r\n        }}\r\n      >\r\n        Logo\r\n      </div>\r\n    </IcFooter>\r\n  </MemoryRouter>\r\n</ComponentPreview>\r\n\r\n## Layout example\r\n\r\nAdding a `minHeight` of `100vh` ensures the footer appears below the page fold.\r\n\r\nexport const footerLayoutExample = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<div class='footer-layout-root'>\r\n  <div style=\"height: 100vh\">  \r\n    <ic-top-navigation appTitle=\"ICDS\" status=\"alpha\" version=\"v0.0.7\">\r\n      <svg\r\n        slot=\"app-icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n      </svg>\r\n    </ic-top-navigation>\r\n    <main>\r\n      <ic-section-container>\r\n        <ic-typography>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed\r\n          vestibulum venenatis facilisis. Nam tortor felis, auctor vel\r\n          ante quis, tempor interdum libero. In dictum sodales velit, eu\r\n          egestas arcu dignissim ac. Aliquam facilisis eros dolor, id\r\n          laoreet orci sagittis ut. Sed tempus, lacus in pretium molestie,\r\n          lectus magna interdum risus, vel fringilla libero ex eu dui.\r\n          Suspendisse ullamcorper vehicula lacinia. Phasellus congue velit\r\n          nisl, vitae congue ligula rutrum id.\r\n        </ic-typography>\r\n      </ic-section-container>\r\n    </main>\r\n  </div>\r\n  <ic-footer\r\n    description=\"The UK Intelligence Community Design System (ICDS) is a joint project by MI6, GCHQ, MI5, and partners.\"\r\n    caption=\"All content is available under the Open Government Licence v3.0, except source code and code examples which are available under the MIT Licence.\">\r\n    <ic-footer-link slot=\"link\" href=\"/\">Accessibility</ic-footer-link>\r\n    <ic-footer-link slot=\"link\" href=\"/\">Styles</ic-footer-link>\r\n    <ic-footer-link slot=\"link\" href=\"/\">Components</ic-footer-link>\r\n    <ic-footer-link slot=\"link\" href=\"/\">Patterns</ic-footer-link>\r\n  </ic-footer>\r\n</div>\r\n    `,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<div className='footer-layout-root'>\r\n  <div style={{minHeight:\"100vh\"}}>  \r\n    <IcTopNavigation appTitle=\"ICDS\" status=\"alpha\" version=\"v0.0.7\">\r\n      <SlottedSVG\r\n        slot=\"app-icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n      </SlottedSVG>\r\n    </IcTopNavigation>\r\n    <main>\r\n      <IcSectionContainer>\r\n        <IcTypography>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed\r\n          vestibulum venenatis facilisis. Nam tortor felis, auctor vel\r\n          ante quis, tempor interdum libero. In dictum sodales velit, eu\r\n          egestas arcu dignissim ac. Aliquam facilisis eros dolor, id\r\n          laoreet orci sagittis ut. Sed tempus, lacus in pretium molestie,\r\n          lectus magna interdum risus, vel fringilla libero ex eu dui.\r\n          Suspendisse ullamcorper vehicula lacinia. Phasellus congue velit\r\n          nisl, vitae congue ligula rutrum id.\r\n        </IcTypography>\r\n      </IcSectionContainer>\r\n    </main>\r\n  </div>\r\n  <IcFooter\r\n    description=\"The UK Intelligence Community Design System (ICDS) is a joint project by MI6, GCHQ, MI5, and partners.\"\r\n    caption=\"All content is available under the Open Government Licence v3.0, except source code and code examples which are available under the MIT Licence.\">\r\n    <IcFooterLink slot=\"link\" href=\"/\">Accessibility</IcFooterLink>\r\n    <IcFooterLink slot=\"link\" href=\"/\">Styles</IcFooterLink>\r\n    <IcFooterLink slot=\"link\" href=\"/\">Components</IcFooterLink>\r\n    <IcFooterLink slot=\"link\" href=\"/\">Patterns</IcFooterLink>\r\n  </IcFooter>\r\n</div>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={footerLayoutExample}>\r\n  <IcLink href=\"/footer-layout\" target=\"_blank\">\r\n    View example in new window\r\n  </IcLink>\r\n</ComponentPreview>\r\n",
      "path": "/components/footer/code",
      "date": "2024-02-02",
      "title": "Footer",
      "status": "BETA",
      "subTitle": "Footers are placed at the bottom of the page and can be used for additional links not found in the main navigation.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/footer",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/footer"
        },
        {
          "title": "Code",
          "path": "/components/footer/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/footer/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\footer\\code.mdx",
        "createdAt": "2024-04-04T12:41:43.937Z",
        "lastModified": "2024-04-04T12:41:43.937Z",
        "size": 17838,
        "formattedSize": "17.4 KB"
      }
    },
    {
      "id": "components\\footer\\guidancex",
      "contents": "\r\nimport { IcFooter, IcFooterLink } from \"@ukic/react\";\r\nimport footerFig1 from \"./images/fig-1-colours.png\";\r\nimport footerFig2 from \"./images/fig-2-not-full-width.png\";\r\nimport footerFig3 from \"./images/fig-3-below-the-fold.png\";\r\nimport footerFig4 from \"./images/fig-4-above-the-fold.png\";\r\nimport footerFig5 from \"./images/fig-5-app-drawer-layouts.png\";\r\nimport footerFig6 from \"./images/fig-6-left-aligned.png\";\r\nimport footerFig7 from \"./images/fig-7-centred.png\";\r\nimport footerFig8 from \"./images/fig-8-full-width.png\";\r\nimport footerFig9 from \"./images/fig-9-single-line-links.png\";\r\nimport footerFig10 from \"./images/fig-10-grouped-links.png\";\r\nimport footerFig11 from \"./images/fig-11-desktop-logos.png\";\r\nimport footerFig12 from \"./images/fig-12-correct-copy.png\";\r\nimport footerFig13 from \"./images/fig-13-incorrect-copy.png\";\r\n\r\n## Introduction\r\n\r\nAn example of the footer component.\r\n\r\n<ComponentPreview>\r\n  <IcFooter\r\n    description=\"The UK Intelligence Community Design System (ICDS) is a joint project by MI6, GCHQ, MI5, and partners.\"\r\n    caption=\"All content is available under the Open Government Licence v3.0, except source code and code examples which are available under the MIT Licence.\"\r\n  >\r\n    <IcFooterLink slot=\"link\" href=\"#\">\r\n      Accessibility\r\n    </IcFooterLink>\r\n    <IcFooterLink slot=\"link\" href=\"#\">\r\n      Styles\r\n    </IcFooterLink>\r\n    <IcFooterLink slot=\"link\" href=\"#\">\r\n      Components\r\n    </IcFooterLink>\r\n    <IcFooterLink slot=\"link\" href=\"#\">\r\n      Patterns\r\n    </IcFooterLink>\r\n  </IcFooter>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nThere are two types of footer that display links in different ways. These are single line footers and grouped footers.\r\n\r\nUse a footer on every page so that the required legal information is displayed.\r\n\r\n### Single line\r\n\r\nUse single line footers when eight or fewer links are required and there is no need to split those links into groups.\r\n\r\n### Grouped\r\n\r\nUse grouped footers when more than eight links are required or the links can be grouped meaningfully.\r\n\r\n## Colour\r\n\r\nThe background colour of the footer reflects the chosen theme colour for the application. Set the global theme colour token to change the footer’s appearance.\r\n\r\n<DoDontCaution\r\n  imageSrc={footerFig1}\r\n  imageAlt=\"A footer using automatically generated secondary and tertiary shades of the app’s theme colour as the background colours for the footer’s link section and logo section respectively.\"\r\n  state=\"good\"\r\n  caption=\"Change the global theme colour token to change the footer’s appearance.\"\r\n/>\r\n\r\n## Sizing\r\n\r\nThe footer always extends to the full width of the viewport.\r\n\r\nDon’t embed the footer within another container that is not full width.\r\n\r\n<DoDontCaution\r\n  imageSrc={footerFig2}\r\n  imageAlt=\"A footer positioned centred between two other content areas that sit to the left and right of the footer.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t place the footer within other content. Always make sure it's the full width of the viewport.\"\r\n/>\r\n\r\n## Layout and placement\r\n\r\n### Placement\r\n\r\nAlways place the footer at the bottom of the page and below the fold, meaning users should scroll to see it.\r\n\r\n<DoDontCaution\r\n  imageSrc={footerFig3}\r\n  imageAlt=\"A footer component placed below the fold within a page design.\"\r\n  state=\"good\"\r\n  caption=\"Footer placed correctly below the fold on a page.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={footerFig4}\r\n  imageAlt=\"A footer component placed above the fold within a page design.\"\r\n  state=\"bad\"\r\n  caption=\"Footer placed incorrectly above the fold.\"\r\n/>\r\n\r\nPosition the footer adjacent to the [side navigation](/components/side-navigation) if your app uses one.\r\n\r\n<DoDontCaution\r\n  imageSrc={footerFig5}\r\n  imageAlt=\"An example app showing a side navigation component with a footer component positioned on the right and adjacent to the side navigation.\"\r\n  state=\"good\"\r\n  caption=\"Place the footer adjacent to the side navigation.\"\r\n/>\r\n\r\n### Alignment\r\n\r\nThe footer can be set to left-aligned, centred or full width.\r\n\r\nUse left-aligned to align footer content to the left of the main body of the page. This works well with apps that use the side navigation.\r\n\r\n<DoDontCaution\r\n  imageSrc={footerFig6}\r\n  imageAlt=\"A footer component with its content left aligned.\"\r\n  state=\"good\"\r\n  caption=\"A footer with its content left aligned.\"\r\n/>\r\n\r\nUse centred alignment to centre footer content to the main body of the page.\r\n\r\n<DoDontCaution\r\n  imageSrc={footerFig7}\r\n  imageAlt=\"A footer component with its content centre aligned.\"\r\n  state=\"good\"\r\n  caption=\"A footer with its content centre aligned.\"\r\n/>\r\n\r\nUse full-width to position footer content so that it spans the full width of the viewport.\r\n\r\n<DoDontCaution\r\n  imageSrc={footerFig8}\r\n  imageAlt=\"A footer component with its content aligned to the full width of the viewport.\"\r\n  state=\"good\"\r\n  caption=\"A footer with its content aligned to the full width of the viewport.\"\r\n/>\r\n\r\n## Content\r\n\r\n### Links\r\n\r\nFooters provide a set of links that can be accessed from every page within an app. Specify either single links or grouped links when using a footer.\r\n\r\nGive link groups clear labels when using grouped links.\r\n\r\nOrder the links so that the most important links appear at the top left of the links section.\r\n\r\n<DoDontCaution\r\n  imageSrc={footerFig9}\r\n  imageAlt=\"A footer showing a single set of links. The four links include ‘Accessibility statement’, ‘Privacy’, ‘Cookies’ and ‘Contribute’.\"\r\n  state=\"good\"\r\n  caption=\"A footer with a single set of links.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={footerFig10}\r\n  imageAlt=\"A footer showing two groups of links. The two link groups are titled ‘Services’ and ‘Policy’ and each group includes a set of links.\"\r\n  state=\"good\"\r\n  caption=\"A footer with grouped links.\"\r\n/>\r\n\r\n### Logos\r\n\r\nFooters can include a number of different logos. The logos appear at the bottom of the footer. Choose the correct variant (i.e., light or dark) of your logo to match the selected theme colour background.\r\n\r\n<DoDontCaution\r\n  imageSrc={footerFig11}\r\n  imageAlt=\"A footer displaying four different logos on a large screen.\"\r\n  state=\"good\"\r\n  caption=\"A footer displaying four different logos on a large screen.\"\r\n/>\r\n\r\n### Additional information\r\n\r\nProvide additional information in either the top section above the links or in the bottom section below the logos. Any additional information provided should be concise and easy to understand.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={footerFig12}\r\n    imageAlt=\"A footer component showing concise and easily understandable information. It reads ‘The ICDS is maintained by the Design Practice Team. If you’ve got a question or want to feedback, please get in touch.’\"\r\n    state=\"good\"\r\n    caption=\"Concise and easily understandable information shown in the footer.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={footerFig13}\r\n    imageAlt=\"A footer component showing overly lengthy information. It reads ‘The ICDS is maintained by the Design Practice Team. If you’ve got a question or want to feedback, please get in touch. The best way to contact the team would be through Microsoft Teams between the hours of 9am to 5pm, Monday to Friday. We will strive to get back to you as soon as possible.’\"\r\n    state=\"bad\"\r\n    caption=\"The information included in the footer is too long.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n",
      "path": "/components/footer",
      "navPriority": 17,
      "date": "2023-02-03",
      "title": "Footer",
      "status": "BETA",
      "subTitle": "Footers are placed at the bottom of the page and can be used for additional links not found in the main navigation.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/footer",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/footer"
        },
        {
          "title": "Code",
          "path": "/components/footer/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/footer/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\footer\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.994Z",
        "lastModified": "2024-06-04T07:48:34.994Z",
        "size": 8000,
        "formattedSize": "7.8 KB"
      }
    },
    {
      "id": "components\\hero\\accessibilityx",
      "contents": "\r\nimport heroFig17 from \"./images/fig-17-focus-order.png\";\r\n\r\n## Easy to use for everyone\r\n\r\nHero images use text elements that use semantic headings to provide proper order to the page content.\r\n\r\nAs hero banners can have different colour backgrounds, we've made sure that the foreground colours adjust automatically to ensure that the correct colour contrast standards are met.\r\n\r\nWhere images are used, alt-text should always be provided to give a description of the image content.\r\n\r\nWhen using images as the background of the hero, safe areas describe where to leave space in an image so that the foreground content is not interfered with.\r\n\r\n## For Assistive Technology\r\n\r\nThe hero banner uses slots to allow different components to be added. Where these components are interactive, then their normal focus behaviour is used.\r\n\r\nThe hero's content is ordered for focus in the following way:\r\n\r\n- Title section including any subtitles\r\n- Interaction area\r\n- Right-hand section\r\n\r\n<DoDontCaution\r\n  imageSrc={heroFig17}\r\n  imageAlt=\"A diagram of the hero banners main sections. The title section is labelled as first, the interaction section as second and the right-hand section as third.\"\r\n  state=\"none\"\r\n  caption=\"The hero's content is ordered with the title section first, then the interaction section, then the right-hand section.\"\r\n/>\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/hero/accessibility",
      "date": "2024-04-15",
      "title": "Hero",
      "status": "BETA",
      "subTitle": "A large banner found at the top of page used to introduce page content, provide key actions and add personality.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/hero",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/hero"
        },
        {
          "title": "Code",
          "path": "/components/hero/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/hero/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\hero\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:34.995Z",
        "lastModified": "2024-06-04T07:48:34.995Z",
        "size": 2067,
        "formattedSize": "2.0 KB"
      }
    },
    {
      "id": "components\\hero\\codex",
      "contents": "\r\nimport { IcHero, IcButton, IcSearchBar, IcCard } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-hero\r\n  heading=\"Everything I brew, I brew it for you\"\r\n  subheading=\"This news is hot off the French press.\"\r\n>\r\n  <ic-button variant=\"primary\" slot=\"interaction\">Explore</ic-button>\r\n  <ic-button variant=\"secondary\" slot=\"interaction\">Check out our new drinks</ic-button>\r\n</ic-hero>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcHero\r\n  heading=\"Everything I brew, I brew it for you\"\r\n  subheading=\"This news is hot off the French press.\"\r\n>\r\n  <IcButton variant=\"primary\" slot=\"interaction\">Explore</IcButton>\r\n  <IcButton variant=\"secondary\" slot=\"interaction\">Check out our new drinks</IcButton>\r\n</IcHero>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <IcHero\r\n    heading=\"Everything I brew, I brew it for you\"\r\n    subheading=\"This news is hot off the French press.\"\r\n  >\r\n    <IcButton variant=\"primary\" slot=\"interaction\">\r\n      Explore\r\n    </IcButton>\r\n    <IcButton variant=\"secondary\" slot=\"interaction\">\r\n      Check out our new drinks\r\n    </IcButton>\r\n  </IcHero>\r\n</ComponentPreview>\r\n\r\n## Hero details\r\n\r\n<ComponentDetails component=\"ic-hero\" />\r\n\r\n## Variants\r\n\r\n### Centre aligned\r\n\r\nexport const snippetsCentre = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-hero\r\n  heading=\"Everything I brew, I brew it for you\"\r\n  subheading=\"This news is hot off the French press.\" aligned=\"center\"\r\n>\r\n  <ic-button variant=\"primary\" slot=\"interaction\">Explore</ic-button>\r\n  <ic-button variant=\"secondary\" slot=\"interaction\">Check out our new drinks</ic-button>\r\n</ic-hero>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcHero\r\n  heading=\"Everything I brew, I brew it for you\"\r\n  subheading=\"This news is hot off the French press.\" aligned=\"center\"\r\n>\r\n  <IcButton variant=\"primary\" slot=\"interaction\">Explore</IcButton>\r\n  <IcButton variant=\"secondary\" slot=\"interaction\">Check out our new drinks</IcButton>\r\n</IcHero>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsCentre}>\r\n  <IcHero\r\n    aligned=\"center\"\r\n    heading=\"Everything I brew, I brew it for you\"\r\n    subheading=\"This news is hot off the French press.\"\r\n  >\r\n    <IcButton variant=\"primary\" slot=\"interaction\">\r\n      Explore\r\n    </IcButton>\r\n    <IcButton variant=\"secondary\" slot=\"interaction\">\r\n      Check out our new drinks\r\n    </IcButton>\r\n  </IcHero>\r\n</ComponentPreview>\r\n\r\n### Content centre aligned\r\n\r\nexport const snippetsContentCentre = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-hero\r\n  heading=\"Everything I brew, I brew it for you\"\r\n  subheading=\"This news is hot off the French press.\" aligned=\"center\" content-aligned=\"center\"\r\n>\r\n  <ic-button variant=\"primary\" slot=\"interaction\">Explore</ic-button>\r\n  <ic-button variant=\"secondary\" slot=\"interaction\">Check out our new drinks</ic-button>\r\n</ic-hero>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcHero\r\n  heading=\"Everything I brew, I brew it for you\"\r\n  subheading=\"This news is hot off the French press.\" aligned=\"center\" contentAligned=\"center\"\r\n>\r\n  <IcButton variant=\"primary\" slot=\"interaction\">Explore</IcButton>\r\n  <IcButton variant=\"secondary\" slot=\"interaction\">Check out our new drinks</IcButton>\r\n</IcHero>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsContentCentre}>\r\n  <IcHero\r\n    heading=\"Everything I brew, I brew it for you\"\r\n    subheading=\"This news is hot off the French press.\"\r\n    aligned=\"center\"\r\n    contentAligned=\"center\"\r\n  >\r\n    <IcButton variant=\"primary\" slot=\"interaction\">\r\n      Explore\r\n    </IcButton>\r\n    <IcButton variant=\"secondary\" slot=\"interaction\">\r\n      Check out our new drinks\r\n    </IcButton>\r\n  </IcHero>\r\n</ComponentPreview>\r\n\r\n### Size small\r\n\r\nexport const snippetsSmall = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-hero\r\n  heading=\"New coffee launches 14 September 2022\"\r\n  subheading=\"Brand new flavours now available! Irresistible. Caramel. Decadence. Sugary.\"\r\n  size=\"small\"\r\n>\r\n  <ic-button variant=\"primary\" slot=\"interaction\" size=\"small\">Order now</ic-button>\r\n  <ic-button variant=\"secondary\" slot=\"interaction\" size=\"small\">Submit new flavour</ic-button>\r\n</ic-hero>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcHero\r\n  heading=\"New coffee launches 14 September 2022\"\r\n  subheading=\"Brand new flavours now available! Irresistible. Caramel. Decadence. Sugary.\"\r\n  size=\"small\"\r\n>\r\n  <IcButton variant=\"primary\" slot=\"interaction\" size=\"small\">Order now</IcButton>\r\n  <IcButton variant=\"secondary\" slot=\"interaction\" size=\"small\">Submit new flavour</IcButton>\r\n</IcHero>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsSmall}>\r\n  <IcHero\r\n    heading=\"New coffee launches 14 September 2022\"\r\n    subheading=\"Brand new flavours now available! Irresistible. Caramel. Decadence. Sugary.\"\r\n    size=\"small\"\r\n  >\r\n    <IcButton variant=\"primary\" slot=\"interaction\" size=\"small\">\r\n      Order now\r\n    </IcButton>\r\n    <IcButton variant=\"secondary\" slot=\"interaction\" size=\"small\">\r\n      Submit new flavour\r\n    </IcButton>\r\n  </IcHero>\r\n</ComponentPreview>\r\n\r\n### Secondary heading and search\r\n\r\nexport const snippetsSecondHeadingSearch = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-hero\r\n  heading=\"Everything I brew, I brew it for you\"\r\n  subheading=\"This news is hot off the French press.\"\r\n  secondary-heading=\"The classics\" \r\n  secondary-subheading=\"Try our original flavours.\"\r\n>\r\n  <ic-search-bar slot=\"interaction\" label=\"Search for coffee\" hide-label=\"true\"></ic-search-bar>\r\n</ic-hero>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcHero\r\n  heading=\"Everything I brew, I brew it for you\"\r\n  subheading=\"This news is hot off the French press.\"\r\n  secondaryHeading=\"The classics\" \r\n  secondarySubheading=\"Try our original flavours.\"\r\n>\r\n  <IcSearchBar slot=\"interaction\" label=\"Search for coffee\" hideLabel/>\r\n</IcHero>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsSecondHeadingSearch}>\r\n  <IcHero\r\n    heading=\"Everything I brew, I brew it for you\"\r\n    subheading=\"This news is hot off the French press.\"\r\n    secondaryHeading=\"The classics\"\r\n    secondarySubheading=\"Try our original flavours.\"\r\n  >\r\n    <IcSearchBar slot=\"interaction\" label=\"Search for coffee\" hideLabel />\r\n  </IcHero>\r\n</ComponentPreview>\r\n\r\n### Card right content\r\n\r\nexport const snippetsCard = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-hero \r\n  heading=\"Everything I brew, I brew it for you\" \r\n  subheading=\"This news is hot off the French press.\" \r\n  card-heading=\"Out now\" \r\n  card-message=\"Try our new strawberry infused tea.\" \r\n  aligned=\"full-width\"\r\n>\r\n  <ic-button variant=\"primary\" slot=\"interaction\">Explore</ic-button>\r\n  <ic-button variant=\"secondary\" slot=\"interaction\">Check out our new drinks</ic-button>\r\n  <ic-card\r\n    heading=\"Out now\"\r\n    message=\"Try our new strawberry infused tea.\"\r\n    slot=\"secondary\"\r\n    class=\"hero-card\"\r\n  ></ic-card>\r\n  <style>\r\n    .hero-card {\r\n      color: var(--ic-theme-text);\r\n      width: 300px;\r\n    }\r\n  </style>\r\n</ic-hero>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcHero \r\n  heading=\"Everything I brew, I brew it for you\" \r\n  subheading=\"This news is hot off the French press.\" \r\n  cardHeading=\"Out now\" \r\n  cardMessage=\"Try our new strawberry infused tea.\" \r\n  aligned=\"full-width\"\r\n>\r\n  <IcButton variant=\"primary\" slot=\"interaction\">Explore</IcButton>\r\n  <IcButton variant=\"secondary\" slot=\"interaction\">Check out our new drinks</IcButton>\r\n  <IcCard\r\n    heading=\"Out now\"\r\n    message=\"Try our new strawberry infused tea.\"\r\n    slot=\"secondary\"\r\n    class=\"hero-card\"\r\n    style={{\r\n      color: \"var(--ic-theme-text)\",\r\n      width: \"300px\"\r\n    }}\r\n  />\r\n</IcHero>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsCard}>\r\n  <IcHero\r\n    heading=\"Everything I brew, I brew it for you\"\r\n    subheading=\"This news is hot off the French press.\"\r\n    cardHeading=\"Out now\"\r\n    cardMessage=\"Try our new strawberry infused tea.\"\r\n    aligned=\"full-width\"\r\n  >\r\n    <IcButton variant=\"primary\" slot=\"interaction\">\r\n      Explore\r\n    </IcButton>\r\n    <IcButton variant=\"secondary\" slot=\"interaction\">\r\n      Check out our new drinks\r\n    </IcButton>\r\n    <IcCard\r\n      heading=\"Out now\"\r\n      message=\"Try our new strawberry infused tea.\"\r\n      slot=\"secondary\"\r\n      class=\"hero-card\"\r\n      style={{\r\n        color: \"var--ic-theme-text\",\r\n        width: \"300px\",\r\n      }}\r\n    />\r\n  </IcHero>\r\n</ComponentPreview>\r\n\r\n### Image right content\r\n\r\nexport const snippetsImage = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-hero\r\n  heading=\"Everything I brew, I brew it for you\"\r\n  subheading=\"This news is hot off the French press.\"\r\n  aligned=\"full-width\"\r\n>\r\n  <ic-button variant=\"primary\" slot=\"interaction\">Explore</ic-button>\r\n  <ic-button variant=\"secondary\" slot=\"interaction\">Check out our new drinks</ic-button>\r\n  <svg\r\n    slot=\"secondary\"\r\n    style={{\r\n      width: \"300px\",\r\n    }}\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 1600 900\"\r\n  >\r\n    <rect fill=\"#ff7700\" width=\"1600\" height=\"900\" />\r\n    <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n    <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n    <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n    <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n    <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n    <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n    <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n    <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n    <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n    <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n    <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n    <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n  </svg>\r\n</ic-hero>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcHero\r\n    heading=\"Everything I brew, I brew it for you\"\r\n    subheading=\"This news is hot off the French press.\"\r\n    aligned=\"full-width\"\r\n  >\r\n    <IcButton variant=\"primary\" slot=\"interaction\">Explore</IcButton>\r\n    <IcButton variant=\"secondary\" slot=\"interaction\">Check out our new drinks</IcButton>\r\n    <SlottedSVG\r\n      slot=\"secondary\"\r\n      style={{\r\n        width: \"300px\",\r\n      }}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 1600 900\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"900\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </SlottedSVG>\r\n  </IcHero>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsImage}>\r\n  <IcHero\r\n    heading=\"Everything I brew, I brew it for you\"\r\n    subheading=\"This news is hot off the French press.\"\r\n    aligned=\"full-width\"\r\n  >\r\n    <IcButton variant=\"primary\" slot=\"interaction\">\r\n      Explore\r\n    </IcButton>\r\n    <IcButton variant=\"secondary\" slot=\"interaction\">\r\n      Check out our new drinks\r\n    </IcButton>\r\n    <svg\r\n      slot=\"secondary\"\r\n      style={{\r\n        width: \"300px\",\r\n      }}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 1600 900\"\r\n    >\r\n      <rect fill=\"#ff7700\" width=\"1600\" height=\"900\" />\r\n      <polygon fill=\"#cc0000\" points=\"957 450 539 900 1396 900\" />\r\n      <polygon fill=\"#aa0000\" points=\"957 450 872.9 900 1396 900\" />\r\n      <polygon fill=\"#c50022\" points=\"-60 900 398 662 816 900\" />\r\n      <polygon fill=\"#a3001b\" points=\"337 900 398 662 816 900\" />\r\n      <polygon fill=\"#be0044\" points=\"1203 546 1552 900 876 900\" />\r\n      <polygon fill=\"#9c0036\" points=\"1203 546 1552 900 1162 900\" />\r\n      <polygon fill=\"#b80066\" points=\"641 695 886 900 367 900\" />\r\n      <polygon fill=\"#960052\" points=\"587 900 641 695 886 900\" />\r\n      <polygon fill=\"#b10088\" points=\"1710 900 1401 632 1096 900\" />\r\n      <polygon fill=\"#8f006d\" points=\"1710 900 1401 632 1365 900\" />\r\n      <polygon fill=\"#aa00aa\" points=\"1210 900 971 687 725 900\" />\r\n      <polygon fill=\"#880088\" points=\"943 900 1210 900 971 687\" />\r\n    </svg>\r\n  </IcHero>\r\n</ComponentPreview>\r\n",
      "path": "/components/hero/code",
      "date": "2023-10-25",
      "title": "Hero",
      "status": "BETA",
      "subTitle": "A large banner found at the top of page used to introduce page content, provide key actions and add personality.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/hero",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/hero"
        },
        {
          "title": "Code",
          "path": "/components/hero/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/hero/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\hero\\code.mdx",
        "createdAt": "2024-04-04T12:41:43.967Z",
        "lastModified": "2024-04-04T12:41:43.967Z",
        "size": 13409,
        "formattedSize": "13.1 KB"
      }
    },
    {
      "id": "components\\hero\\guidancex",
      "contents": "\r\nimport { IcHero, IcButton } from \"@ukic/react\";\r\nimport heroFig1 from \"./images/fig-1-dont-place-hero-banners-in-middle-of-page.png\";\r\nimport heroFig2 from \"./images/fig-2-hero-banners-automatically-use-personality-colour.png\";\r\nimport heroFig3 from \"./images/fig-3-use-grey-background-when-colour-is-not-appropriate.png\";\r\nimport heroFig4 from \"./images/fig-4-dont-place-hero-banners-not-full-width.png\";\r\nimport heroFig5 from \"./images/fig-5-hero-alignment-options.png\";\r\nimport heroFig6 from \"./images/fig-6-use-buttons-in-the-interaction-area.png\";\r\nimport heroFig7 from \"./images/fig-7-use-links-in-the-interaction-area.png\";\r\nimport heroFig8 from \"./images/fig-8-use-simple-inputs-in-the-interaction-area.png\";\r\nimport heroFig9 from \"./images/fig-9-don't-use-complex-forms-in-the-interaction-area.png\";\r\nimport heroFig10 from \"./images/fig-10-use-clickable-cards-for-latest-announcements.png\";\r\nimport heroFig11 from \"./images/fig-11-use-secondary-headings-for-more-info.png\";\r\nimport heroFig12 from \"./images/fig-12-use-empty-space-on-right-hand-side-to-emphasise-title.png\";\r\nimport heroFig13 from \"./images/fig-13-use-embedded-images.png\";\r\nimport heroFig14 from \"./images/fig-14-use-full-height-images.png\";\r\nimport heroFig15 from \"./images/fig-15-use-background imagery.png\";\r\nimport heroFig16 from \"./images/fig-16-use-safe-areas-when-using-background-imagery.png\";\r\n\r\n## Introduction\r\n\r\nAn example of the hero component.\r\n\r\n<ComponentPreview>\r\n  <IcHero\r\n    heading=\"Everything I brew, I brew it for you\"\r\n    subheading=\"This news is hot off the French press.\"\r\n  >\r\n    <IcButton variant=\"primary\" appearance=\"light\" slot=\"interaction\">\r\n      Explore\r\n    </IcButton>\r\n    <IcButton variant=\"secondary\" appearance=\"light\" slot=\"interaction\">\r\n      Check out our new drinks\r\n    </IcButton>\r\n  </IcHero>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse the hero on a homepage to introduce your app or service and provide navigation to its main functions. Use the hero to catch a user's attention as it's often the first thing that they see.\r\n\r\n## When not to use\r\n\r\nDon't use hero banners part way through page content to introduce sections. They should always appear at the top of the page to act as an introduction to the full page.\r\n\r\n<DoDontCaution\r\n  imageSrc={heroFig1}\r\n  imageAlt=\"An example application with some content at the top of the page, then a hero banner introducing a section, and then more content.\"\r\n  state=\"bad\"\r\n  caption=\"Don't position hero banners part way through a page. Always position them at the top of page content.\"\r\n/>\r\n\r\n## Colour\r\n\r\nHero banners use an automatic secondary variant of an app's chosen theme colour.\r\n\r\n<DoDontCaution\r\n  imageSrc={heroFig2}\r\n  imageAlt=\"A hero banner with background colours based of the selected green theme colour.\"\r\n  state=\"none\"\r\n  caption=\"Hero banners automatically set their colour based on the selected theme colour.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={heroFig3}\r\n  imageAlt=\"A hero banner with a grey background colour and black text.\"\r\n  state=\"none\"\r\n  caption=\"Set the hero background colour to grey when colour is not appropriate.\"\r\n/>\r\n\r\n## Sizing\r\n\r\nUse default sized hero for most applications. Use small sized hero banners for apps with compact layouts.\r\n\r\n## Layout and placement\r\n\r\nAlways position the hero banner at the top of the page and make it span the width of the container.\r\n\r\n<DoDontCaution\r\n  imageSrc={heroFig4}\r\n  imageAlt=\"A hero that is embedded within a container and doesn't span its full width.\"\r\n  state=\"bad\"\r\n  caption=\"Don't place the hero so that it does not span its container's full width.\"\r\n/>\r\n\r\nUse the alignment options to align the hero content to either full-width, left or centre of its container.\r\n\r\n<DoDontCaution\r\n  imageSrc={heroFig5}\r\n  imageAlt=\"Three examples of a hero with content aligned to the full-width of the container, the left of the container, and to the centre of the container.\"\r\n  state=\"none\"\r\n  caption=\"Use full-width, left or centre alignment to position the hero's content.\"\r\n/>\r\n\r\n## Content\r\n\r\n### Interaction area\r\n\r\nUse the hero's interaction slot to add interactive elements such as buttons, links or search bars.\r\n\r\nDon't add too much to the slot as it may become too busy. A hero should introduce the page, but not contain all of the page's content.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={heroFig6}\r\n    imageAlt=\"A hero that says 'Everything I brew, I brew it for you' with a button that says 'Explore'.\"\r\n    state=\"none\"\r\n    caption=\"Use buttons to provide actions in the interaction area.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={heroFig7}\r\n    imageAlt=\"A hero that says 'Everything I brew, I brew it for you' with a link that says 'Explore'.\"\r\n    state=\"none\"\r\n    caption=\"Use links to provide navigation from the interaction area.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={heroFig8}\r\n    imageAlt=\" A hero that says 'Everything I brew, I brew it for you' with a search bar in the interaction area.\"\r\n    state=\"none\"\r\n    caption=\"Use simple inputs to provide page level functions in the interaction area.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={heroFig9}\r\n    imageAlt=\"A hero that says 'Everything I brew, I brew it for you' with a text field, a text area and a button in the interaction area.\"\r\n    state=\"bad\"\r\n    caption=\"Don't use complex forms in the interaction area.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n### Secondary area\r\n\r\nUse the hero's secondary area to add additional information or navigation options. For example, use a [clickable card](/components/card) to provide a link to recent posts, use a secondary heading to give more info about the app, or keep it empty to help the main heading stand out.\r\n\r\n<DoDontCaution\r\n  imageSrc={heroFig10}\r\n  imageAlt=\"A hero with a clickable card in the secondary area that says ‘Latest Announcement’.\"\r\n  state=\"none\"\r\n  caption=\"Use clickable cards to provide links to other pages.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={heroFig11}\r\n  imageAlt=\"A hero with a secondary heading in the secondary area that says 'Grab a cuppa and make yourself at home'.\"\r\n  state=\"none\"\r\n  caption=\"Use a secondary heading in the secondary area to provide more information.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={heroFig12}\r\n  imageAlt=\"A hero with a title that reads 'Everything I brew, I brew it for you' with no content in the secondary area.\"\r\n  state=\"none\"\r\n  caption=\"Keep the secondary area empty to provide more emphasis to the main hero heading.\"\r\n/>\r\n\r\n### Imagery\r\n\r\nUse imagery on a hero to add personality to your app. Either embed the image in the secondary area, specify a full-size image to fill the secondary area, or add an image to the hero background itself.\r\n\r\n<DoDontCaution\r\n  imageSrc={heroFig13}\r\n  imageAlt=\"A hero with an image of a coffee cup in the secondary area.\"\r\n  state=\"none\"\r\n  caption=\"Use embedded images in the secondary area.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={heroFig14}\r\n  imageAlt=\"A hero with a full height image of a hand holding a coffee cup in the secondary area.\"\r\n  state=\"none\"\r\n  caption=\"Use full-height images in the secondary area for greater emphasis on the imagery.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={heroFig15}\r\n  imageAlt=\"A hero with an image of a hexagon patterns as the background.\"\r\n  state=\"none\"\r\n  caption=\"Use an image as the hero's background to add personality.\"\r\n/>\r\n\r\nWhen using an image background, ensure that you include 'safe areas' in your image to avoid the image's content interfering with the hero's text content.\r\n\r\nAlways specify alt-text with any image that you use so that its content can be understood equally by everyone.\r\n\r\n<DoDontCaution\r\n  imageSrc={heroFig16}\r\n  imageAlt=\"A diagram showing safe areas for background imagery. The safe area appears on the left-hand side under where the hero's text content lives. The image content appears outside of the safe areas.\"\r\n  state=\"none\"\r\n  caption=\"Use safe areas with hero background images to avoid content interfering.\"\r\n/>\r\n",
      "path": "/components/hero",
      "navPriority": 18,
      "date": "2023-02-03",
      "title": "Hero",
      "status": "BETA",
      "subTitle": "A large banner found at the top of page used to introduce page content, provide key actions and add personality.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/hero",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/hero"
        },
        {
          "title": "Code",
          "path": "/components/hero/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/hero/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\hero\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.996Z",
        "lastModified": "2024-06-04T07:48:34.996Z",
        "size": 8587,
        "formattedSize": "8.4 KB"
      }
    },
    {
      "id": "components\\indexx",
      "contents": "\r\n<ComponentGallery />\r\n\r\nCan’t find what you’re looking for? We are expanding the Design System and UI Kit. You can check out the [roadmap](/community/roadmap) for what's coming.\r\n\r\nIf you can help contribute to the system, follow our guidance about [how to contribute](/community/contribute).\r\n",
      "path": "/components",
      "date": "2023-11-14",
      "title": "Components",
      "subTitle": "Components are reusable user interface elements that help create consistent, accessible and usable experiences.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/index.mdx",
      "meta": {
        "relativePath": "components\\index.mdx",
        "createdAt": "2024-06-04T07:48:34.997Z",
        "lastModified": "2024-06-04T07:48:34.997Z",
        "size": 614,
        "formattedSize": "614 Bytes"
      }
    },
    {
      "id": "components\\links\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nLinks use the semantic `<a>` HTML element (anchor element) with an `href` attribute to create a hyperlink.\r\n\r\n## For Assistive Technology\r\n\r\nMost screen readers will announce “link” before reading out a link. For example, a link labelled “Components” will be read out as “link components”.\r\n\r\n## Based on\r\n\r\nThe links component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://webaim.org/techniques/hypertext/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Links and Hypertext\r\n    </ic-link>\r\n    , WebAIM, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://adrianroselli.com/2016/01/links-buttons-submits-and-divs-oh-hell.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Links, Buttons, Submits, and Divs, Oh Hell\r\n    </ic-link>\r\n    , Adrian Roselli, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#accessibility\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      The Anchor element\r\n    </ic-link>\r\n    , Mozilla, accessed July 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/link/accessibility",
      "date": "2024-04-15",
      "title": "Link",
      "status": "BETA",
      "subTitle": "Links can be used either as standalone components or inline with text.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/link",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/link"
        },
        {
          "title": "Code",
          "path": "/components/link/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/link/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\links\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:34.998Z",
        "lastModified": "2024-06-04T07:48:34.998Z",
        "size": 1920,
        "formattedSize": "1.9 KB"
      }
    },
    {
      "id": "components\\links\\codex",
      "contents": "\r\nimport { IcLink } from \"@ukic/react\";\r\n\r\nimport { MemoryRouter, NavLink } from \"react-router-dom\";\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-link href=\"/components/link/code\">About our coffees</ic-link>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcLink href=\"/components/link/code\">About our coffees</IcLink>`,\r\n  },\r\n];\r\n\r\n## Component demo\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <IcLink href=\"#\" onClick={(e) => e.preventDefault()}>\r\n    About our coffees\r\n  </IcLink>\r\n</ComponentPreview>\r\n\r\n## Link details\r\n\r\n<ComponentDetails component=\"ic-link\" />\r\n\r\n## Variants\r\n\r\n### With icon\r\n\r\nexport const snippetsIcon = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-link href=\"/\" target=\"_blank\">About our coffees</ic-link>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcLink href=\"/\" target=\"_blank\">About our coffees</IcLink>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsIcon}>\r\n  <IcLink href=\"/\" target=\"_blank\">\r\n    About our coffees\r\n  </IcLink>\r\n</ComponentPreview>\r\n\r\n### Light and dark\r\n\r\nexport const snippetsLightDark = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-link href=\"/\" appearance=\"dark\" target=\"_blank\">About our coffees</ic-link>\r\n<ic-link href=\"/\" appearance=\"light\" target=\"_blank\">About our coffees</ic-link>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcLink href=\"/\" appearance=\"dark\" target=\"_blank\">About our coffees</IcLink>\r\n<IcLink href=\"/\" appearance=\"light\" target=\"_blank\">About our coffees</IcLink>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsLightDark}>\r\n  <div\r\n    style={{\r\n      padding: \"8px\",\r\n    }}\r\n  >\r\n    <IcLink href=\"/\" appearance=\"dark\" target=\"_blank\">\r\n      About our coffees\r\n    </IcLink>\r\n  </div>\r\n  <div\r\n    style={{\r\n      background: \"#333333\",\r\n      padding: \"8px\",\r\n    }}\r\n  >\r\n    <IcLink href=\"/\" appearance=\"light\" target=\"_blank\">\r\n      About our coffees\r\n    </IcLink>\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### With React Router\r\n\r\nexport const withReactRouter = [\r\n  {\r\n    language: \"React\",\r\n    snippet: `<MemoryRouter initialEntries={[\"/\"]}>\r\n  <div style={{display: \"flex\", flexDirection: \"row\", gap: \"8px\"}}>\r\n    <IcLink>\r\n      <NavLink to=\"/\" slot=\"router-item\">Home</NavLink>\r\n    </IcLink>\r\n    <IcLink>\r\n      <NavLink to=\"/daily-tippers\" slot=\"router-item\">Beverages</NavLink>\r\n    </IcLink>\r\n  </div>\r\n  <IcSectionContainer>\r\n    <Routes>\r\n      <Route path=\"/\" element={() => <IcTypography>This is the home page</IcTypography>} />\r\n      <Route path=\"/daily-tippers\" element={() => <IcTypography>This page is about beverages</IcTypography>} />\r\n    </Routes>\r\n  </IcSectionContainer>\r\n</MemoryRouter>\r\n    `,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={withReactRouter}\r\n  style={{ flexDirection: \"column\" }}\r\n>\r\n  <MemoryRouter initialEntries={[\"/\"]}>\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        gap: \"8px\",\r\n      }}\r\n    >\r\n      <IcLink>\r\n        <NavLink to=\"/\" slot=\"router-item\">\r\n          Home\r\n        </NavLink>\r\n      </IcLink>\r\n      <IcLink>\r\n        <NavLink to=\"/daily-tippers\" slot=\"router-item\">\r\n          Beverages\r\n        </NavLink>\r\n      </IcLink>\r\n    </div>\r\n  </MemoryRouter>\r\n</ComponentPreview>\r\n",
      "path": "/components/link/code",
      "date": "2023-07-27",
      "title": "Link",
      "status": "BETA",
      "subTitle": "Links can be used either as standalone components or inline with text.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/link",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/link"
        },
        {
          "title": "Code",
          "path": "/components/link/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/link/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\links\\code.mdx",
        "createdAt": "2024-04-04T12:41:43.998Z",
        "lastModified": "2024-04-04T12:41:43.998Z",
        "size": 3764,
        "formattedSize": "3.7 KB"
      }
    },
    {
      "id": "components\\links\\guidancex",
      "contents": "\r\nimport { IcLink, IcTypography } from \"@ukic/react\";\r\nimport linksFig1 from \"./images/always-include-a-launch-icon-when-directing-users-to-an-external-address.png\";\r\nimport linksFig2 from \"./images/dont-use-a-default-link-for-links-which-open-a-new-tab-or-website.png\";\r\nimport linksFig3 from \"./images/use-a-button-when-displaying-a-clickable-action.png\";\r\nimport linksFig4 from \"./images/dont-use-a-link-to-initiate-an-action.png\";\r\nimport linksFig5 from \"./images/when-using-inline-links-always-use-a-different-colour-to-the-adjacent-text.png\";\r\nimport linksFig6 from \"./images/avoid-using-the-same-colour-style-as-the-adjacent-text.png\";\r\nimport linksFig7 from \"./images/use-the-monochromatic-variant-when-listing-standalone-links.png\";\r\nimport linksFig8 from \"./images/do-not-use-bad-link-text.png\";\r\n\r\n## Component variants\r\n\r\n### Standalone\r\n\r\nStandalone links are positioned separately from other text content.\r\n\r\nA standalone link can include a launch icon to the right of the link for clarity.\r\n\r\n<ComponentPreview>\r\n  <IcTypography>\r\n    <IcLink href=\"/components/link\" target=\"_blank\">\r\n      About our coffees\r\n    </IcLink>\r\n  </IcTypography>\r\n</ComponentPreview>\r\n\r\n### Inline\r\n\r\nInline links are contained within other text elements.\r\n\r\n<ComponentPreview>\r\n  <IcTypography>\r\n    Return to the <IcLink href=\"/components/link\">café homepage</IcLink>\r\n  </IcTypography>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse links to navigate to a new page.\r\n\r\nLinks can be applied to any text element but will use the link styling.\r\n\r\nAlways show a launch icon when a link is set up to open a page in a new tab or window, or when directing to an external app.\r\n\r\n<DoDontCaution\r\n  imageSrc={linksFig1}\r\n  imageAlt=\"An example of a link labelled ‘Fairtrade Foundation” featuring a ‘launch’ icon to denote it will open a new tab or page.\"\r\n  caption=\"Always include an external link icon formed by a square and an arrow when directing users to an external address.\"\r\n  state=\"good\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={linksFig2}\r\n  imageAlt=\"An example of a link labelled ‘Fairtrade Foundation” not featuring an external link icon.\"\r\n  caption=\"Don’t use a default link for links that open a new tab or website.\"\r\n  state=\"bad\"\r\n/>\r\n\r\n## When not to use\r\n\r\nDon’t use a link to display an action on a page, use a [button](/components/button) instead.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={linksFig3}\r\n    imageAlt=\"An image of an example form featuring a group of radio buttons, with a submit button at the end.\"\r\n    caption=\"Use a button when displaying a clickable action.\"\r\n    state=\"good\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={linksFig4}\r\n    imageAlt=\"An image of an example form featuring a group of radio buttons, and a link labelled ‘Submit’ at the end.\"\r\n    caption=\"Don’t use a link to initiate an action.\"\r\n    state=\"bad\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Colour\r\n\r\nOnce a link has been visited, the browser will remember this and the link will change to use the visited styling.\r\n\r\nYour browser is set to remember what links have been visited. Visited links feature a different colour style.\r\n\r\nAll other states will use specific [hyperlink styling](/styles/colour#links).\r\n\r\nUse default appearance links when used inline with other text. If the text appears on a different coloured background, use the light or dark appearance links to achieve good colour contrast.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={linksFig5}\r\n    imageAlt=\"An example paragraph with black text, featuring an inline link with blue colour styling.\"\r\n    caption=\"When using inline links, always use a different colour to the adjacent text.\"\r\n    state=\"good\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={linksFig6}\r\n    imageAlt=\"An example paragraph with black text, featuring an inline link the same colour styling.\"\r\n    caption=\"Avoid using the same link appearance as the adjacent text. Only use the same appearance if the text is used on a dark background.\"\r\n    state=\"bad\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nUse the light or dark appearance links when listing a series of standalone links on different coloured backgrounds.\r\n\r\n<DoDontCaution\r\n  imageSrc={linksFig7}\r\n  imageAlt=\"An image of a footer with two navigation groups titled ‘Services’ and ‘Policy’ which house a list of several standalone links. Every text element in the footer is white, including the hyperlinks.\"\r\n  caption=\"Use light appearance links when displaying standalone links on a dark background.\"\r\n  state=\"good\"\r\n/>\r\n\r\n## Content\r\n\r\n### Link text\r\n\r\nAlways use a concise string of text in a link rather than displaying the full URL. Make sure the link text is descriptive enough to be relevant to the page the link points to.\r\n\r\nDon’t omit important descriptive information from the link text. Avoid using unnecessarily lengthy descriptions, but strike a balance between relevance and conciseness.\r\n\r\n<ComponentPreview state=\"good\" caption=\"test\">\r\n  <IcLink href=\"#\">About our coffees</IcLink>\r\n</ComponentPreview>\r\n\r\n<IcTypography\r\n  variant=\"label\"\r\n  style={{ marginTop: \"-16px\", marginBottom: \"24px\" }}\r\n>\r\n  Use concise but relevant links.\r\n</IcTypography>\r\n\r\n<DoDontCaution\r\n  imageSrc={linksFig8}\r\n  imageAlt=\"An example of three links. One reads ‘www.coffeeshop.com/about-our-coffees', the second reads ‘Let us tell you all about our speciality coffees’, and the third reads ‘Coffees’.\"\r\n  caption=\"Don’t use URLs in the link text, don’t use unnecessarily long link text, and don’t omit important descriptive information.\"\r\n  state=\"bad\"\r\n/>\r\n\r\n### Email addresses\r\n\r\nWhen linking to email addresses use the full email address in the link text. Don’t describe the contact without showing the email address.\r\n\r\n<ComponentPreview state=\"good\">\r\n  <IcLink href=\"mailto:info@icds.co.uk\">info@icds.co.uk</IcLink>\r\n</ComponentPreview>\r\n\r\n<IcTypography\r\n  variant=\"label\"\r\n  style={{ marginTop: \"-16px\", marginBottom: \"24px\" }}\r\n>\r\n  Show the full email address.\r\n</IcTypography>\r\n\r\n<ComponentPreview state=\"bad\">\r\n  <IcLink href=\"mailto:info@icds.co.uk\">ICDS team</IcLink>\r\n</ComponentPreview>\r\n\r\n<IcTypography\r\n  variant=\"label\"\r\n  style={{ marginTop: \"-16px\", marginBottom: \"24px\" }}\r\n>\r\n  Don’t embed labels when linking email addresses.\r\n</IcTypography>\r\n\r\n## Accessibility considerations\r\n\r\nWhen reading a page, screen reader users might navigate to links independently of the adjacent content. Make sure links are descriptive enough that they make sense out of context.\r\n\r\nConsider that some screen readers allow users to view a full list of all links present on a page. This may be ordered either alphabetically, or in order of appearance. Make sure to label links with relevant information at the beginning of the string of text. For example, don’t embed “How to contact us”, but rather “Contact us”.\r\n",
      "path": "/components/link",
      "navPriority": 19,
      "date": "2023-07-28",
      "title": "Link",
      "status": "BETA",
      "subTitle": "Links can be used either as standalone components or inline with text.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/link",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/link"
        },
        {
          "title": "Code",
          "path": "/components/link/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/link/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\links\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:34.999Z",
        "lastModified": "2024-06-04T07:48:34.999Z",
        "size": 7389,
        "formattedSize": "7.2 KB"
      }
    },
    {
      "id": "components\\loading-indicators\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nClear labels help convey that a process/component is loading.\r\n\r\nWe have ensured the loading indicators meet accessibility guidance around colour, speed and movement. Loading indicators should not flash, as this can be problematic for users with particular accessibility needs.\r\n\r\n## For Assistive Technology\r\n\r\nLoading indicators use the `aria-live` attribute to tell screen reader users that there is dynamic content on the page. `aria-busy` tells assistive tech that the container is getting new content. `aria-busy` will be false when the container isn't refreshing and will be equal to true when the content is reloading.\r\n\r\n`aria-live` takes three attributes: `off`, `polite` and `assertive`. While polite doesn’t interrupt the screen reader if other content is being read, assertive will immediately read out the element’s content. Loading indicators use assertive to ensure screen reader users are provided with the same information as other users.\r\n\r\n## Based on\r\n\r\nThe loading indicator component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://dockyard.com/blog/2020/03/02/accessible-loading-indicatorswith-no-extra-elements\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Accessible Loading Indicators—with No Extra Elements!\r\n    </ic-link>\r\n    , James Steinbach, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://carbondesignsystem.com/components/loading/accessibility/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Loading: Accessibility\r\n    </ic-link>\r\n    , IBM, accessed March 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/loading-indicator/accessibility",
      "date": "2024-04-15",
      "title": "Loading indicator",
      "status": "BETA",
      "subTitle": "Loading indicators help inform users that a request is being processed. Circular and linear indicators provide flexibility in design.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/loading-indicator",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/loading-indicator"
        },
        {
          "title": "Code",
          "path": "/components/loading-indicator/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/loading-indicator/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\loading-indicators\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:35.000Z",
        "lastModified": "2024-06-04T07:48:35.000Z",
        "size": 2535,
        "formattedSize": "2.5 KB"
      }
    },
    {
      "id": "components\\loading-indicators\\codex",
      "contents": "\r\nimport { IcLoadingIndicator } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-loading-indicator type=\"circular\" label=\"Loading...\" />\r\n<ic-loading-indicator type=\"linear\" label=\"Loading...\" />`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcLoadingIndicator type=\"circular\" label=\"Loading...\" />\r\n<IcLoadingIndicator type=\"linear\" label=\"Loading...\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippets}\r\n  style={{ flexDirection: \"column\", gap: \"8px\" }}\r\n>\r\n  <IcLoadingIndicator type=\"circular\" label=\"Loading...\" />\r\n  <IcLoadingIndicator type=\"linear\" label=\"Loading...\" />\r\n</ComponentPreview>\r\n\r\n## Loading indicator details\r\n\r\n<ComponentDetails component=\"ic-loading-indicator\" />\r\n\r\n## Variants\r\n\r\n### Sizes\r\n\r\nexport const snippetsSizes = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-loading-indicator type=\"circular\" label=\"Loading...\" size=\"small\"/>\r\n<ic-loading-indicator type=\"circular\" label=\"Loading...\" size=\"large\"/>\r\n<ic-loading-indicator type=\"linear\" label=\"Loading...\" size=\"small\"/>\r\n<ic-loading-indicator type=\"linear\" label=\"Loading...\" size=\"large\"/>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcLoadingIndicator type=\"circular\" label=\"Loading...\" size=\"small\" />\r\n<IcLoadingIndicator type=\"circular\" label=\"Loading...\" size=\"large\" />\r\n<IcLoadingIndicator type=\"linear\" label=\"Loading...\" size=\"small\" />\r\n<IcLoadingIndicator type=\"linear\" label=\"Loading...\" size=\"large\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsSizes}\r\n  style={{ flexDirection: \"column\", gap: \"8px\" }}\r\n>\r\n  <IcLoadingIndicator type=\"circular\" label=\"Loading...\" size=\"small\" />\r\n  <IcLoadingIndicator type=\"circular\" label=\"Loading...\" size=\"large\" />\r\n  <IcLoadingIndicator type=\"linear\" label=\"Loading...\" size=\"small\" />\r\n  <IcLoadingIndicator type=\"linear\" label=\"Loading...\" size=\"large\" />\r\n</ComponentPreview>\r\n\r\n### Icon\r\n\r\nexport const snippetsIcon = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-loading-indicator size=\"icon\"/>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcLoadingIndicator size=\"icon\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsIcon}>\r\n  <IcLoadingIndicator size=\"icon\" />\r\n</ComponentPreview>\r\n\r\n### Determinate\r\n\r\nexport const snippetsDeterminate = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-loading-indicator type=\"circular\" label=\"Progress 30%\" progress=\"30\" min=\"0\" max=\"100\"/>\r\n<ic-loading-indicator type=\"linear\" label=\"Progress 30%\" progress=\"30\" min=\"0\" max=\"100\"/>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcLoadingIndicator type=\"circular\" label=\"Progress 30%\" progress=\"30\" min=\"0\" max=\"100\" />\r\n<IcLoadingIndicator type=\"linear\" label=\"Progress 30%\" progress=\"30\" min=\"0\" max=\"100\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsDeterminate}\r\n  style={{ flexDirection: \"column\", gap: \"8px\" }}\r\n>\r\n  <IcLoadingIndicator\r\n    type=\"circular\"\r\n    label=\"Progress 30%\"\r\n    progress=\"30\"\r\n    min=\"0\"\r\n    max=\"100\"\r\n  />\r\n  <IcLoadingIndicator\r\n    type=\"linear\"\r\n    label=\"Progress 30%\"\r\n    progress=\"30\"\r\n    min=\"0\"\r\n    max=\"100\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Light\r\n\r\nexport const snippetsLight = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-loading-indicator type=\"circular\" name=\"Loading\" appearance=\"light\"></ic-loading-indicator>\r\n<ic-loading-indicator type=\"linear\" name=\"Loading\" appearance=\"light\"></ic-loading-indicator>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcLoadingIndicator type=\"circular\" name=\"Loading\" appearance=\"light\" />\r\n<IcLoadingIndicator type=\"linear\" name=\"Loading\" appearance=\"light\"/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsLight}\r\n  style={{ flexDirection: \"column\", gap: \"8px\", background: \"#333333\" }}\r\n>\r\n  <IcLoadingIndicator type=\"circular\" name=\"Loading\" appearance=\"light\" />\r\n  <IcLoadingIndicator type=\"linear\" name=\"Loading\" appearance=\"light\" />\r\n</ComponentPreview>\r\n\r\n### Changing label\r\n\r\nexport const snippetsChangingLabel = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-loading-indicator type=\"circular\" label=\"Loading.../Still loading...\" label-duration=\"4000\"></ic-loading-indicator>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcLoadingIndicator type=\"circular\" label=\"Loading.../Still loading...\" labelDuration=\"4000\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsChangingLabel}>\r\n  <IcLoadingIndicator\r\n    type=\"circular\"\r\n    label=\"Loading.../Still loading...\"\r\n    labelDuration=\"4000\"\r\n  />\r\n</ComponentPreview>\r\n",
      "path": "/components/loading-indicator/code",
      "date": "2023-02-03",
      "title": "Loading indicator",
      "status": "BETA",
      "subTitle": "Loading indicators help inform users that a request is being processed. Circular and linear indicators provide flexibility in design.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/loading-indicator",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/loading-indicator"
        },
        {
          "title": "Code",
          "path": "/components/loading-indicator/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/loading-indicator/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\loading-indicators\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.014Z",
        "lastModified": "2024-04-04T12:41:44.014Z",
        "size": 5235,
        "formattedSize": "5.1 KB"
      }
    },
    {
      "id": "components\\loading-indicators\\guidancex",
      "contents": "\r\nimport { IcLoadingIndicator, IcTypography } from \"@ukic/react\";\r\nimport loadingIndicatorFig1 from \"./images/fig-1-use-clear-concise-and-specific-labels.png\";\r\nimport loadingIndicatorFig2 from \"./images/fig-2-do-not-make-labels-unnecessarily-long.png\";\r\nimport loadingIndicatorFig3 from \"./images/fig-3-always-centre-the-component.png\";\r\nimport loadingIndicatorFig4 from \"./images/fig-4-do-not-position-the-loading-indicators-on-other-parts-of-the-page-or-container.png\";\r\nimport loadingIndicatorFig5 from \"./images/fig-5-place-the-full-width-indicator-at-the-top-of-the-container.png\";\r\nimport loadingIndicatorFig6 from \"./images/fig-6-do-not-position-full-width-loading-indicators-on-other-parts-of-the-container.png\";\r\nimport loadingIndicatorFig7 from \"./images/fig-7-place-loading-indicators-in-modals-when-overlayed-on-other-content.png\";\r\nimport loadingIndicatorFig8 from \"./images/fig-8-do-not-place-loading-indicators-over-other-content.png\";\r\n\r\n## Component variants\r\n\r\nLoading indicators have two variants: radial and linear.\r\n\r\nLoading indicators can either be determinate or indeterminate:\r\n\r\n- Use determinate loading indicators when the percentage of completion can be determined.\r\n- Use indeterminate loading indicators when the process completion rate can't be determined.\r\n\r\n## Radial\r\n\r\nRadial loading indicators have four sizes:\r\n\r\n- Small\r\n- Default\r\n- Large\r\n- Icon\r\n\r\nThe icon size is available for use within other components.\r\n\r\n<ComponentPreview>\r\n  <IcLoadingIndicator type=\"circular\" progress=\"50\" max=\"100\" label=\"50%\" />\r\n</ComponentPreview>\r\n\r\n<IcTypography\r\n  variant=\"label\"\r\n  style={{ marginTop: \"-16px\", marginBottom: \"24px\" }}\r\n>\r\n  Radial determinate.\r\n</IcTypography>\r\n\r\n<ComponentPreview>\r\n  <IcLoadingIndicator type=\"circular\" label=\"Loading...\" />\r\n</ComponentPreview>\r\n\r\n<IcTypography\r\n  variant=\"label\"\r\n  style={{ marginTop: \"-16px\", marginBottom: \"24px\" }}\r\n>\r\n  Radial indeterminate.\r\n</IcTypography>\r\n\r\n## Linear\r\n\r\nLinear loading indicators have three sizes:\r\n\r\n- Small\r\n- Default\r\n- Large\r\n\r\nLinear loading indicators have two variants:\r\n\r\n- Default\r\n- Full-width\r\n\r\nLinear loading indicators can be set to full-width to span its container.\r\n\r\n<ComponentPreview>\r\n  <IcLoadingIndicator\r\n    style={{ width: \"240px\" }}\r\n    type=\"linear\"\r\n    label=\"50%\"\r\n    progress=\"50\"\r\n    max=\"100\"\r\n  />\r\n</ComponentPreview>\r\n\r\n<IcTypography\r\n  variant=\"label\"\r\n  style={{ marginTop: \"-16px\", marginBottom: \"24px\" }}\r\n>\r\n  Linear determinate.\r\n</IcTypography>\r\n\r\n<ComponentPreview>\r\n  <IcLoadingIndicator\r\n    style={{ width: \"240px\" }}\r\n    type=\"linear\"\r\n    label=\"Loading...\"\r\n    max=\"100\"\r\n  />\r\n</ComponentPreview>\r\n\r\n<IcTypography\r\n  variant=\"label\"\r\n  style={{ marginTop: \"-16px\", marginBottom: \"24px\" }}\r\n>\r\n  Linear indeterminate.\r\n</IcTypography>\r\n\r\n## When to use\r\n\r\nUse loading indicators when loading full pages or containers where the structure is unknown.\r\n\r\nUse determinate loading indicators wherever the percentage of completion can be calculated.\r\n\r\n## When not to use\r\n\r\nAvoid using loading indicators when loading full pages if the structure of the page loading is known. Instead, use the [skeleton](/components/skeleton) component.\r\n\r\n## Content\r\n\r\n### Labels\r\n\r\nDeterminate loading indicators feature the percentage completion rate in percentage points, 0 to 100%.\r\n\r\nIndeterminate loading indicators have a customisable label. The label can be set to change after a specified amount of time. Make sure to display each label for at least five seconds. Keep labels clear and concise. Where possible, provide specific labels to the process being performed.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={loadingIndicatorFig1}\r\n    imageAlt=\"A graphic of a radial loading indicator with the label of 'Submitting form...'.\"\r\n    state=\"good\"\r\n    caption=\"Use clear, concise and specific labels.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={loadingIndicatorFig2}\r\n    imageAlt=\"A graphic of a radial loading indicator with the label of ‘The form is now being submitted... Please wait...’.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t make labels unnecessarily long.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Layout and placement\r\n\r\nLoading indicators always appear centred within their container. If the whole page is loading, position the loading indicator at the centre of the page. If the loading indicator is used inside another component, like a card, position the loading indicator at the centre of the component.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={loadingIndicatorFig3}\r\n    imageAlt=\"A graphic of a radial loading indicator positioned in the middle of a blank page.\"\r\n    state=\"good\"\r\n    caption=\"Always centre the component.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={loadingIndicatorFig4}\r\n    imageAlt=\"A graphic of a radial loading indicator positioned in the top left corner of a blank page.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t position the loading indicators on other parts of the page or container.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nWhen using the full-width variant of linear loading indicators, make sure to place this at the top of the component or page. Also, make sure that the loading indicator takes up the full width of the component or page.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={loadingIndicatorFig5}\r\n    imageAlt=\"A graphic of a full width loading indicator at the top of a page.\"\r\n    state=\"good\"\r\n    caption=\"Place the full width indicator at the top of the container.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={loadingIndicatorFig6}\r\n    imageAlt=\"A graphic of a full width loading indicator positioned in the centre of a container with a bigger width.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t position full width loading indicators on other parts of the container. Make sure it has the same width of this container.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nIf loading indicators are overlaid on other content, place them in a dialog.\r\n\r\n<DoDontCaution\r\n  imageSrc={loadingIndicatorFig7}\r\n  imageAlt=\"A loading indicator placed inside a modal dialog, overlaid on a page filled with content.\"\r\n  state=\"good\"\r\n  caption=\"Place loading indicators in dialogs when overlaid on other content.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={loadingIndicatorFig8}\r\n  imageAlt=\"A loading indicator overlaid on a page filled with content.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t place loading indicators over other content, even if changing the opacity of the background.\"\r\n/>\r\n",
      "path": "/components/loading-indicator",
      "navPriority": 20,
      "date": "2023-02-03",
      "title": "Loading indicator",
      "status": "BETA",
      "subTitle": "Loading indicators help inform users that a request is being processed. Radial and linear indicators provide flexibility in design.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/loading-indicator",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/loading-indicator"
        },
        {
          "title": "Code",
          "path": "/components/loading-indicator/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/loading-indicator/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\loading-indicators\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.002Z",
        "lastModified": "2024-06-04T07:48:35.002Z",
        "size": 7146,
        "formattedSize": "7.0 KB"
      }
    },
    {
      "id": "components\\multi-select\\codex",
      "contents": "\r\nimport { IcSelectWithMulti } from \"@ukic/canary-react\";\r\n\r\nimport {\r\n  OPTIONS,\r\n  OPTIONS_WITH_DESCRIPTIONS,\r\n  OPTIONS_WITH_DISABLED,\r\n  GROUPED_OPTIONS,\r\n  OPTIONS_WITH_RECOMMENDED,\r\n} from \"./story-data\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select-with-multi label=\"What are your favourite types of coffee?\" multiple id=\"select-default\"></ic-select-with-multi >\r\n<script>\r\n  var select = document.querySelector(\"#select-default\");\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\", disabled: true },\r\n    { label: \"Americano\", value: \"Ame\" },\r\n    { label: \"Filter\", value: \"Fil\", disabled: true },\r\n    { label: \"Flat white\", value: \"Fla\", disabled: true },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelectWithMulti label=\"What are your favourite types of coffee?\" multiple\r\noptions={[\r\n  { label: \"Cappuccino\", value: \"Cap\" },\r\n  { label: \"Latte\", value: \"Lat\" },\r\n  { label: \"Americano\", value: \"Ame\" },\r\n  { label: \"Filter\", value: \"Fil\" },\r\n  { label: \"Flat white\", value: \"Fla\" },\r\n  { label: \"Mocha\", value: \"Moc\" },\r\n  { label: \"Macchiato\", value: \"Mac\" },\r\n]}\r\nonIcChange={(event) => console.log(event.detail.value)}\r\nonIcOptionSelect={(event) => console.log(event.detail.value)}\r\nonIcOptionDeselect={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <IcSelectWithMulti\r\n    label=\"What are your favourite types of coffee?\"\r\n    options={OPTIONS}\r\n    multiple\r\n  />\r\n</ComponentPreview>\r\n\r\n## Select with multi details\r\n\r\n<ComponentDetails component=\"ic-select-with-multi\" canary />\r\n\r\n## Variants\r\n\r\n### Default value\r\n\r\nShow options as pre-selected by setting the `value` prop to an array containing the values of these options.\r\n\r\nexport const defaultValue = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select-with-multi label=\"What are your favourite types of coffee?\" multiple id=\"select-default\"></ic-select-with-multi >\r\n<script>\r\n  var select = document.querySelector(\"#select-default\");\r\n  select.value = [\"Ame\", \"Fil\", \"Moc\"];\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\" },\r\n    { label: \"Americano\", value: \"Ame\" },\r\n    { label: \"Filter\", value: \"Fil },\r\n    { label: \"Flat white\", value: \"Fla\" },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n  ];\r\n  select.value = [\"Cap\", \"Fla\", \"Moc\"];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelectWithMulti label=\"What are your favourite types of coffee?\" multiple\r\nvalue={[\"Ame\", \"Fil\", \"Moc\"]}\r\noptions={[\r\n  { label: \"Cappuccino\", value: \"Cap\" },\r\n  { label: \"Latte\", value: \"Lat\" },\r\n  { label: \"Americano\", value: \"Ame\" },\r\n  { label: \"Filter\", value: \"Fil\" },\r\n  { label: \"Flat white\", value: \"Fla\" },\r\n  { label: \"Mocha\", value: \"Moc\" },\r\n  { label: \"Macchiato\", value: \"Mac\" },\r\n]}\r\nonIcChange={(event) => console.log(event.detail.value)}\r\nonIcOptionSelect={(event) => console.log(event.detail.value)}\r\nonIcOptionDeselect={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={defaultValue}>\r\n  <IcSelectWithMulti\r\n    label=\"What are your favourite types of coffee?\"\r\n    value={[\"Ame\", \"Fil\", \"Moc\"]}\r\n    options={OPTIONS}\r\n    multiple\r\n  />\r\n</ComponentPreview>\r\n\r\n### With clear button\r\n\r\nDisplay a clear button by using the `showClearButton` prop.\r\n\r\nThis will appear when the user has selected some options and allow them to easily clear their selection.\r\n\r\nexport const clear = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select-with-multi label=\"What are your favourite types of coffee?\" multiple show-clear-button id=\"select-default\" ></ic-select-with-multi>\r\n<script>\r\n  var select = document.querySelector(\"#select-default\");\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\" },\r\n    { label: \"Americano\", value: \"Ame\" },\r\n    { label: \"Filter\", value: \"Fil },\r\n    { label: \"Flat white\", value: \"Fla\" },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelectWithMulti label=\"What are your favourite types of coffee?\" multiple\r\nshowClearButton\r\noptions={[\r\n  { label: \"Cappuccino\", value: \"Cap\" },\r\n  { label: \"Latte\", value: \"Lat\" },\r\n  { label: \"Americano\", value: \"Ame\" },\r\n  { label: \"Filter\", value: \"Fil\" },\r\n  { label: \"Flat white\", value: \"Fla\" },\r\n  { label: \"Mocha\", value: \"Moc\" },\r\n  { label: \"Macchiato\", value: \"Mac\" },\r\n]}\r\nonIcChange={(event) => console.log(event.detail.value)}\r\nonIcOptionSelect={(event) => console.log(event.detail.value)}\r\nonIcOptionDeselect={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={clear}>\r\n  <IcSelectWithMulti\r\n    label=\"What are your favourite types of coffee?\"\r\n    showClearButton\r\n    options={OPTIONS}\r\n    multiple\r\n  />\r\n</ComponentPreview>\r\n\r\n### With descriptions\r\n\r\nDisplay extra information about the options by providing a description using the `description` property for each option.\r\n\r\nexport const desc = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select-with-multi label=\"What are your favourite types of coffee?\" multiple  id=\"select-default\"></ic-select-with-multi>\r\n<script>\r\n  var select = document.querySelector(\"#select-default\");\r\n  select.options = [\r\n  {\r\n    label: \"Cappuccino\",\r\n    value: \"Cap\",\r\n    description: \"Coffee frothed up with pressurised steam\",\r\n  },\r\n  {\r\n    label: \"Latte\",\r\n    value: \"Lat\",\r\n    description: \"A milkier coffee than a cappuccino\",\r\n  },\r\n  {\r\n    label: \"Americano\",\r\n    value: \"Ame\",\r\n    description: \"Espresso coffee diluted with hot water\",\r\n  },\r\n  {\r\n      label: \"Filter\",\r\n    value: \"Fil\",\r\n    description: \"Coffee filtered using paper or a mesh\",\r\n  },\r\n  {\r\n    label: \"Flat white\",\r\n    value: \"Fla\",\r\n    description: \"Coffee without froth made with espresso and hot steamed milk\",\r\n  },\r\n  {\r\n    label: \"Mocha\",\r\n    value: \"Moc\",\r\n    description: \"A mixture of coffee and chocolate\",\r\n  },\r\n  {\r\n    label: \"Macchiato\",\r\n    value: \"Mac\",\r\n    description: \"Espresso coffee with a dash of frothy steamed milk\",\r\n  },\r\n  ];\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelectWithMulti label=\"What are your favourite types of coffee?\" multiple\r\noptions={[\r\n   {\r\n    label: \"Cappuccino\",\r\n    value: \"Cap\",\r\n    description: \"Coffee frothed up with pressurised steam\",\r\n  },\r\n  {\r\n    label: \"Latte\",\r\n    value: \"Lat\",\r\n    description: \"A milkier coffee than a cappuccino\",\r\n  },\r\n  {\r\n      label: \"Americano\",\r\n    value: \"Ame\",\r\n    description: \"Espresso coffee diluted with hot water\",\r\n  },\r\n  {\r\n    label: \"Filter\",\r\n    value: \"Fil\",\r\n    description: \"Coffee filtered using paper or a mesh\",\r\n  },\r\n  {\r\n      label: \"Flat white\",\r\n    value: \"Fla\",\r\n    description: \"Coffee without froth made with espresso and hot steamed milk\",\r\n  },\r\n  {\r\n    label: \"Mocha\",\r\n    value: \"Moc\",\r\n    description: \"A mixture of coffee and chocolate\",\r\n  },\r\n  {\r\n      label: \"Macchiato\",\r\n    value: \"Mac\",\r\n    description: \"Espresso coffee with a dash of frothy steamed milk\",\r\n  },\r\n]}\r\nonIcChange={(event) => console.log(event.detail.value)}\r\nonIcOptionSelect={(event) => console.log(event.detail.value)}\r\nonIcOptionDeselect={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={desc}>\r\n  <IcSelectWithMulti\r\n    label=\"What are your favourite types of coffee?\"\r\n    options={OPTIONS_WITH_DESCRIPTIONS}\r\n    multiple\r\n  />\r\n</ComponentPreview>\r\n\r\n### Helper text\r\n\r\nDisplay helper text to provide additional information by using the `helperText` prop.\r\n\r\nexport const helper = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select-with-multi helper-text=\"Select some options from the list\" label=\"What are your favourite types of coffee?\" multiple id=\"select-default\" ></ic-select-with-multi>\r\n<script>\r\n  var select = document.querySelector(\"#select-default\");\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\" },\r\n    { label: \"Americano\", value: \"Ame\" },\r\n    { label: \"Filter\", value: \"Fil },\r\n    { label: \"Flat white\", value: \"Fla\" },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelectWithMulti label=\"What are your favourite types of coffee?\" multiple\r\nhelperText=\"Select some options from the list\"\r\noptions={[\r\n  { label: \"Cappuccino\", value: \"Cap\" },\r\n  { label: \"Latte\", value: \"Lat\" },\r\n  { label: \"Americano\", value: \"Ame\" },\r\n  { label: \"Filter\", value: \"Fil\" },\r\n  { label: \"Flat white\", value: \"Fla\" },\r\n  { label: \"Mocha\", value: \"Moc\" },\r\n  { label: \"Macchiato\", value: \"Mac\" },\r\n]}\r\nonIcChange={(event) => console.log(event.detail.value)}\r\nonIcOptionSelect={(event) => console.log(event.detail.value)}\r\nonIcOptionDeselect={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={helper}>\r\n  <IcSelectWithMulti\r\n    label=\"What are your favourite types of coffee?\"\r\n    options={OPTIONS}\r\n    multiple\r\n    helperText=\"Select some options from the list\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Sizes\r\n\r\nSet the size of the multi-select by using the `size` prop. This prop takes the values `small`, `default` or `large`.\r\nDepending on the chosen size, the prop will apply styling to increase or decrease the amount of spacing within the component.\r\nThe `default` variant is seen in the first [default](#default) example.\r\n\r\nexport const sizes = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select-with-multi size=\"small\" label=\"What are your favourite types of coffee?\" multiple id=\"select-default-small\"></ic-select-with-multi>\r\n<ic-select-with-multi label=\"What are your favourite types of coffee?\" multiple id=\"select-default\"></ic-select-with-multi>\r\n<ic-select-with-multi size=\"large\" label=\"What are your favourite types of coffee?\" multiple id=\"select-default-large\"></ic-select-with-multi>\r\n<script>\r\n  var select = document.querySelector(\"#select-default\");\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\" },\r\n    { label: \"Americano\", value: \"Ame\" },\r\n    { label: \"Filter\", value: \"Fil },\r\n    { label: \"Flat white\", value: \"Fla\" },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const OPTIONS = [\r\n  { label: \"Cappuccino\", value: \"Cap\" },\r\n  { label: \"Latte\", value: \"Lat\" },\r\n  { label: \"Americano\", value: \"Ame\" },\r\n  { label: \"Filter\", value: \"Fil\" },\r\n  { label: \"Flat white\", value: \"Fla\" },\r\n  { label: \"Mocha\", value: \"Moc\" },\r\n  { label: \"Macchiato\", value: \"Mac\" },\r\n]\r\n<IcSelectWithMulti label=\"What are your favourite types of coffee?\" multiple options={OPTIONS} size=\"small\" />\r\n<IcSelectWithMulti label=\"What are your favourite types of coffee?\" multiple options={OPTIONS} />\r\n<IcSelectWithMulti label=\"What are your favourite types of coffee?\" multiple options={OPTIONS} size=\"large\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={sizes}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n    <IcSelectWithMulti\r\n      label=\"What are your favourite types of coffee?\"\r\n      options={OPTIONS}\r\n      multiple\r\n      size=\"small\"\r\n    />\r\n    <IcSelectWithMulti\r\n      label=\"What are your favourite types of coffee?\"\r\n      options={OPTIONS}\r\n      multiple\r\n    />\r\n    <IcSelectWithMulti\r\n      label=\"What are your favourite types of coffee?\"\r\n      options={OPTIONS}\r\n      multiple\r\n      size=\"large\"\r\n    />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Disabled\r\n\r\nDisable the multi-select and prevent user interaction by using the `disabled` prop.\r\n\r\nexport const disabled = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select-with-multi disabled label=\"What are your favourite types of coffee?\" multiple ></ic-select-with-multi>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelectWithMulti label=\"What are your favourite types of coffee?\" disabled multiple />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={disabled}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n    <IcSelectWithMulti\r\n      label=\"What are your favourite types of coffee?\"\r\n      multiple\r\n      disabled\r\n    />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Disabled options\r\n\r\nDisable certain options by setting the `disabled` property to `true` for each option.\r\n\r\nexport const disabledOptions = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select-with-multi label=\"What are your favourite types of coffee?\" multiple id=\"select-default\"></ic-select-with-multi>\r\n<script>\r\n  var select = document.querySelector(\"#select-default\");\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\", disabled: true },\r\n    { label: \"Americano\", value: \"Ame\" },\r\n    { label: \"Filter\", value: \"Fil\", disabled: true },\r\n    { label: \"Flat white\", value: \"Fla\", disabled: true },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelectWithMulti label=\"What are your favourite types of coffee?\" multiple options={[\r\n  { label: \"Cappuccino\", value: \"Cap\" },\r\n  { label: \"Latte\", value: \"Lat\", disabled: true },\r\n  { label: \"Americano\", value: \"Ame\" },\r\n  { label: \"Filter\", value: \"Fil\", disabled: true },\r\n  { label: \"Flat white\", value: \"Fla\", disabled: true },\r\n  { label: \"Mocha\", value: \"Moc\" },\r\n  { label: \"Macchiato\", value: \"Mac\" },\r\n]}\r\nonIcChange={(event) => console.log(event.detail.value)}\r\nonIcOptionSelect={(event) => console.log(event.detail.value)}\r\nonIcOptionDeselect={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={disabledOptions}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n    <IcSelectWithMulti\r\n      label=\"What are your favourite types of coffee?\"\r\n      options={OPTIONS_WITH_DISABLED}\r\n      multiple\r\n    />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Hide label\r\n\r\nHide the visible label for the multi-select by using the `hideLabel` prop.\r\n\r\nexport const hideLabel = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select-with-multi hide-label label=\"What are your favourite types of coffee?\" multiple id=\"select-default\"></ic-select-with-multi>\r\n<script>\r\n  var select = document.querySelector(\"#select-default\");\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\" },\r\n    { label: \"Americano\", value: \"Ame\" },\r\n    { label: \"Filter\", value: \"Fil\" },\r\n    { label: \"Flat white\", value: \"Fla\" },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelectWithMulti hideLabel label=\"What are your favourite types of coffee?\" multiple options={[\r\n  { label: \"Cappuccino\", value: \"Cap\" },\r\n  { label: \"Latte\", value: \"Lat\" },\r\n  { label: \"Americano\", value: \"Ame\" },\r\n  { label: \"Filter\", value: \"Fil\" },\r\n  { label: \"Flat white\", value: \"Fla\" },\r\n  { label: \"Mocha\", value: \"Moc\" },\r\n  { label: \"Macchiato\", value: \"Mac\" },\r\n]}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={hideLabel}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n    <IcSelectWithMulti\r\n      label=\"What are your favourite types of coffee?\"\r\n      hideLabel\r\n      multiple\r\n    />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Required\r\n\r\nInform the user that the multi-select is a required field by using the `required` prop.\r\nThis will display an asterisk next to the label and apply the `aria-required` attribute.\r\n\r\nexport const required = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select-with-multi required label=\"What are your favourite types of coffee?\" multiple id=\"select-default\"></ic-select-with-multi>\r\n<script>\r\n  var select = document.querySelector(\"#select-default\");\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\" },\r\n    { label: \"Americano\", value: \"Ame\" },\r\n    { label: \"Filter\", value: \"Fil\" },\r\n    { label: \"Flat white\", value: \"Fla\" },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelectWithMulti required label=\"What are your favourite types of coffee?\" multiple options={[\r\n  { label: \"Cappuccino\", value: \"Cap\" },\r\n  { label: \"Latte\", value: \"Lat\" },\r\n  { label: \"Americano\", value: \"Ame\" },\r\n  { label: \"Filter\", value: \"Fil\" },\r\n  { label: \"Flat white\", value: \"Fla\" },\r\n  { label: \"Mocha\", value: \"Moc\" },\r\n  { label: \"Macchiato\", value: \"Mac\" },\r\n]}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={required}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n    <IcSelectWithMulti\r\n      label=\"What are your favourite types of coffee?\"\r\n      multiple\r\n      required\r\n      options={OPTIONS}\r\n    />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Read-only\r\n\r\nMake the multi-select read-only by using the `readonly` prop.\r\nUse the `value` prop to set which options are selected and will be displayed when it is read-only.\r\n\r\nexport const read = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select-with-multi readonly label=\"What are your favourite types of coffee?\" multiple id=\"select-default\"></ic-select-with-multi>\r\n<script>\r\n  var select = document.querySelector(\"#select-default\");\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\" },\r\n    { label: \"Americano\", value: \"Ame\" },\r\n    { label: \"Filter\", value: \"Fil\" },\r\n    { label: \"Flat white\", value: \"Fla\" },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n  ];\r\n  select.value = [\"Cap\", \"Fla\", \"Moc\"];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelectWithMulti readonly value={[\"Cap\", \"Fla\", \"Moc\"]} label=\"What are your favourite types of coffee?\" multiple options={[\r\n  { label: \"Cappuccino\", value: \"Cap\" },\r\n  { label: \"Latte\", value: \"Lat\" },\r\n  { label: \"Americano\", value: \"Ame\" },\r\n  { label: \"Filter\", value: \"Fil\" },\r\n  { label: \"Flat white\", value: \"Fla\" },\r\n  { label: \"Mocha\", value: \"Moc\" },\r\n  { label: \"Macchiato\", value: \"Mac\" },\r\n]}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={read}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n    <IcSelectWithMulti\r\n      label=\"What are your favourite types of coffee?\"\r\n      multiple\r\n      readonly\r\n      options={OPTIONS}\r\n      value={[\"Cap\", \"Fla\", \"Moc\"]}\r\n    />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Groups\r\n\r\nDisplay options in groups by passing an array of child options to the `children` property of a parent option.\r\nThe parent option will be rendered as the title of the group.\r\n\r\nexport const group = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select-with-multi label=\"What are your favourite types of coffee?\" multiple id=\"select-default\"></ic-select-with-multi>\r\n<script>\r\n  var select = document.querySelector(\"#select-default\");\r\n  select.options = [\r\n  {\r\n    label: \"Fancy\",\r\n    children: [\r\n      { label: \"Cappuccino\", value: \"Cap\" },\r\n      { label: \"Flat white\", value: \"Flat\" },\r\n    ],\r\n  },\r\n  {\r\n    label: \"Boring\",\r\n    children: [\r\n      { label: \"Filter\", value: \"Fil\" },\r\n      { label: \"Latte\", value: \"Lat\" },\r\n    ],\r\n  },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelectWithMulti label=\"What are your favourite types of coffee?\" multiple options={[\r\n  {\r\n    label: \"Fancy\",\r\n    children: [\r\n      { label: \"Cappuccino\", value: \"Cap\" },\r\n      { label: \"Flat white\", value: \"Flat\" },\r\n    ],\r\n  },\r\n  {\r\n    label: \"Boring\",\r\n    children: [\r\n      { label: \"Filter\", value: \"Fil\" },\r\n      { label: \"Latte\", value: \"Lat\" },\r\n    ],\r\n  },\r\n]}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={group}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n    <IcSelectWithMulti\r\n      label=\"What are your favourite types of coffee?\"\r\n      multiple\r\n      options={GROUPED_OPTIONS}\r\n    />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Recommended\r\n\r\nDisplay certain options at the top of the option list by setting the `recommended` property to `true` on each option.\r\nThis will allow for quick access to these options.\r\n\r\nexport const recc = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select-with-multi label=\"What are your favourite types of coffee?\" multiple id=\"select-default\"></ic-select-with-multi>\r\n<script>\r\n  var select = document.querySelector(\"#select-default\");\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\" },\r\n    { label: \"Americano\", value: \"Ame\", recommended: true },\r\n    { label: \"Filter\", value: \"Fil\" },\r\n    { label: \"Flat white\", value: \"Fla\", recommended: true },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelectWithMulti label=\"What are your favourite types of coffee?\" multiple options={[\r\n  { label: \"Cappuccino\", value: \"Cap\" },\r\n  { label: \"Latte\", value: \"Lat\" },\r\n  { label: \"Americano\", value: \"Ame\", recommended: true },\r\n  { label: \"Filter\", value: \"Fil\" },\r\n  { label: \"Flat white\", value: \"Fla\", recommended: true },\r\n  { label: \"Mocha\", value: \"Moc\" },\r\n  { label: \"Macchiato\", value: \"Mac\" },\r\n]}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={recc}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n    <IcSelectWithMulti\r\n      label=\"What are your favourite types of coffee?\"\r\n      multiple\r\n      options={OPTIONS_WITH_RECOMMENDED}\r\n    />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Validation\r\n\r\nDisplay a validation status and message by using the `validation-status` and `validation-message` props.\r\nThe `validation-status` prop takes the values `success`, `warning` or `error`.\r\n\r\nexport const validation = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select-with-multi validation-status=\"success\" validation-text=\"Coffee available\" label=\"What are your favourite types of coffee?\" multiple id=\"select-default\"></ic-select-with-multi>\r\n<script>\r\n  var select = document.querySelector(\"#select-default\");\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\" },\r\n    { label: \"Americano\", value: \"Ame\" },\r\n    { label: \"Filter\", value: \"Fil\" },\r\n    { label: \"Flat white\", value: \"Fla\" },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelectWithMulti validation-status=\"success\" validation-text=\"Coffee available\" label=\"What are your favourite types of coffee?\" multiple options={[\r\n  { label: \"Cappuccino\", value: \"Cap\" },\r\n  { label: \"Latte\", value: \"Lat\" },\r\n  { label: \"Americano\", value: \"Ame\" },\r\n  { label: \"Filter\", value: \"Fil\" },\r\n  { label: \"Flat white\", value: \"Fla\" },\r\n  { label: \"Mocha\", value: \"Moc\" },\r\n  { label: \"Macchiato\", value: \"Mac\" },\r\n]}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={validation}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n    <IcSelectWithMulti\r\n      label=\"What are your favourite types of coffee?\"\r\n      multiple\r\n      options={OPTIONS}\r\n      validation-status=\"success\"\r\n      validation-text=\"Coffee available\"\r\n    />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Loading with error\r\n\r\nDisplay the loading state by using the `loading` prop.\r\nThe multi-select will show a loading error after the amount of time specified using the `timeout` prop has elapsed.\r\n\r\nexport const loading = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select-with-multi loading timeout=\"1000\" label=\"What are your favourite types of coffee?\" multiple id=\"select-default\"></ic-select-with-multi>\r\n<script>\r\n  var select = document.querySelector(\"#select-default\");\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\" },\r\n    { label: \"Americano\", value: \"Ame\" },\r\n    { label: \"Filter\", value: \"Fil\" },\r\n    { label: \"Flat white\", value: \"Fla\" },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelectWithMulti loading timeout=\"1000\" label=\"What are your favourite types of coffee?\" multiple options={[\r\n  { label: \"Cappuccino\", value: \"Cap\" },\r\n  { label: \"Latte\", value: \"Lat\" },\r\n  { label: \"Americano\", value: \"Ame\" },\r\n  { label: \"Filter\", value: \"Fil\" },\r\n  { label: \"Flat white\", value: \"Fla\" },\r\n  { label: \"Mocha\", value: \"Moc\" },\r\n  { label: \"Macchiato\", value: \"Mac\" },\r\n]}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={loading}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n    <IcSelectWithMulti\r\n      label=\"What are your favourite types of coffee?\"\r\n      multiple\r\n      loading\r\n      timeout=\"1000\"\r\n      options={OPTIONS}\r\n    />\r\n  </div>\r\n</ComponentPreview>\r\n",
      "path": "/components/multi-select/code",
      "date": "2024-05-02",
      "title": "Multi select",
      "status": "CANARY",
      "subTitle": "Use the multi-select component to allow users to select one or more values from a list of options.",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/multi-select"
        },
        {
          "title": "Code",
          "path": "/components/multi-select/code"
        }
      ],
      "meta": {
        "relativePath": "components\\multi-select\\code.mdx",
        "createdAt": "2024-05-20T13:20:43.318Z",
        "lastModified": "2024-05-20T13:20:43.318Z",
        "size": 27207,
        "formattedSize": "26.6 KB"
      }
    },
    {
      "id": "components\\multi-select\\guidancex",
      "contents": "\r\nimport { IcAlert, IcLink } from \"@ukic/react\";\r\nimport { IcSelectWithMulti } from \"@ukic/canary-react\";\r\n\r\nimport { OPTIONS } from \"./story-data\";\r\n\r\n<IcAlert\r\n  heading=\"Canary component\"\r\n  variant=\"info\"\r\n  message=\"This component is new and its guidance will be updated over time.\"\r\n/>\r\n\r\n## Canary components\r\n\r\nCanary components are unstable components that are released for testing purposes.\r\n\r\nWe value any feedback from users willing to try them in their applications.\r\n\r\nThese components should not be used in production apps without understanding the risk that changes may occur in order to fix bugs or improve functionality.\r\n\r\nFor more information on canary components, read our approach to [releases and versions](/get-started/releases-versions).\r\n\r\n<p>\r\n  Additional details on the props and events for this component can be found in\r\n  the ICDS{\" \"}\r\n  <IcLink\r\n    href=\"https://mi6.github.io/ic-ui-kit/branches/develop/canary-web-components/?path=/docs/web-components-multi-select--docs\"\r\n    target=\"_blank\"\r\n  >\r\n    Canary Web Components\r\n  </IcLink>{\" \"}\r\n  and{\" \"}\r\n  <IcLink\r\n    href=\"https://mi6.github.io/ic-ui-kit/branches/develop/canary-react/?path=/docs/react-components-multi-select--docs\"\r\n    target=\"_blank\"\r\n  >\r\n    Canary React\r\n  </IcLink>{\" \"}\r\n  storybooks.\r\n</p>\r\n\r\n## Single select\r\n\r\nTo view guidance and documentation relating to the single select component, check the [select page](/components/select).\r\n\r\n## Component demo\r\n\r\n<ComponentPreview>\r\n  <IcSelectWithMulti\r\n    label=\"What are your favourite types of coffee?\"\r\n    options={OPTIONS}\r\n    multiple\r\n  />\r\n</ComponentPreview>\r\n",
      "path": "/components/multi-select",
      "navPriority": 21,
      "date": "2024-05-02",
      "title": "Multi select",
      "status": "CANARY",
      "subTitle": "Use the multi-select component to allow users to select one or more values from a list of options.",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/multi-select"
        },
        {
          "title": "Code",
          "path": "/components/multi-select/code"
        }
      ],
      "meta": {
        "relativePath": "components\\multi-select\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.003Z",
        "lastModified": "2024-06-04T07:48:35.003Z",
        "size": 2023,
        "formattedSize": "2.0 KB"
      }
    },
    {
      "id": "components\\page-header\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nThe page header is the start of a page's content, so all `skip to content` links should direct the user here. The page header sits within a page's `main` landmark.\r\n\r\nWe've made sure that all interactive elements inside of a page header follow the logical tab order.\r\n\r\nEven when a page header is set to sticky scroll, it still sits in the normal tab order at the top of the page content.\r\n\r\nA page header's child components follow the accessibility considerations outlined in their own guidance.\r\n\r\n## For Assistive Technology\r\n\r\nPage header titling uses correct heading styles in order to achieve good semantic structure and provide information about structure and content relationships when using assistive technology.\r\n\r\n## Based on\r\n\r\nThe page header component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.a11yproject.com/posts/how-to-accessible-heading-structure/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Accessible heading structure\r\n    </ic-link>\r\n    , A11y project, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://webaim.org/techniques/semanticstructure/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Semantic Structure: Regions, Headings and Lists\r\n    </ic-link>\r\n    , WebAIM, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/WCAG22/Understanding/info-and-relationships\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      WCAG 2.2 1.3.1 Info and Relationships\r\n    </ic-link>\r\n    , W3, accessed April 2024.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/page-header/accessibility",
      "date": "2024-04-15",
      "title": "Page header",
      "status": "BETA",
      "subTitle": "A page header defines the top of the page content and is a consistent way to show page context, key actions and secondary navigation.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/page-header",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/page-header"
        },
        {
          "title": "Code",
          "path": "/components/page-header/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/page-header/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\page-header\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.318Z",
        "lastModified": "2024-05-20T13:20:43.318Z",
        "size": 2474,
        "formattedSize": "2.4 KB"
      }
    },
    {
      "id": "components\\page-header\\codex",
      "contents": "\r\nimport {\r\n  IcPageHeader,\r\n  IcButton,\r\n  IcStepper,\r\n  IcStep,\r\n  SlottedSVG,\r\n  IcTextField,\r\n  IcNavigationItem,\r\n  IcBreadcrumb,\r\n  IcBreadcrumbGroup,\r\n  IcSectionContainer,\r\n  IcChip,\r\n  IcTypography,\r\n} from \"@ukic/react\";\r\n\r\nimport { NavLink, MemoryRouter } from \"react-router-dom\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-page-header heading=\"Latte recipe\"\r\n    subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam. \"\r\n    reverseOrder >\r\n    <ic-chip slot=\"heading-adornment\" label=\"BETA\" size=\"large\" />\r\n    <ic-button slot=\"actions\" variant=\"primary\">\r\n      Create coffee\r\n    </ic-button>\r\n    <ic-button slot=\"actions\" variant=\"tertiary\">\r\n      Filter coffee\r\n    </ic-button>\r\n    <ic-stepper slot=\"stepper\">\r\n      <ic-step stepTitle=\"Warm kettle\" stepType=\"completed\" />\r\n      <ic-step\r\n        stepTitle=\"Warm milk\"\r\n        stepSubtitle=\"Optional\"\r\n        stepType=\"completed\"\r\n      />\r\n      <ic-step stepTitle=\"Pour milk\" stepType=\"current\" />\r\n    </ic-stepper>\r\n    <ic-text-field\r\n      slot=\"input\"\r\n      placeholder=\"Search for ingredients…\"\r\n      label=\"Input\"\r\n      hideLabel\r\n    />\r\n    </ic-page-header>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcPageHeader heading=\"Latte recipe\"\r\n    subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam. \"\r\n    reverseOrder \r\n  >\r\n    <IcChip slot=\"heading-adornment\" label=\"BETA\" size=\"large\" />\r\n    <IcButton slot=\"actions\" variant=\"primary\">\r\n      Create coffee\r\n    </IcButton>\r\n    <IcButton slot=\"actions\" variant=\"tertiary\">\r\n      Filter coffee\r\n    </IcButton>\r\n    <IcStepper slot=\"stepper\">\r\n      <IcStep stepTitle=\"Warm kettle\" stepType=\"completed\" />\r\n      <IcStep\r\n        stepTitle=\"Warm milk\"\r\n        stepSubtitle=\"Optional\"\r\n        stepType=\"completed\"\r\n      />\r\n      <IcStep stepTitle=\"Pour milk\" stepType=\"current\" />\r\n    </IcStepper>\r\n    <IcTextField\r\n      slot=\"input\"\r\n      placeholder=\"Search for ingredients…\"\r\n      label=\"Input\"\r\n      hideLabel\r\n    />\r\n  </IcPageHeader>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippets} style={{ flexDirection: \"column\" }}>\r\n  <IcPageHeader\r\n    heading=\"Latte recipe\"\r\n    subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam. \"\r\n    reverseOrder\r\n  >\r\n    <IcChip slot=\"heading-adornment\" label=\"BETA\" size=\"large\" />\r\n    <IcButton slot=\"actions\" variant=\"primary\">\r\n      Create coffee\r\n    </IcButton>\r\n    <IcButton slot=\"actions\" variant=\"tertiary\">\r\n      Filter coffee\r\n    </IcButton>\r\n    <IcStepper slot=\"stepper\">\r\n      <IcStep stepTitle=\"Warm kettle\" stepType=\"completed\" />\r\n      <IcStep\r\n        stepTitle=\"Warm milk\"\r\n        stepSubtitle=\"Optional\"\r\n        stepType=\"completed\"\r\n      />\r\n      <IcStep stepTitle=\"Pour milk\" stepType=\"current\" />\r\n    </IcStepper>\r\n    <IcTextField\r\n      slot=\"input\"\r\n      placeholder=\"Search for ingredients…\"\r\n      label=\"Input\"\r\n      hideLabel\r\n    />\r\n  </IcPageHeader>\r\n</ComponentPreview>\r\n\r\n## Page header details\r\n\r\n<ComponentDetails component=\"ic-page-header\" />\r\n\r\n## Variants\r\n\r\n### Size small\r\n\r\nexport const snippetsSmall = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-page-header size=\"small\" heading=\"Latte recipe\" subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam.\"></ic-page-header>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcPageHeader size=\"small\" heading=\"Latte recipe\" subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam.\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsSmall} style={{ flexDirection: \"column\" }}>\r\n  <IcPageHeader\r\n    size=\"small\"\r\n    heading=\"Latte recipe\"\r\n    subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam.\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### With breadcrumb navigation\r\n\r\nexport const withBreadcrumbNavigation = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-page-header heading=\"Latte recipe\" subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam.\">\r\n  <ic-chip slot=\"heading-adornment\" label=\"BETA\" size=\"large\"></ic-chip>\r\n  <ic-breadcrumb-group slot=\"breadcrumbs\">\r\n    <ic-breadcrumb current=\"true\" page-title=\"Drinks\" href=\"#\"></ic-breadcrumb>\r\n    <ic-breadcrumb\r\n      page-title=\"Coffees\" \r\n      href=\"#\"\r\n    >\r\n    </ic-breadcrumb>\r\n    <ic-breadcrumb page-title=\"Latte\" href=\"#\"></ic-breadcrumb>\r\n  </ic-breadcrumb-group>\r\n</ic-page-header>\r\n    `,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcPageHeader heading=\"Latte recipe\" subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam.\">\r\n  <IcChip slot=\"heading-adornment\" label=\"BETA\" size=\"large\" />\r\n  <IcBreadcrumbGroup slot=\"breadcrumbs\">\r\n    <IcBreadcrumb pageTitle=\"Drinks\" href=\"#\" />\r\n    <IcBreadcrumb \r\n      pageTitle=\"Coffees\" \r\n      href=\"#\"\r\n    />\r\n    <IcBreadcrumb current pageTitle=\"Latte\" href=\"#\" />\r\n  </IcBreadcrumbGroup>\r\n</IcPageHeader>\r\n    `,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={withBreadcrumbNavigation}\r\n  style={{ flexDirection: \"column\" }}\r\n>\r\n  <IcPageHeader\r\n    heading=\"Latte recipe\"\r\n    subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam.\"\r\n  >\r\n    <IcChip slot=\"heading-adornment\" label=\"BETA\" size=\"large\" />\r\n    <IcBreadcrumbGroup slot=\"breadcrumbs\">\r\n      <IcBreadcrumb pageTitle=\"Drinks\" href=\"#\" />\r\n      <IcBreadcrumb pageTitle=\"Coffees\" href=\"#\" />\r\n      <IcBreadcrumb current pageTitle=\"Latte\" href=\"#\" />\r\n    </IcBreadcrumbGroup>\r\n  </IcPageHeader>\r\n</ComponentPreview>\r\n\r\n### With actions, input and stepper\r\n\r\nexport const withActionsInputStepper = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-page-header heading=\"Latte recipe\" subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam.\" reverse-order=\"true\">\r\n  <ic-chip slot=\"heading-adornment\" label=\"BETA\" size=\"large\"></ic-chip>\r\n  <ic-button slot=\"actions\" variant=\"primary\">Create coffee</ic-button>\r\n  <ic-button slot=\"actions\" variant=\"tertiary\">Filter coffee</ic-button>\r\n  <ic-stepper slot=\"stepper\">\r\n    <ic-step step-title=\"Warm kettle\" step-type=\"completed\"></ic-step>\r\n    <ic-step step-title=\"Warm milk\" step-subtitle=\"Optional\" step-type=\"completed\"></ic-step>\r\n    <ic-step step-title=\"Pour milk\" step-type=\"current\"></ic-step>\r\n  </ic-stepper>\r\n  <ic-text-field slot=\"input\" placeholder=\"Search for ingredients…\" label=\"Input\" hide-label=\"true\" />\r\n</ic-page-header>\r\n    `,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcPageHeader heading=\"latte recipe\" subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam.\" reverseOrder>\r\n  <IcChip slot=\"heading-adornment\" label=\"BETA\" size=\"large\" />\r\n  <IcButton slot=\"actions\" variant=\"primary\">\r\n    Create coffee\r\n  </IcButton>\r\n  <IcButton slot=\"actions\" variant=\"tertiary\">\r\n    Filter coffee\r\n  </IcButton>\r\n  <IcStepper slot=\"stepper\">\r\n    <IcStep stepTitle=\"Warm kettle\" stepType=\"completed\" />\r\n    <IcStep stepTitle=\"Warm milk\" stepSubtitle=\"Optional\" stepType=\"completed\" />\r\n      <IcStep stepTitle=\"Pour milk\" stepType=\"current\" />\r\n  </IcStepper>\r\n  <IcTextField slot=\"input\" placeholder=\"Search for ingredients…\" label=\"Input\" hideLabel />\r\n</IcPageHeader>\r\n    `,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={withActionsInputStepper}\r\n  style={{ flexDirection: \"column\" }}\r\n>\r\n  <IcPageHeader\r\n    heading=\"Latte recipe\"\r\n    subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam.\"\r\n    reverseOrder\r\n  >\r\n    <IcChip slot=\"heading-adornment\" label=\"BETA\" size=\"large\" />\r\n    <IcButton slot=\"actions\" variant=\"primary\">\r\n      Create coffee\r\n    </IcButton>\r\n    <IcButton slot=\"actions\" variant=\"tertiary\">\r\n      Filter coffee\r\n    </IcButton>\r\n    <IcStepper slot=\"stepper\">\r\n      <IcStep stepTitle=\"Warm kettle\" stepType=\"completed\" />\r\n      <IcStep\r\n        stepTitle=\"Warm milk\"\r\n        stepSubtitle=\"Optional\"\r\n        stepType=\"completed\"\r\n      />\r\n      <IcStep stepTitle=\"Pour milk\" stepType=\"current\" />\r\n    </IcStepper>\r\n    <IcTextField\r\n      slot=\"input\"\r\n      placeholder=\"Search for ingredients…\"\r\n      label=\"Input\"\r\n      hideLabel\r\n    />\r\n  </IcPageHeader>\r\n</ComponentPreview>\r\n\r\n### With actions, input and tabs\r\n\r\nexport const withActionsInputTabs = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-page-header \r\n  heading=\"Latte recipe\" \r\n  subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam.\" \r\n  reverse-order=\"true\"\r\n>\r\n  <ic-chip slot=\"heading-adornment\" label=\"BETA\" size=\"large\"></ic-chip>\r\n  <ic-button slot=\"actions\" variant=\"primary\">Create coffee</ic-button>\r\n  <ic-button slot=\"actions\" variant=\"tertiary\">Filter coffee</ic-button>\r\n  <ic-text-field slot=\"input\" placeholder=\"Search for ingredients…\" label=\"Input\" hide-label=\"true\"></ic-text-field>\r\n  <ic-navigation-item \r\n    slot=\"tabs\" \r\n    label=\"Method\" \r\n    href=\"#\" \r\n    selected=\"true\"\r\n  >\r\n  </ic-navigation-item>\r\n  <ic-navigation-item \r\n    slot=\"tabs\" \r\n    label=\"Ingredients\" \r\n    href=\"#\"\r\n  >\r\n  </ic-navigation-item>\r\n</ic-page-header>\r\n    `,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcPageHeader \r\n  heading=\"Latte recipe\" \r\n  subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam.\" \r\n  reverseOrder>\r\n  <IcChip slot=\"heading-adornment\" label=\"BETA\" size=\"large\" />\r\n  <IcButton slot=\"actions\" variant=\"primary\">\r\n    Create coffee\r\n  </IcButton>\r\n  <IcButton slot=\"actions\" variant=\"tertiary\">\r\n    Filter coffee\r\n  </IcButton>\r\n  <IcTextField \r\n    slot=\"input\" \r\n    placeholder=\"Search for ingredients…\"\r\n    label=\"Input\" \r\n    hideLabel \r\n  />\r\n  <IcNavigationItem \r\n    slot=\"tabs\" \r\n    label=\"Method\" \r\n    href=\"#\" \r\n    selected \r\n  />\r\n  <IcNavigationItem \r\n    slot=\"tabs\" \r\n    label=\"Ingredients\" \r\n    href=\"#\" \r\n  />\r\n</IcPageHeader>\r\n    `,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={withActionsInputTabs}\r\n  style={{ flexDirection: \"column\" }}\r\n>\r\n  <IcPageHeader\r\n    heading=\"Latte recipe\"\r\n    subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam.\"\r\n    reverseOrder\r\n  >\r\n    <IcChip slot=\"heading-adornment\" label=\"BETA\" size=\"large\" />\r\n    <IcButton slot=\"actions\" variant=\"primary\">\r\n      Create coffee\r\n    </IcButton>\r\n    <IcButton slot=\"actions\" variant=\"tertiary\">\r\n      Filter coffee\r\n    </IcButton>\r\n    <IcTextField\r\n      slot=\"input\"\r\n      placeholder=\"Search for ingredients…\"\r\n      label=\"Input\"\r\n      hideLabel\r\n    />\r\n    <IcNavigationItem slot=\"tabs\" label=\"Method\" href=\"#\" selected />\r\n    <IcNavigationItem slot=\"tabs\" label=\"Ingredients\" href=\"#\" />\r\n  </IcPageHeader>\r\n</ComponentPreview>\r\n\r\n### With React Router\r\n\r\nexport const withReactRouter = [\r\n  {\r\n    language: \"React\",\r\n    snippet: `<MemoryRouter initialEntries={[\"/\"]}>\r\n  <IcPageHeader\r\n    heading=\"Latte recipe\"\r\n    subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam.\"\r\n    reverseOrder\r\n  >\r\n    <IcChip slot=\"heading-adornment\" label=\"BETA\" size=\"large\"/>\r\n    <IcButton slot=\"actions\" variant=\"primary\"\r\n      >Create coffee\r\n      <SlottedSVG \r\n        slot=\"icon\" \r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n      </SlottedSVG>\r\n    </IcButton>\r\n    <IcButton slot=\"actions\" variant=\"tertiary\">Filter coffee</IcButton>\r\n    <IcNavigationItem slot=\"tabs\" selected>\r\n      <NavLink slot=\"navigation-item\" to=\"/\">Method</NavLink>\r\n    </IcNavigationItem>        \r\n    <IcNavigationItem slot=\"tabs\">\r\n      <NavLink slot=\"navigation-item\" to=\"/favourites\">Ingredients</NavLink>\r\n    </IcNavigationItem>\r\n    <IcTextField \r\n      slot=\"input\" \r\n      placeholder=\"Search for ingredients…\"\r\n      label=\"Input\" \r\n      hideLabel \r\n      style={{'@media (maxWidth: 576px)':{width: \"280px\"}}}\r\n    />\r\n  </IcPageHeader>\r\n  <IcSectionContainer>\r\n      <Routes>\r\n        <Route path=\"/\" element={() => <IcTypography>This page is about our Latte making methods</IcTypography>}/>\r\n        <Route path=\"/favourites\" element={() => <IcTypography>This page is about the ingredients used in our Latte</IcTypography>}/>\r\n      </Routes>\r\n  </IcSectionContainer>\r\n</MemoryRouter>\r\n    `,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={withReactRouter}\r\n  style={{ flexDirection: \"column\" }}\r\n>\r\n  <MemoryRouter initialEntries={[\"/\"]}>\r\n    <IcPageHeader\r\n      heading=\"Latte recipe\"\r\n      subheading=\"A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam.\"\r\n      reverseOrder\r\n    >\r\n      <IcChip slot=\"heading-adornment\" label=\"BETA\" size=\"large\" />\r\n      <IcButton slot=\"actions\" variant=\"primary\">\r\n        Create coffee\r\n        <SlottedSVG\r\n          slot=\"icon\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n        </SlottedSVG>\r\n      </IcButton>\r\n      <IcButton slot=\"actions\" variant=\"tertiary\">\r\n        Filter coffee\r\n      </IcButton>\r\n      <IcNavigationItem slot=\"tabs\" selected>\r\n        <NavLink slot=\"navigation-item\" to=\"/\">\r\n          Method\r\n        </NavLink>\r\n      </IcNavigationItem>\r\n      <IcNavigationItem slot=\"tabs\">\r\n        <NavLink slot=\"navigation-item\" to=\"/favourites\">\r\n          Ingredients\r\n        </NavLink>\r\n      </IcNavigationItem>\r\n      <IcTextField\r\n        slot=\"input\"\r\n        placeholder=\"Search for ingredients…\"\r\n        label=\"Input\"\r\n        hideLabel\r\n        style={{ \"@media (maxWidth: 576px)\": { width: \"280px\" } }}\r\n      />\r\n    </IcPageHeader>\r\n    <IcSectionContainer />\r\n  </MemoryRouter>\r\n</ComponentPreview>\r\n\r\n### With Slots\r\n\r\nexport const withSlots = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-page-header>\r\n  <ic-typography variant=\"h1\" slot=\"heading\">Latte recipe</ic-typography>\r\n  <ic-typography slot=\"subheading\">A Latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam.</ic-typography>\r\n  <ic-chip slot=\"heading-adornment\" label=\"BETA\" size=\"large\"></ic-chip>\r\n  <ic-breadcrumb-group slot=\"breadcrumbs\">\r\n    <ic-breadcrumb current=\"true\" page-title=\"Drinks\" href=\"#\"></ic-breadcrumb>\r\n    <ic-breadcrumb page-title=\"Coffees\" href=\"#\"></ic-breadcrumb>\r\n    <ic-breadcrumb page-title=\"Latte\" href=\"#\"></ic-breadcrumb>\r\n  </ic-breadcrumb-group>\r\n  <ic-text-field slot=\"input\" placeholder=\"Search for ingredients…\" label=\"Input\" hide-label=\"true\" />\r\n</ic-page-header>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcPageHeader>\r\n  <IcTypography variant=\"h1\" slot=\"heading\">\r\n    Latte recipe\r\n  </IcTypography>\r\n  <IcTypography slot=\"subheading\">\r\n    A Latte is a popular Italian coffee, made with espresso, steamed milk and\r\n    a thin layer of foam.\r\n  </IcTypography>\r\n  <IcChip slot=\"heading-adornment\" label=\"BETA\" size=\"large\" />\r\n  <IcBreadcrumbGroup slot=\"breadcrumbs\">\r\n    <IcBreadcrumb pageTitle=\"Drinks\" href=\"#\" />\r\n    <IcBreadcrumb pageTitle=\"Coffees\" href=\"#\" />\r\n    <IcBreadcrumb current pageTitle=\"Latte\" href=\"#\" />\r\n  </IcBreadcrumbGroup>\r\n  <IcTextField\r\n    slot=\"input\"\r\n    placeholder=\"Search for ingredients…\"\r\n    label=\"Input\"\r\n    hideLabel\r\n  />\r\n</IcPageHeader>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={withSlots} style={{ flexDirection: \"column\" }}>\r\n  <IcPageHeader>\r\n    <IcTypography variant=\"h1\" slot=\"heading\">\r\n      Latte recipe\r\n    </IcTypography>\r\n    <IcTypography slot=\"subheading\">\r\n      A Latte is a popular Italian coffee, made with espresso, steamed milk and\r\n      a thin layer of foam.\r\n    </IcTypography>\r\n    <IcChip slot=\"heading-adornment\" label=\"BETA\" size=\"large\" />\r\n    <IcBreadcrumbGroup slot=\"breadcrumbs\">\r\n      <IcBreadcrumb pageTitle=\"Drinks\" href=\"#\" />\r\n      <IcBreadcrumb pageTitle=\"Coffees\" href=\"#\" />\r\n      <IcBreadcrumb current pageTitle=\"Latte\" href=\"#\" />\r\n    </IcBreadcrumbGroup>\r\n    <IcTextField\r\n      slot=\"input\"\r\n      placeholder=\"Search for ingredients…\"\r\n      label=\"Input\"\r\n      hideLabel\r\n    />\r\n  </IcPageHeader>\r\n</ComponentPreview>\r\n",
      "path": "/components/page-header/code",
      "date": "2023-10-25",
      "title": "Page header",
      "status": "BETA",
      "subTitle": "A page header defines the top of the page content and is a consistent way to show page context, key actions and secondary navigation.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/page-header",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/page-header"
        },
        {
          "title": "Code",
          "path": "/components/page-header/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/page-header/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\page-header\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.014Z",
        "lastModified": "2024-04-04T12:41:44.014Z",
        "size": 17462,
        "formattedSize": "17.1 KB"
      }
    },
    {
      "id": "components\\page-header\\guidancex",
      "contents": "\r\nimport {\r\n  IcPageHeader,\r\n  IcButton,\r\n  IcTextField,\r\n  IcStepper,\r\n  IcStep,\r\n  IcChip,\r\n} from \"@ukic/react\";\r\nimport pageHeaderFig1 from \"./images/fig-1-page-header-anatomy.png\";\r\nimport pageHeaderFig2 from \"./images/fig-2-dont-use-global-actions-in-a-page-header.png\";\r\nimport pageHeaderFig3 from \"./images/fig-3-use-default-and-dense-sizing.png\";\r\nimport pageHeaderFig4 from \"./images/fig-4-set-width-of-page-header-to-match-width-of-main-content.png\";\r\nimport pageHeaderFig5 from \"./images/fig-5-dont-set-width-of-page-header-to-align-to-content.png\";\r\nimport pageHeaderFig6 from \"./images/fig-6-page-header-displayed-whilst-scroll-position-is-at-top-of-page.png\";\r\nimport pageHeaderFig7 from \"./images/fig-7-sticky-page-header-displayed-whilst-scrolled.png\";\r\nimport pageHeaderFig8 from \"./images/fig-8-centre-alignment.png\";\r\nimport pageHeaderFig9 from \"./images/fig-9-left-alignment.png\";\r\nimport pageHeaderFig10 from \"./images/fig-10-full-width.png\";\r\nimport pageHeaderFig11 from \"./images/fig-11-dont-mix-alignment.png\";\r\n\r\n## Introduction\r\n\r\nAn example of the page header component.\r\n\r\n<ComponentPreview>\r\n  <IcPageHeader\r\n    heading=\"Latte recipe\"\r\n    subheading=\"A latte is a popular Italian coffee, made with espresso, steamed milk and a thin layer of foam. \"\r\n    reverseOrder\r\n  >\r\n    <IcChip slot=\"heading-adornment\" label=\"BETA\" size=\"large\" />\r\n    <IcButton slot=\"actions\" variant=\"primary\">\r\n      Create coffee\r\n    </IcButton>\r\n    <IcButton slot=\"actions\" variant=\"tertiary\">\r\n      Filter coffee\r\n    </IcButton>\r\n    <IcStepper slot=\"stepper\">\r\n      <IcStep stepTitle=\"Warm kettle\" stepType=\"completed\" />\r\n      <IcStep\r\n        stepTitle=\"Warm milk\"\r\n        stepSubtitle=\"Optional\"\r\n        stepType=\"completed\"\r\n      />\r\n      <IcStep stepTitle=\"Pour milk\" stepType=\"current\" />\r\n    </IcStepper>\r\n    <IcTextField\r\n      slot=\"input\"\r\n      placeholder=\"Search for ingredients…\"\r\n      label=\"Input\"\r\n      hideLabel\r\n    />\r\n  </IcPageHeader>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse a page header to display an introduction to the content of the page. Add additional elements to provide actions, navigation or inputs at the page level.\r\n\r\n<DoDontCaution\r\n  imageSrc={pageHeaderFig1}\r\n  imageAlt=\"A diagram showing the positioning of the content areas within a page header. The content areas are a breadcrumb area, a title area, an action area, an input area, and a navigation area. \"\r\n  state=\"none\"\r\n  caption=\"The anatomy of a page header that includes areas for breadcrumbs, titling, actions, inputs and additional navigation.  \"\r\n/>\r\n\r\n### With action\r\n\r\nUse [buttons](/components/button) when you need to provide actions that affect all content on the page, for example to filter or to add a new record. Only use one primary button per page header. Use any type of button within the page header’s interaction area.\r\n\r\n### With input\r\n\r\nInclude an [input field](/components/search-bar) to search or filter data displayed on the page. Don’t overload the input area with components, consider placing them in the page content instead.\r\n\r\n### With breadcrumb navigation\r\n\r\nUse a [breadcrumb](/components/breadcrumb) to show the current page’s position in the app’s hierarchy or show a link to the parent page.\r\n\r\n### With tab navigation\r\n\r\nUse [tabs](/components/tabs) if the content grouped by the header can be split into distinct categories.\r\n\r\n### With stepper\r\n\r\nUse a [stepper](/components/stepper) to show progress through a multi-step process.\r\n\r\n## When not to use\r\n\r\nDon’t use the page header to include global actions or global navigation, instead use the [top navigation](/components/top-navigation) or [side navigation](/components/side-navigation).\r\n\r\n<DoDontCaution\r\n  imageSrc={pageHeaderFig2}\r\n  imageAlt=\"An example app called ‘Better latte than never’ that displays a page titled ‘Top 5 reasons why coffee is a way better choice than tea’. The page’s page header contains an action button titled ‘Main menu’.\"\r\n  state=\"bad\"\r\n  caption=\"Don‘t use global actions within a page header.\"\r\n/>\r\n\r\n## Sizing\r\n\r\n<DoDontCaution\r\n  imageSrc={pageHeaderFig3}\r\n  imageAlt=\"A default sized page header with a large title that says ‘Grande Frappé’ and small sized page header with the same title displayed much smaller.\"\r\n  state=\"none\"\r\n  caption=\"An example of default and small sized page headers.\"\r\n/>\r\n\r\nSet the width of the page header to match the width of the page’s main content.\r\n\r\n<DoDontCaution\r\n  imageSrc={pageHeaderFig4}\r\n  imageAlt=\"An example app titled ‘Better latte than never’ showing a page called ‘Top 5 reasons why coffee is better than tea’ with a page header that spans the full width of the content area.\"\r\n  state=\"good\"\r\n  caption=\"Set the width of the page header to fill the page’s main content area.  \"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={pageHeaderFig5}\r\n  imageAlt=\"An example app titled ‘Better latte than never’ showing a page called ‘Top 5 reasons why coffee is better than tea’ with a page header that is indented from the page margins to align with the page’s example content.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t set the width of the page header to align with content. The page header content will align to your content container automatically.\"\r\n/>\r\n\r\n## Layout and placement\r\n\r\n### Sticky scroll\r\n\r\nSet the page header to stick to the top of the screen if you need it to be visible when scrolling. Otherwise, set it to scroll with content to maximise available space for content.\r\n\r\n<DoDontCaution\r\n  imageSrc={pageHeaderFig6}\r\n  imageAlt=\"An example app title ‘better latte than never’ that shows the top navigation component at the top of the screen, a page header below it, and some example content below that.\"\r\n  state=\"none\"\r\n  caption=\"The page header sits at the top of the page when scrolled to the top.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={pageHeaderFig7}\r\n  imageAlt=\"An example app that is scrolled partway down the page. A page header is displayed stuck to the top of the screen and overlaying other example content.\"\r\n  state=\"none\"\r\n  caption=\"A sticky page header stays at the top of the screen when scrolling down the page.\"\r\n/>\r\n\r\n### Alignment\r\n\r\nAlign the page header either to the left, centre or full-width to match the rest of the content on the page.\r\n\r\n<DoDontCaution\r\n  imageSrc={pageHeaderFig9}\r\n  imageAlt=\"An example app that shows a page header and some example content. The page header’s title, description and action button are aligned to the left hand side of the screen, and the example page content below is also aligned to the left of the screen.\"\r\n  state=\"good\"\r\n  caption=\"Use left alignment to position page header content to the left of the page container.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={pageHeaderFig8}\r\n  imageAlt=\"An example app that shows a page header and some example content. The page header’s title, description and action button are aligned to the centre of the screen, and the example page content below is also aligned to the centre of the screen.\"\r\n  state=\"good\"\r\n  caption=\"Use centred alignment to position page header content to the middle of the page container.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={pageHeaderFig10}\r\n  imageAlt=\"An example app that shows a page header and some example content. The page header’s content spans the full screen width with its title and description aligned to the left margin and its action button aligned to the right margin. The example page content below is aligned to the centre of the screen.\"\r\n  state=\"good\"\r\n  caption=\"Use full-width to align page header content to the left and right margins of the page container.\"\r\n/>\r\n\r\nDon’t align a page header’s content differently to how the rest of the page content is aligned.\r\n\r\n<DoDontCaution\r\n  imageSrc={pageHeaderFig11}\r\n  imageAlt=\"An example app that shows a page header and some example content. The page header’s content is aligned to the left of the screen. The example page content below is aligned to the centre of the screen.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t mix alignments in an app. Here the page header’s content has left alignment, whereas the rest of the page content is centre aligned.\"\r\n/>\r\n\r\n## Content\r\n\r\nUse short titles that clearly describe the page's content.\r\n\r\nKeep page subtitles concise within the page header. If more content is required, consider placing it within the page itself.\r\n\r\nInclude a title adornment to convey information such as a status or versioning.\r\n\r\n## Related components\r\n\r\n- [Hero](/components/hero)\r\n- [Top navigation](/components/top-navigation)\r\n- [Side navigation](/components/side-navigation)\r\n",
      "path": "/components/page-header",
      "navPriority": 22,
      "date": "2024-05-10",
      "title": "Page header",
      "status": "BETA",
      "subTitle": "A page header defines the top of the page content and is a consistent way to show page context, key actions and secondary navigation.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/page-header",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/page-header"
        },
        {
          "title": "Code",
          "path": "/components/page-header/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/page-header/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\page-header\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.004Z",
        "lastModified": "2024-06-04T07:48:35.004Z",
        "size": 9274,
        "formattedSize": "9.1 KB"
      }
    },
    {
      "id": "components\\pagination\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nThe elements within a pagination bar follow a logical tabbing order when moving through them. Buttons are triggered using either the ‘enter’ or ‘space’ key.\r\n\r\nThe current page is always displayed in the component so that the user knows where in the data set they are.\r\n\r\nWhen the user is at the start or end of the data, the navigation buttons are disabled so that it is clear there is no more data past that point.\r\n\r\nUsing the items per page selector in the pagination bar allows users to control how much information is available per page. This can help to either simplify complex pages or to increase the information density.\r\n\r\n## For Assistive Technology\r\n\r\nEach pagination component uses accessible names for buttons that lack meaning in the context of a screen reader. Page buttons that simply have their page number as the visible label are given an accessible label of ‘Go to page X’ so that it is clearer what their function is.\r\n\r\nThe term ‘page X’ can be overridden in the case that it is not accurate. For example, this can be changed to read ‘sheet X’, ‘set X’, ‘slide X’ instead if it is a better representation.\r\n\r\nSimilarly, the icon buttons used for next, previous, first and last are also given accessible name so that their action is clearer when announced by a screen reader.\r\n\r\nThe pagination components use the nav element so that they become navigational landmarks on a page and can therefore be swiftly navigated to by users of assistive technology.\r\n\r\n## Based on\r\n\r\nThe pagination component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.a11ymatters.com/pattern/pagination/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Accessible Pagination\r\n    </ic-link>\r\n    , Accessibility Matters, published October 2016, accessed March 2023.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://accessibility.blog.gov.uk/2016/05/27/using-navigation-landmarks/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Using navigation landmarks\r\n    </ic-link>\r\n    , Accessibility in government, published May 2016, accessed March 2023.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://uxplanet.org/ux-infinite-scrolling-vs-pagination-1030d29376f1\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      UX: Infinite scrolling vs. Pagination\r\n    </ic-link>\r\n    , Nick Babich, published May 2016, accessed March 2023.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/pagination/accessibility",
      "date": "2024-04-15",
      "title": "Pagination",
      "status": "BETA",
      "subTitle": "Use the Pagination components to split large amounts of content into pages and navigate between them.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/pagination",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/pagination"
        },
        {
          "title": "Code",
          "path": "/components/pagination/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/pagination/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\pagination\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.333Z",
        "lastModified": "2024-05-20T13:20:43.333Z",
        "size": 3297,
        "formattedSize": "3.2 KB"
      }
    },
    {
      "id": "components\\pagination\\codex",
      "contents": "\r\nimport { IcPagination } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-pagination pages=\"15\"></ic-pagination>\r\n<ic-pagination pages=\"15\" type=\"complex\"></ic-pagination>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcPagination pages={15} />\r\n<IcPagination pages={15} type=\"complex\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  style={{ display: \"block\", margin: \"auto\" }}\r\n  snippets={snippets}\r\n>\r\n  <div style={{ width: \"fit-content\", margin: \"auto\" }}>\r\n    <IcPagination pages={15} />\r\n  </div>\r\n  <IcPagination pages={15} type=\"complex\" />\r\n</ComponentPreview>\r\n\r\n## Pagination details\r\n\r\n<ComponentDetails component=\"ic-pagination\" />\r\n\r\n## Variants\r\n\r\n### Hide first and last page buttons\r\n\r\nexport const hideFirstLast = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-pagination hide-first-and-last-page-button=\"true\" pages=\"15\"></ic-pagination>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcPagination hideFirstAndLastPageButton pages={15} />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  style={{ display: \"block\", margin: \"auto\" }}\r\n  snippets={hideFirstLast}\r\n>\r\n  <IcPagination hideFirstAndLastPageButton pages={15} />\r\n</ComponentPreview>\r\n\r\n### Hide current page (only in 'simple' type)\r\n\r\nexport const hideCurrent = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-pagination hide-current-page=\"true\" pages=\"15\"></ic-pagination>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcPagination hideCurrentPage pages={15} />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  style={{ display: \"block\", margin: \"auto\" }}\r\n  snippets={hideCurrent}\r\n>\r\n  <IcPagination hideCurrentPage pages={15} />\r\n</ComponentPreview>\r\n\r\n### Appearance\r\n\r\nexport const appearance = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-pagination appearance=\"dark\" pages=\"15\"></ic-pagination>\r\n<ic-pagination appearance=\"light\" pages=\"15\"></ic-pagination>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcPagination appearance=\"dark\" pages={15} />\r\n<IcPagination appearance=\"light\" pages={15} />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  style={{ display: \"block\", margin: \"auto\" }}\r\n  snippets={appearance}\r\n>\r\n  <IcPagination appearance=\"dark\" pages={15} />\r\n  <div style={{ backgroundColor: \"#000\", marginBottom: \"0.75rem\" }}>\r\n    <IcPagination appearance=\"light\" pages={15} />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Boundary and Adjacent items set\r\n\r\nexport const boundaryAdjacent = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-pagination type=\"complex\" adjacent-count=\"2\" boundary-count=\"2\" pages=\"15\"></ic-pagination>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcPagination type=\"complex\" adjacentCount={2} boundaryCount={2} pages={15} />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  style={{ display: \"block\", margin: \"auto\" }}\r\n  snippets={boundaryAdjacent}\r\n>\r\n  <IcPagination type=\"complex\" adjacentCount={2} boundaryCount={2} pages={15} />\r\n</ComponentPreview>\r\n\r\n### Disabled\r\n\r\nexport const disabled = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-pagination type=\"complex\" disabled=\"true\" pages=\"12\"></ic-pagination>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcPagination type=\"complex\" disabled pages={12} />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  style={{ display: \"block\", margin: \"auto\" }}\r\n  snippets={disabled}\r\n>\r\n  <IcPagination type=\"complex\" disabled pages={12} />\r\n</ComponentPreview>\r\n\r\n### Label\r\n\r\nexport const label = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-pagination label=\"Slide\" pages=\"12\"></ic-pagination>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcPagination label=\"Slide\" pages={12} />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ display: \"block\", margin: \"auto\" }} snippets={label}>\r\n  <IcPagination label=\"Slide\" pages={12} />\r\n</ComponentPreview>\r\n\r\n### Default page\r\n\r\nexport const defaultPage = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-pagination pages=\"12\" default-page=\"4\"></ic-pagination>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcPagination pages={12} defaultPage={4}/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  style={{ display: \"block\", margin: \"auto\" }}\r\n  snippets={defaultPage}\r\n>\r\n  <IcPagination pages={12} defaultPage={4} />\r\n</ComponentPreview>\r\n",
      "path": "/components/pagination/code",
      "date": "2023-05-05",
      "title": "Pagination",
      "status": "BETA",
      "subTitle": "Use the Pagination components to split large amounts of content into pages and navigate between them.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/pagination",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/pagination"
        },
        {
          "title": "Code",
          "path": "/components/pagination/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/pagination/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\pagination\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.029Z",
        "lastModified": "2024-04-04T12:41:44.029Z",
        "size": 4833,
        "formattedSize": "4.7 KB"
      }
    },
    {
      "id": "components\\pagination\\guidancex",
      "contents": "\r\nimport { IcPagination, IcAlert } from \"@ukic/react\";\r\nimport paginationFig1 from \"./images/fig-1-use-pagination-to-split-content-across-pages.png\";\r\nimport paginationFig2 from \"./images/fig-2-complex-simple-carousel-pagination.png\";\r\nimport paginationFig3 from \"./images/fig-3-data-table-with-pagination-bar.png\";\r\nimport paginationFig4 from \"./images/fig-4-dont-use-carousel-pagination-for-large-numbers-of-pages.png\";\r\nimport paginationFig5 from \"./images/fig-5-use-colour-variants.png\";\r\nimport paginationFig6 from \"./images/fig-6-place-pagination-at-bottom.png\";\r\nimport paginationFig7 from \"./images/fig-7-place-pagination-at-top-and-bottom.png\";\r\nimport paginationFig8 from \"./images/fig-8-overlaid-carousel-pagination.png\";\r\nimport paginationFig9 from \"./images/fig-9-setting-adjacent-and-boundary-items.png\";\r\nimport paginationFig10 from \"./images/fig-10-pagination-bars-with-different-elements.png\";\r\n\r\n## Introduction\r\n\r\nPagination enables large amounts of content to be split across multiple pages so that it is more manageable and doesn’t require overly long page lengths.\r\n\r\n<ComponentPreview style={{ margin: \"auto\" }}>\r\n  <IcPagination pages={15} type=\"complex\" />\r\n</ComponentPreview>\r\n\r\n## Component variants\r\n\r\n<IcAlert\r\n  heading=\"Coming soon\"\r\n  message=\"The carousel pagination variant is in development.\"\r\n  variant=\"info\"\r\n/>\r\n\r\nThere are three types of pagination that can be used to control pages of content:\r\n\r\n- Complex pagination: Contains buttons for navigating to next, previous, first and last pages as well as individual page buttons for adjacent and boundary pages.\r\n- Simple pagination: Contains only buttons for navigating to next, previous, first and last pages. Displays the current page as a label.\r\n- Carousel pagination: Uses a dot button to indicate each page and shows all pages at the same time.\r\n\r\nUse the pagination components within a pagination bar to provide other navigation controls including:\r\n\r\n- Items per page selector: Switch the number of content items visible per page.\r\n- Item count: Display the range of currently visible items as well as the total number of items.\r\n- Go to page shortcut: Allow quick access to any page number by typing the page number and hitting ‘go’.\r\n\r\n## When to use\r\n\r\nUse pagination when you have a large, known amount of content that can be split across pages. Order the content so the most relevant appears on the first page. Pagination works best for lists of content such as search results and data items.\r\n\r\nTry to create an understandable order to the content split across pages. This way it is easier to understand what content might appear on a later page.\r\n\r\nFor example, if content is ordered alphabetically, then it becomes obvious that entries beginning with a ‘Z’ would appear on the last few pages.\r\n\r\n<DoDontCaution\r\n  imageSrc={paginationFig1}\r\n  imageAlt=\"An example application showing a list of hot drink products split across pages. A pagination component provides access to navigate through the list of products.\"\r\n  state=\"good\"\r\n  caption=\"Use pagination to split content across multiple pages.\"\r\n/>\r\n\r\nUse pagination for content when there are other elements on the page that can be scrolled to. This means all elements on the page can easily be navigated to without scrolling through a large amount of content.\r\n\r\nPagination provides full control over the content; it allows navigation to any page of content quickly and gives an indication of the total amount of content available.\r\n\r\nUse complex pagination to allow people to easily navigate between pages without having to move sequentially through content. This allows people to quickly skip around between pages to search for specific content.\r\n\r\nUse simple pagination to navigate sequentially between pages using the ‘next’ and ‘previous’ buttons.\r\n\r\nUse carousel pagination for small numbers of pages where all pages can be shown as carousel items in the pagination component.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={paginationFig2}\r\n    imageAlt=\"An image showing three pagination components. Complex pagination provides numbered buttons for each page. Simple pagination simply provides next, previous, first and last buttons. Carousel pagination shows pages as dots and does not show page numbers.\"\r\n    state=\"none\"\r\n    caption=\"Use complex, simple or carousel pagination variants for different implementations.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nUse a pagination bar to provide more navigation functionality through particularly complex data sets. For example, use pagination bars with data tables to navigate large data sets easily.\r\n\r\n<DoDontCaution\r\n  imageSrc={paginationFig3}\r\n  imageAlt=\"An example nutritional data table for coffee products. Coffee products are displayed in a table and a pagination bar allows the number of items per page to be changed, displays the total number of items, and includes a simple pagination control allowing navigation through the pages.\"\r\n  state=\"good\"\r\n  caption=\"Use a pagination bar to provide more functionality.\"\r\n/>\r\n\r\n## When not to use\r\n\r\nAvoid using pagination to split up linear content such as articles or blogs. Scrolling down the page makes it easier to consume this content.\r\n\r\nAvoid using pagination when the size of the content is unknown or if it frequently changes. This causes the number of pages to change frequently and means it is hard to create a ‘last page’ option.\r\n\r\nUse an infinite scrolling pattern when navigating content should be explorative, or when there is a near infinite amount of content. For example, newsfeeds and comments threads can be near endless and infinite scrolling allows exploration by simply continuing to scroll.\r\n\r\nAvoid using simple pagination when it is important to be able to move between specific pages; complex pagination is better for this as it shows more adjacent pages, allowing one click navigation.\r\n\r\nDon’t use carousel pagination for large numbers of pages. Carousel pagination shows a dot button for every page at the same time.\r\n\r\n<DoDontCaution\r\n  imageSrc={paginationFig4}\r\n  imageAlt=\"An example product grid with a carousel pagination component showing 17 page buttons.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t use carousel pagination for large numbers of pages, use complex pagination instead.\"\r\n/>\r\n\r\n## Interaction behaviour\r\n\r\nPagination components fire an event when a new page is selected. Use this to trigger the switch of pages in the app.\r\n\r\nIn a pagination bar, when the number of items per page is changed, then the pagination component and the item count updates to show the new number of pages. Make sure to update the pagination component if anything else on the page changes the number of pages. For example, setting a filter may reduce the number of pages required to display the filtered results.\r\n\r\n## Colour\r\n\r\nUse the default, dark and light appearance pagination components when placing them on different coloured backgrounds to ensure the correct contrast ratios are met.\r\n\r\n<DoDontCaution\r\n  imageSrc={paginationFig5}\r\n  imageAlt=\"Three pagination examples on different coloured backgrounds. The default appearance pagination is used on a white background. The dark appearance pagination is used on a light yellow background. The light appearance pagination is used on a dark grey background.\"\r\n  state=\"good\"\r\n  caption=\"Use colour contrast variants when placing pagination components on different coloured backgrounds.\"\r\n/>\r\n\r\n## Layout and placement\r\n\r\nPlace the pagination component so that it is obvious what it controls. Match the width of a pagination bar to the width of the page.\r\n\r\nTry to place pagination at the bottom of the page it controls, as this encourages the user to read through the page before moving to the next. However, placing pagination at the top of the page is still a valid option.\r\n\r\n<DoDontCaution\r\n  imageSrc={paginationFig6}\r\n  imageAlt=\"An example product grid showing hot beverages. A pagination control appears below the drinks grid that it controls.\"\r\n  state=\"good\"\r\n  caption=\"Try to place pagination at the bottom of the container it controls.\"\r\n/>\r\n\r\nFor large page containers that require scrolling, use two pagination components at the top and bottom of the page container to provide easy access to navigation when at either the top or bottom of the page.\r\n\r\n<DoDontCaution\r\n  imageSrc={paginationFig7}\r\n  imageAlt=\"An example product grid showing hot beverages. A complex pagination control appears below the drinks grid that it controls. A simple pagination control is displayed in the top-right above the product grid.\"\r\n  state=\"good\"\r\n  caption=\"Place pagination controls at the top and bottom of the page container to provide additional navigation functionality.\"\r\n/>\r\n\r\nPlace carousel pagination on or around the carousel content. This can be overlaid, but take care to make sure that contrast requirements are met.\r\n\r\n<DoDontCaution\r\n  imageSrc={paginationFig8}\r\n  imageAlt=\"An example homepage for a coffee shop called ‘Drink coffee, be happy’. A hero banner sits at the top of the page with a carousel pagination control overlaid at its bottom.\"\r\n  state=\"good\"\r\n  caption=\"Overlay carousel pagination on top of its content but take care to ensure colour contrast requirements are met.\"\r\n/>\r\n\r\n## Content\r\n\r\nWhen using complex pagination, specify the number of adjacent pages to display next to the current page. Also specify the number of boundary pages to display at the start and end of the page range.\r\n\r\n<DoDontCaution\r\n  imageSrc={paginationFig9}\r\n  imageAlt=\"Three complex pagination components with different settings for adjacent and boundary items. Increasing boundary items shows more page buttons at the start and end of the range. Increasing the adjacent items shows more page buttons next to the current page.\"\r\n  state=\"none\"\r\n  caption=\"Set the adjacent and boundary items to change which page buttons are displayed.\"\r\n/>\r\n\r\nSelect which elements within a pagination bar you want to display. Each element in the pagination bar can be toggled on or off except for the pagination component itself, which can be switched to use complex, simple or carousel pagination.\r\n\r\n<DoDontCaution\r\n  imageSrc={paginationFig10}\r\n  imageAlt=\"Three example pagination bars with different elements displaying. The top shows the ‘items per page selector’ and ‘go to page button’ displayed, whilst the other examples have these elements hidden.\"\r\n  state=\"none\"\r\n  caption=\"Select which elements to show within a pagination bar.\"\r\n/>\r\n\r\nBy default, pages are referred to as pages in the pagination component. Override the pagination label to change this. For example, change the term pages to ‘sheets’ if it makes more sense for a data table implementation.\r\n",
      "path": "/components/pagination",
      "navPriority": 23,
      "date": "2023-05-05",
      "title": "Pagination",
      "status": "BETA",
      "subTitle": "Use the Pagination components to split large amounts of content into pages and navigate between them.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/pagination",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/pagination"
        },
        {
          "title": "Code",
          "path": "/components/pagination/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/pagination/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\pagination\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.005Z",
        "lastModified": "2024-06-04T07:48:35.005Z",
        "size": 11342,
        "formattedSize": "11.1 KB"
      }
    },
    {
      "id": "components\\popover-menu\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nPopover menus use the role ‘menu’ and the items within use ‘menuitem’ and ‘menuitemcheckbox’. This enables the menu to be opened using usual keyboard commands. Clicking on a menu item closes the menu after triggering the menu item's action. A menu item's action can also be triggered using the 'Space' and 'Enter' keys. Popover menu groups use the role ‘group’.\r\n\r\nPopover menus appear overlaid on other content. When opening a sub-menu, focus is applied to the whole sub-menu and then the items are navigated between using the up and down arrow keys. When focus is moved on, the popover menu closes automatically. Using the ‘Esc’ key will also close the popover menu.\r\n\r\nDisabled menu items can still be focussed upon so that the structure of the menu is understandable, even if the menu item can’t be triggered at that time.\r\n\r\n## For Assistive Technology\r\n\r\nEach menu item within a popover menu can use an aria-label that provides additional context that may not be required in a visible label.\r\n\r\nFor ease of use, actions can be assigned keyboard shortcuts and these are displayed on the menu item. This information is announced by a screen reader when each menu item is focussed.\r\n\r\nWhen moving between sub-menus in a popover menu, the nested sub-menu’s level is announced by a screen reader so that it is easy to understand whereabouts you are within the menu structure.\r\n\r\n## Based on\r\n\r\nThe popover menu component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/group_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Aria Group Role\r\n    </ic-link>\r\n    , MDN Web Docs, accessed 22nd March 2023\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/web/accessibility/aria/roles/menu_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Aria Menu Role\r\n    </ic-link>\r\n    , MDN Web Docs, accessed 22nd March 2023\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menuitem_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Aria Menuitem Role\r\n    </ic-link>\r\n    , MDN Web Docs, accessed 22nd March 2023\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menuitemcheckbox_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Aria Menuitemcheckbox Role\r\n    </ic-link>\r\n    , MDN Web Docs, accessed 22nd March 2023\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/popover-menu/accessibility",
      "date": "2024-04-15",
      "title": "Popover menu",
      "status": "BETA",
      "subTitle": "Use popover menus to place actions inside a menu that overlays other page content when opened.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/popover-menu",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/popover-menu"
        },
        {
          "title": "Code",
          "path": "/components/popover-menu/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/popover-menu/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\popover-menu\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:35.006Z",
        "lastModified": "2024-06-04T07:48:35.006Z",
        "size": 3446,
        "formattedSize": "3.4 KB"
      }
    },
    {
      "id": "components\\popover-menu\\codex",
      "contents": "\r\nimport { IcPopoverMenu, IcMenuItem, IcMenuGroup, IcButton } from \"@ukic/react\";\r\nimport { useRef } from \"react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button \r\n  id=\"button-1\" \r\n  variant=\"icon\"\r\n  title=\"More information\" \r\n  onclick=\"handleClick()\"\r\n>\r\n  <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"16\"\r\n    height=\"16\"\r\n    fill=\"currentColor\"\r\n    class=\"bi bi-three-dots-vertical\"\r\n    viewBox=\"0 0 16 16\"\r\n  >\r\n    <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n  </svg>\r\n</ic-button>\r\n<script>\r\n  var icPopover = document.querySelector(\"#popover-menu\");\r\n  function handleClick() {\r\n    icPopover.open = !icPopover.open;\r\n  }\r\n</script>\r\n<div>\r\n  <ic-popover-menu anchor=\"button-1\" aria-label=\"popover\" id=\"popover-menu\">\r\n    <ic-menu-item label=\"Copy code\"></ic-menu-item>\r\n    <ic-menu-item label=\"Paste code\"></ic-menu-item>\r\n    <ic-menu-item\r\n      label=\"Actions\"\r\n      submenu-trigger-for=\"actions\"\r\n    ></ic-menu-item>\r\n  </ic-popover-menu>\r\n  <ic-popover-menu submenu-id=\"actions\">\r\n    <ic-menu-item label=\"Edit\"></ic-menu-item>\r\n    <ic-menu-item label=\"Find\"></ic-menu-item>\r\n    <ic-menu-item label=\"Delete\" variant=\"destructive\"></ic-menu-item>\r\n  </ic-popover-menu>\r\n</div>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const popoverEl = useRef(null);\r\nconst handleClick = () => {\r\n  popoverEl.current.open = !popoverEl.current.open;\r\n};\r\nreturn (\r\n  <>\r\n    <IcButton\r\n      variant=\"icon\"\r\n      title=\"More information\"\r\n      id=\"button-1\"\r\n      onClick={handleClick}\r\n    >\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"16\"\r\n        height=\"16\"\r\n        fill=\"currentColor\"\r\n        class=\"bi bi-three-dots-vertical\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n      </SlottedSVG>\r\n    </IcButton>\r\n    <IcPopoverMenu anchor=\"button-1\" aria-label=\"popover\" ref={popoverEl}>\r\n      <IcMenuItem label=\"Copy code\" />\r\n      <IcMenuItem label=\"Paste code\" />\r\n      <IcMenuItem label=\"Actions\" submenuTriggerFor=\"actions\" />\r\n    </IcPopoverMenu>\r\n    <IcPopoverMenu submenuId=\"actions\" aria-label=\"popover\">\r\n      <IcMenuItem label=\"Edit\" />\r\n      <IcMenuItem label=\"Find\" />\r\n      <IcMenuItem label=\"Delete\" variant=\"destructive\" />\r\n    </IcPopoverMenu>\r\n  </>\r\n);`,\r\n  },\r\n];\r\n\r\nexport const DemoPopover = () => {\r\n  const popoverEl = useRef(null);\r\n  const handleClick = () => {\r\n    popoverEl.current.open = !popoverEl.current.open;\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton\r\n        variant=\"icon\"\r\n        title=\"More information\"\r\n        id=\"button-1\"\r\n        onClick={handleClick}\r\n      >\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          class=\"bi bi-three-dots-vertical\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n        </svg>\r\n      </IcButton>\r\n      <IcPopoverMenu anchor=\"button-1\" aria-label=\"popover\" ref={popoverEl}>\r\n        <IcMenuItem label=\"Copy code\" />\r\n        <IcMenuItem label=\"Paste code\" />\r\n        <IcMenuItem label=\"Actions\" submenuTriggerFor=\"actions\" />\r\n      </IcPopoverMenu>\r\n      <IcPopoverMenu submenuId=\"actions\" aria-label=\"popover\">\r\n        <IcMenuItem label=\"Edit\" />\r\n        <IcMenuItem label=\"Find\" />\r\n        <IcMenuItem label=\"Delete\" variant=\"destructive\" />\r\n      </IcPopoverMenu>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview\r\n  style={{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  }}\r\n  snippets={snippets}\r\n>\r\n  <DemoPopover />\r\n</ComponentPreview>\r\n\r\n## Popover menu details\r\n\r\n<ComponentDetails component=\"ic-popover-menu\" />\r\n\r\n## Menu item details\r\n\r\n<ComponentDetails component=\"ic-menu-item\" />\r\n\r\n## Menu group details\r\n\r\n<ComponentDetails component=\"ic-menu-group\" />\r\n\r\n## Variants\r\n\r\n### With button variations\r\n\r\nexport const snippetsButtons = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button \r\n  id=\"button-2\" \r\n  variant=\"icon\"\r\n  title=\"More information\" \r\n  onclick=\"handleClick()\"\r\n>\r\n  <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"16\"\r\n    height=\"16\"\r\n    fill=\"currentColor\"\r\n    class=\"bi bi-three-dots-vertical\"\r\n    viewBox=\"0 0 16 16\"\r\n  >\r\n    <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n  </svg>\r\n</ic-button>\r\n<script>\r\n  var icPopover = document.querySelector(\"#popover-menu-2\");\r\n  function handleClick() {\r\n    icPopover.open = !icPopover.open;\r\n  }\r\n</script>\r\n<div>\r\n  <ic-popover-menu anchor=\"button-2\" aria-label=\"popover\" id=\"popover-menu-2\">\r\n    <ic-menu-item label=\"Copy\" disabled=\"true\"></ic-menu-item>\r\n    <ic-menu-item label=\"Paste\" keyboard-shortcut=\"Cmd + V\"></ic-menu-item>\r\n    <ic-menu-item label=\"Edit\" description=\"This is used to edit the original.\"></ic-menu-item>\r\n    <ic-menu-item label=\"Show/Hide\" variant=\"toggle\"></ic-menu-item>\r\n    <ic-menu-item label=\"Find icons\">\r\n      <svg\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n      >\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n        <path\r\n          d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\r\n        />\r\n      </svg>\r\n    </ic-menu-item>\r\n    <ic-menu-item label=\"Delete\" disabled=\"true\" variant=\"destructive\"></ic-menu-item>\r\n    <ic-menu-item label=\"Log out\" variant=\"destructive\"></ic-menu-item>\r\n  </ic-popover-menu>\r\n</div>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const popoverEl = useRef(null);\r\nconst handleClick = () => {\r\n  popoverEl.current.open = !popoverEl.current.open;\r\n};\r\nreturn (\r\n  <>\r\n    <IcButton\r\n      variant=\"icon\"\r\n      title=\"More information\"\r\n      id=\"button-2\"\r\n      onClick={handleClick}\r\n    >\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"16\"\r\n        height=\"16\"\r\n        fill=\"currentColor\"\r\n        class=\"bi bi-three-dots-vertical\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n      </SlottedSVG>\r\n    </IcButton>\r\n    <IcPopoverMenu anchor=\"button-2\" aria-label=\"popover\" ref={popoverEl}>\r\n      <IcMenuItem label=\"Copy\" disabled />\r\n      <IcMenuItem label=\"Paste\" keyboardShortcut=\"Cmd + V\" />\r\n      <IcMenuItem label=\"Edit\" description=\"This is used to edit the original.\" />\r\n      <IcMenuItem label=\"Show/Hide\" variant=\"toggle\" />\r\n      <IcMenuItem label=\"Find icons\">\r\n          <SlottedSVG\r\n              slot=\"icon\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              height=\"24px\"\r\n              viewBox=\"0 0 24 24\"\r\n              width=\"24px\"\r\n          >\r\n              <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n              <path\r\n              d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\r\n              />\r\n          </SlottedSVG>\r\n      </IcMenuItem>\r\n      <IcMenuItem label=\"Delete\" disabled variant=\"destructive\" />\r\n      <IcMenuItem label=\"Log out\" variant=\"destructive\" />\r\n    </IcPopoverMenu>\r\n  </>\r\n);`,\r\n  },\r\n];\r\n\r\nexport const ButtonsPopover = () => {\r\n  const popoverEl = useRef(null);\r\n  const handleClick = () => {\r\n    popoverEl.current.open = !popoverEl.current.open;\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton\r\n        variant=\"icon\"\r\n        title=\"More information\"\r\n        id=\"button-2\"\r\n        onClick={handleClick}\r\n      >\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          class=\"bi bi-three-dots-vertical\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n        </svg>\r\n      </IcButton>\r\n      <IcPopoverMenu anchor=\"button-2\" aria-label=\"popover\" ref={popoverEl}>\r\n        <IcMenuItem label=\"Copy\" disabled />\r\n        <IcMenuItem label=\"Paste\" keyboardShortcut=\"Cmd + V\" />\r\n        <IcMenuItem\r\n          label=\"Edit\"\r\n          description=\"This is used to edit the original.\"\r\n        />\r\n        <IcMenuItem label=\"Show/Hide\" variant=\"toggle\" />\r\n        <IcMenuItem label=\"Find icons\">\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            height=\"24px\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24px\"\r\n          >\r\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n            <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\r\n          </svg>\r\n        </IcMenuItem>\r\n        <IcMenuItem label=\"Delete\" disabled variant=\"destructive\" />\r\n        <IcMenuItem label=\"Log out\" variant=\"destructive\" />\r\n      </IcPopoverMenu>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview\r\n  style={{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  }}\r\n  snippets={snippetsButtons}\r\n>\r\n  <ButtonsPopover />\r\n</ComponentPreview>\r\n\r\n### With menu groups\r\n\r\nexport const snippetsGroups = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button \r\n  id=\"button-3\" \r\n  variant=\"icon\"\r\n  title=\"More information\" \r\n  onclick=\"handleClick()\"\r\n>\r\n  <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"16\"\r\n    height=\"16\"\r\n    fill=\"currentColor\"\r\n    class=\"bi bi-three-dots-vertical\"\r\n    viewBox=\"0 0 16 16\"\r\n  >\r\n    <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n  </svg>\r\n</ic-button>\r\n<script>\r\n  var icPopover = document.querySelector(\"#popover-menu-3\");\r\n  function handleClick() {\r\n    icPopover.open = !icPopover.open;\r\n  }\r\n</script>\r\n<div>\r\n  <ic-popover-menu anchor=\"button-3\" aria-label=\"popover\" id=\"popover-menu-3\">\r\n    <ic-menu-group label=\"Edit options\">\r\n      <ic-menu-item label=\"Copy\" disabled=\"true\"></ic-menu-item>\r\n      <ic-menu-item label=\"Paste\" keyboard-shortcut=\"Cmd + V\"></ic-menu-item>\r\n    </ic-menu-group>\r\n    <ic-menu-group>\r\n      <ic-menu-item label=\"Format\"></ic-menu-item>\r\n      <ic-menu-item label=\"Help\"></ic-menu-item>\r\n    <ic-menu-group>\r\n  </ic-popover-menu>\r\n</div>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const popoverEl = useRef(null);\r\nconst handleClick = () => {\r\n  popoverEl.current.open = !popoverEl.current.open;\r\n};\r\nreturn (\r\n  <>\r\n    <IcButton\r\n      variant=\"icon\"\r\n      title=\"More information\"\r\n      id=\"button-3\"\r\n      onClick={handleClick}\r\n    >\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"16\"\r\n        height=\"16\"\r\n        fill=\"currentColor\"\r\n        class=\"bi bi-three-dots-vertical\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n      </SlottedSVG>\r\n    </IcButton>\r\n    <IcPopoverMenu anchor=\"button-3\" aria-label=\"popover\" ref={popoverEl}>\r\n      <IcMenuGroup label=\"Edit options\">\r\n        <IcMenuItem label=\"Copy\" disabled />\r\n        <IcMenuItem label=\"Paste\" keyboardShortcut=\"Cmd + V\" />\r\n      </IcMenuGroup>\r\n      <IcMenuGroup>\r\n        <IcMenuItem label=\"Format\" />\r\n        <IcMenuItem label=\"Help\" />\r\n      </IcMenuGroup>\r\n    </IcPopoverMenu>\r\n  </>\r\n);`,\r\n  },\r\n];\r\n\r\nexport const GroupsPopover = () => {\r\n  const popoverEl = useRef(null);\r\n  const handleClick = () => {\r\n    popoverEl.current.open = !popoverEl.current.open;\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton\r\n        variant=\"icon\"\r\n        title=\"More information\"\r\n        id=\"button-3\"\r\n        onClick={handleClick}\r\n      >\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          class=\"bi bi-three-dots-vertical\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n        </svg>\r\n      </IcButton>\r\n      <IcPopoverMenu anchor=\"button-3\" aria-label=\"popover\" ref={popoverEl}>\r\n        <IcMenuGroup label=\"Edit options\">\r\n          <IcMenuItem label=\"Copy\" disabled />\r\n          <IcMenuItem label=\"Paste\" keyboardShortcut=\"Cmd + V\" />\r\n        </IcMenuGroup>\r\n        <IcMenuGroup>\r\n          <IcMenuItem label=\"Format\" />\r\n          <IcMenuItem label=\"Help\" />\r\n        </IcMenuGroup>\r\n      </IcPopoverMenu>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview\r\n  style={{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  }}\r\n  snippets={snippetsGroups}\r\n>\r\n  <GroupsPopover />\r\n</ComponentPreview>\r\n",
      "path": "/components/popover-menu/code",
      "date": "2023-07-31",
      "title": "Popover menu",
      "status": "BETA",
      "subTitle": "Use popover menus to place actions inside a menu that overlays other page content when opened.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/popover-menu",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/popover-menu"
        },
        {
          "title": "Code",
          "path": "/components/popover-menu/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/popover-menu/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\popover-menu\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.061Z",
        "lastModified": "2024-04-04T12:41:44.061Z",
        "size": 14244,
        "formattedSize": "13.9 KB"
      }
    },
    {
      "id": "components\\popover-menu\\guidancex",
      "contents": "\r\nimport { IcPopoverMenu, IcMenuItem, IcButton } from \"@ukic/react\";\r\nimport { useRef } from \"react\";\r\nimport popoverFig1 from \"./images/fig-1-use-popover-menu-to-house-secondary-actions.png\";\r\nimport popoverFig2 from \"./images/fig-2-dont-use-popover-menu-for-few-actions.png\";\r\nimport popoverFig3 from \"./images/fig-3-set-maxheight-to-force-scroll.png\";\r\nimport popoverFig4 from \"./images/fig-4-position-menus-in-available-space.png\";\r\nimport popoverFig5 from \"./images/fig-5-menu-buttons-with-different-elements.png\";\r\nimport popoverFig6 from \"./images/fig-6-menu-toggle-buttons.png\";\r\nimport popoverFig7 from \"./images/fig-7-menu-groups.png\";\r\nimport popoverVid1 from \"./images/anim-1-popover-menu-interaction.mp4\";\r\nimport popoverVid2 from \"./images/anim-2-sub-menu-interaction.mp4\";\r\nimport popoverVid3 from \"./images/anim-3-avoid-nested-sub-menus.mp4\";\r\n\r\n## Introduction\r\n\r\nClick on the 'More Information' button below to view an example of the popover menu component.\r\n\r\nexport const IntroPopover = () => {\r\n  const popoverEl = useRef(null);\r\n  const handleClick = () => {\r\n    popoverEl.current.open = !popoverEl.current.open;\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton\r\n        variant=\"icon\"\r\n        title=\"More information\"\r\n        id=\"button-1\"\r\n        onClick={handleClick}\r\n      >\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          class=\"bi bi-three-dots-vertical\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n        </svg>\r\n      </IcButton>\r\n      <IcPopoverMenu anchor=\"button-1\" aria-label=\"popover\" ref={popoverEl}>\r\n        <IcMenuItem label=\"Copy code\" />\r\n        <IcMenuItem label=\"Paste code\" />\r\n        <IcMenuItem label=\"Actions\" submenuTriggerFor=\"actions\" />\r\n      </IcPopoverMenu>\r\n      <IcPopoverMenu submenuId=\"actions\" aria-label=\"popover\">\r\n        <IcMenuItem label=\"Edit\" />\r\n        <IcMenuItem label=\"Find\" />\r\n        <IcMenuItem label=\"Delete\" variant=\"destructive\" />\r\n      </IcPopoverMenu>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview\r\n  style={{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  }}\r\n>\r\n  <IntroPopover />\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse a popover menu to place multiple actions behind a single trigger. This is especially useful when there is not enough space to include all actions on the base page. Popover menus are commonly used for ‘More actions’ and often triggered using an icon button.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={popoverFig1}\r\n    imageAlt=\"A popover menu with edit and view options using a mix of menu items, menu groups and menu toggle items.\"\r\n    state=\"good\"\r\n    caption=\"Use popover menus to contain multiple actions.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## When not to use\r\n\r\nDon’t use a popover menu if there are only a small number of actions. Consider if the actions can be better placed on the page itself.\r\n\r\nAvoid placing important actions in popover menus as these may be missed. Instead, use popover menus to house secondary or less important actions and place your most important actions on the page itself.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={popoverFig2}\r\n    imageAlt=\"A popover menu with two options for edit and download. Plenty of space is available on the background interface to display these options.\"\r\n    state=\"bad\"\r\n    caption=\"Avoid using popover menus with few actions, or with important actions.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nDon’t include any other content within a popover menu other than the elements described in this page. If additional information is required about an action, consider using a [dialog](/components/dialog) instead.\r\n\r\n## Interaction behaviour\r\n\r\nWhen you click a trigger element, a popover menu appears. Make sure to associate the popover menu with a trigger and ensure that the trigger can be actioned via any input mode.\r\n\r\nWhen you click a menu item within a popover menu, the popover menu will hide and the menu item’s associated action will be triggered.\r\n\r\n<video\r\n  class=\"half-width\"\r\n  muted\r\n  controls\r\n  loop\r\n  title=\"An animation showing a popover menu that appears after clicking a ‘more’ button. The menu is closed when a menu item is clicked.\"\r\n>\r\n  <source src={popoverVid1} type=\"video/mp4\" />\r\n</video>\r\n\r\n### Sizing\r\n\r\nBy default, popover menus expand vertically to hug their contents. Set a max-height on the popover menu to constrain the height and allow the menu to scroll. Avoid setting the width of the popover menu to be greater than the available viewport.\r\n\r\n<DoDontCaution\r\n  imageSrc={popoverFig3}\r\n  imageAlt=\"Two examples of popover menus. The first displays all menu items within the menu container. The second example shows the same menu items, but with some hidden due to a smaller menu container. A scroll bar allows the menu to be scrolled.\"\r\n  state=\"good\"\r\n  caption=\"Set a max-height to constrain the height of the menu and cause its contents to scroll.\"\r\n/>\r\n\r\n### Layout and placement\r\n\r\nPopover menus appear adjacent to their triggering element. By default, they appear below and aligned to the left of the trigger element. However, if no space is available, the popover menu will appear above or aligned to the right of the trigger element.\r\n\r\n<DoDontCaution\r\n  imageSrc={popoverFig4}\r\n  imageAlt=\"Two examples of popover menus. The first example shows the menu aligned to the left of the screen. The second shows the menu aligned to the right.\"\r\n  state=\"good\"\r\n  caption=\"Popover menus position themselves based on the available space.\"\r\n/>\r\n\r\n## Content\r\n\r\nPopover menus contain menu items, menu toggle items, menu groups and menu sections.\r\n\r\n### Labels\r\n\r\nFollow the [content style](/styles/content-style) guidelines when writing labels and keep them concise but specific.\r\n\r\nAlways specify an accessible label for the menu items. The accessible label can include more detail than is described in the visible label.\r\n\r\nFor example, a menu item may have a visible label that reads ‘Edit’. The accessible label may read ‘Edit record’. This includes more information to aid assistive technology users.\r\n\r\n### Icons\r\n\r\nUse an icon on a menu item to provide additional meaning or to aid in recognition. Menu items, menu toggle items and parent menu items can display an icon.\r\n\r\nMake sure that the icon is understandable and relevant to the action.\r\n\r\nAlways provide alternative descriptions for icons if they aren't decorative. Only use icons if they are necessary.\r\n\r\n### Menu items\r\n\r\nUse the 'default' variant of menu items for single actions that do not have a selection status.\r\n\r\nAdd an additional description to a menu item to provide additional context. Keep the description concise and consider if the action is too complicated if too much information is required to describe the action.\r\n\r\nIf a keyboard shortcut is available for a menu item’s action, then display it using the keyboard shortcut label.\r\n\r\nUse the 'destructive' variant of a menu item to highlight a destructive action. Position destructive actions at the bottom of a popover menu.\r\n\r\nSpecify a menu item as a parent if it has children that appear in a sub-menu. When clicked, the sub-menu will slide into view.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={popoverFig5}\r\n    imageAlt=\"A popover menu showing a set of edit options that include icons and keyboard shortcuts alongside their labels.\"\r\n    state=\"good\"\r\n    caption=\"Use menu items for single actions. Add an icon or a description to provide more context. Highlight keyboard shortcuts using the keyboard shortcut label.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n### Menu toggle items\r\n\r\nUse the 'toggle' variant of menu items for actions that provide an ability to toggle something on or off. Menu toggle items will display a checkmark when toggled on and hide it when toggled off.\r\n\r\nLike default menu items, provide an icon or a description to add additional context if required.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={popoverFig6}\r\n    imageAlt=\"A popover menu containing two menu toggle items. Their labels read ‘Show/Hide’ and ‘Lock/Unlock’ and display a tick indicating that they are toggled on.\"\r\n    state=\"good\"\r\n    caption=\"Use menu toggle items to show a selection state alongside the action.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n### Menu groups\r\n\r\nUse menu groups to organise menu items into sections within the popover menu. Provide a label for the menu group to describe its contents. Alternatively, leave the menu group label blank if a description is unnecessary.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={popoverFig7}\r\n    imageAlt=\" A popover menu with a menu group for ‘Edit options’, a menu group for ‘View options’, an untitled menu group containing unrelated actions, and a final untitled menu group containing destructive actions.\"\r\n    state=\"good\"\r\n    caption=\"Use menu groups to create sections within a popover menu.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n### Parent menu items\r\n\r\nUse a parent menu item to open sub-menus that include more menu items. Use this to contain similar actions or options relating to the menu group name.\r\n\r\n<video\r\n  class=\"half-width\"\r\n  muted\r\n  controls\r\n  loop\r\n  title=\"An animation showing a popover menu with a parent menu item titled ‘Zoom’. A sub-menu containing menu items for different zoom levels is opened after the ‘zoom’ parent menu item is clicked. After the back button is clicked in the sub-menu the main menu is displayed again.\"\r\n>\r\n  <source src={popoverVid2} type=\"video/mp4\" />\r\n</video>\r\n\r\n### Sub-menus\r\n\r\nUse a sub-menu to contain a parent menu item’s children items. Use sub-menus for multiple related actions that are opened from the main menu.\r\n\r\nThe sub-menu displays the same label as the parent menu item. Clicking the back button in a sub-menu will return the user to the parent menu item in the main menu.\r\n\r\nUse menu items, toggle menu items, menu groups or parent menu items in a sub-menu but avoid nesting too many levels of sub-menus as this can be confusing to navigate.\r\n\r\n<video\r\n  class=\"half-width\"\r\n  muted\r\n  controls\r\n  loop\r\n  title=\"An animation showing a popover menu that contains four parent menu items each with nested parent menu items in their sub-menus. The user clicks ‘help options’ to go into the sub-menu, then clicks ‘information’ to go into a second sub-menu, then clicks ‘tutorials’ to go into a third sub-menu.\"\r\n>\r\n  <source src={popoverVid3} type=\"video/mp4\" />\r\n</video>\r\n\r\n## Accessibility considerations\r\n\r\nWhen specifying the trigger element for a popover menu, make use of ‘aria-expanded’ and ‘aria-collapsed’ so that a screen reader announces the appearance of the popover menu.\r\n",
      "path": "/components/popover-menu",
      "navPriority": 24,
      "date": "2023-07-31",
      "title": "Popover menu",
      "status": "BETA",
      "subTitle": "Use popover menus to place actions inside a menu that overlays other page content when opened.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/popover-menu",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/popover-menu"
        },
        {
          "title": "Code",
          "path": "/components/popover-menu/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/popover-menu/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\popover-menu\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.007Z",
        "lastModified": "2024-06-04T07:48:35.007Z",
        "size": 11543,
        "formattedSize": "11.3 KB"
      }
    },
    {
      "id": "components\\radio\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nWhen interacting with a radio button on a keyboard, the **tab** key moves the focus to the radio group. Once focus is on the radio group, the **arrow** keys move between the radio options. When tabbing to a radio group with an option already selected, the focus is applied to the selected option. Moving through the other radio options using the arrow keys automatically selects the focused option.\r\n\r\nWhen tabbing to a radio group with no option selected, the focus is applied to the first option in the group without selecting the option. The unselected radio button can be selected using the **space** key when the radio button is focused.\r\n\r\nWhen conditional fields are displayed beneath radio buttons, the conditional field acts as the child of the radio button. When the field is dynamically displayed after selecting a radio button, then it should be announced by the screen reader as required based on the user’s current selection. Tabbing on from the radio group should move focus to the dynamically displayed field, and then onwards through the rest of the tab index.\r\n\r\n## For Assistive Technology\r\n\r\nA container of radio buttons uses the aria role `radiogroup`, with each individual radio identified as `radio`, and uses the `aria-checked` property to denote selection.\r\n\r\nRadio buttons always use a label to ensure that their visible text label is announced alongside the radio button.\r\n\r\n## Based on\r\n\r\nThe radio component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/TR/2016/WD-wai-aria-practices-1.1-20160317/examples/radio/radio.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Aria radio practices examples\r\n    </ic-link>\r\n    , W3, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.a11y-101.com/development/radio-buttons\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Radio buttons\r\n    </ic-link>\r\n    , a11y-101, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/radio_role#keyboard_interactions\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Aria radio role\r\n    </ic-link>\r\n    , MDN web docs, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://design-system.service.gov.uk/components/radios/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Radio button component\r\n    </ic-link>\r\n    , Government Design System, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.nngroup.com/articles/radio-buttons-default-selection/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Radio buttons: Select one by default or leave all unselected\r\n    </ic-link>\r\n    , Nielsen Norman Group, accessed June 2014.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/radio/accessibility",
      "date": "2024-04-15",
      "title": "Radio button",
      "status": "BETA",
      "subTitle": "Radio buttons let people select a single option from a list.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/radio",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/radio"
        },
        {
          "title": "Code",
          "path": "/components/radio/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/radio/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\radio\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:35.008Z",
        "lastModified": "2024-06-04T07:48:35.008Z",
        "size": 3634,
        "formattedSize": "3.5 KB"
      }
    },
    {
      "id": "components\\radio\\codex",
      "contents": "\r\nimport { IcRadioGroup, IcRadioOption, IcTextField } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-radio-group name='radio-group-1' label=\"Add a free purchase with any hot drink\">\r\n  <ic-radio-option value=\"crisps\" label=\"Crisps\"></ic-radio-option>\r\n  <ic-radio-option\r\n    value=\"cookie\"\r\n    label=\"Deluxe chocolate chip cookie (sold out)\"\r\n    disabled=\"true\"\r\n    inactive=\"true\" \r\n  >\r\n  </ic-radio-option>\r\n  <ic-radio-option value=\"fruit\" label=\"Banana\"></ic-radio-option>\r\n  <ic-radio-option value=\"No item\" label=\"No thanks, just my coffee\"></ic-radio-option>\r\n</ic-radio-group>\r\n<script>\r\n  const radioGroup = document.querySelector(\"[name='radio-group-1']\");\r\n  radioGroup.addEventListener('icChange', (ev) => console.log(ev.detail.value));\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcRadioGroup name='radio-group-1' label=\"Add a free purchase with any hot drink\" onIcChange={(ev) => console.log(ev.detail.value)}>\r\n  <IcRadioOption value=\"crisps\" label=\"Crisps\" />\r\n  <IcRadioOption\r\n    value=\"cookie\"\r\n    label=\"Deluxe chocolate chip cookie (sold out)\"\r\n    disabled\r\n    inactive\r\n  />\r\n  <IcRadioOption value=\"fruit\" label=\"Banana\" />\r\n  <IcRadioOption value=\"No item\" label=\"No thanks, just my coffee\" />\r\n</IcRadioGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ marginTop: \"24px\" }} snippets={snippets}>\r\n  <IcRadioGroup\r\n    name=\"radio-group-1\"\r\n    label=\"Add a free purchase with any hot drink\"\r\n    onIcChange={(ev) => console.log(ev.detail.value)}\r\n  >\r\n    <IcRadioOption value=\"crisps\" label=\"Crisps\" />\r\n    <IcRadioOption\r\n      value=\"cookie\"\r\n      label=\"Deluxe chocolate chip cookie (sold out)\"\r\n      disabled\r\n      inactive\r\n    />\r\n    <IcRadioOption value=\"fruit\" label=\"Banana\" />\r\n    <IcRadioOption value=\"No item\" label=\"No thanks, just my coffee\" />\r\n  </IcRadioGroup>\r\n</ComponentPreview>\r\n\r\n## Radio group details\r\n\r\n<ComponentDetails component=\"ic-radio-group\" />\r\n\r\n## Radio option details\r\n\r\n<ComponentDetails component=\"ic-radio-option\" />\r\n\r\n## Variants\r\n\r\n### Conditional\r\n\r\nexport const conditional = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-radio-group name='radio-group-2' label=\"Do you have any special requests?\">\r\n    <ic-radio-option value=\"request\" label=\"Yes, I want to modify my order\">\r\n      <ic-text-field\r\n        slot=\"additional-field\"\r\n        label=\"Please provide some additional information\"\r\n        placeholder=\"i.e Soya milk please\"\r\n      >\r\n      </ic-text-field>\r\n    </ic-radio-option>\r\n    <ic-radio-option value=\"none\" label=\"No, standard please\"></ic-radio-option>\r\n</ic-radio-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcRadioGroup name='radio-group-2' label=\"Do you have any special requests?\">\r\n    <IcRadioOption value=\"request\" label=\"Yes, I want to modify my order\">\r\n      <IcTextField\r\n        slot=\"additional-field\"\r\n        label=\"Please provide some additional information\"\r\n        placeholder=\"i.e Soya milk please\"\r\n      />\r\n    </IcRadioOption>\r\n    <IcRadioOption value=\"none\" label=\"No, standard please\" />\r\n</IcRadioGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ marginTop: \"24px\" }} snippets={conditional}>\r\n  <IcRadioGroup name=\"radio-group-2\" label=\"Do you have any special requests?\">\r\n    <IcRadioOption value=\"request\" label=\"Yes, I want to modify my order\">\r\n      <IcTextField\r\n        slot=\"additional-field\"\r\n        label=\"Please provide some additional information\"\r\n        placeholder=\"i.e Soya milk please\"\r\n      />\r\n    </IcRadioOption>\r\n    <IcRadioOption value=\"none\" label=\"No, standard please\" />\r\n  </IcRadioGroup>\r\n</ComponentPreview>\r\n\r\n### Conditional dynamic\r\n\r\nexport const conditionalDynamic = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-radio-group name='radio-group-3' label=\"Do you have any special requests?\">\r\n    <ic-radio-option value=\"request\" label=\"Yes, I want to modify my order\">\r\n      <ic-text-field\r\n        slot=\"additional-field\"\r\n        label=\"Please provide some additional information\"\r\n        placeholder=\"i.e Soya milk please\"\r\n      >\r\n    </ic-text-field>\r\n    </ic-radio-option>\r\n    <ic-radio-option value=\"none\" label=\"No, standard please\"></ic-radio-option>\r\n</ic-radio-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcRadioGroup name='radio-group-3' label=\"Do you have any special requests?\">\r\n    <IcRadioOption value=\"request\" label=\"Yes, I want to modify my order\">\r\n      <IcTextField\r\n        slot=\"additional-field\"\r\n        label=\"Please provide some additional information\"\r\n        placeholder=\"i.e Soya milk please\"\r\n      />\r\n    </IcRadioOption>\r\n    <IcRadioOption value=\"none\" label=\"No, standard please\" />\r\n</IcRadioGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={conditionalDynamic}>\r\n  <div style={{ width: \"300px\" }}>\r\n    <IcRadioGroup\r\n      name=\"radio-group-3\"\r\n      label=\"Do you have any special requests?\"\r\n    >\r\n      <IcRadioOption\r\n        additionalFieldDisplay=\"dynamic\"\r\n        value=\"request\"\r\n        label=\"Yes, I want to modify my order\"\r\n      >\r\n        <IcTextField\r\n          slot=\"additional-field\"\r\n          label=\"Please provide some additional information\"\r\n          placeholder=\"i.e Soya milk please\"\r\n        />\r\n      </IcRadioOption>\r\n      <IcRadioOption value=\"none\" label=\"No, standard please\" />\r\n    </IcRadioGroup>\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### With helper text\r\n\r\nexport const withHelperText = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-radio-group \r\n  label=\"Do you have any special requests?\" \r\n  helper-text=\"Let us know if you'd like an alternative to dairy milk.\"\r\n  name='radio-group-4'\r\n>\r\n  <ic-radio-option value=\"request\" label=\"Yes, I want to modify my order\"></ic-radio-option>\r\n  <ic-radio-option value=\"none\" label=\"No, standard please\"></ic-radio-option>\r\n</ic-radio-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcRadioGroup \r\n    label=\"Do you have any special requests?\" \r\n    helperText=\"Let us know if you'd like an alternative to dairy milk.\"\r\n    name='radio-group-4'\r\n>\r\n  <IcRadioOption value=\"request\" label=\"Yes, I want to modify my order\" />\r\n  <IcRadioOption value=\"none\" label=\"No, standard please\" />\r\n</IcRadioGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ marginTop: \"24px\" }} snippets={withHelperText}>\r\n  <IcRadioGroup\r\n    label=\"Do you have any special requests?\"\r\n    helperText=\"Let us know if you'd like an alternative to dairy milk.\"\r\n    name=\"radio-group-4\"\r\n  >\r\n    <IcRadioOption value=\"request\" label=\"Yes, I want to modify my order\" />\r\n    <IcRadioOption value=\"none\" label=\"No, standard please\" />\r\n  </IcRadioGroup>\r\n</ComponentPreview>\r\n\r\n### Size small\r\n\r\nexport const smallSnippet = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-radio-group \r\n  label=\"Do you have any special requests?\" \r\n  name='radio-group-5'\r\n  size=\"small\"\r\n>\r\n  <ic-radio-option value=\"request\" label=\"Yes, I want to modify my order\"></ic-radio-option>\r\n  <ic-radio-option value=\"none\" label=\"No, standard please\"></ic-radio-option>\r\n</ic-radio-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcRadioGroup \r\n    label=\"Do you have any special requests?\" \r\n    name='radio-group-5'\r\n    size=\"small\"\r\n>\r\n  <IcRadioOption value=\"request\" label=\"Yes, I want to modify my order\" />\r\n  <IcRadioOption value=\"none\" label=\"No, standard please\" />\r\n</IcRadioGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ marginTop: \"24px\" }} snippets={smallSnippet}>\r\n  <IcRadioGroup\r\n    label=\"Do you have any special requests?\"\r\n    name=\"radio-group-5\"\r\n    size=\"small\"\r\n  >\r\n    <IcRadioOption value=\"request\" label=\"Yes, I want to modify my order\" />\r\n    <IcRadioOption value=\"none\" label=\"No, standard please\" />\r\n  </IcRadioGroup>\r\n</ComponentPreview>\r\n\r\n### With validation\r\n\r\nexport const withValidation = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-radio-group name='radio-group-6' label=\"Do you have any special requests?\" validation-status=\"error\" validation-text=\"An answer to this question is required\" required=\"true\">\r\n  <ic-radio-option value=\"request\" label=\"Yes, I want to modify my order\"></ic-radio-option>\r\n  <ic-radio-option value=\"none\" label=\"No, standard please\"></ic-radio-option>\r\n</ic-radio-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcRadioGroup name='radio-group-6' label=\"Do you have any special requests?\" validationStatus=\"error\" validationText=\"An answer to this question is required\" required>\r\n  <IcRadioOption value=\"request\" label=\"Yes, I want to modify my order\" />\r\n  <IcRadioOption value=\"none\" label=\"No, standard please\" />\r\n</IcRadioGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ marginTop: \"24px\" }} snippets={withValidation}>\r\n  <IcRadioGroup\r\n    label=\"Do you have any special requests?\"\r\n    validationStatus=\"error\"\r\n    validationText=\"An answer to this question is required\"\r\n    required\r\n    name=\"radio-group-6\"\r\n  >\r\n    <IcRadioOption value=\"request\" label=\"Yes, I want to modify my order\" />\r\n    <IcRadioOption value=\"none\" label=\"No, standard please\" />\r\n  </IcRadioGroup>\r\n</ComponentPreview>\r\n",
      "path": "/components/radio/code",
      "date": "2024-01-18",
      "title": "Radio button",
      "status": "BETA",
      "subTitle": "Radio buttons let people select a single option from a list.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/radio",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/radio"
        },
        {
          "title": "Code",
          "path": "/components/radio/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/radio/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\radio\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.092Z",
        "lastModified": "2024-04-04T12:41:44.092Z",
        "size": 9641,
        "formattedSize": "9.4 KB"
      }
    },
    {
      "id": "components\\radio\\guidancex",
      "contents": "\r\nimport { IcRadioGroup, IcRadioOption } from \"@ukic/react\";\r\nimport radioFig1 from \"./images/fig-1-do-not-use-a-radio-button-group-to-allow-multiple-selected-options-from-a-list.png\";\r\nimport radioFig2 from \"./images/fig-2-use-a-checkbox-group-to-allow-multiple-sections-from-a-list.png\";\r\nimport radioFig3 from \"./images/fig-3-do-not-use-radio-buttons-to-turn-something-on-or-off.png\";\r\nimport radioFig4 from \"./images/fig-4-use-a-switch-to-toggle-something-on-or-off.png\";\r\nimport radioFig5 from \"./images/fig-5-always-display-radio-buttons-as-a-stack-when-there-are-more-than-two-options.png\";\r\nimport radioFig6 from \"./images/fig-6-do-not-display-radio-groups-with-more-than-two-options-in-a-row.png\";\r\nimport radioFig7 from \"./images/fig-7-display-radio-buttons-as-a-stack-or-in-a-row-when-radio-groups-have-two-options.png\";\r\nimport radioFig8 from \"./images/fig-8-when-there-is-an-issue-show-an-error-message-next-to-the-entire-radio-group.png\";\r\nimport radioFig9 from \"./images/fig-9-error-validation-shown-correctly-on-the-field-causing-the-error.png\";\r\nimport radioFig10 from \"./images/fig-10-only-display-the-error-on-the-field-causing-it.png\";\r\n\r\n## Introduction\r\n\r\nAn example of the radio button component.\r\n\r\n<ComponentPreview style={{ marginTop: \"24px\" }}>\r\n  <IcRadioGroup label=\"Add a free purchase with any hot drink\" name=\"snacks\">\r\n    <IcRadioOption value=\"crisps\" label=\"Crisps\" />\r\n    <IcRadioOption\r\n      value=\"cookie\"\r\n      label=\"Deluxe chocolate chip cookie (sold out)\"\r\n      disabled\r\n      inactive\r\n    />\r\n    <IcRadioOption value=\"fruit\" label=\"Banana\" />\r\n    <IcRadioOption value=\"No item\" label=\"No thanks, just my coffee\" />\r\n  </IcRadioGroup>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse radio buttons in a radio button group to present a set of selectable options.\r\n\r\nUse radio buttons when only one option can be selected from a list.\r\n\r\nUse a radio button with a conditional field to display a related additional element when that radio button is selected. The conditional field can be set to static so that it is always visible and becomes enabled once the radio button is selected. If the conditional field is set to dynamic the field is only displayed when the radio button is selected.\r\n\r\n## When not to use\r\n\r\nDon’t use radio buttons on their own, they should always appear as part of a radio button group.\r\n\r\nDon’t use radio buttons when the user can select multiple options from the list. Use [checkboxes](/components/checkbox) instead.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={radioFig1}\r\n    imageAlt=\"A radio button group titled ‘What are your favourite coffees?’ with two out of six radio buttons showing as selected.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t use a radio button group to allow multiple selected options from a list.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={radioFig2}\r\n    imageAlt=\"A checkbox group titled ‘What are your favourite coffees?’ with two out of six checkboxes selected.\"\r\n    state=\"good\"\r\n    caption=\"Use a checkbox group to allow multiple sections from a list.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nDon’t use radio buttons to turn something on or off. Use a [switch](/components/switch) instead.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={radioFig3}\r\n    imageAlt=\"A two option radio button group with the label ‘Turn on the coffee machine?’ with options for ‘On’ and ‘Off’.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t use radio buttons to turn something on or off.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={radioFig4}\r\n    imageAlt=\"Two switches under the heading 'equipment'. One switch is toggled on whilst the other is off.\"\r\n    state=\"good\"\r\n    caption=\"Use a switch to toggle something on or off.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Interaction behaviour\r\n\r\nIn most circumstances, set a default selected option from a radio button group to help people understand that something must be selected, and to expedite the completion of the input using the commonly preferred option.\r\n\r\nAlternatively, use a radio button group without a default selected option to force people to select an option before moving on. This eliminates bias towards a single option and avoids people skipping over the question by leaving the default selection.\r\n\r\n### Sizing\r\n\r\nUse small sized radio button groups to achieve compact layouts. Always use small sized components with other small sized components.\r\n\r\n### Layout and placement\r\n\r\nStack radio buttons when there are more than two options.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={radioFig5}\r\n    imageAlt=\"A radio button group titled ‘What milk would you like?’ with three radio buttons for ‘dairy’, ‘soya’ and ‘nut’ stacked vertically.\"\r\n    state=\"good\"\r\n    caption=\"Always display radio buttons as a stack when there are more than two options.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={radioFig6}\r\n    imageAlt=\"A radio button group asking ‘What milk would you like?’ and showing three options for ‘Dairy’, ‘Soya’  and ‘Nut’ displayed in a row.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t display radio button groups with more than two options in a row.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nIf there are only two options, you can display them either stacked or in a row.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={radioFig7}\r\n    imageAlt=\"A radio button group asking ‘Would you like a coffee?’ with radio buttons for ‘Yes’ and ‘No’ displayed in a row. A second radio button group asking ‘What milk would you like?’ with radio buttons for ‘Dairy’ and ‘Soya’ displayed stacked.\"\r\n    state=\"good\"\r\n    caption=\"Display radio buttons as a stack or in a row when radio button groups have two options.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n### Validation\r\n\r\nThere are two types of error that can occur on a radio button: a radio button input error or an error on a radio button's conditional field.\r\n\r\nA radio button input error is when the radio button group itself is responsible for the error. This is shown using the radio button error state.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={radioFig8}\r\n    imageAlt=\"A radio button group displayed with no radio button selected with an error message reading ‘Please select an option’.\"\r\n    state=\"good\"\r\n    caption=\"When there’s an issue show an error message next to the entire radio button group.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nFor errors on a radio button’s conditional field, the error is shown only on the conditional field itself and not on the parent radio button group component.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={radioFig9}\r\n    imageAlt=\"A graphic showing a radio button group with four options and an error reading ‘Answer required’ displayed with an empty input field that is a conditional field of one of the radio buttons.\"\r\n    state=\"good\"\r\n    caption=\"Error validation shown correctly on the field causing the error.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={radioFig10}\r\n    imageAlt=\"A graphic showing two error labels incorrectly applied to a radio button group. One error reading ‘Answer required’ is displayed with an empty input field that is the conditional field of a radio button. The other error, also reading ‘Answer required’ is displayed with the whole radio button group.\"\r\n    state=\"bad\"\r\n    caption=\"Only display the error on the field causing it. Don’t display an error on the field as well as the radio group.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Content\r\n\r\n### Labels\r\n\r\nFollow the [content style guidelines](/styles/content-style) for radio button group labels as well as each individual radio button label. Use the radio button group label to ask the question, and use the radio button labels to provide possible answers.\r\n\r\n## Related components\r\n\r\n- [Checkbox](/components/checkbox)\r\n",
      "path": "/components/radio",
      "navPriority": 25,
      "date": "2023-02-03",
      "title": "Radio button",
      "status": "BETA",
      "subTitle": "Radio buttons let people select a single option from a list.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/radio",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/radio"
        },
        {
          "title": "Code",
          "path": "/components/radio/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/radio/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\radio\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.009Z",
        "lastModified": "2024-06-04T07:48:35.009Z",
        "size": 8448,
        "formattedSize": "8.3 KB"
      }
    },
    {
      "id": "components\\search-bar\\accessibilityx",
      "contents": "\r\nimport searchBarFig7 from \"./images/fig-7-correct-tab-order.png\";\r\n\r\n## Easy to use for everyone\r\n\r\nPlacing a close button within the search field when input has been added enhances the accessibility of the component, allowing users to easily remove input and correct their search query without performing multiple actions. Including a visible search button as well as having an associated event with the input field provides multiple ways to search using the keyboard as well as the mouse.\r\n\r\nThe search variant that shows suggested options provides additional help from an accessibility perspective as it allows users to perform searches quickly without needing to fully enter their input. This is a form of autocomplete and has been made accessible using the keyboard, including **Home** and **End**, as well as the **Esc** key. This is also configured so when there isn’t enough space in the viewport for the dropdown list to fully display beneath the dropdown bar, it's displayed above the input bar.\r\n\r\nThe focus order through the search field internal elements is as follows:\r\n\r\n1. The search field and its option list.\r\n2. The clear button (if visible).\r\n3. The search button (if enabled).\r\n\r\nKeyboard users can move focus through options in the drop list using the arrow keys, whilst they can still type into the field to change their search term.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={searchBarFig7}\r\n    imageAlt=\"A graphic highlighting the tab order between elements in a search field. The search input is annotated with a '1', the close buttons with a '2', and the search button with a '3'.\"\r\n    state=\"none\"\r\n    caption=\"Focus is applied first to the input field and its option list, then moves to the close button if visible and search button.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nThe first item in the drop list is focused by default so that if a user clicked the search button or the enter button, the associated action with that option would be triggered. This might be a link to a page, or filling the search field with the selected suggestion.\r\n\r\n## For Assistive Technology\r\n\r\nWhen focus is received on the component, the screen-reader will announce a hint explaining how you can move up and down in the dropdown list using the **up**/**down** arrow keys.\r\n\r\nWhen the search is complete, an `aria-live` announcement is used to announce the number of results in the list.\r\n\r\n## Based on\r\n\r\nThe search bar component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://a11y-guidelines.orange.com/en/articles/autocomplete-component/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Best practices for the accessibility of an autocompletion component\r\n    </ic-link>\r\n    , Orange, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.a11ymatters.com/pattern/accessible-search/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Accessible Search Form\r\n    </ic-link>\r\n    , a11ymatters, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/search_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      ARIA: search role\r\n    </ic-link>\r\n    , MDN web docs, accessed July 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/search-bar/accessibility",
      "date": "2024-04-15",
      "title": "Search bar",
      "status": "BETA",
      "subTitle": "The search bar allows users to search for information using keywords or phrases.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/search-bar",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/search-bar"
        },
        {
          "title": "Code",
          "path": "/components/search-bar/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/search-bar/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\search-bar\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.333Z",
        "lastModified": "2024-05-20T13:20:43.333Z",
        "size": 4091,
        "formattedSize": "4.0 KB"
      }
    },
    {
      "id": "components\\search-bar\\codex",
      "contents": "\r\nimport { IcSearchBar, IcTypography } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-search-bar label=\"What is your favourite coffee?\"></ic-search-bar>\r\n<script>\r\n  const searchBar = document.querySelector(\"ic-search-bar\");\r\n  searchBar.options = [\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n  searchBar.addEventListener('icChange', (ev) => console.log(ev.detail.value));\r\n  searchBar.addEventListener('icSubmitSearch', (ev) => console.log(ev.detail.value))\r\n  placeholder=\"Start typing to search…\"\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSearchBar \r\n  label=\"What is your favourite coffee?\"\r\n  options={[\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ]}\r\n  onIcChange={(ev) => console.log(ev.detail.value)}\r\n  onIcSubmitSearch={(ev) => console.log(ev.detail.value)}\r\n  placeholder=\"Start typing to search…\"\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <IcSearchBar\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      { label: \"Espresso\", value: \"espresso\" },\r\n      { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n      { label: \"Flat White\", value: \"flatwhite\" },\r\n      { label: \"Cappuccino\", value: \"cappuccino\" },\r\n      { label: \"Americano\", value: \"americano\" },\r\n      { label: \"Mocha\", value: \"mocha\" },\r\n    ]}\r\n    onIcChange={(ev) => console.log(\"onIcChange\", ev.detail.value)}\r\n    onIcSubmitSearch={(ev) => console.log(\"onIcSubmitSearch\", ev.detail.value)}\r\n    placeholder=\"Start typing to search…\"\r\n  />\r\n</ComponentPreview>\r\n\r\n## Search bar details\r\n\r\n<ComponentDetails component=\"ic-search-bar\" />\r\n\r\n## Variants\r\n\r\n### With options (no filtering)\r\n\r\nexport const optionsNoFiltering = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-search-bar placeholder=\"Start typing to search…\"\r\n  label=\"What is your favourite coffee?\"\r\n  disable-filter=\"true\"\r\n>\r\n</ic-search-bar>\r\n<br>\r\n<ic-typography>\r\n  All options will be displayed as you type\r\n</ic-typography>\r\n<script>\r\n  document.querySelector(\"ic-search-bar\").options = [\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSearchBar placeholder=\"Start typing to search…\"\r\n  label=\"What is your favourite coffee?\"\r\n  disableFilter\r\n  options={[\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ]}\r\n/>\r\n<br/>\r\n<IcTypography>All options will be displayed as you type</IcTypography>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={optionsNoFiltering}\r\n  style={{ flexDirection: \"column\", alignItems: \"center\" }}\r\n>\r\n  <IcSearchBar\r\n    placeholder=\"Start typing to search…\"\r\n    label=\"What is your favourite coffee?\"\r\n    disableFilter\r\n    options={[\r\n      { label: \"Espresso\", value: \"espresso\" },\r\n      { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n      { label: \"Flat White\", value: \"flatwhite\" },\r\n      { label: \"Cappuccino\", value: \"cappuccino\" },\r\n      { label: \"Americano\", value: \"americano\" },\r\n      { label: \"Mocha\", value: \"mocha\" },\r\n    ]}\r\n  />\r\n  <br />\r\n  <IcTypography variant=\"p\">\r\n    All options will be displayed as you type\r\n  </IcTypography>\r\n</ComponentPreview>\r\n\r\n### With helper text\r\n\r\nexport const withHelperText = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-search-bar placeholder=\"Start typing to search…\"\r\n  label=\"What is your favourite coffee?\"\r\n  helper-text=\"Coffee options will be displayed as you type.\"\r\n>\r\n</ic-search-bar>\r\n<script>\r\n  document.querySelector(\"ic-search-bar\").options = [\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSearchBar placeholder=\"Start typing to search…\"\r\n  label=\"What is your favourite coffee?\"\r\n  helperText=\"Coffee options will be displayed as you type.\"\r\n  options={[\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ]}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={withHelperText}>\r\n  <IcSearchBar\r\n    placeholder=\"Start typing to search…\"\r\n    label=\"What is your favourite coffee?\"\r\n    helperText=\"Coffee options will be displayed as you type.\"\r\n    options={[\r\n      { label: \"Espresso\", value: \"espresso\" },\r\n      { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n      { label: \"Flat White\", value: \"flatwhite\" },\r\n      { label: \"Cappuccino\", value: \"cappuccino\" },\r\n      { label: \"Americano\", value: \"americano\" },\r\n      { label: \"Mocha\", value: \"mocha\" },\r\n    ]}\r\n  />\r\n</ComponentPreview>\r\n\r\n### With hidden label\r\n\r\nexport const withHiddenLabel = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-search-bar placeholder=\"Start typing to search…\" label=\"What is your favourite coffee?\" hide-label=\"true\"\r\n>\r\n</ic-search-bar>\r\n<script>\r\n  const searchBar = document.querySelector(\"ic-search-bar\");\r\n  searchBar.options = [\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSearchBar placeholder=\"Start typing to search…\"\r\n  label=\"What is your favourite coffee?\"\r\n  hideLabel\r\n  options={[\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ]}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={withHiddenLabel}>\r\n  <IcSearchBar\r\n    placeholder=\"Start typing to search…\"\r\n    label=\"What is your favourite coffee?\"\r\n    hideLabel\r\n    options={[\r\n      { label: \"Espresso\", value: \"espresso\" },\r\n      { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n      { label: \"Flat White\", value: \"flatwhite\" },\r\n      { label: \"Cappuccino\", value: \"cappuccino\" },\r\n      { label: \"Americano\", value: \"americano\" },\r\n      { label: \"Mocha\", value: \"mocha\" },\r\n    ]}\r\n  />\r\n</ComponentPreview>\r\n\r\n### Disabled\r\n\r\nexport const disabled = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-search-bar label=\"What is your favourite coffee?\" disabled=\"true\"\r\n>\r\n</ic-search-bar>\r\n<script>\r\n  const searchBar = document.querySelector(\"ic-search-bar\");\r\n  searchBar.options = [\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSearchBar\r\n  label=\"What is your favourite coffee?\"\r\n  disabled\r\n  options={[\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ]}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={disabled}>\r\n  <IcSearchBar\r\n    label=\"What is your favourite coffee?\"\r\n    disabled\r\n    options={[\r\n      { label: \"Espresso\", value: \"espresso\" },\r\n      { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n      { label: \"Flat White\", value: \"flatwhite\" },\r\n      { label: \"Cappuccino\", value: \"cappuccino\" },\r\n      { label: \"Americano\", value: \"americano\" },\r\n      { label: \"Mocha\", value: \"mocha\" },\r\n    ]}\r\n  />\r\n</ComponentPreview>\r\n\r\n### Size small\r\n\r\nexport const sizeSmall = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-search-bar label=\"What is your favourite coffee?\" size=\"small\"\r\n>\r\n</ic-search-bar>\r\n<script>\r\n  const searchBar = document.querySelector(\"ic-search-bar\");\r\n  searchBar.options = [\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSearchBar\r\n  label=\"What is your favourite coffee?\"\r\n  size=\"small\"\r\n  options={[\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ]}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={sizeSmall}>\r\n  <IcSearchBar\r\n    label=\"What is your favourite coffee?\"\r\n    size=\"small\"\r\n    options={[\r\n      { label: \"Espresso\", value: \"espresso\" },\r\n      { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n      { label: \"Flat White\", value: \"flatwhite\" },\r\n      { label: \"Cappuccino\", value: \"cappuccino\" },\r\n      { label: \"Americano\", value: \"americano\" },\r\n      { label: \"Mocha\", value: \"mocha\" },\r\n    ]}\r\n  />\r\n</ComponentPreview>\r\n\r\n## Custom filtering example\r\n\r\nThis example shows how to filter data asynchronously when the value in the input field changes. The data is mocked and displayed after a one second delay, but could be replaced with a call to an API or database.\r\n\r\nexport const customFiltering = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-search-bar placeholder=\"Start typing to search…\"\r\n  label=\"What is your favourite coffee?\" \r\n  debounce=\"300\" \r\n  disable-filter=\"true\">\r\n</ic-search-bar>\r\n<script>\r\n  var mockData = [\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappucino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n  var select = document.querySelector(\"ic-search-bar\");\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    const searchFor = event.detail.value;\r\n    if (searchFor.length > 1) {\r\n      mockAPI = (query) => {\r\n        filteredResults = mockData.filter((item) =>\r\n          item.label.toLowerCase().includes(query.toLowerCase())\r\n        );\r\n        return new Promise((resolve) => {\r\n          setTimeout(() => resolve(filteredResults), 1000)\r\n        });\r\n      };\r\n      mockAPI(searchFor).then((newResults) => { select.options = newResults });\r\n    } else {\r\n      select.options = [];\r\n    }\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const mockData = [\r\n  { label: \"Espresso\", value: \"espresso\" },\r\n  { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n  { label: \"Flat White\", value: \"flatwhite\" },\r\n  { label: \"Cappuccino\", value: \"cappucino\" },\r\n  { label: \"Americano\", value: \"americano\" },\r\n  { label: \"Mocha\", value: \"mocha\" },\r\n];\r\nconst [results, setResults] = useState([]);\r\nconst changeHandler = (event) =>{\r\n  const searchFor = event.detail.value;\r\n  if (searchFor.length > 1) {\r\n    const mockAPI = (query) => {\r\n      const filteredResults = mockData.filter((item) =>\r\n        item.label.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n      return new Promise((resolve) => {\r\n        setTimeout(() => resolve(filteredResults), 1000);\r\n      });\r\n    };\r\n    mockAPI(searchFor).then((newResults) => setResults(newResults));\r\n  } else {\r\n    setResults([]);\r\n  }\r\n}\r\nreturn(\r\n<>\r\n  <IcSearchBar placeholder=\"Start typing to search…\" label=\"What is your favourite coffee?\"\r\n    debounce=\"300\"\r\n    disableFilter\r\n    options={results}\r\n    onIcChange={changeHandler}\r\n  />\r\n</>\r\n);`,\r\n  },\r\n];\r\n\r\nexport const CustomFilterExample = () => {\r\n  const mockData = [\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappucino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n  const [results, setResults] = React.useState([]);\r\n  const changeHandler = (event) => {\r\n    const searchFor = event.detail.value;\r\n    if (searchFor.length > 1) {\r\n      const mockAPI = (query) => {\r\n        const filteredResults = mockData.filter((item) =>\r\n          item.label.toLowerCase().includes(query.toLowerCase())\r\n        );\r\n        return new Promise((resolve) => {\r\n          setTimeout(() => resolve(filteredResults), 1000);\r\n        });\r\n      };\r\n      mockAPI(searchFor).then((newResults) => setResults(newResults));\r\n    } else {\r\n      setResults([]);\r\n    }\r\n  };\r\n  return (\r\n    <IcSearchBar\r\n      placeholder=\"Start typing to search…\"\r\n      label=\"What is your favourite coffee?\"\r\n      debounce=\"300\"\r\n      disableFilter\r\n      options={results}\r\n      onIcChange={changeHandler}\r\n    />\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={customFiltering}>\r\n  <CustomFilterExample />\r\n</ComponentPreview>\r\n",
      "path": "/components/search-bar/code",
      "date": "2024-02-02",
      "title": "Search bar",
      "status": "BETA",
      "subTitle": "The search bar allows users to search for information using keywords or phrases.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/search-bar",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/search-bar"
        },
        {
          "title": "Code",
          "path": "/components/search-bar/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/search-bar/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\search-bar\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.108Z",
        "lastModified": "2024-04-04T12:41:44.108Z",
        "size": 15192,
        "formattedSize": "14.8 KB"
      }
    },
    {
      "id": "components\\search-bar\\guidancex",
      "contents": "\r\nimport { IcSearchBar } from \"@ukic/react\";\r\nimport searchBarFig1 from \"./images/fig-1-dont-display-large-numbers-of-search-results-in-droplist.png\";\r\nimport searchBarFig3 from \"./images/fig-3-search-field-with-helpful-placeholder.png\";\r\nimport searchBarFig4 from \"./images/fig-4-search-field-with-unhelpful-placeholder.png\";\r\nimport searchBarFig5 from \"./images/fig-5-suggested-options-loading-state.png\";\r\nimport searchBarFig6 from \"./images/fig-6-suggested-options-empty-state.png\";\r\n\r\n## Introduction\r\n\r\nAn example of the search bar component.\r\n\r\n<ComponentPreview>\r\n  <IcSearchBar\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      { label: \"Espresso\", value: \"espresso\" },\r\n      { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n      { label: \"Flat White\", value: \"flatwhite\" },\r\n      { label: \"Cappuccino\", value: \"cappuccino\" },\r\n      { label: \"Americano\", value: \"americano\" },\r\n      { label: \"Mocha\", value: \"mocha\" },\r\n    ]}\r\n    onIcChange={(ev) => console.log(\"onIcChange\", ev.detail.value)}\r\n    onIcSubmitSearch={(ev) => console.log(\"onIcSubmitSearch\", ev.detail.value)}\r\n    placeholder=\"Start typing to search…\"\r\n  />\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\n### Search bar with results\r\n\r\nUse the search bar with search results for automatically displaying search results relating to the input query in the input field. Use this for searching through a known data set, such as a site search displaying individual pages as the search results (like the search on this website).\r\n\r\nSearch for an ‘espresso’ below in the search bar example.\r\n\r\n<ComponentPreview>\r\n  <IcSearchBar\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      { label: \"Espresso\", value: \"espresso\" },\r\n      { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n      { label: \"Flat White\", value: \"flatwhite\" },\r\n      { label: \"Cappuccino\", value: \"cappuccino\" },\r\n      { label: \"Americano\", value: \"americano\" },\r\n      { label: \"Mocha\", value: \"mocha\" },\r\n    ]}\r\n  />\r\n</ComponentPreview>\r\n\r\n### Search bar with suggested options\r\n\r\nUse the search bar with suggested options to provide search term suggestions in the drop-list. Use this type of search when you don't want to show actual search results, but instead possible or common search terms that will form the search query when submitted.\r\n\r\nUsers may select a suggested option or they may continue with searching on the term they have entered.\r\n\r\nWhen displaying suggested options, order them in the most helpful way and use the same formatting for each option presented.\r\n\r\n### Search bar only\r\n\r\nUse a search bar without a drop-list when you want to handle the search operation yourself. Use this to capture a search term and then direct a user to a custom search results page for the input query.\r\n\r\n<ComponentPreview>\r\n  <IcSearchBar label=\"What is your favourite coffee?\" />\r\n</ComponentPreview>\r\n\r\n## When not to use\r\n\r\nDon't use a search bar with search results if you are likely to need additional filters and advanced search settings. It's better to use a search bar with a custom search results page in this case.\r\n\r\nTake care when using a search bar with search results when you have large, complex data sets that take time to load. This can cause excessive loading times and it's best to use a custom search results page to handle and display large numbers of results.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={searchBarFig1}\r\n    imageAlt=\"A search bar with a large number of results causing long scroll length.\"\r\n    state=\"bad\"\r\n    caption=\"Avoid showing long lists of results in a search bar's search results.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nDon't use a search bar on its own, or a search bar with suggested options, if you don't have a method of displaying the results. Always include a search results page if you aren't using the search bar with search results.\r\n\r\n## Sizing\r\n\r\nUse the default and small size options for search bars to match their size to other components in your app.\r\n\r\n## Content\r\n\r\nUse clear and specific placeholder text that informs the user on the context and scope of the search.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={searchBarFig3}\r\n    imageAlt=\"An example of helpful search placeholder text outlining 'search coffee drinks'.\"\r\n    state=\"good\"\r\n    caption=\"Use helpful placeholder text within a search bar to describe what the user is searching for.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={searchBarFig4}\r\n    imageAlt=\"An example of unhelpful search placeholder text outlining 'coffee'.\"\r\n    state=\"bad\"\r\n    caption=\"Don't use generic placeholder text.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nFor searches that take time to load results or suggestions, display the loading state whilst the search is loading. Use the empty state for searches that have no results or suggested options.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={searchBarFig5}\r\n    imageAlt=\"A search bar with an entered search term that displays a loading indicator whilst the search is occurring.\"\r\n    state=\"good\"\r\n    caption=\"Use the loading state whilst results load.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={searchBarFig6}\r\n    imageAlt=\"A search bar with an entered search term that has no search results.\"\r\n    state=\"good\"\r\n    caption=\"Tell the user when their search term yields no results.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n",
      "path": "/components/search-bar",
      "navPriority": 26,
      "date": "2023-02-03",
      "title": "Search bar",
      "status": "BETA",
      "subTitle": "A search bar is a special input field that allows users to search for information using keywords or phrases.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/search-bar",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/search-bar"
        },
        {
          "title": "Code",
          "path": "/components/search-bar/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/search-bar/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\search-bar\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.010Z",
        "lastModified": "2024-06-04T07:48:35.010Z",
        "size": 5980,
        "formattedSize": "5.8 KB"
      }
    },
    {
      "id": "components\\section-container\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nSection containers align content on the page, which helps to form a constant edge from which to read from. This aids swift readability as a user can scan back to the same position to start the next line of content. It supports standard reading scanning patterns by creating a consistent baseline.\r\n\r\nThe width of a section container is contrained to a maximum width on large devices in order to keep the line length to a readable size.\r\n\r\nConsistent alignment also reduces cognitive load when trying to understand content on a page and helps to associate elements to one another through proximity and symmetry.\r\n\r\n## Based on\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://nngroup.com\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Text Scanning Patterns: Eyetracking Evidence (nngroup.com)\r\n    </ic-link>\r\n    , accessed December 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://interaction-design.org\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      What are the Gestalt Principles? | IxDF (interaction-design.org)\r\n    </ic-link>\r\n    , accessed December 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/section-container/accessibility",
      "date": "2024-04-15",
      "title": "Section container",
      "status": "BETA",
      "subTitle": "Use the section container component to consistently align content within an app.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/section-container",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/section-container"
        },
        {
          "title": "Code",
          "path": "/components/section-container/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/section-container/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\section-container\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:35.011Z",
        "lastModified": "2024-06-04T07:48:35.011Z",
        "size": 1980,
        "formattedSize": "1.9 KB"
      }
    },
    {
      "id": "components\\section-container\\codex",
      "contents": "\r\nimport { IcChip, IcSectionContainer } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-section-container style=\"border:1px solid black\">\r\n    <div style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"8px\", gap: \"8px\" }}>\r\n      <ic-chip label=\"Americano\"/>\r\n      <ic-chip label=\"Cappuccino\"/>\r\n      <ic-chip label=\"Latte\"/>\r\n    </div>\r\n</ic-section-container>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSectionContainer style={{ border: \"1px solid black\" }}>\r\n    <div style={{ display: \"flex\", padding: \"8px\", gap: \"8px\" }}>\r\n      <IcChip label=\"Americano\"/>\r\n      <IcChip label=\"Cappuccino\"/>\r\n      <IcChip label=\"Latte\"/>\r\n    </div>\r\n</IcSectionContainer>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDefault} style={{ display: \"contents\" }}>\r\n  <IcSectionContainer style={{ border: \"1px solid black\" }}>\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"8px\",\r\n        gap: \"8px\",\r\n      }}\r\n    >\r\n      <IcChip label=\"Americano\" />\r\n      <IcChip label=\"Cappuccino\" />\r\n      <IcChip label=\"Latte\" />\r\n    </div>\r\n  </IcSectionContainer>\r\n</ComponentPreview>\r\n\r\n## Section container details\r\n\r\n<ComponentDetails component=\"ic-section-container\" />\r\n\r\n## Variants\r\n\r\n### Center align\r\n\r\nexport const snippetsCenter = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-section-container\r\n  aligned=\"center\"\r\n  style=\"border:1px solid black\"\r\n>\r\n  <div style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"8px\", gap: \"8px\" }}>\r\n      <ic-chip label=\"Americano\"/>\r\n      <ic-chip label=\"Cappuccino\"/>\r\n      <ic-chip label=\"Latte\"/>\r\n    </div>\r\n</ic-section-container>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSectionContainer\r\n  aligned=\"center\"\r\n  style={{ border: \"1px solid black\" }}\r\n>\r\n  <div style={{ display: \"flex\", padding: \"8px\", gap: \"8px\" }}>\r\n      <IcChip label=\"Americano\"/>\r\n      <IcChip label=\"Cappuccino\"/>\r\n      <IcChip label=\"Latte\"/>\r\n  </div>\r\n</IcSectionContainer>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsCenter}>\r\n  <IcSectionContainer aligned=\"center\" style={{ border: \"1px solid black\" }}>\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"8px\",\r\n        gap: \"8px\",\r\n      }}\r\n    >\r\n      <IcChip label=\"Americano\" />\r\n      <IcChip label=\"Cappuccino\" />\r\n      <IcChip label=\"Latte\" />\r\n    </div>\r\n  </IcSectionContainer>\r\n</ComponentPreview>\r\n\r\n### Full-width align\r\n\r\nexport const snippetsFullWidth = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-section-container\r\n  aligned=\"full-width\"\r\n  style=\"border:1px solid black\"\r\n>\r\n  <div style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"8px\", gap: \"8px\" }}>\r\n      <ic-chip label=\"Americano\"/>\r\n      <ic-chip label=\"Cappuccino\"/>\r\n      <ic-chip label=\"Latte\"/>\r\n  </div>\r\n</ic-section-container>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSectionContainer \r\n  aligned=\"full-width\"\r\n  style={{ border: \"1px solid black\" }}\r\n>\r\n  <div style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"8px\", gap: \"8px\" }}>\r\n      <IcChip label=\"Americano\"/>\r\n      <IcChip label=\"Cappuccino\"/>\r\n      <IcChip label=\"Latte\"/>\r\n  </div>\r\n</IcSectionContainer>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsFullWidth} style={{ display: \"block\" }}>\r\n  <IcSectionContainer\r\n    style={{ border: \"1px solid black\" }}\r\n    aligned=\"full-width\"\r\n  >\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"8px\",\r\n        gap: \"8px\",\r\n      }}\r\n    >\r\n      <IcChip label=\"Americano\" />\r\n      <IcChip label=\"Cappuccino\" />\r\n      <IcChip label=\"Latte\" />\r\n    </div>\r\n  </IcSectionContainer>\r\n</ComponentPreview>\r\n\r\n### Full height\r\n\r\nexport const snippetsFullHeight = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-section-container\r\n  aligned=\"center\"\r\n  full-height=\"true\"\r\n  style=\"border:1px solid black\"\r\n>\r\n  <div style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"8px\", gap: \"8px\" }}>\r\n      <ic-chip label=\"Americano\"/>\r\n      <ic-chip label=\"Cappuccino\"/>\r\n      <ic-chip label=\"Latte\"/>\r\n  </div>\r\n</ic-section-container>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSectionContainer \r\n  aligned=\"center\"\r\n  fullHeight\r\n  style={{ border: \"1px solid black\" }}\r\n>\r\n  <div style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"8px\", gap: \"8px\" }}>\r\n      <IcChip label=\"Americano\"/>\r\n      <IcChip label=\"Cappuccino\"/>\r\n      <IcChip label=\"Latte\"/>\r\n  </div>\r\n</IcSectionContainer>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsFullHeight}>\r\n  <IcSectionContainer\r\n    aligned=\"center\"\r\n    fullHeight\r\n    style={{ border: \"1px solid black\" }}\r\n  >\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"8px\",\r\n        gap: \"8px\",\r\n      }}\r\n    >\r\n      <IcChip label=\"Americano\" />\r\n      <IcChip label=\"Cappuccino\" />\r\n      <IcChip label=\"Latte\" />\r\n    </div>\r\n  </IcSectionContainer>\r\n</ComponentPreview>\r\n",
      "path": "/components/section-container/code",
      "date": "2024-02-02",
      "title": "Section container",
      "status": "BETA",
      "subTitle": "Use the section container component to consistently align content within an app.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/section-container",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/section-container"
        },
        {
          "title": "Code",
          "path": "/components/section-container/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/section-container/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\section-container\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.108Z",
        "lastModified": "2024-04-04T12:41:44.108Z",
        "size": 5824,
        "formattedSize": "5.7 KB"
      }
    },
    {
      "id": "components\\section-container\\guidancex",
      "contents": "\r\nimport { IcChip, IcSectionContainer } from \"@ukic/react\";\r\nimport image1 from \"./images/Fig-1-section-containers-align-content.png\";\r\nimport image2 from \"./images/Fig-2-full-height-example.png\";\r\nimport image3 from \"./images/Fig-3-section-containers-align-centre.png\";\r\nimport image4 from \"./images/Fig-4-section-containers-align-left.png\";\r\nimport image5 from \"./images/Fig-5-section-containers-align-full-width.png\";\r\n\r\n## Introduction\r\n\r\nWhen creating a page, use section containers to group content and align the margins with each other as well as other ICDS components.\r\n\r\nSection containers are used in ICDS components to control alignment of their content. The following components use section containers with the specified alignments.\r\n\r\n- [Top navigation](/components/top-navigation): Full-width section container.\r\n- [Footer](/components/footer): Full-width section container.\r\n- [Hero](/components/hero): Centred section container.\r\n- [Page header](/components/page-header): Centred section container.\r\n\r\n## Component demo\r\n\r\n<ComponentPreview style={{ display: \"contents\" }}>\r\n  <IcSectionContainer style={{ border: \"1px solid black\" }} aligned=\"center\">\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"8px\",\r\n        gap: \"8px\",\r\n      }}\r\n    >\r\n      <IcChip label=\"Americano\" />\r\n      <IcChip label=\"Cappuccino\" />\r\n      <IcChip label=\"Latte\" />\r\n    </div>\r\n  </IcSectionContainer>\r\n  <br />\r\n  <IcSectionContainer style={{ border: \"1px solid black\" }}>\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"8px\",\r\n        gap: \"8px\",\r\n      }}\r\n    >\r\n      <IcChip label=\"Americano\" />\r\n      <IcChip label=\"Cappuccino\" />\r\n      <IcChip label=\"Latte\" />\r\n    </div>\r\n  </IcSectionContainer>\r\n  <br />\r\n  <IcSectionContainer\r\n    style={{ border: \"1px solid black\" }}\r\n    aligned=\"full-width\"\r\n  >\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"8px\",\r\n        gap: \"8px\",\r\n      }}\r\n    >\r\n      <IcChip label=\"Americano\" />\r\n      <IcChip label=\"Cappuccino\" />\r\n      <IcChip label=\"Latte\" />\r\n    </div>\r\n  </IcSectionContainer>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse a section container to group multiple elements and align them on a page. Use multiple section containers to ensure alignment between them all.\r\n\r\n<DoDontCaution\r\n  imageSrc={image1}\r\n  imageAlt=\"A page showing section containers used to align content to the centre of the viewport.\"\r\n  caption=\"Use section containers maintain alignment across a page.\"\r\n/>\r\n\r\n## When not to use\r\n\r\nAvoid nesting section containers as it can be difficult to maintain alignment. Instead, use multiple section containers to align each group of content differently.\r\n\r\n## Sizing\r\n\r\nThe size of the section container changes dependent on the size of the viewport. The margins and maximum width of the container are automatically set so that the content will respond to changes in the viewport.\r\n\r\nMake a section container full height to remove the vertical padding and help align vertical content more easily.\r\n\r\n<DoDontCaution\r\n  imageSrc={image2}\r\n  imageAlt=\"Two section containers. The first section container has vertical padding included at the top and bottom of the container, whereas the second section container is full-height and has no vertical padding.\"\r\n  caption=\"Make section containers full height to remove vertical padding and easily space content vertically.\"\r\n/>\r\n\r\n## Layout and placement\r\n\r\nUse the alignment properties of the section container to change how they align with the viewport.\r\n\r\nUse centre alignment to position the section container in the centre of the viewport.\r\n\r\n<DoDontCaution\r\n  imageSrc={image3}\r\n  imageAlt=\"An example of a page with three section containers with centred alignment appearing in the middle of the viewport.\"\r\n  caption=\"Section containers using centred alignment.\"\r\n/>\r\n\r\nUse left alignment to position the section container to the left of the viewport.\r\n\r\n<DoDontCaution\r\n  imageSrc={image4}\r\n  imageAlt=\"An example of a page with three section containers with left alignment appearing to the left of the viewport.\"\r\n  caption=\"Section containers using left alignment.\"\r\n/>\r\n\r\nUse full-width alignment to make the section container span the full width of the viewport.\r\n\r\n<DoDontCaution\r\n  imageSrc={image5}\r\n  imageAlt=\"An example of a page with three section containers with full-width alignment stretching to the edges of the viewport.\"\r\n  caption=\"Section containers using full-width alignment.\"\r\n/>\r\n\r\n## Content\r\n\r\nGroup any combination of content within a section container. Align the content relative to the section container. By default content is aligned to the left, but overide this to create custom internal layouts, whilst having the section align automatically with other containers on the page.\r\n\r\n## Future work on this component\r\n\r\n- Add grids to section container to align internal content.\r\n\r\n## Related components\r\n\r\n- [Layout and spacing](/styles/layout-spacing)\r\n",
      "path": "/components/section-container",
      "navPriority": 27,
      "date": "2023-04-21",
      "title": "Section container",
      "status": "BETA",
      "subTitle": "Use the section container component to consistently align content within an app.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/section-container",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/section-container"
        },
        {
          "title": "Code",
          "path": "/components/section-container/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/section-container/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\section-container\\guidance.mdx",
        "createdAt": "2024-05-20T13:20:43.333Z",
        "lastModified": "2024-05-20T13:20:43.333Z",
        "size": 5730,
        "formattedSize": "5.6 KB"
      }
    },
    {
      "id": "components\\select\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nWe've made sure that you can use the select component with a keyboard, including **home** and **end**, as well as the **esc** key. Options in the dropdown list can be accessed with the **up** and **down** arrow keys.\r\n\r\nFor the searchable variant, we have included options that allow you to decide the minimum number of characters required before results are returned. This can help show relevant options only. When the query length is less than the required the `aria status` region provides helpful text informing the user they should type in more.\r\n\r\n## For Assistive Technology\r\n\r\nWhen focus is received on the component, the screen-reader will announce a hint explaining how you can navigate up and down in the dropdown list (with the **up** and **down** arrow keys).\r\n\r\nWhen the search (asynchronous or otherwise) is complete, there is an `aria-live` announcement to announce the number of results in the list.\r\n\r\n## Based on\r\n\r\nThe select component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.24a11y.com/2019/select-your-poison/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Select your poison\r\n    </ic-link>\r\n    , 24 Accessibility, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      ARIA: listbox role\r\n    </ic-link>\r\n    , Mozilla, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://inclusive-components.design/menus-menu-buttons/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Menus & Menu Buttons\r\n    </ic-link>\r\n    , Inclusive Components, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-autocomplete\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      aria-autocomplete\r\n    </ic-link>\r\n    , Mozilla, accessed July 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/select/accessibility",
      "date": "2024-04-15",
      "title": "Select",
      "status": "BETA",
      "subTitle": "Select allows users to select one or more values from a list of options.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/select",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/select"
        },
        {
          "title": "Code",
          "path": "/components/select/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/select/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\select\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:35.012Z",
        "lastModified": "2024-06-04T07:48:35.012Z",
        "size": 2819,
        "formattedSize": "2.8 KB"
      }
    },
    {
      "id": "components\\select\\codex",
      "contents": "\r\nimport { IcSelect } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select placeholder=\"Select an option...\" label=\"What is your favourite coffee?\"></ic-select>\r\n<script>\r\n  const select = document.querySelector(\"ic-select\");\r\n  let option = \"Cappuccino\";\r\n  select.options = [\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelect placeholder=\"Select an option...\" label=\"What is your favourite coffee?\"\r\n  options={[\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ]}\r\n  onIcChange={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\nexport const SelectExample = () => (\r\n  <IcSelect\r\n    placeholder=\"Select an option...\"\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      { label: \"Espresso\", value: \"espresso\" },\r\n      { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n      { label: \"Flat White\", value: \"flatwhite\" },\r\n      { label: \"Cappuccino\", value: \"cappuccino\" },\r\n      { label: \"Americano\", value: \"americano\" },\r\n      { label: \"Mocha\", value: \"mocha\" },\r\n    ]}\r\n    onIcChange={(event) => console.log(event.detail.value)}\r\n  />\r\n);\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <SelectExample />\r\n</ComponentPreview>\r\n\r\n## Select details\r\n\r\n<ComponentDetails component=\"ic-select\" />\r\n\r\n## Variants\r\n\r\n### With clear button, descriptions, helper text and custom placeholder\r\n\r\nexport const snippetsWithExtras = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select label=\"What is your favourite coffee?\" placeholder=\"Select an option...\" helper-text=\"Select one option from the list\" show-clear-button=\"true\" searchable=\"true\"></ic-select>\r\n<script>\r\n  const select = document.querySelector(\"ic-select\");\r\n  let option = \"Cappuccino\";\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"cappuccino\", description: \"Coffee frothed up with pressurised steam\" },\r\n    { label: \"Americano\", value: \"americano\", description: \"Espresso coffee diluted with hot water\" },\r\n    { label: \"Mocha\", value: \"mocha\", description: \"Coffee with chocolate\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelect label=\"What is your favourite coffee?\"\r\n  options={[\r\n    { label: \"Cappuccino\", value: \"cappuccino\", description: \"Coffee frothed up with pressurised steam\" },\r\n    { label: \"Americano\", value: \"americano\", description: \"Espresso coffee diluted with hot water\" },\r\n    { label: \"Mocha\", value: \"mocha\", description: \"Coffee with chocolate\" },\r\n  ]}\r\n  placeholder=\"Select an option…\"\r\n  helperText=\"Select one option from the list\"\r\n  showClearButton\r\n  searchable\r\n  onIcChange={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\nexport const SelectExampleWithExtras = () => (\r\n  <IcSelect\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      {\r\n        label: \"Cappuccino\",\r\n        value: \"cappuccino\",\r\n        description: \"Coffee frothed up with pressurised steam\",\r\n      },\r\n      {\r\n        label: \"Americano\",\r\n        value: \"americano\",\r\n        description: \"Espresso coffee diluted with hot water\",\r\n      },\r\n      {\r\n        label: \"Mocha\",\r\n        value: \"mocha\",\r\n        description: \"Coffee with chocolate\",\r\n      },\r\n    ]}\r\n    placeholder=\"Select an option…\"\r\n    helperText=\"Select one option from the list\"\r\n    showClearButton\r\n    searchable\r\n    onIcChange={(event) => console.log(event.detail.value)}\r\n  />\r\n);\r\n\r\n<ComponentPreview snippets={snippetsWithExtras}>\r\n  <SelectExampleWithExtras />\r\n</ComponentPreview>\r\n\r\n### Disabled\r\n\r\nexport const snippetsDisabled = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select placeholder=\"Select an option…\" label=\"What is your favourite coffee?\" disabled=\"true\"></ic-select>\r\n<script>\r\n  const select = document.querySelector(\"ic-select\");\r\n  let option = \"Cappuccino\";\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelect placeholder=\"Select an option…\" label=\"What is your favourite coffee?\"\r\n  options={[\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ]}\r\n  disabled\r\n  onIcChange={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\nexport const SelectExampleDisabled = () => (\r\n  <IcSelect\r\n    placeholder=\"Select an option…\"\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      { label: \"Cappuccino\", value: \"cappuccino\" },\r\n      { label: \"Americano\", value: \"americano\" },\r\n      { label: \"Mocha\", value: \"mocha\" },\r\n    ]}\r\n    disabled\r\n    onIcChange={(event) => console.log(event.detail.value)}\r\n  />\r\n);\r\n\r\n<ComponentPreview snippets={snippetsDisabled}>\r\n  <SelectExampleDisabled />\r\n</ComponentPreview>\r\n\r\n### Options disabled\r\n\r\nexport const snippetsOptionDisabled = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select placeholder=\"Select an option…\" label=\"What is your favourite coffee?\"></ic-select>\r\n<script>\r\n  const select = document.querySelector(\"ic-select\");\r\n  let option = \"Cappuccino\";\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\", disabled: true },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelect placeholder=\"Select an option…\" label=\"What is your favourite coffee?\"\r\n  options={[\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\", disabled: true },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ]}\r\n  onIcChange={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\nexport const SelectExampleOptionsDisabled = () => (\r\n  <IcSelect\r\n    placeholder=\"Select an option…\"\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      { label: \"Cappuccino\", value: \"cappuccino\" },\r\n      { label: \"Americano\", value: \"americano\", disabled: true },\r\n      { label: \"Mocha\", value: \"mocha\" },\r\n    ]}\r\n    onIcChange={(event) => console.log(event.detail.value)}\r\n  />\r\n);\r\n\r\n<ComponentPreview snippets={snippetsOptionDisabled}>\r\n  <SelectExampleOptionsDisabled />\r\n</ComponentPreview>\r\n\r\n### Size small\r\n\r\nexport const snippetsSmall = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select label=\"What is your favourite coffee?\" size=\"small\"></ic-select>\r\n<script>\r\n  const select = document.querySelector(\"ic-select\");\r\n  let option = \"Cappuccino\";\r\n  select.options = [\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelect label=\"What is your favourite coffee?\"\r\n  options={[\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ]}\r\n  onIcChange={(event) => console.log(event.detail.value)}\r\n  size=\"small\"\r\n/>`,\r\n  },\r\n];\r\n\r\nexport const SelectExampleSmall = () => (\r\n  <IcSelect\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      { label: \"Espresso\", value: \"espresso\" },\r\n      { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n      { label: \"Flat White\", value: \"flatwhite\" },\r\n      { label: \"Cappuccino\", value: \"cappuccino\" },\r\n      { label: \"Americano\", value: \"americano\" },\r\n      { label: \"Mocha\", value: \"mocha\" },\r\n    ]}\r\n    onIcChange={(event) => console.log(event.detail.value)}\r\n    size=\"small\"\r\n  />\r\n);\r\n\r\n<ComponentPreview snippets={snippetsSmall}>\r\n  <SelectExampleSmall />\r\n</ComponentPreview>\r\n\r\n### Hidden label\r\n\r\nexport const snippetsHideLabel = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select placeholder=\"Select an option…\" label=\"What is your favourite coffee?\" hide-label=\"true\"></ic-select>\r\n<script>\r\n  const select = document.querySelector(\"ic-select\");\r\n  let option = \"Cappuccino\";\r\n  select.options = [\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelect placeholder=\"Select an option…\" label=\"What is your favourite coffee?\"\r\n  options={[\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n  ]}\r\n  hideLabel\r\n  onIcChange={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\nexport const SelectExampleHideLabel = () => (\r\n  <IcSelect\r\n    placeholder=\"Select an option…\"\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      { label: \"Espresso\", value: \"espresso\" },\r\n      { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n      { label: \"Flat White\", value: \"flatwhite\" },\r\n    ]}\r\n    hideLabel\r\n    onIcChange={(event) => console.log(event.detail.value)}\r\n  />\r\n);\r\n\r\n<ComponentPreview snippets={snippetsHideLabel}>\r\n  <SelectExampleHideLabel />\r\n</ComponentPreview>\r\n\r\n### Groups\r\n\r\nexport const snippetsGroups = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select placeholder=\"Select an option…\" label=\"What is your favourite coffee?\"></ic-select>\r\n<script>\r\n  const select = document.querySelector(\"ic-select\");\r\n  let option = \"Cappuccino\";\r\n  select.options = [\r\n            {\r\n              label: \"Fancy\",\r\n              children: [\r\n                { label: \"Cappuccino\", value: \"Cap\" },\r\n                { label: \"Flat white\", value: \"Flat\" },\r\n              ],\r\n            },\r\n            {\r\n              label: \"Boring\",\r\n              children: [\r\n                { label: \"Filter\", value: \"Fil\" },\r\n                { label: \"Latte\", value: \"Lat\" },\r\n              ],\r\n            },\r\n          ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelect placeholder=\"Select an option…\" label=\"What is your favourite coffee?\"\r\n  options={[\r\n    {\r\n      label: \"Fancy\",\r\n      children: [\r\n        { label: \"Cappuccino\", value: \"Cap\" },\r\n        { label: \"Flat white\", value: \"Flat\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Boring\",\r\n      children: [\r\n        { label: \"Filter\", value: \"Fil\" },\r\n        { label: \"Latte\", value: \"Lat\" },\r\n      ],\r\n    },\r\n  ]}\r\n  onIcChange={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\nexport const SelectExampleGroups = () => (\r\n  <IcSelect\r\n    placeholder=\"Select an option…\"\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      {\r\n        label: \"Fancy\",\r\n        children: [\r\n          { label: \"Cappuccino\", value: \"Cap\" },\r\n          { label: \"Flat white\", value: \"Flat\" },\r\n        ],\r\n      },\r\n      {\r\n        label: \"Boring\",\r\n        children: [\r\n          { label: \"Filter\", value: \"Fil\" },\r\n          { label: \"Latte\", value: \"Lat\" },\r\n        ],\r\n      },\r\n    ]}\r\n    onIcChange={(event) => console.log(event.detail.value)}\r\n  />\r\n);\r\n\r\n<ComponentPreview snippets={snippetsGroups}>\r\n  <SelectExampleGroups />\r\n</ComponentPreview>\r\n\r\n### Recommended\r\n\r\nexport const snippetsRecommended = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select placeholder=\"Select an option…\" label=\"What is your favourite coffee?\"></ic-select>\r\n<script>\r\n  const select = document.querySelector(\"ic-select\");\r\n  let option = \"Cappuccino\";\r\n  select.options = [\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\", recommended: true },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\", recommended: true },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelect placeholder=\"Select an option…\" label=\"What is your favourite coffee?\"\r\n  options={[\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\", recommended: true },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\", recommended: true },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ]}\r\n  onIcChange={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\nexport const SelectExampleRecommended = () => (\r\n  <IcSelect\r\n    placeholder=\"Select an option…\"\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      { label: \"Espresso\", value: \"espresso\" },\r\n      {\r\n        label: \"Double Espresso\",\r\n        value: \"doubleespresso\",\r\n        recommended: true,\r\n      },\r\n      { label: \"Flat White\", value: \"flatwhite\" },\r\n      { label: \"Cappuccino\", value: \"cappuccino\" },\r\n      { label: \"Americano\", value: \"americano\", recommended: true },\r\n      { label: \"Mocha\", value: \"mocha\" },\r\n    ]}\r\n    onIcChange={(event) => console.log(event.detail.value)}\r\n  />\r\n);\r\n\r\n<ComponentPreview snippets={snippetsRecommended}>\r\n  <SelectExampleRecommended />\r\n</ComponentPreview>\r\n\r\n### Validation\r\n\r\nexport const snippetsValidation = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select placeholder=\"Select an option…\" label=\"What is your favourite coffee?\" \r\n    validation-status=\"success\" \r\n    validation-text=\"Coffee available\"\r\n    value=\"americano\"></ic-select>\r\n<script>\r\n  const select = document.querySelector(\"ic-select\");\r\n  let option = \"Cappuccino\";\r\n  select.options = [\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>\r\n<ic-select placeholder=\"Select an option…\" label=\"What is your favourite coffee?\" \r\n    validation-status=\"warning\" \r\n    validation-text=\"Only a few left\"\r\n    value=\"cappuccino\"></ic-select>\r\n<script>\r\n  const select = document.querySelector(\"ic-select\");\r\n  let option = \"Cappuccino\";\r\n  select.options = [\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>\r\n<ic-select placeholder=\"Select an option…\" label=\"What is your favourite coffee?\" \r\n    validation-status=\"error\" \r\n    validation-text=\"Coffee unavailable\"\r\n    value=\"mocha\"></ic-select>\r\n<script>\r\n  const select = document.querySelector(\"ic-select\");\r\n  let option = \"Cappuccino\";\r\n  select.options = [\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelect placeholder=\"Select an option…\" label=\"What is your favourite coffee?\"\r\n    value=\"americano\"\r\n  options={[\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ]}\r\n  validationStatus=\"success\"\r\n  validationText=\"Coffee available\"\r\n  onIcChange={(event) => console.log(event.detail.value)}\r\n/>\r\n  <IcSelect placeholder=\"Select an option…\" label=\"What is your favourite coffee?\"\r\n  value=\"cappuccino\"\r\n  options={[\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ]}\r\n  validationStatus=\"warning\" \r\n  validationText=\"Only a few left\"\r\n  onIcChange={(event) => console.log(event.detail.value)}\r\n/>\r\n  <IcSelect placeholder=\"Select an option…\" label=\"What is your favourite coffee?\"\r\n  value=\"mocha\"\r\n  options={[\r\n    { label: \"Espresso\", value: \"espresso\" },\r\n    { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n    { label: \"Flat White\", value: \"flatwhite\" },\r\n    { label: \"Cappuccino\", value: \"cappuccino\" },\r\n    { label: \"Americano\", value: \"americano\" },\r\n    { label: \"Mocha\", value: \"mocha\" },\r\n  ]}\r\n  validationStatus=\"error\" \r\n  validationText=\"Coffee unavailable\"\r\n  onIcChange={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\nexport const SelectExampleValidation = () => (\r\n  <div>\r\n    <IcSelect\r\n      placeholder=\"Select an option…\"\r\n      label=\"What is your favourite coffee?\"\r\n      value=\"americano\"\r\n      options={[\r\n        { label: \"Espresso\", value: \"espresso\" },\r\n        { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n        { label: \"Flat White\", value: \"flatwhite\" },\r\n        { label: \"Cappuccino\", value: \"cappuccino\" },\r\n        { label: \"Americano\", value: \"americano\" },\r\n        { label: \"Mocha\", value: \"mocha\" },\r\n      ]}\r\n      validationStatus=\"success\"\r\n      validationText=\"Coffee available\"\r\n      onIcChange={(event) => console.log(event.detail.value)}\r\n    />\r\n    <IcSelect\r\n      placeholder=\"Select an option…\"\r\n      label=\"What is your favourite coffee?\"\r\n      value=\"cappuccino\"\r\n      options={[\r\n        { label: \"Espresso\", value: \"espresso\" },\r\n        { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n        { label: \"Flat White\", value: \"flatwhite\" },\r\n        { label: \"Cappuccino\", value: \"cappuccino\" },\r\n        { label: \"Americano\", value: \"americano\" },\r\n        { label: \"Mocha\", value: \"mocha\" },\r\n      ]}\r\n      validationStatus=\"warning\"\r\n      validationText=\"Only a few left\"\r\n      onIcChange={(event) => console.log(event.detail.value)}\r\n    />\r\n    <IcSelect\r\n      placeholder=\"Select an option…\"\r\n      label=\"What is your favourite coffee?\"\r\n      value=\"mocha\"\r\n      options={[\r\n        { label: \"Espresso\", value: \"espresso\" },\r\n        { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n        { label: \"Flat White\", value: \"flatwhite\" },\r\n        { label: \"Cappuccino\", value: \"cappuccino\" },\r\n        { label: \"Americano\", value: \"americano\" },\r\n        { label: \"Mocha\", value: \"mocha\" },\r\n      ]}\r\n      validationStatus=\"error\"\r\n      validationText=\"Coffee unavailable\"\r\n      onIcChange={(event) => console.log(event.detail.value)}\r\n    />\r\n  </div>\r\n);\r\n\r\n<ComponentPreview snippets={snippetsValidation}>\r\n  <SelectExampleValidation />\r\n</ComponentPreview>\r\n\r\n### Searchable\r\n\r\nexport const snippetsSearchable = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select placeholder=\"Select an option…\" label=\"What is your favourite coffee?\" searchable=\"true\"></ic-select>\r\n<script>\r\n  const select = document.querySelector(\"ic-select\");\r\n  let option = \"Cappuccino\";\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\" },\r\n    { label: \"Americano\", value: \"Ame\" },\r\n    { label: \"Flat white\", value: \"Fla\" },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n    { label: \"Café au lait\", value: \"Caf\" },\r\n    { label: \"Espresso\", value: \"Esp\" },\r\n    { label: \"Cortado\", value: \"Cor\" },\r\n    { label: \"Latte macchiato\", value: \"Lam\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelect placeholder=\"Select an option…\"\r\n  label=\"What is your favourite coffee?\"\r\n  options={[\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\" },\r\n    { label: \"Americano\", value: \"Ame\" },\r\n    { label: \"Flat white\", value: \"Fla\" },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n    { label: \"Café au lait\", value: \"Caf\" },\r\n    { label: \"Espresso\", value: \"Esp\" },\r\n    { label: \"Cortado\", value: \"Cor\" },\r\n    { label: \"Latte macchiato\", value: \"Lam\" },\r\n  ]}\r\n  searchable\r\n  onIcChange={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\nexport const SearchableSelectExample = () => (\r\n  <IcSelect\r\n    placeholder=\"Select an option…\"\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      { label: \"Cappuccino\", value: \"Cap\" },\r\n      { label: \"Latte\", value: \"Lat\" },\r\n      { label: \"Americano\", value: \"Ame\" },\r\n      { label: \"Flat white\", value: \"Fla\" },\r\n      { label: \"Mocha\", value: \"Moc\" },\r\n      { label: \"Macchiato\", value: \"Mac\" },\r\n      { label: \"Café au lait\", value: \"Caf\" },\r\n      { label: \"Espresso\", value: \"Esp\" },\r\n      { label: \"Cortado\", value: \"Cor\" },\r\n      { label: \"Latte macchiato\", value: \"Lam\" },\r\n    ]}\r\n    searchable\r\n    onIcChange={(event) => console.log(event.detail.value)}\r\n  />\r\n);\r\n\r\n<ComponentPreview snippets={snippetsSearchable}>\r\n  <SearchableSelectExample />\r\n</ComponentPreview>\r\n\r\n### Searchable &ndash; with descriptions included in search\r\n\r\nexport const snippetsSearchableWithDescriptions = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select placeholder=\"Select an option…\"\r\n  label=\"What is your favourite coffee?\" \r\n  searchable=\"true\" \r\n  include-description-in-search=\"true\"\r\n></ic-select>\r\n<script>\r\n  const select = document.querySelector(\"ic-select\");\r\n  let option = \"Cappuccino\";\r\n  select.options = [\r\n    { label: \"Cappuccino\", value: \"Cap\", description: \"Coffee frothed up with pressurised steam\" },\r\n    { label: \"Americano\", value: \"Ame\", description: \"Espresso coffee diluted with hot water\" },\r\n    { label: \"Mocha\", value: \"Moc\", description: \"Coffee with chocolate\" },\r\n    { label: \"Latte\", value: \"Lat\", description: \"Milky coffee with one or two shots of espresso\" },\r\n    { label: \"Flat white\", value: \"Fla\", description: \"Coffee with frothed milk poured over espresso\" },\r\n    { label: \"Macchiato\", value: \"Mac\", description: \"Espresso coffee topped with steamed milk\" },\r\n    { label: \"Café au lait\", value: \"Caf\", description: \"Brewed coffee with steamed milk\" },\r\n    { label: \"Espresso\", value: \"Esp\", description: \"Concentrated form of coffee\" },\r\n    { label: \"Cortado\", value: \"Cor\", description: \"Coffee cut with milk\" },\r\n    { label: \"Latte macchiato\", value: \"Lam\", description: \"Espresso coffee with milk and a spoonful of foamed milk\" },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelect placeholder=\"Select an option…\"\r\n  label=\"What is your favourite coffee?\"\r\n  options={[\r\n    { label: \"Cappuccino\", value: \"Cap\", description: \"Coffee frothed up with pressurised steam\" },\r\n    { label: \"Americano\", value: \"Ame\", description: \"Espresso coffee diluted with hot water\" },\r\n    { label: \"Mocha\", value: \"Moc\", description: \"Coffee with chocolate\" },\r\n    { label: \"Latte\", value: \"Lat\", description: \"Milky coffee with one or two shots of espresso\" },\r\n    { label: \"Flat white\", value: \"Fla\", description: \"Coffee with frothed milk poured over espresso\" },\r\n    { label: \"Macchiato\", value: \"Mac\", description: \"Espresso coffee topped with steamed milk\" },\r\n    { label: \"Café au lait\", value: \"Caf\", description: \"Brewed coffee with steamed milk\" },\r\n    { label: \"Espresso\", value: \"Esp\", description: \"Concentrated form of coffee\" },\r\n    { label: \"Cortado\", value: \"Cor\", description: \"Coffee cut with milk\" },\r\n    { label: \"Latte macchiato\", value: \"Lam\", description: \"Espresso coffee with milk and a spoonful of foamed milk\" },\r\n  ]}\r\n  searchable\r\n  includeDescriptionsInSearch\r\n  onIcChange={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\nexport const SearchableSelectWithDescriptionsExample = () => (\r\n  <IcSelect\r\n    placeholder=\"Select an option…\"\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      {\r\n        label: \"Cappuccino\",\r\n        value: \"Cap\",\r\n        description: \"Coffee frothed up with pressurised steam\",\r\n      },\r\n      {\r\n        label: \"Americano\",\r\n        value: \"Ame\",\r\n        description: \"Espresso coffee diluted with hot water\",\r\n      },\r\n      { label: \"Mocha\", value: \"Moc\", description: \"Coffee with chocolate\" },\r\n      {\r\n        label: \"Latte\",\r\n        value: \"Lat\",\r\n        description: \"Milky coffee with one or two shots of espresso\",\r\n      },\r\n      {\r\n        label: \"Flat white\",\r\n        value: \"Fla\",\r\n        description: \"Coffee with frothed milk poured over espresso\",\r\n      },\r\n      {\r\n        label: \"Macchiato\",\r\n        value: \"Mac\",\r\n        description: \"Espresso coffee topped with steamed milk\",\r\n      },\r\n      {\r\n        label: \"Café au lait\",\r\n        value: \"Caf\",\r\n        description: \"Brewed coffee with steamed milk\",\r\n      },\r\n      {\r\n        label: \"Espresso\",\r\n        value: \"Esp\",\r\n        description: \"Concentrated form of coffee\",\r\n      },\r\n      { label: \"Cortado\", value: \"Cor\", description: \"Coffee cut with milk\" },\r\n      {\r\n        label: \"Latte macchiato\",\r\n        value: \"Lam\",\r\n        description: \"Espresso coffee with milk and a spoonful of foamed milk\",\r\n      },\r\n    ]}\r\n    searchable\r\n    includeDescriptionsInSearch\r\n    onIcChange={(event) => console.log(event.detail.value)}\r\n  />\r\n);\r\n\r\n<ComponentPreview snippets={snippetsSearchableWithDescriptions}>\r\n  <SearchableSelectWithDescriptionsExample />\r\n</ComponentPreview>\r\n\r\n### Searchable &ndash; with group titles included in search\r\n\r\nexport const snippetsSearchableWithGroups = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select placeholder=\"Select an option…\"\r\n  label=\"What is your favourite coffee?\" \r\n  searchable=\"true\" \r\n  include-group-titles-in-search=\"true\"\r\n></ic-select>\r\n<script>\r\n  const select = document.querySelector(\"ic-select\");\r\n  let option = \"Cappuccino\";\r\n  select.options = [\r\n    {\r\n      label: \"Fancy\",\r\n      children: [\r\n        { label: \"Cappuccino\", value: \"Cap\" },\r\n        { label: \"Flat white\", value: \"Flat\" },\r\n        { label: \"Mocha\", value: \"Moc\" },\r\n        { label: \"Macchiato\", value: \"Mac\" },\r\n        { label: \"Cortado\", value: \"Cor\" },\r\n        { label: \"Latte macchiato\", value: \"Lam\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Boring\",\r\n      children: [\r\n        { label: \"Filter\", value: \"Fil\" },\r\n        { label: \"Latte\", value: \"Lat\" },\r\n        { label: \"Americano\", value: \"Ame\" },\r\n        { label: \"Espresso\", value: \"Esp\" },\r\n      ],\r\n    },\r\n  ];\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    console.log(event.detail.value);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSelect placeholder=\"Select an option…\"\r\n  label=\"What is your favourite coffee?\"\r\n  options={[\r\n    {\r\n      label: \"Fancy\",\r\n      children: [\r\n        { label: \"Cappuccino\", value: \"Cap\" },\r\n        { label: \"Flat white\", value: \"Flat\" },\r\n        { label: \"Mocha\", value: \"Moc\" },\r\n        { label: \"Macchiato\", value: \"Mac\" },\r\n        { label: \"Cortado\", value: \"Cor\" },\r\n        { label: \"Latte macchiato\", value: \"Lam\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Boring\",\r\n      children: [\r\n        { label: \"Filter\", value: \"Fil\" },\r\n        { label: \"Latte\", value: \"Lat\" },\r\n        { label: \"Americano\", value: \"Ame\" },\r\n        { label: \"Espresso\", value: \"Esp\" },\r\n      ],\r\n    },\r\n  ]}\r\n  searchable\r\n  includeGroupTitlesInSearch\r\n  onIcChange={(event) => console.log(event.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\nexport const SearchableSelectWithGroupsExample = () => (\r\n  <IcSelect\r\n    placeholder=\"Select an option…\"\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      {\r\n        label: \"Fancy\",\r\n        children: [\r\n          { label: \"Cappuccino\", value: \"Cap\" },\r\n          { label: \"Flat white\", value: \"Flat\" },\r\n          { label: \"Mocha\", value: \"Moc\" },\r\n          { label: \"Macchiato\", value: \"Mac\" },\r\n          { label: \"Cortado\", value: \"Cor\" },\r\n          { label: \"Latte macchiato\", value: \"Lam\" },\r\n        ],\r\n      },\r\n      {\r\n        label: \"Boring\",\r\n        children: [\r\n          { label: \"Filter\", value: \"Fil\" },\r\n          { label: \"Latte\", value: \"Lat\" },\r\n          { label: \"Americano\", value: \"Ame\" },\r\n          { label: \"Espresso\", value: \"Esp\" },\r\n        ],\r\n      },\r\n    ]}\r\n    searchable\r\n    includeGroupTitlesInSearch\r\n    onIcChange={(event) => console.log(event.detail.value)}\r\n  />\r\n);\r\n\r\n<ComponentPreview snippets={snippetsSearchableWithGroups}>\r\n  <SearchableSelectWithGroupsExample />\r\n</ComponentPreview>\r\n\r\n## Custom filtering example\r\n\r\nThis example shows how to filter data asynchronously when the value in the select field changes. The data is mocked and displayed after a one second delay, but could be replaced with a call to an API or database.\r\n\r\nexport const customFiltering = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-select placeholder=\"Select an option…\"\r\n  label=\"What is your favourite coffee?\"\r\n  searchable=\"true\"\r\n  debounce=\"300\"\r\n  disable-filter=\"true\"\r\n  id=\"external-filter-select\"\r\n  characters-until-suggestions=\"2\"\r\n></ic-select>\r\n<script>\r\n  const mockData = [\r\n    { label: \"Espresso\", value: \"Esp\" },\r\n    { label: \"Double Espresso\", value: \"Dou\" },\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\" },\r\n    { label: \"Americano\", value: \"Ame\" },\r\n    { label: \"Filter\", value: \"Fil\" },\r\n    { label: \"Flat white\", value: \"Fla\" },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n  ];\r\n  const select = document.querySelector(\"#external-filter-select\");\r\n  let selectedValue = \"\";\r\n  select.addEventListener(\"icClear\", function (event) {\r\n    select.options = [];\r\n  });\r\n  select.addEventListener(\"icOptionSelect\", function (event) {\r\n    selectedValue = event.detail.value;\r\n  });\r\n  select.addEventListener(\"icChange\", function (event) {\r\n    const value = event.detail.value;\r\n    console.log(value);\r\n    if (value !== selectedValue) {\r\n      if (value && value.length > 1) {\r\n        mockAPI = (query) => {\r\n          filteredResults = mockData.filter((item) =>\r\n            item.label.toLowerCase().includes(query.toLowerCase())\r\n          );\r\n          return new Promise((resolve) =>\r\n            setTimeout(() => resolve(filteredResults), 1000)\r\n          );\r\n        };\r\n        mockAPI(value).then((results) => {\r\n          select.options = results;\r\n        });\r\n      } else {\r\n        select.options = [];\r\n      }\r\n    }\r\n  });            \r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const mockData = [\r\n  { label: \"Espresso\", value: \"Esp\" },\r\n  { label: \"Double Espresso\", value: \"Dou\" },\r\n  { label: \"Cappuccino\", value: \"Cap\" },\r\n  { label: \"Latte\", value: \"Lat\" },\r\n  { label: \"Americano\", value: \"Ame\" },\r\n  { label: \"Filter\", value: \"Fil\" },\r\n  { label: \"Flat white\", value: \"Fla\" },\r\n  { label: \"Mocha\", value: \"Moc\" },\r\n  { label: \"Macchiato\", value: \"Mac\" },\r\n];\r\nconst [results, setResults] = useState([]);\r\nconst [selectedValue, setSelectedValue] = useState(\"\");\r\nconst changeHandler = (event) => {\r\n  const newValue = event.detail.value;\r\n  console.log(newValue);\r\n  if (newValue !== selectedValue) {\r\n    if (newValue && newValue.length > 1) {\r\n      const mockAPI = (query) => {\r\n        const filteredResults = mockData.filter((item) => \r\n          item.label.toLowerCase().includes(query.toLowerCase()));\r\n        return new Promise(resolve => { \r\n          setTimeout(() => resolve(filteredResults), 1000)\r\n        });\r\n      };\r\n      mockAPI(newValue).then((results) => setResults(results));\r\n    } else {\r\n      setResults([]);\r\n    }\r\n  }  \r\n}\r\nreturn(\r\n  <>\r\n    <IcSelect placeholder=\"Select an option…\" label=\"What is your favourite coffee?\" \r\n      debounce=\"300\"\r\n      searchable\r\n      disableFilter\r\n      charactersUntilSuggestions=\"2\"\r\n      options={results} \r\n      onIcOptionSelect={(event) => setSelectedValue(event.detail.value)}\r\n      onIcClear={() => setResults([])}\r\n      onIcChange={changeHandler}\r\n    />\r\n  </>\r\n);`,\r\n  },\r\n];\r\n\r\nexport const CustomFilterExample = () => {\r\n  const mockData = [\r\n    { label: \"Espresso\", value: \"Esp\" },\r\n    { label: \"Double Espresso\", value: \"Dou\" },\r\n    { label: \"Cappuccino\", value: \"Cap\" },\r\n    { label: \"Latte\", value: \"Lat\" },\r\n    { label: \"Americano\", value: \"Ame\" },\r\n    { label: \"Filter\", value: \"Fil\" },\r\n    { label: \"Flat white\", value: \"Fla\" },\r\n    { label: \"Mocha\", value: \"Moc\" },\r\n    { label: \"Macchiato\", value: \"Mac\" },\r\n  ];\r\n  const [results, setResults] = React.useState([]);\r\n  const [selectedValue, setSelectedValue] = React.useState(\"\");\r\n  const changeHandler = (event) => {\r\n    const newValue = event.detail.value;\r\n    console.log(newValue);\r\n    if (newValue !== selectedValue) {\r\n      if (newValue && newValue.length > 1) {\r\n        const mockAPI = (query) => {\r\n          const filteredResults = mockData.filter((item) =>\r\n            item.label.toLowerCase().includes(query.toLowerCase())\r\n          );\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => resolve(filteredResults), 1000);\r\n          });\r\n        };\r\n        mockAPI(newValue).then((newResults) => setResults(newResults));\r\n      } else {\r\n        setResults([]);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <IcSelect\r\n      placeholder=\"Select an option…\"\r\n      label=\"What is your favourite coffee?\"\r\n      debounce=\"300\"\r\n      searchable\r\n      disableFilter\r\n      charactersUntilSuggestions=\"2\"\r\n      options={results}\r\n      onIcOptionSelect={(event) => setSelectedValue(event.detail.value)}\r\n      onIcClear={() => setResults([])}\r\n      onIcChange={changeHandler}\r\n    />\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={customFiltering}>\r\n  <CustomFilterExample />\r\n</ComponentPreview>\r\n",
      "path": "/components/select/code",
      "date": "2024-02-02",
      "title": "Select",
      "status": "BETA",
      "subTitle": "Select allows users to select one or more values from a list of options.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/select",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/select"
        },
        {
          "title": "Code",
          "path": "/components/select/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/select/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\select\\code.mdx",
        "createdAt": "2024-06-04T07:48:35.014Z",
        "lastModified": "2024-06-04T07:48:35.014Z",
        "size": 36669,
        "formattedSize": "35.8 KB"
      }
    },
    {
      "id": "components\\select\\guidancex",
      "contents": "\r\nimport { IcSelect } from \"@ukic/react\";\r\nimport selectFig1 from \"./images/fig-1-use-radio-or-checkbox-groups-when-less-than-four-options-are-available2x.png\";\r\nimport selectFig2 from \"./images/fig-2-dont-use-dropdowns-when-displaying-a-limited-number-of-options2x.png\";\r\nimport selectFig3 from \"./images/fig-3-use-labels-to-indicate-the-title-of-the-field.png\";\r\nimport selectFig4 from \"./images/fig-4-dont-replace-labels-with-placeholder-text.png\";\r\nimport selectFig5 from \"./images/fig-5-use-a-standard-select-when-providing-less-than-ten-options.png\";\r\nimport selectFig6 from \"./images/fig-6-do-not-use-the-searchable-variant-when-providing-less-than-ten-options.png\";\r\n\r\n## Component variants\r\n\r\nThere are two types of select component:\r\n\r\n- Single-select\r\n- Multi-select\r\n\r\n### Single-select\r\n\r\nAn example of the single-select component.\r\n\r\nexport const SelectExample = () => (\r\n  <IcSelect\r\n    placeholder=\"Select an option...\"\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      { label: \"Espresso\", value: \"espresso\" },\r\n      { label: \"Double Espresso\", value: \"doubleespresso\" },\r\n      { label: \"Flat White\", value: \"flatwhite\" },\r\n      { label: \"Cappuccino\", value: \"cappuccino\" },\r\n      { label: \"Americano\", value: \"americano\" },\r\n      { label: \"Mocha\", value: \"mocha\" },\r\n    ]}\r\n  />\r\n);\r\n\r\n<ComponentPreview>\r\n  <SelectExample />\r\n</ComponentPreview>\r\n\r\n### Multi-select\r\n\r\nThe multi-select is currently released in our canary packages, which means it is likely to change in future releases. Guidance and documentation can be found on the [multi-select page](/components/multi-select).\r\n\r\n## When to use\r\n\r\nUse the select component to allow the user to choose one or more options from four or more items. For less than four, use a [radio group](/components/radio) or a [checkbox group](/components/checkbox).\r\nWhen more than ten options are available, consider using the [searchable variant](/components/select#searchable-single-select) of select to allow users to search the options, rather than scroll through the dropdown list.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={selectFig1}\r\n    imageAlt=\"A graphic of a radio group labelled 'Single or double shot?' with two radio buttons labelled 'Single' and 'Double'.\"\r\n    state=\"good\"\r\n    caption=\"Use radio or checkbox groups when less than four options are available.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={selectFig2}\r\n    imageAlt=\"A graphic of a select component labelled 'Single or double shot?' with two options 'Single' and 'Double' in the dropdown list.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t use select when displaying a limited number of options.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Validation\r\n\r\nReal-time validation helps the user streamline their process and efficiently complete a form. All error validation should be accompanied by an error label.\r\n\r\n## Content\r\n\r\n### Option list\r\n\r\nThe options in the option list display a label by default and can also include a description.\r\n\r\nUse a default option list to display all options without any grouping or recommendations.\r\n\r\n#### Recommended\r\n\r\nUse an option list with recommendations to display specific options at the top of the list for quick access.\r\n\r\n#### Groups\r\n\r\nUse an option list with groups to combine the options into groups with descriptive headings.\r\n\r\n### Labels\r\n\r\nClear labels help users understand what information they should provide.\r\n\r\nLabels should always be visible regardless of the state of the field and should be announced by a screen reader on focus.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={selectFig3}\r\n    imageAlt=\"A graphic of a select component with the label 'Coffee type' and placeholder text 'Select one'.\"\r\n    state=\"good\"\r\n    caption=\"Use labels to indicate the title of the field.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={selectFig4}\r\n    imageAlt=\"A graphic of a select component with no label and the placeholder text 'Coffee type'.\"\r\n    state=\"bad\"\r\n    caption=\"Don't replace labels with placeholder text.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n### Helper text\r\n\r\nHelper text should be included when additional information can help the user to either provide the right information or understand why or how the information will be used.\r\n\r\nMake sure any helper text that appears under an input is read when an assistive technology user stops at an input using ARIA.\r\n\r\n### Dismissible inputs\r\n\r\nAlways allow the user to clear their selection by including a clear button inside the input field.\r\n\r\n## Searchable (single-select)\r\n\r\nexport const SearchableSelectExample = () => (\r\n  <IcSelect\r\n    label=\"What is your favourite coffee?\"\r\n    options={[\r\n      { label: \"Cappuccino\", value: \"Cap\" },\r\n      { label: \"Latte\", value: \"Lat\" },\r\n      { label: \"Americano\", value: \"Ame\" },\r\n      { label: \"Flat white\", value: \"Fla\" },\r\n      { label: \"Mocha\", value: \"Moc\" },\r\n      { label: \"Macchiato\", value: \"Mac\" },\r\n      { label: \"Café au lait\", value: \"Caf\" },\r\n      { label: \"Espresso\", value: \"Esp\" },\r\n      { label: \"Cortado\", value: \"Cor\" },\r\n      { label: \"Latte macchiato\", value: \"Lam\" },\r\n    ]}\r\n    searchable\r\n    onIcChange={(event) => console.log(event.detail.value)}\r\n  />\r\n);\r\n\r\n<ComponentPreview>\r\n  <SearchableSelectExample />\r\n</ComponentPreview>\r\n\r\nThe single-select component can be set to be searchable to filter options in the option list. A user can open the option list to view the available options, but can also type into the input field to filter the option list to more easily find the desired option.\r\n\r\nUse the searchable variant when including several options in the option list, so that the user can quickly filter their desired selection.\r\n\r\nDon’t use the searchable variant when providing less than ten options. The added functionality for short lists may confuse users while providing no benefit to their experience.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={selectFig5}\r\n    imageAlt=\"A graphic of a select component with the label 'What’s your favourite type of coffee' and five options in the dropdown list.\"\r\n    state=\"good\"\r\n    caption=\"Use a standard select when providing less than ten options.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={selectFig6}\r\n    imageAlt=\"A graphic of a select component with searchable functionality with the label 'What’s your favourite type of coffee' and five options in the dropdown list. Focus is on the input field rather than the dropdown list.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t use the searchable variant when providing less than ten options.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n### Content\r\n\r\nThe component can be configured to show values that either match the search term, or show values that contain the search term. For example, United Kingdom matches the search term ‘Un’, and Tunisia contains the search term ‘Un’.\r\n\r\nFor searches that take time to load results or suggestions, display the loading state whilst the search is loading. Use the empty state for searches that have no results or suggested options.\r\n\r\n## Related components\r\n\r\n- [Search bar](/components/search-bar)\r\n",
      "path": "/components/select",
      "navPriority": 28,
      "date": "2024-05-02",
      "title": "Select",
      "status": "BETA",
      "subTitle": "Selects allow users to select one or more values from a list of options.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/select",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/select"
        },
        {
          "title": "Code",
          "path": "/components/select/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/select/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\select\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.015Z",
        "lastModified": "2024-06-04T07:48:35.015Z",
        "size": 7650,
        "formattedSize": "7.5 KB"
      }
    },
    {
      "id": "components\\side-nav\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nThe side navigation component forms an app's main navigation. Therefore, it always appears at the start of a page's tab index. It also uses a `navigation` landmark to allow quick navigation from anywhere within a page's content.\r\n\r\nThe side navigation is essentially a group of links ordered vertically in the component. Tabbing through the side navigation content follows the logical order by moving from the top most item to the bottom most item, with the expansion toggle button being the last focusable element in the component before focus is moved to page content.\r\n\r\nIn a collapsed side navigation, menu option labels are always available in a tooltip by hovering or focusing on the icon button. Any truncated text can also be accessed through use of tooltips in this way.\r\n\r\n## For Assistive Technology\r\n\r\nIcon-only menu options have accessible labels that are announced by a screen reader when focused.\r\n\r\nCollapsible option groups use `aria-expanded` to indicate whether the group is open or closed. If closed, focus skips over the group's content to the next elements. If open, each menu item in the group is included in the tab order. Collapsible option groups can be opened or closed using the **enter** or **space** key.\r\n\r\n## Based on\r\n\r\nThe side navigation component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/GL/wiki/Using_ARIA_landmarks_to_identify_regions_of_a_page\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Using ARIA landmarks to identify regions of a page\r\n    </ic-link>\r\n    , W3, accessed June 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.aditus.io/patterns/accordion/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Accessible Accordion\r\n    </ic-link>\r\n    , Aditus.io, accessed June 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/ARIA/apg/example-index/accordion/accordion.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Accordion Example\r\n    </ic-link>\r\n    , W3, accessed June 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/side-navigation/accessibility",
      "date": "2024-04-15",
      "title": "Side navigation",
      "status": "BETA",
      "subTitle": "Side navigation provides an app's main navigation and is fixed on the left-hand side of the app. It includes the app's name, main navigation and optional secondary links.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/side-navigation",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/side-navigation"
        },
        {
          "title": "Code",
          "path": "/components/side-navigation/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/side-navigation/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\side-nav\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.333Z",
        "lastModified": "2024-05-20T13:20:43.333Z",
        "size": 3045,
        "formattedSize": "3.0 KB"
      }
    },
    {
      "id": "components\\side-nav\\codex",
      "contents": "\r\nimport {\r\n  IcSideNavigation,\r\n  IcNavigationItem,\r\n  IcNavigationGroup,\r\n  IcDivider,\r\n  IcLink,\r\n  SlottedSVG,\r\n  IcBadge,\r\n} from \"@ukic/react\";\r\n\r\nimport {\r\n  mdiHome,\r\n  mdiCoffeeOutline,\r\n  mdiMagnify,\r\n  mdiCoffeeMakerOutline,\r\n  mdiCogOutline,\r\n  mdiTeaOutline,\r\n} from \"@mdi/js\";\r\n\r\nimport { MemoryRouter, NavLink } from \"react-router-dom\";\r\n\r\n## Component demo\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-side-navigation appTitle=\"ACME coffee shop\" version=\"v0.0.7\" status=\"Alpha\">\r\n  <svg slot=\"app-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n    <title>coffee-outline</title>\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n  </svg>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>home</title>\r\n      <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n    </svg> \r\n  </ic-navigation-item>\r\n  <ic-divider slot=\"primary-navigation\"></ic-divider>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>magnify</title>\r\n      <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-maker-outline</title>\r\n      <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>cog-outline</title>\r\n      <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n</ic-side-navigation>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSideNavigation appTitle=\"ACME coffee shop\" version=\"v0.0.7\" status=\"Alpha\">\r\n  <SlottedSVG slot=\"app-icon\" viewBox=\"0 0 24 24\">\r\n    <title>coffee-outline</title>\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n  </SlottedSVG>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>home</title>\r\n      <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n    </SlottedSVG> \r\n  </IcNavigationItem>\r\n  <IcDivider slot=\"primary-navigation\"></IcDivider>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>magnify</title>\r\n      <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-maker-outline</title>\r\n      <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>cog-outline</title>\r\n      <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n</IcSideNavigation>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsDefault}\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    justifyContent: \"flex-start\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    padding: \"0px\",\r\n  }}\r\n>\r\n  <IcSideNavigation\r\n    appTitle=\"ACME coffee shop\"\r\n    version=\"v0.0.7\"\r\n    status=\"Alpha\"\r\n    disableAutoParentStyling\r\n    inline\r\n  >\r\n    <SlottedSVG slot=\"app-icon\" viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>home</title>\r\n        <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcDivider slot=\"primary-navigation\" />\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>magnify</title>\r\n        <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>coffee-outline</title>\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>coffee-maker-outline</title>\r\n        <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>cog-outline</title>\r\n        <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n  </IcSideNavigation>\r\n</ComponentPreview>\r\n\r\n## Side navigation details\r\n\r\n<ComponentDetails component=\"ic-side-navigation\" />\r\n\r\n## Navigation group details\r\n\r\n<ComponentDetails component=\"ic-navigation-group\" />\r\n\r\n## Navigation item details\r\n\r\n<ComponentDetails component=\"ic-navigation-item\" />\r\n\r\n## Variants\r\n\r\n### Static\r\n\r\nexport const snippetsStatic = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-side-navigation appTitle=\"ACME coffee shop\" version=\"v0.0.7\" status=\"Alpha\" static=\"true\">\r\n  <svg slot=\"app-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n    <title>coffee-outline</title>\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n  </svg>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>home</title>\r\n      <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n    </svg> \r\n  </ic-navigation-item>\r\n  <ic-divider slot=\"primary-navigation\"></ic-divider>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>magnify</title>\r\n      <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-maker-outline</title>\r\n      <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>cog-outline</title>\r\n      <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n</ic-side-navigation>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSideNavigation appTitle=\"ACME coffee shop\" version=\"v0.0.7\" status=\"Alpha\" static>\r\n  <SlottedSVG slot=\"app-icon\" viewBox=\"0 0 24 24\">\r\n    <title>coffee-outline</title>\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n  </SlottedSVG>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>home</title>\r\n      <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n    </SlottedSVG> \r\n  </IcNavigationItem>\r\n  <IcDivider slot=\"primary-navigation\"></IcDivider>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>magnify</title>\r\n      <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-maker-outline</title>\r\n      <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>cog-outline</title>\r\n      <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n</IcSideNavigation>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsStatic}\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    justifyContent: \"flex-start\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    padding: \"0px\",\r\n  }}\r\n>\r\n  <IcSideNavigation\r\n    appTitle=\"ACME coffee shop\"\r\n    version=\"v0.0.7\"\r\n    status=\"Alpha\"\r\n    disableAutoParentStyling\r\n    inline\r\n    static\r\n  >\r\n    <SlottedSVG slot=\"app-icon\" viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>home</title>\r\n        <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcDivider slot=\"primary-navigation\" />\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>magnify</title>\r\n        <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>coffee-outline</title>\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>coffee-maker-outline</title>\r\n        <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>cog-outline</title>\r\n        <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n  </IcSideNavigation>\r\n</ComponentPreview>\r\n\r\n### Expanded on default\r\n\r\nexport const snippetsExpanded = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-side-navigation\r\n  app-title=\"ACME coffee shop\"\r\n  version=\"v0.0.7\"\r\n  status=\"Alpha\"\r\n  expanded\r\n>\r\n  <svg slot=\"app-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n    <title>coffee-outline</title>\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n  </svg>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>home</title>\r\n      <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n    </svg> \r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>magnify</title>\r\n      <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-maker-outline</title>\r\n      <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>cog-outline</title>\r\n      <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n</ic-side-navigation>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSideNavigation\r\n  appTitle=\"ACME coffee shop\"\r\n  version=\"v0.0.7\"\r\n  status=\"Alpha\"\r\n  expanded\r\n>\r\n  <SlottedSVG slot=\"app-icon\" viewBox=\"0 0 24 24\">\r\n    <title>coffee-outline</title>\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n  </SlottedSVG>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>home</title><path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n    </SlottedSVG> \r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>magnify</title>\r\n      <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-maker-outline</title>\r\n      <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>cog-outline</title>\r\n      <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n</IcSideNavigation>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsExpanded}\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    justifyContent: \"flex-start\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    padding: \"0px\",\r\n  }}\r\n>\r\n  <IcSideNavigation\r\n    appTitle=\"ACME coffee shop\"\r\n    version=\"v0.0.7\"\r\n    status=\"Alpha\"\r\n    expanded\r\n    disableAutoParentStyling\r\n    inline\r\n  >\r\n    <SlottedSVG slot=\"app-icon\" viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>home</title>\r\n        <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>magnify</title>\r\n        <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>coffee-outline</title>\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>coffee-maker-outline</title>\r\n        <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>cog-outline</title>\r\n        <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n  </IcSideNavigation>\r\n</ComponentPreview>\r\n\r\n### Collapsed labels\r\n\r\nexport const snippetsCollapsed = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-side-navigation app-title=\"ACME coffee shop\" version=\"v0.0.0\" status=\"Alpha\" collapsed-icon-labels=\"true\">\r\n  <svg slot=\"app-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n    <title>coffee-outline</title>\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n  </svg>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>home</title>\r\n      <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n    </svg> \r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>magnify</title>\r\n      <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-maker-outline</title>\r\n      <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>cog-outline</title>\r\n      <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n</ic-side-navigation>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSideNavigation appTitle=\"ACME coffee shop\" version=\"v0.0.7\" status=\"Alpha\" collapsedIconLabels>\r\n  <SlottedSVG slot=\"app-icon\" viewBox=\"0 0 24 24\">\r\n    <title>coffee-outline</title>\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n  </SlottedSVG>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>home</title>\r\n      <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n    </SlottedSVG> \r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>magnify</title>\r\n      <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-maker-outline</title>\r\n      <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>cog-outline</title>\r\n      <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n</IcSideNavigation>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsCollapsed}\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    justifyContent: \"flex-start\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    padding: \"0px\",\r\n  }}\r\n>\r\n  <IcSideNavigation\r\n    appTitle=\"ACME coffee shop\"\r\n    version=\"v0.0.0\"\r\n    status=\"Alpha\"\r\n    collapsedIconLabels\r\n    inline\r\n  >\r\n    <SlottedSVG slot=\"app-icon\" viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>home</title>\r\n        <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>magnify</title>\r\n        <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>coffee-outline</title>\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>coffee-maker-outline</title>\r\n        <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>cog-outline</title>\r\n        <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n  </IcSideNavigation>\r\n</ComponentPreview>\r\n\r\n### With badges on navigation items\r\n\r\nexport const snippetsBadge = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-side-navigation appTitle=\"ACME coffee shop\" version=\"v0.0.7\" status=\"Alpha\">\r\n  <svg slot=\"app-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n    <title>coffee-outline</title>\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n  </svg>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>home</title>\r\n      <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n    </svg> \r\n  </ic-navigation-item>\r\n  <ic-divider slot=\"primary-navigation\"></ic-divider>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>magnify</title>\r\n      <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n    <ic-badge type=\"dot\" slot=\"badge\" variant=\"error\" position=\"far\" size=\"large\"></ic-badge>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n    <ic-badge type=\"dot\" slot=\"badge\" variant=\"success\" position=\"far\" size=\"large\"></ic-badge>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-maker-outline</title>\r\n      <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n  <ic-navigation-item slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>cog-outline</title>\r\n      <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n    </svg>\r\n  </ic-navigation-item>\r\n</ic-side-navigation>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSideNavigation appTitle=\"ACME coffee shop\" version=\"v0.0.7\" status=\"Alpha\">\r\n  <SlottedSVG slot=\"app-icon\" viewBox=\"0 0 24 24\">\r\n    <title>coffee-outline</title>\r\n    <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n  </SlottedSVG>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>home</title>\r\n      <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n    </SlottedSVG> \r\n  </IcNavigationItem>\r\n  <IcDivider slot=\"primary-navigation\"></IcDivider>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>magnify</title>\r\n      <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n    <IcBadge type=\"dot\" slot=\"badge\" variant=\"error\" position=\"far\" size=\"large\"/>\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n    <IcBadge type=\"dot\" slot=\"badge\" variant=\"success\" position=\"far\" size=\"large\"/>\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-maker-outline</title>\r\n      <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n    <SlottedSVG slot='icon' viewBox=\"0 0 24 24\">\r\n      <title>cog-outline</title>\r\n      <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationItem>\r\n</IcSideNavigation>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsBadge}\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    justifyContent: \"flex-start\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    padding: \"0px\",\r\n  }}\r\n>\r\n  <IcSideNavigation\r\n    appTitle=\"ACME coffee shop\"\r\n    version=\"v0.0.7\"\r\n    status=\"Alpha\"\r\n    disableAutoParentStyling\r\n    inline\r\n  >\r\n    <SlottedSVG slot=\"app-icon\" viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>home</title>\r\n        <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcDivider slot=\"primary-navigation\" />\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>magnify</title>\r\n        <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n      <IcBadge\r\n        type=\"dot\"\r\n        slot=\"badge\"\r\n        variant=\"error\"\r\n        position=\"far\"\r\n        size=\"large\"\r\n      />\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>coffee-outline</title>\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n      <IcBadge\r\n        type=\"dot\"\r\n        slot=\"badge\"\r\n        variant=\"success\"\r\n        position=\"far\"\r\n        size=\"large\"\r\n      />\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>coffee-maker-outline</title>\r\n        <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n      <SlottedSVG slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>cog-outline</title>\r\n        <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n  </IcSideNavigation>\r\n</ComponentPreview>\r\n\r\n### With Material Design icons in SlottedSVG\r\n\r\n[MDI](https://pictogrammers.com/library/mdi/) can be imported from the `@mdi/js` package and used in `<SlottedSVG>`.\r\nTo scale the icons, use the ['viewBox' attribute](https://css-tricks.com/scale-svg/#aa-the-viewbox-attribute)\r\n\r\n```bash\r\nnpm i @mdi/js\r\n```\r\n\r\nexport const withMDIicons = [\r\n  {\r\n    language: \"React\",\r\n    snippet: `// importing Material Design icons\r\nimport { \r\n  mdiCoffeeOutline, \r\n  mdiHome,\r\n  mdiMagnify,\r\n  mdiCoffeeMakerOutline,\r\n  mdiCogOutline,\r\n  mdiTeaOutline\r\n} from \"@mdi/js\";\r\n...\r\n<IcSideNavigation\r\n  appTitle=\"ACME coffee Shop\"\r\n  version=\"v0.0.7\"\r\n  status=\"Alpha\"\r\n>\r\n  <SlottedSVG slot=\"app-icon\" path={mdiCoffeeOutline} viewBox=\"0 0 24 24\" />\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"/\" label=\"Home\">\r\n    <SlottedSVG slot=\"icon\" path={mdiHome} viewBox=\"0 0 24 24\" />\r\n  </IcNavigationItem>\r\n  <IcDivider slot=\"primary-navigation\" />\r\n  <IcNavigationItem slot=\"primary-navigation\" href=\"/\" label=\"Search\">\r\n    <SlottedSVG slot=\"icon\" path={mdiMagnify} viewBox=\"0 0 24 24\" />\r\n  </IcNavigationItem>\r\n  <IcNavigationGroup\r\n    slot=\"primary-navigation\"\r\n    label=\"Teas\"\r\n    expandable=\"true\"\r\n  >\r\n    <IcNavigationItem label=\"English breakfast\" href=\"/\">\r\n      <SlottedSVG slot=\"icon\" path={mdiTeaOutline} viewBox=\"0 0 24 24\" />\r\n    </IcNavigationItem>\r\n    <IcNavigationItem label=\"Chai\" href=\"/\">\r\n      <SlottedSVG slot=\"icon\" path={mdiTeaOutline} viewBox=\"0 0 24 24\" />\r\n    </IcNavigationItem>\r\n  </IcNavigationGroup>\r\n  <IcNavigationItem\r\n    slot=\"primary-navigation\"\r\n    href=\"/\"\r\n    label=\"All other types of teas which you feel can be added.\"\r\n  >\r\n    <SlottedSVG slot=\"icon\" path={mdiTeaOutline} viewBox=\"0 0 24 24\" />\r\n  </IcNavigationItem>\r\n  <IcNavigationItem slot=\"secondary-navigation\" href=\"/\" label=\"Settings\">\r\n    <SlottedSVG slot=\"icon\" path={mdiCogOutline} viewBox=\"0 0 24 24\" />\r\n  </IcNavigationItem>\r\n</IcSideNavigation>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={withMDIicons}\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    justifyContent: \"flex-start\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    padding: \"0px\",\r\n  }}\r\n>\r\n  <IcSideNavigation\r\n    appTitle=\"ACME coffee shop\"\r\n    version=\"v0.0.7\"\r\n    status=\"Alpha\"\r\n    disableAutoParentStyling\r\n    inline\r\n  >\r\n    <SlottedSVG slot=\"app-icon\" path={mdiCoffeeOutline} viewBox=\"0 0 24 24\" />\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"/\" label=\"Home\">\r\n      <SlottedSVG slot=\"icon\" path={mdiHome} viewBox=\"0 0 24 24\" />\r\n    </IcNavigationItem>\r\n    <IcDivider slot=\"primary-navigation\" />\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"/\" label=\"Search\">\r\n      <SlottedSVG slot=\"icon\" path={mdiMagnify} viewBox=\"0 0 24 24\" />\r\n    </IcNavigationItem>\r\n    <IcNavigationGroup slot=\"primary-navigation\" label=\"Teas\" expandable=\"true\">\r\n      <IcNavigationItem label=\"English breakfast\" href=\"/\">\r\n        <SlottedSVG slot=\"icon\" path={mdiTeaOutline} viewBox=\"0 0 24 24\" />\r\n      </IcNavigationItem>\r\n      <IcNavigationItem label=\"Chai\" href=\"/\">\r\n        <SlottedSVG slot=\"icon\" path={mdiTeaOutline} viewBox=\"0 0 24 24\" />\r\n      </IcNavigationItem>\r\n      <IcNavigationItem\r\n        href=\"/\"\r\n        label=\"All other types of teas which can be added.\"\r\n      >\r\n        <SlottedSVG slot=\"icon\" path={mdiTeaOutline} viewBox=\"0 0 24 24\" />\r\n      </IcNavigationItem>\r\n    </IcNavigationGroup>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"/\" label=\"Equipment\">\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        path={mdiCoffeeMakerOutline}\r\n        viewBox=\"0 0 24 24\"\r\n      />\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"secondary-navigation\" href=\"/\" label=\"Settings\">\r\n      <SlottedSVG slot=\"icon\" path={mdiCogOutline} viewBox=\"0 0 24 24\" />\r\n    </IcNavigationItem>\r\n  </IcSideNavigation>\r\n</ComponentPreview>\r\n\r\n### With React Router and Material Design Icons (using slots)\r\n\r\nThe following example also demonstrates using a slotted app title link.\r\n\r\nexport const withReactRouter = [\r\n  {\r\n    language: \"React\",\r\n    snippet: `<MemoryRouter initialEntries={[\"/\"]}>\r\n  <div style={{ display: \"flex\", flexDirection: \"row\"}}>\r\n    <IcSideNavigation\r\n    version=\"v0.0.7\"\r\n    status=\"Alpha\"\r\n    appTitle=\"ACME coffee shop\"\r\n    >\r\n      <NavLink to=\"/\" slot=\"app-title\">ACME coffee shop</NavLink>\r\n      <SlottedSVG slot=\"app-icon\" path={mdiCoffeeOutline} viewBox=\"0 0 24 24\" />\r\n      <IcNavigationItem\r\n        slot=\"primary-navigation\"\r\n      >\r\n        <NavLink to=\"/\" slot=\"navigation-item\">\r\n          <SlottedSVG slot=\"icon\" path={mdiHome} viewBox=\"0 0 24 24\" height=\"1.5rem\" width=\"1.5rem\" fill=\"currentcolor\" />\r\n          Home\r\n        </NavLink>\r\n      </IcNavigationItem>\r\n      <IcNavigationItem slot=\"primary-navigation\">\r\n        <NavLink to=\"/search\" slot=\"navigation-item\">\r\n          <SlottedSVG slot=\"icon\" path={mdiMagnify} viewBox=\"0 0 24 24\" height=\"1.5rem\" width=\"1.5rem\" fill=\"currentcolor\" />\r\n          Search\r\n        </NavLink>\r\n      </IcNavigationItem>\r\n      <IcNavigationItem slot=\"primary-navigation\">\r\n        <NavLink to=\"/drinks\" slot=\"navigation-item\">\r\n          <SlottedSVG slot=\"icon\" path={mdiCoffeeOutline} viewBox=\"0 0 24 24\" height=\"1.5rem\" width=\"1.5rem\" fill=\"currentcolor\" />\r\n          Drinks\r\n        </NavLink>\r\n      </IcNavigationItem>\r\n      <IcNavigationItem slot=\"primary-navigation\">\r\n        <NavLink to=\"/coffee-maker\" slot=\"navigation-item\">\r\n          <SlottedSVG slot=\"icon\" path={mdiCoffeeMakerOutline} viewBox=\"0 0 24 24\" height=\"1.5rem\" width=\"1.5rem\" fill=\"currentcolor\" />\r\n          Equipment\r\n        </NavLink>\r\n      </IcNavigationItem>\r\n      <IcNavigationItem slot=\"secondary-navigation\">\r\n        <NavLink to=\"/settings\" slot=\"navigation-item\">\r\n          <SlottedSVG slot=\"icon\" path={mdiCogOutline} viewBox=\"0 0 24 24\" height=\"1.5rem\" width=\"1.5rem\" fill=\"currentcolor\" />\r\n          Settings\r\n        </NavLink>\r\n      </IcNavigationItem>\r\n    </IcSideNavigation>\r\n    <main>\r\n      <IcSectionContainer>\r\n        <Routes>\r\n          <Route path=\"/\" element={() => <IcTypography>This is the home page</IcTypography>} />\r\n          <Route path=\"/search\" element={() => <IcTypography>Search</IcTypography>} />\r\n          <Route path=\"/drinks\" element={() => <IcTypography>Drinks</IcTypography>} />\r\n          <Route path=\"/coffee-maker\" element={() => <IcTypography>Coffee Maker</IcTypography>} />\r\n          <Route path=\"/settings\" element={() => <IcTypography>Settings</IcTypography>} />\r\n        </Routes>\r\n      </IcSectionContainer>\r\n    </main>\r\n  </div>\r\n</MemoryRouter>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={withReactRouter}\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    justifyContent: \"flex-start\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    padding: \"0px\",\r\n  }}\r\n>\r\n  <MemoryRouter initialEntries={[\"/\"]}>\r\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n      <IcSideNavigation\r\n        appTitle=\"ACME coffee shop\"\r\n        version=\"v0.0.7\"\r\n        status=\"Alpha\"\r\n      >\r\n        <NavLink to=\"/\" slot=\"app-title\">\r\n          ACME coffee shop\r\n        </NavLink>\r\n        <SlottedSVG\r\n          slot=\"app-icon\"\r\n          path={mdiCoffeeOutline}\r\n          viewBox=\"0 0 24 24\"\r\n        />\r\n        <IcNavigationItem slot=\"primary-navigation\">\r\n          <NavLink to=\"/\" slot=\"navigation-item\">\r\n            <SlottedSVG\r\n              slot=\"icon\"\r\n              path={mdiHome}\r\n              viewBox=\"0 0 24 24\"\r\n              height=\"1.5rem\"\r\n              width=\"1.5rem\"\r\n              fill=\"currentcolor\"\r\n            />\r\n            Home\r\n          </NavLink>\r\n        </IcNavigationItem>\r\n        <IcNavigationItem slot=\"primary-navigation\">\r\n          <NavLink to=\"/search\" slot=\"navigation-item\">\r\n            <SlottedSVG\r\n              slot=\"icon\"\r\n              path={mdiMagnify}\r\n              viewBox=\"0 0 24 24\"\r\n              height=\"1.5rem\"\r\n              width=\"1.5rem\"\r\n              fill=\"currentcolor\"\r\n            />\r\n            Search\r\n          </NavLink>\r\n        </IcNavigationItem>\r\n        <IcNavigationItem slot=\"primary-navigation\">\r\n          <NavLink to=\"/drinks\" slot=\"navigation-item\">\r\n            <SlottedSVG\r\n              slot=\"icon\"\r\n              path={mdiCoffeeOutline}\r\n              viewBox=\"0 0 24 24\"\r\n              height=\"1.5rem\"\r\n              width=\"1.5rem\"\r\n              fill=\"currentcolor\"\r\n            />\r\n            Drinks\r\n          </NavLink>\r\n        </IcNavigationItem>\r\n        <IcNavigationItem slot=\"primary-navigation\">\r\n          <NavLink to=\"/coffee-maker\" slot=\"navigation-item\">\r\n            <SlottedSVG\r\n              slot=\"icon\"\r\n              path={mdiCoffeeMakerOutline}\r\n              viewBox=\"0 0 24 24\"\r\n              height=\"1.5rem\"\r\n              width=\"1.5rem\"\r\n              fill=\"currentcolor\"\r\n            />\r\n            Equipment\r\n          </NavLink>\r\n        </IcNavigationItem>\r\n        <IcNavigationItem slot=\"secondary-navigation\">\r\n          <NavLink to=\"/settings\" slot=\"navigation-item\">\r\n            <SlottedSVG\r\n              slot=\"icon\"\r\n              path={mdiCogOutline}\r\n              viewBox=\"0 0 24 24\"\r\n              height=\"1.5rem\"\r\n              width=\"1.5rem\"\r\n              fill=\"currentcolor\"\r\n            />\r\n            Settings\r\n          </NavLink>\r\n        </IcNavigationItem>\r\n      </IcSideNavigation>\r\n    </div>\r\n  </MemoryRouter>\r\n</ComponentPreview>\r\n\r\n## Layout example\r\n\r\nFixed side navigation places the side navigation to the viewport.\r\n\r\nexport const basicLayoutFixedViewport = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `// Inline styling added for verboseness\r\n<div style=\"display: flex; height:100%;\">\r\n  <ic-side-navigation\r\n    app-title=\"Application Name\"\r\n    version=\"v0.0.0\"\r\n    status=\"BETA\"\r\n  >\r\n    <svg\r\n      slot=\"app-icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path\r\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\"\r\n      />\r\n    </svg>\r\n    <ic-navigation-item slot=\"primary-navigation\" href=\"/\" label=\"Home\">\r\n      <svg\r\n        slot=\"icon\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n      </svg>\r\n    </ic-navigation-item>\r\n    <ic-navigation-item\r\n      slot=\"primary-navigation\"\r\n      href=\"/\"\r\n      label=\"Search\"\r\n      selected=\"true\"\r\n    >\r\n      <svg\r\n        slot=\"icon\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n      </svg>\r\n    </ic-navigation-item>\r\n    <ic-navigation-item\r\n      slot=\"secondary-navigation\"\r\n      href=\"/\"\r\n      label=\"Settings\"\r\n    >\r\n      <svg\r\n        slot=\"icon\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n      </svg>\r\n    </ic-navigation-item>\r\n  </ic-side-navigation>\r\n  <div style=\"display:flex; flex-direction: column; flex-grow: 1;\">\r\n    <main style=\"height: 100vh;\">\r\n      <ic-section-container>\r\n        <ic-typography>\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed vestibulum venenatis facilisis. Nam tortor felis, auctor vel ante quis, tempor interdum libero. In dictum sodales velit, eu egestas arcu dignissim ac. Aliquam facilisis eros dolor, id laoreet orci sagittis ut. Sed tempus, lacus in pretium molestie, lectus magna interdum risus, vel fringilla libero ex eu dui. Suspendisse ullamcorper vehicula lacinia. Phasellus congue velit nisl, vitae congue ligula rutrum id.</p>\r\n        </ic-typography>\r\n        <ic-typography>\r\n          <p>Etiam in suscipit metus. Duis semper, sapien a molestie semper, ex nibh porttitor tellus, vel molestie justo odio vel purus. Curabitur porttitor, tortor sed semper sollicitudin, odio odio congue tortor, eget pulvinar tellus nisl ac lacus. In ultricies commodo lorem, a laoreet diam. Ut a mauris at tellus tincidunt ullamcorper sit amet in metus. Aenean facilisis placerat dictum. Phasellus mattis ante sollicitudin luctus iaculis. Nam porttitor lobortis rhoncus. Nam nec malesuada purus, at pulvinar mauris. Nam non lorem ante.</p>\r\n        </ic-typography>\r\n      </ic-section-container>\r\n    </main>\r\n    <ic-footer\r\n      description=\"The ICDS is maintained by the Design Practice Team. If you've got a question or want to feedback,\r\n        please get in touch.\"\r\n      caption=\"All content is available under the Open Government Licence v3.0, except source code and code examples which are available under the MIT Licence.\"\r\n    >\r\n      <ic-footer-link slot=\"link\" href=\"/\">Get Started</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"/\">Accessibility</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"/\">Styles</ic-footer-link>\r\n    </ic-footer>\r\n    <ic-classification-banner classification=\"official\"></ic-classification-banner>\r\n  </div>\r\n</div>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `// Inline styling added for verboseness\r\n<div style={{display: 'flex', height: '100%'}}>\r\n  <IcSideNavigation\r\n    appTitle=\"Application Name\"\r\n    version=\"v0.0.0\"\r\n    status=\"BETA\"\r\n  >\r\n    <SlottedSVG\r\n      slot=\"app-icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path\r\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\"\r\n      />\r\n    </SlottedSVG>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"/\" label=\"Home\">\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem\r\n      slot=\"primary-navigation\"\r\n      href=\"/\"\r\n      label=\"Search\"\r\n      selected\r\n    >\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem\r\n      slot=\"secondary-navigation\"\r\n      href=\"/\"\r\n      label=\"Settings\"\r\n    >\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n      </SlottedSVG>\r\n    </IcNavigationItem>\r\n  </IcSideNavigation>\r\n  <div style={{display: 'flex', flexDirection: 'column', flexGrow: '1'}}>\r\n    <main style={{height: '100vh'}}>\r\n      <IcSectionContainer>\r\n        <IcTypography>\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed vestibulum venenatis facilisis. Nam tortor felis, auctor vel ante quis, tempor interdum libero. In dictum sodales velit, eu egestas arcu dignissim ac. Aliquam facilisis eros dolor, id laoreet orci sagittis ut. Sed tempus, lacus in pretium molestie, lectus magna interdum risus, vel fringilla libero ex eu dui. Suspendisse ullamcorper vehicula lacinia. Phasellus congue velit nisl, vitae congue ligula rutrum id.</p>\r\n        </IcTypography>\r\n        <IcTypography>\r\n          <p>Etiam in suscipit metus. Duis semper, sapien a molestie semper, ex nibh porttitor tellus, vel molestie justo odio vel purus. Curabitur porttitor, tortor sed semper sollicitudin, odio odio congue tortor, eget pulvinar tellus nisl ac lacus. In ultricies commodo lorem, a laoreet diam. Ut a mauris at tellus tincidunt ullamcorper sit amet in metus. Aenean facilisis placerat dictum. Phasellus mattis ante sollicitudin luctus iaculis. Nam porttitor lobortis rhoncus. Nam nec malesuada purus, at pulvinar mauris. Nam non lorem ante.</p>\r\n        </IcTypography>\r\n      </IcSectionContainer>\r\n    </main>\r\n    <IcFooter\r\n      description=\"The ICDS is maintained by the Design Practice Team. If you've got a question or want to feedback,\r\n        please get in touch.\"\r\n      caption=\"All content is available under the Open Government Licence v3.0, except source code and code examples which are available under the MIT Licence.\"\r\n    >\r\n      <IcFooterLink slot=\"link\" href=\"/\">Get Started</IcFooterLink>\r\n      <IcFooterLink slot=\"link\" href=\"/\">Accessibility</IcFooterLink>\r\n      <IcFooterLink slot=\"link\" href=\"/\">Styles</IcFooterLink>\r\n    </IcFooter>\r\n    <IcClassificationBanner classification=\"official\"></IcClassificationBanner>\r\n  </div>\r\n</div>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={basicLayoutFixedViewport}\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"16px\",\r\n  }}\r\n>\r\n  <IcLink href=\"/side-navigation-layout\" target=\"_blank\">\r\n    View example in new window\r\n  </IcLink>\r\n</ComponentPreview>\r\n",
      "path": "/components/side-navigation/code",
      "date": "2023-10-11",
      "title": "Side navigation",
      "status": "BETA",
      "subTitle": "Side navigation provides an app's main navigation and is fixed on the left-hand side of the app. It includes the app's name, main navigation and optional secondary links.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/side-navigation",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/side-navigation"
        },
        {
          "title": "Code",
          "path": "/components/side-navigation/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/side-navigation/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\side-nav\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.135Z",
        "lastModified": "2024-04-04T12:41:44.135Z",
        "size": 76725,
        "formattedSize": "74.9 KB"
      }
    },
    {
      "id": "components\\side-nav\\guidancex",
      "contents": "\r\nimport { IcSideNavigation, IcNavigationItem, IcAlert } from \"@ukic/react\";\r\n\r\nimport sideNavigationFig1 from \"./images/fig-1-dont-use-both-side-and-top-navigation.png\";\r\nimport sideNavigationFig2 from \"./images/fig-2-avoid-side-navigation-for-complex-app-structures.png\";\r\nimport sideNavigationFig3 from \"./images/fig-3-set-side-navigation-default-display.png\";\r\nimport sideNavigationFig4 from \"./images/fig-4-static-side-navigation.png\";\r\nimport sideNavigationFig5 from \"./images/fig-5-side-navigation-sub-menu.png\";\r\nimport sideNavigationFig6 from \"./images/fig-6-personality-colourisation.png\";\r\nimport sideNavigationFig7 from \"./images/fig-7-dont-position-side-nav-above-footer.png\";\r\nimport sideNavigationFig8 from \"./images/fig-8-keep-menu-option-labels-concise-to-avoid-truncation.png\";\r\nimport sideNavigationFig9 from \"./images/fig-9-tooltips-show-labels-on-hover-or-focus.png\";\r\nimport sideNavigationFig10 from \"./images/fig-10-set-menu-options-to-display-labels.png\";\r\nimport sideNavigationFig11 from \"./images/fig-11-use-menu-groups-and-drilldowns.png\";\r\n\r\n## Introduction\r\n\r\nAn example of the side navigation component.\r\n\r\n<ComponentPreview\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    justifyContent: \"flex-start\",\r\n    padding: \"0px\",\r\n  }}\r\n>\r\n  <IcSideNavigation\r\n    appTitle=\"ACME coffee shop\"\r\n    version=\"v0.0.7\"\r\n    status=\"Alpha\"\r\n    disableAutoParentStyling\r\n    inline\r\n  >\r\n    <svg slot=\"app-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Home\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>home</title>\r\n        <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\r\n      </svg>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Search\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>magnify</title>\r\n        <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n      </svg>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Drinks\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>coffee-outline</title>\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </svg>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"primary-navigation\" href=\"#\" label=\"Equipment\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>coffee-maker-outline</title>\r\n        <path d=\"M18 6V4H20V2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H20V20H15.97C17.2 19.09 18 17.64 18 16V11H8V16C8 17.64 8.81 19.09 10.03 20H6V4H8V6C8 6.55 8.45 7 9 7H17C17.55 7 18 6.55 18 6M10 16V13H16V16C16 17.65 14.65 19 13 19S10 17.65 10 16M13 8C13.55 8 14 8.45 14 9S13.55 10 13 10 12 9.55 12 9 12.45 8 13 8Z\" />\r\n      </svg>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"secondary-navigation\" href=\"#\" label=\"Settings\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" slot=\"icon\" viewBox=\"0 0 24 24\">\r\n        <title>cog-outline</title>\r\n        <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" />\r\n      </svg>\r\n    </IcNavigationItem>\r\n  </IcSideNavigation>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse side navigation to help provide more screen space for the main content. Side navigation is well suited to apps that have mutually exclusive features that need to be switched between easily on any page.\r\n\r\nUse side navigation alongside additional components like [page headers](/components/page-header) to create a variety of different [layouts](/styles/layout-spacing) and navigation styles.\r\n\r\n## When not to use\r\n\r\nFor intranet-style and content-heavy apps, use [top navigation](/components/top-navigation) as it's better suited for providing links to a large number of pages.\r\n\r\nUse either side navigation or top navigation. Don't use both at the same time.\r\n\r\n<DoDontCaution\r\n  imageSrc={sideNavigationFig1}\r\n  imageAlt=\"An example app that shows a top navigation and side navigation used on the same page.\"\r\n  state=\"bad\"\r\n  caption=\"Don't use both side navigation and top navigation at the same time.\"\r\n/>\r\n\r\nAvoid using side navigation if the app has many destinations grouped into a multi-level hierarchy. Instead use a [top navigation](/components/top-navigation) with grouped links.\r\n\r\n<DoDontCaution\r\n  imageSrc={sideNavigationFig2}\r\n  imageAlt=\"An example app using side navigation to display multiple groups of links.\"\r\n  state=\"caution\"\r\n  caption=\"Avoid using side navigation for apps with complex page hierarchies. Instead use top navigation with grouped links.\"\r\n/>\r\n\r\n## Interaction behaviour\r\n\r\nSide navigation is expandable and displays the navigation labels and app info when expanded. Choose whether to display the side navigation as expanded or collapsed by default when the page loads.\r\n\r\n<DoDontCaution\r\n  imageSrc={sideNavigationFig3}\r\n  imageAlt=\"An example of an application with the side navigation expanded or collapsed by default as the page loads.\"\r\n  state=\"good\"\r\n  caption=\"Choose to display the side navigation as collapsed or expanded when the page loads.\"\r\n/>\r\n\r\nSet the side navigation to static if you want it to be either permanently expanded or permanently collapsed. This removes the expansion toggle button from the bottom of the side navigation.\r\n\r\n<DoDontCaution\r\n  imageSrc={sideNavigationFig4}\r\n  imageAlt=\"Two examples of side navigation that are set to static collapsed and static expanded. No expansion toggle button is displayed in the bottom section of the side navigation.\"\r\n  state=\"good\"\r\n  caption=\"Static side navigation examples.\"\r\n/>\r\n\r\nUse a drill-down menu option to provide access to child links in a sub-menu. The sub-menu can be closed by using the back button in the sub-menu's top section.\r\n\r\nSub-menus can be nested, but avoid creating overly deep page hierarchies and consider using top navigation with grouped links instead.\r\n\r\n<DoDontCaution\r\n  imageSrc={sideNavigationFig5}\r\n  imageAlt=\"An example side navigation component showing a menu option with a sub-menu of child links.\"\r\n  state=\"good\"\r\n  caption=\"A side navigation component with a sub-menu.\"\r\n/>\r\n\r\n## Colour\r\n\r\nThe side navigation uses the app's [theme colour](/styles/colour/#theme) as the background and automatically sets the foreground colour to ensure accessible contrast ratios. Change the app's theme colour to change the background colour of the side navigation and help distinguish your app from others your users may use.\r\n\r\n<DoDontCaution\r\n  imageSrc={sideNavigationFig6}\r\n  imageAlt=\"Two examples of side navigation components using different theme colours.\"\r\n  state=\"good\"\r\n  caption=\"Examples of side navigation using different theme colours.\"\r\n/>\r\n\r\n## Layout and placement\r\n\r\nAlways position the side navigation on the left hand of the screen and make sure that it vertically fills the browser window.\r\n\r\n<DoDontCaution\r\n  imageSrc={sideNavigationFig7}\r\n  imageAlt=\"An example app with a side navigation component that sits above the footer.\"\r\n  state=\"bad\"\r\n  caption=\"Don't position the side navigation so that it does not vertically fill the browser window.\"\r\n/>\r\n\r\n## Content\r\n\r\n### App information\r\n\r\nUse your app's name, icon, status and version information in the side navigation's app info fields.\r\n\r\n### Labels and icons\r\n\r\nFollow the [content style guidelines](/styles/content-style) for all menu option labels as well as each option group labels.\r\n\r\nFollow the [icon style guidelines](/styles/icons) when selecting icons for menu options.\r\n\r\nKeep labels concise as they will truncate if they are too long to display in the side navigation.\r\n\r\n<DoDontCaution\r\n  imageSrc={sideNavigationFig8}\r\n  imageAlt=\"An example side navigation showing menu items with long labels that are truncated.\"\r\n  state=\"caution\"\r\n  caption=\"Keep labels concise to avoid truncation.\"\r\n/>\r\n\r\n### Menu items\r\n\r\nSet the side navigation menu items to reflect your app's main navigation links.\r\n\r\nBy default, menu items will only display their icon when the side navigation is collapsed. The item label will be displayed via a tooltip when hovering or focusing on the menu item.\r\n\r\n<DoDontCaution\r\n  imageSrc={sideNavigationFig9}\r\n  imageAlt=\"An example side navigation component showing the menu option labels in a tooltip when hovering or focusing on the menu option.\"\r\n  state=\"good\"\r\n  caption=\"Side navigation shows menu item labels using tooltips when collapsed.\"\r\n/>\r\n\r\nSet the menu items to display their labels in the collapsed state by default if this will aid the recognition of the feature. However, take care when doing this as long menu item labels will be truncated.\r\n\r\n<DoDontCaution\r\n  imageSrc={sideNavigationFig10}\r\n  imageAlt=\"An example side navigation in collapsed state showing labels below the icons for each menu option.\"\r\n  state=\"good\"\r\n  caption=\"Set menu items to display their labels even in the collapsed state if this aids recognition of the feature.\"\r\n/>\r\n\r\nGroup related menu items into expandable menu item groups.\r\n\r\nUse a drill-down menu item if the menu item has a large number of child links to display. This will display the child links in the side navigation's sub-menu.\r\n\r\n<IcAlert\r\n  heading=\"Coming soon\"\r\n  message=\"Drill-down menu functionality is in development.\"\r\n  variant=\"info\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={sideNavigationFig11}\r\n  imageAlt=\"An example of side navigation showing grouped menu items and drill-down menu items.\"\r\n  state=\"good\"\r\n  caption=\"Side navigation showing grouped menu items and drill-down menu items.\"\r\n/>\r\n\r\n### Bottom menu items\r\n\r\nUse the sticky bottom menu section to provide quick links to global app features or external links.\r\n\r\n## Accessibility considerations\r\n\r\nMake sure to include alt-text when specifying icons for menu items.\r\n\r\n## Related Components\r\n\r\n- [Top navigation](/components/top-navigation)\r\n",
      "path": "/components/side-navigation",
      "navPriority": 29,
      "date": "2023-03-01",
      "title": "Side navigation",
      "status": "BETA",
      "subTitle": "Side navigation provides an app's main navigation and is fixed on the left-hand side of the app. It includes the app's name, main navigation and optional secondary links.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/side-navigation",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/side-navigation"
        },
        {
          "title": "Code",
          "path": "/components/side-navigation/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/side-navigation/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\side-nav\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.017Z",
        "lastModified": "2024-06-04T07:48:35.017Z",
        "size": 12429,
        "formattedSize": "12.1 KB"
      }
    },
    {
      "id": "components\\skeleton\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nThe component relies on CSS to be displayed before JavaScript is loaded on the page.\r\n\r\n## For Assistive Technology\r\n\r\nA user should be notified that content is loading. Skeletons use the `aria-busy` to tell assistive technologies that the container is loading. Aria-busy will be false when the container isn't refreshing and will be equal to true when the content is loading.\r\n\r\nGiven that few screen readers comply with `aria-busy=”true”`, we need to invoke `aria-hidden=”true”` to hide the busy content.\r\n\r\nSkeleton components shouldn’t be focusable.\r\n\r\n## Based on\r\n\r\nThe skeleton component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.tpgi.com/short-note-on-being-busy/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Short note on being busy\r\n    </ic-link>\r\n    , Steve Faulkner, accessed April 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://adrianroselli.com/2020/11/more-accessible-skeletons.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      More Accessible Skeletons\r\n    </ic-link>\r\n    , Adrian Roselli, accessed April 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://dockyard.com/blog/2020/03/02/accessible-loading-indicatorswith-no-extra-elements\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Accessible Loading Indicators—with No Extra Elements!\r\n    </ic-link>\r\n    , James Steinbach, accessed March 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n\r\n## Future research planned\r\n\r\nTo meet WCAG 2.2 Success Criterion 2.2.2 we need to include a mechanism to stop “any moving, blinking or scrolling information that starts automatically, lasts more than five seconds, and is presented in parallel with other content”. As the animation is subtle and less than one second we don't need to provide this.\r\n\r\nHowever, we could do further research into potential scenarios where it could be beneficial for specific users, and how to invoke the pausing pattern without affecting the general experience.\r\n",
      "path": "/components/skeleton/accessibility",
      "date": "2024-04-15",
      "title": "Skeleton",
      "status": "BETA",
      "subTitle": "Skeleton loading states are representations of the shape of content that help inform users that a specific type of component is loading.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/skeleton",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/skeleton"
        },
        {
          "title": "Code",
          "path": "/components/skeleton/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/skeleton/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\skeleton\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.333Z",
        "lastModified": "2024-05-20T13:20:43.333Z",
        "size": 2876,
        "formattedSize": "2.8 KB"
      }
    },
    {
      "id": "components\\skeleton\\codex",
      "contents": "\r\nimport {\r\n  IcSkeleton,\r\n  IcTypography,\r\n  IcCard,\r\n  IcButton,\r\n  SlottedSVG,\r\n} from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-skeleton variant=\"circle\"></ic-skeleton>\r\n<ic-typography variant=\"caption\">\r\n  <ic-skeleton variant=\"text\"></ic-skeleton>\r\n</ic-typography>\r\n<ic-skeleton></ic-skeleton>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSkeleton variant=\"circle\" />\r\n<IcTypography variant=\"caption\">\r\n  <IcSkeleton variant=\"text\" />\r\n</IcTypography>\r\n<IcSkeleton />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\r\n    <IcSkeleton variant=\"circle\" />\r\n    <IcTypography variant=\"caption\">\r\n      <IcSkeleton variant=\"text\" />\r\n    </IcTypography>\r\n    <IcSkeleton />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n## Skeleton details\r\n\r\n<ComponentDetails component=\"ic-skeleton\" />\r\n\r\n## Variants\r\n\r\n### Inherited size from child\r\n\r\nexport const snippetsInherited = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-skeleton><div style=\"height:200px;width:450px;\">Test text</div></ic-skeleton>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSkeleton>\r\n  <div style={{\r\n  height: \"200px\",\r\n  width: \"450px\"\r\n  }}>Test text</div>\r\n</IcSkeleton>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsInherited}>\r\n  <IcSkeleton>\r\n    <div\r\n      style={{\r\n        height: \"200px\",\r\n        width: \"450px\",\r\n      }}\r\n    >\r\n      Test text\r\n    </div>\r\n  </IcSkeleton>\r\n</ComponentPreview>\r\n\r\n### Set width and height\r\n\r\nexport const snippetsSetWidthAndHeight = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-typography variant=\"h4\">Height and width set with styles</ic-typography>\r\n<ic-skeleton style=\"height:200px;width:200px;\"></ic-skeleton>\r\n<ic-typography variant=\"h4\">Height set with styles</ic-typography>\r\n<ic-skeleton style=\"height:75px;\"></ic-skeleton>\r\n<ic-typography variant=\"h4\">Width set with styles</ic-typography>\r\n<ic-skeleton style=\"width:450px;\"></ic-skeleton>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTypography variant=\"h4\">Height and width set with styles</IcTypography>\r\n<IcSkeleton style={{\r\nheight: \"200px\",\r\nwidth: \"200px\"\r\n}} />\r\n<IcTypography variant=\"h4\">Height set with styles</IcTypography>\r\n<IcSkeleton style={{\r\n  height: \"75px\"\r\n}} />\r\n<IcTypography variant=\"h4\">Width set with styles</IcTypography>\r\n<IcSkeleton style={{\r\n  width: \"450px\"\r\n}} />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsSetWidthAndHeight}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\r\n    <IcTypography variant=\"h4\">Height and width set with styles</IcTypography>\r\n    <IcSkeleton\r\n      style={{\r\n        height: \"200px\",\r\n        width: \"200px\",\r\n      }}\r\n    />\r\n    <IcTypography variant=\"h4\">Height set with styles</IcTypography>\r\n    <IcSkeleton\r\n      style={{\r\n        height: \"75px\",\r\n      }}\r\n    />\r\n    <IcTypography variant=\"h4\">Width set with styles</IcTypography>\r\n    <IcSkeleton\r\n      style={{\r\n        width: \"450px\",\r\n      }}\r\n    />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Light\r\n\r\nexport const snippetsLight = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-skeleton variant=\"circle\" appearance=\"light\"></ic-skeleton>\r\n<ic-typography variant=\"caption\">\r\n  <ic-skeleton variant=\"text\" appearance=\"light\"></ic-skeleton>\r\n</ic-typography>\r\n<ic-skeleton appearance=\"light\"></ic-skeleton>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSkeleton variant=\"circle\" appearance=\"light\" />\r\n<IcTypography variant=\"caption\">\r\n  <IcSkeleton variant=\"text\" appearance=\"light\" />\r\n</IcTypography>\r\n<IcSkeleton appearance=\"light\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsLight}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\r\n    <IcSkeleton variant=\"circle\" appearance=\"light\" />\r\n    <IcTypography variant=\"caption\">\r\n      <IcSkeleton variant=\"text\" appearance=\"light\" />\r\n    </IcTypography>\r\n    <IcSkeleton appearance=\"light\" />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Within IcCard component\r\n\r\nexport const snippetsInCard = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<div>\r\n      <div id=\"content-container\"></div>\r\n      <br />\r\n      <ic-button variant=\"primary\" id=\"reload\">\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\r\n          <path\r\n            d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\r\n          ></path>\r\n        </svg>\r\n        Reload\r\n      </ic-button>\r\n    </div>\r\n    <script>\r\n     window.onload = function () {\r\n        document.getElementById(\"content-container\").innerHTML = loading();\r\n      };\r\n   const loading = () => {\r\n        return (\r\n          <ic-card\r\n            heading=\"Coffee\"\r\n            subheading=\"What is coffee?\"\r\n            message=\"Coffee is a brewed drink.\"\r\n          >\r\n            <ic-skeleton\r\n              slot=\"icon\"\r\n              variant=\"circle\"\r\n              style=\"height: 32px; width: 32px;\"\r\n            />\r\n            <ic-skeleton\r\n              slot=\"heading\"\r\n              variant=\"rectangle\"\r\n              style=\"height: 32px; width: 130px;\"\r\n            />\r\n            <ic-skeleton\r\n              slot=\"subheading\"\r\n              variant=\"text\"\r\n              style=\"height: 18px;  width: 150px;\"\r\n            />\r\n            <ic-skeleton\r\n              slot=\"message\"\r\n              variant=\"rectangle\"\r\n              style=\"height: 24px; width: 500px;\"\r\n            />\r\n            <ic-skeleton\r\n              slot=\"interaction-controls\"\r\n              variant=\"rectangle\"\r\n              style=\"height: 40px; width: 110px;\"\r\n            />\r\n            <ic-skeleton\r\n              slot=\"interaction-controls\"\r\n              variant=\"rectangle\"\r\n              style=\"height: 40px; width: 110px;\"\r\n            />\r\n          </ic-card>\r\n        );\r\n      };\r\nconst loaded = () => {\r\n        return (\r\n          <ic-card\r\n            heading=\"Coffee\"\r\n            subheading=\"What is coffee?\"\r\n            message=\"Coffee is a brewed drink.\"\r\n          >\r\n            <svg\r\n              slot=\"icon\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              height=\"24px\"\r\n              viewBox=\"0 0 24 24\"\r\n              width=\"24px\"\r\n              fill=\"#000000\"\r\n            >\r\n              <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n              <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\r\n            </svg>\r\n            <div slot=\"interaction-controls\" style=\"display: flex; gap: 16px;\">\r\n              <ic-button variant=\"primary\">Learn more</ic-button>\r\n              <ic-button variant=\"secondary\">Hide</ic-button>\r\n            </div>\r\n          </ic-card>\r\n        );\r\n      };\r\n  const btn = document.querySelector(\"#reload\");\r\n      btn.addEventListener(\"click\", (ev) => {\r\n        setTimeout(() => {\r\n          document.getElementById(\"content-container\").innerHTML = loaded();\r\n        }, 3000);\r\n      });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const loading = () => {\r\n  return (\r\n    <IcCard\r\n      heading=\"Coffee\"\r\n      subheading=\"What is coffee?\"\r\n      message=\"Coffee is a brewed drink.\"\r\n    >\r\n      <IcSkeleton\r\n        slot=\"icon\"\r\n        variant=\"circle\"\r\n        style={{\r\n          height: \"32px\",\r\n          width: \"32px\",\r\n        }}\r\n      />\r\n      <IcSkeleton\r\n        slot=\"heading\"\r\n        variant=\"rectangle\"\r\n        style={{\r\n          height: \"32px\",\r\n          width: \"130px\",\r\n        }}\r\n      />\r\n      <IcSkeleton\r\n        slot=\"subheading\"\r\n        variant=\"text\"\r\n        style={{\r\n          height: \"18px\",\r\n          width: \"150px\",\r\n        }}\r\n      />\r\n      <IcSkeleton\r\n        slot=\"message\"\r\n        variant=\"rectangle\"\r\n        style={{\r\n          height: \"24px\",\r\n          width: \"500px\",\r\n        }}\r\n      />\r\n      <IcSkeleton\r\n        slot=\"interaction-controls\"\r\n        variant=\"rectangle\"\r\n        style={{\r\n          height: \"40px\",\r\n          width: \"110px\",\r\n        }}\r\n      />\r\n      <IcSkeleton\r\n        slot=\"interaction-controls\"\r\n        variant=\"rectangle\"\r\n        style={{\r\n          height: \"40px\",\r\n          width: \"110px\",\r\n        }}\r\n      />\r\n    </IcCard>\r\n  );\r\n};\r\nconst loaded = () => {\r\n  return (\r\n    <IcCard\r\n      heading=\"Coffee\"\r\n      subheading=\"What is coffee?\"\r\n      message=\"Coffee is a brewed drink.\"\r\n    >\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n        <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\r\n      </SlottedSVG>\r\n      <div slot=\"interaction-controls\" style={{ display: \"flex\", gap: \"16px\" }}>\r\n        <IcButton variant=\"primary\">Learn more</IcButton>\r\n        <IcButton variant=\"secondary\">Hide</IcButton>\r\n      </div>\r\n    </IcCard>\r\n  );\r\n};\r\n const ContentFunction = () => {\r\n  const [content, setContent] = React.useState(loading);\r\n  const loadFunc = () => {\r\n    setContent(loading);\r\n    setTimeout(() => {\r\n      setContent(loaded);\r\n    }, 3000);\r\n  };\r\n  return (\r\n    <div>\r\n      {content}\r\n      <br />\r\n      <IcButton\r\n        variant=\"primary\"\r\n        onClick={() => {\r\n          loadFunc();\r\n        }}\r\n      >\r\n        <SlottedSVG\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\r\n          <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"></path>\r\n        </SlottedSVG>\r\n        Refresh\r\n      </IcButton>\r\n    </div>\r\n  );\r\n};`,\r\n  },\r\n];\r\n\r\nexport const loading = () => (\r\n  <IcCard heading=\"Americano Order\" subheading=\"Name: Michael\">\r\n    <IcSkeleton\r\n      slot=\"icon\"\r\n      variant=\"circle\"\r\n      style={{\r\n        height: \"32px\",\r\n        width: \"32px\",\r\n      }}\r\n    />\r\n    <IcSkeleton\r\n      slot=\"heading\"\r\n      variant=\"rectangle\"\r\n      style={{\r\n        height: \"32px\",\r\n        width: \"130px\",\r\n      }}\r\n    />\r\n    <IcSkeleton\r\n      slot=\"subheading\"\r\n      variant=\"text\"\r\n      style={{\r\n        height: \"18px\",\r\n        width: \"150px\",\r\n      }}\r\n    />\r\n    <IcSkeleton\r\n      slot=\"message\"\r\n      variant=\"rectangle\"\r\n      style={{\r\n        height: \"24px\",\r\n        width: \"500px\",\r\n      }}\r\n    />\r\n    <IcSkeleton\r\n      slot=\"interaction-controls\"\r\n      variant=\"rectangle\"\r\n      style={{\r\n        height: \"40px\",\r\n        width: \"110px\",\r\n      }}\r\n    />\r\n    <IcSkeleton\r\n      slot=\"interaction-controls\"\r\n      variant=\"rectangle\"\r\n      style={{\r\n        height: \"40px\",\r\n        width: \"110px\",\r\n      }}\r\n    />\r\n  </IcCard>\r\n);\r\n\r\nexport const loaded = () => (\r\n  <IcCard\r\n    heading=\"Americano Order\"\r\n    subheading=\"Name: Michael\"\r\n    message=\"Extras: double espresso shot & oat milk\"\r\n  >\r\n    <SlottedSVG\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n    <div slot=\"interaction-controls\" style={{ display: \"flex\", gap: \"16px\" }}>\r\n      <IcButton variant=\"primary\">Accept</IcButton>\r\n      <IcButton variant=\"secondary\">Cancel</IcButton>\r\n    </div>\r\n  </IcCard>\r\n);\r\n\r\nexport const ContentFunction = () => {\r\n  const [content, setContent] = React.useState(loaded);\r\n  const loadFunc = () => {\r\n    setContent(loading);\r\n    setTimeout(() => {\r\n      setContent(loaded);\r\n    }, 3000);\r\n  };\r\n  return (\r\n    <div>\r\n      {content}\r\n      <br />\r\n      <IcButton\r\n        variant=\"primary\"\r\n        onClick={() => {\r\n          loadFunc();\r\n        }}\r\n      >\r\n        <SlottedSVG\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n          <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\r\n        </SlottedSVG>\r\n        Refresh\r\n      </IcButton>\r\n    </div>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={snippetsInCard}>\r\n  <ContentFunction />\r\n</ComponentPreview>\r\n",
      "path": "/components/skeleton/code",
      "date": "2023-10-24",
      "title": "Skeleton",
      "status": "BETA",
      "subTitle": "Skeleton loading states are representations of the shape of content that help inform users that a specific type of component is loading.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/skeleton",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/skeleton"
        },
        {
          "title": "Code",
          "path": "/components/skeleton/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/skeleton/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\skeleton\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.140Z",
        "lastModified": "2024-04-04T12:41:44.140Z",
        "size": 14012,
        "formattedSize": "13.7 KB"
      }
    },
    {
      "id": "components\\skeleton\\guidancex",
      "contents": "\r\nimport skeletonFig1 from \"./images/fig-1-use-the-variant-which-outlines-the-whole-components.png\";\r\nimport skeletonFig2 from \"./images/fig-2-do-not-use-skeletons-within-skeletons.png\";\r\nimport skeletonFig3 from \"./images/fig-3-use-the-correct-text-style-to-match-the-size-of-the-text.png\";\r\nimport skeletonFig4 from \"./images/fig-4-do-not-use-the-same-text-variant-for-different-text-sizes.png\";\r\nimport skeletonFig5 from \"./images/fig-5-use-a-separate-text-skeleton-component-for-each-line.png\";\r\nimport skeletonFig6 from \"./images/fig-6-do-not-scale-the-text-skeleton-to-the-full-height-of-a-body-of-text.png\";\r\n\r\n## Introduction\r\n\r\nSkeleton has three variants:\r\n\r\n- Circle\r\n- Text\r\n- Rectangle\r\n\r\n<ComponentPreview>\r\n  <ic-skeleton />\r\n</ComponentPreview>\r\n\r\n### Circle\r\n\r\nUse the circle variant as a placeholder for any circular components, like avatars and circular logos.\r\n\r\n### Text\r\n\r\nUse the text variant as a placeholder for any text or labels that sit outside of any component. This applies to helper text for input labels, headings and body text.\r\n\r\n### Rectangle\r\n\r\nUse the rectangle variant as a placeholder for any other components. This includes buttons, chips and tags, input fields and cards.\r\n\r\n## When to use\r\n\r\nUse skeleton variants as a placeholder for when a full page or individual components are loading. Don't nest skeletons. If a label or text is wrapped inside a component, for example in cards, only use the skeleton variant of the component that wraps the other components.\r\n\r\n<DoDontCaution\r\n  imageSrc={skeletonFig1}\r\n  imageAlt=\"An image which shows the card component and the rectangle skeleton variant used to replace the full card width and height while it’s loading.\"\r\n  state=\"good\"\r\n  caption=\"Use skeletons to outline the whole component.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={skeletonFig2}\r\n  imageAlt=\"An image showing a card component’s skeleton state including text skeleton variants used within another rectangle skeleton variant.\"\r\n  state=\"bad\"\r\n  caption=\"Don't use skeletons within skeletons.\"\r\n/>\r\n\r\n### Sizing\r\n\r\nSet the height and width of the skeleton to match the size of the component that will replace it once loaded.\r\n\r\nWhen using the text variant, set the skeleton’s height to match the text style of the text that will replace it once loaded.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={skeletonFig3}\r\n    imageAlt=\"A graphic of a list of text styles side by side with the correct text variant height.\"\r\n    state=\"good\"\r\n    caption=\"Use the correct text style to match the size of the text.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={skeletonFig4}\r\n    imageAlt=\"A graphic of a list of different text styles side by side with a list of skeleton components of the same height.\"\r\n    state=\"bad\"\r\n    caption=\"Don't use the same skeleton size for different text sizes.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nDon't replace large bodies of texts with one single large text skeleton. Replace each line with a separate text skeleton.\r\n\r\n<DoDontCaution\r\n  imageSrc={skeletonFig5}\r\n  imageAlt=\"An image showing multiple lines of text being replaced by multiple text skeleton components for each line of text.\"\r\n  state=\"good\"\r\n  caption=\"Use a separate text skeleton component for each line.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={skeletonFig6}\r\n  imageAlt=\"An image showing multiple lines of text being incorrectly replaced by one large custom text skeleton.\"\r\n  state=\"bad\"\r\n  caption=\"Don't scale the text skeleton to the full height of a body of text.\"\r\n/>\r\n\r\n## When not to use\r\n\r\nAvoid displaying skeleton placeholders when something will load in 300ms or under to avoid flashing on the page. If needed, manually specify a 300ms delay, after which the skeleton component is displayed.\r\n\r\nDon’t use skeleton loading states when the loading progress can be calculated. Instead, use [determinate loading indicators](/components/loading-indicator).\r\n\r\nDon’t use skeleton components when the general structure of the page that will replace skeleton variants is not known. Instead, use [indeterminate loading indicators](/components/loading-indicator).\r\n\r\n## Related components\r\n\r\n- [Loading indicators](/components/loading-indicator)\r\n",
      "path": "/components/skeleton",
      "navPriority": 30,
      "date": "2023-02-03",
      "title": "Skeleton",
      "status": "BETA",
      "subTitle": "Skeleton loading states are representations of the shape of content that help inform users that a specific type of component is loading.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/skeleton",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/skeleton"
        },
        {
          "title": "Code",
          "path": "/components/skeleton/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/skeleton/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\skeleton\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.017Z",
        "lastModified": "2024-06-04T07:48:35.017Z",
        "size": 4797,
        "formattedSize": "4.7 KB"
      }
    },
    {
      "id": "components\\status-tags\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nStatus tags use colours that have been designed for maximum legibility across a range of visual impairments.\r\n\r\n## For Assistive Technology\r\n\r\nStatus tags can have `aria-labelledby` or `aria-label` tags that provide additional content to the visible label. However, the visible label must be included within the accessible label.\r\n\r\n## Based on\r\n\r\nThe status tag component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/status_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      ARIA: status role\r\n    </ic-link>\r\n    , Mozilla, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://design-system.service.gov.uk/components/tag/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Tag component\r\n    </ic-link>\r\n    , GDS, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_status_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Using the status role\r\n    </ic-link>\r\n    , Mozilla, accessed July 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/status-tag/accessibility",
      "date": "2024-04-15",
      "title": "Status tag",
      "status": "BETA",
      "subTitle": "Status tags are short, clear and digestible ways to display the status of something on the page.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/status-tag",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/status-tag"
        },
        {
          "title": "Code",
          "path": "/components/status-tag/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/status-tag/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\status-tags\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.349Z",
        "lastModified": "2024-05-20T13:20:43.349Z",
        "size": 2017,
        "formattedSize": "2.0 KB"
      }
    },
    {
      "id": "components\\status-tags\\codex",
      "contents": "\r\nimport { IcStatusTag } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-status-tag label=\"Neutral\" status=\"neutral\"></ic-status-tag>\r\n<ic-status-tag label=\"Success\" status=\"success\"></ic-status-tag>\r\n<ic-status-tag label=\"Warning\" status=\"warning\"></ic-status-tag>\r\n<ic-status-tag label=\"Error\" status=\"danger\"></ic-status-tag>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcStatusTag label=\"Neutral\" status=\"neutral\"/>\r\n<IcStatusTag label=\"Success\" status=\"success\"/>\r\n<IcStatusTag label=\"Warning\" status=\"warning\"/>\r\n<IcStatusTag label=\"Error\" status=\"danger\"/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }} snippets={snippetsDefault}>\r\n  <IcStatusTag label=\"Neutral\" status=\"neutral\" />\r\n  <IcStatusTag label=\"Success\" status=\"success\" />\r\n  <IcStatusTag label=\"Warning\" status=\"warning\" />\r\n  <IcStatusTag label=\"Error\" status=\"danger\" />\r\n</ComponentPreview>\r\n\r\n## Status tag details\r\n\r\n<ComponentDetails component=\"ic-status-tag\" />\r\n\r\n## Variants\r\n\r\n### Emphasis\r\n\r\nexport const snippetsEmphasis = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-status-tag label=\"Neutral\" status=\"neutral\" variant=\"outlined\"></ic-status-tag>\r\n<ic-status-tag label=\"Success\" status=\"success\" variant=\"outlined\"></ic-status-tag>\r\n<ic-status-tag label=\"Warning\" status=\"warning\" variant=\"outlined\"></ic-status-tag>\r\n<ic-status-tag label=\"Error\" status=\"danger\" variant=\"outlined\"></ic-status-tag>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcStatusTag label=\"Neutral\" status=\"neutral\" variant=\"outlined\" />\r\n<IcStatusTag label=\"Success\" status=\"success\" variant=\"outlined\" />\r\n<IcStatusTag label=\"Warning\" status=\"warning\" variant=\"outlined\" />\r\n<IcStatusTag label=\"Error\" status=\"danger\" variant=\"outlined\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }} snippets={snippetsEmphasis}>\r\n  <IcStatusTag label=\"Neutral\" status=\"neutral\" variant=\"outlined\" />\r\n  <IcStatusTag label=\"Success\" status=\"success\" variant=\"outlined\" />\r\n  <IcStatusTag label=\"Warning\" status=\"warning\" variant=\"outlined\" />\r\n  <IcStatusTag label=\"Error\" status=\"danger\" variant=\"outlined\" />\r\n</ComponentPreview>\r\n\r\n### Small\r\n\r\nexport const snippetsSmall = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-status-tag label=\"Neutral\" status=\"neutral\" size=\"small\"></ic-status-tag>\r\n<ic-status-tag label=\"Success\" status=\"success\" size=\"small\"></ic-status-tag>\r\n<ic-status-tag label=\"Warning\" status=\"warning\" size=\"small\"></ic-status-tag>\r\n<ic-status-tag label=\"Error\" status=\"danger\" size=\"small\"></ic-status-tag>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcStatusTag label=\"Neutral\" status=\"neutral\" size=\"small\" />\r\n<IcStatusTag label=\"Success\" status=\"success\" size=\"small\" />\r\n<IcStatusTag label=\"Warning\" status=\"warning\" size=\"small\" />\r\n<IcStatusTag label=\"Error\" status=\"danger\" size=\"small\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }} snippets={snippetsSmall}>\r\n  <IcStatusTag label=\"Neutral\" status=\"neutral\" size=\"small\" />\r\n  <IcStatusTag label=\"Success\" status=\"success\" size=\"small\" />\r\n  <IcStatusTag label=\"Warning\" status=\"warning\" size=\"small\" />\r\n  <IcStatusTag label=\"Error\" status=\"danger\" size=\"small\" />\r\n</ComponentPreview>\r\n",
      "path": "/components/status-tag/code",
      "date": "2023-10-24",
      "title": "Status tag",
      "status": "BETA",
      "subTitle": "Status tags are short, clear and digestible ways to display the status of something on the page.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/status-tag",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/status-tag"
        },
        {
          "title": "Code",
          "path": "/components/status-tag/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/status-tag/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\status-tags\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.155Z",
        "lastModified": "2024-04-04T12:41:44.155Z",
        "size": 3835,
        "formattedSize": "3.7 KB"
      }
    },
    {
      "id": "components\\status-tags\\guidancex",
      "contents": "\r\nimport { IcStatusTag } from \"@ukic/react\";\r\nimport statusTagFig1 from \"./images/fig-1-do-use-status-tags-exclusively-to-denote-status.png\";\r\nimport statusTagFig2 from \"./images/fig-2-do-not-use-status-tags-for-anything-other-than-denoting-status.png\";\r\nimport statusTagFig3 from \"./images/fig-3-do-not-use-a-mix-of-primary-and-secondary-status-tags-to-show-the same-statuses-message-within-a-group-of-items.png\";\r\nimport statusTagFig4 from \"./images/fig-4-do-use-the-correct-status-tag-size-to-match-other-ui-component-sizes.png\";\r\nimport statusTagFig5 from \"./images/fig-5-do-not-mix-sizes-when-using-multiple-ui-components.png\";\r\nimport statusTagFig6 from \"./images/fig-6-do-use-adjectives-to-describe-status.png\";\r\nimport statusTagFig7 from \"./images/fig-7-do-not-use-verbs-in-status-tags.png\";\r\nimport statusTagFig8 from \"./images/fig-8-do-use-relevant-wording-that-supports-the-status-tag-colour.png\";\r\nimport statusTagFig9 from \"./images/fig-9-do-not-use-wording-which-directly-contrasts-and-or does-not-support-the-status-of-the-tag.png\";\r\nimport statusTagFig10 from \"./images/fig-10-avoid-using-long-labels-as-it-will-force-the-text-to-wrap.png\";\r\n\r\n## Introduction\r\n\r\nThe status tag has four types:\r\n\r\n- Neutral\r\n- Success\r\n- Warning\r\n- Danger\r\n\r\nEach status tag has a filled and outlined appearance option and is available in two sizes.\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }}>\r\n  <IcStatusTag label=\"Neutral\" status=\"neutral\" />\r\n  <IcStatusTag label=\"Success\" status=\"success\" />\r\n  <IcStatusTag label=\"Warning\" status=\"warning\" />\r\n  <IcStatusTag label=\"Danger\" status=\"danger\" />\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nDisplay a status tag to show the status of an item in an application. For example, status tags could be used to show if a system is online or offline, if a document has been actioned or approved, or if a displayed train network is currently active or not.\r\n\r\n### Filled\r\n\r\nFilled status tags use the status colours to denote the type of status tag.\r\n\r\nUse filled status tags to convey emphasis and importance.\r\n\r\n### Outlined\r\n\r\nOutlined status tags use a lighter colour variation of the relevant status colour.\r\n\r\nUse outlined status tags to provide emphasis to less important items.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={statusTagFig1}\r\n    imageAlt=\"A good example of a success status tag labelled ‘approved’ used to show the status of a page titled ‘Guidance’.\"\r\n    state=\"good\"\r\n    caption=\"Use status tags to convey the current status of something.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## When not to use\r\n\r\nDon't use status tags to display anything other than status, use [static chips](/components/chip/#static-chips).\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={statusTagFig2}\r\n    imageAlt=\"An example of a status tag being used to display the author of a page.\"\r\n    state=\"bad\"\r\n    caption=\"Don't use status tags for anything other than denoting status.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nDon't use a mix of filled and outlined status tags when using them together.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={statusTagFig3}\r\n    imageAlt=\"An incorrect example of filled and outlined status tags being used in the same page section.\"\r\n    state=\"bad\"\r\n    caption=\"Don't use a mix of filled and outlined status tags to show the same status messages within a group of items.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Layout and placement\r\n\r\nWhen components are used together the size of the components should match. For example, a default sized status tag should be used with a default sized input component.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={statusTagFig4}\r\n    imageAlt=\"A good example of default sized status tags being used in the same section as other default sized components, and a small status tag being used in the same section as another small component.\"\r\n    state=\"good\"\r\n    caption=\"Use the correct status tag size to match other UI component sizes.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={statusTagFig5}\r\n    imageAlt=\"An incorrect example of small sized status tags used in the same section as other default sized components, and a default status tag being used in the same section as a small component.\"\r\n    state=\"bad\"\r\n    caption=\"Don't mix sizes when using multiple UI components.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Content\r\n\r\n### Labels\r\n\r\nUse adjectives in the status tag label over verbs. Verbs may indicate to a user that by clicking on them the tag will be interactive.\r\n\r\nText in tags should be all capitals to increase readability.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={statusTagFig6}\r\n    imageAlt=\"A correct example of a status tag which has the label 'submitted'.\"\r\n    state=\"good\"\r\n    caption=\"Use adjectives to describe status. \"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={statusTagFig7}\r\n    imageAlt=\"An incorrect example of a status tag which has the label 'submit'.\"\r\n    state=\"bad\"\r\n    caption=\"Don't use verbs in status tags.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nUse the right status tag type that is relevant to the label. Don't use labels that convey different information to what the status colour conveys.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={statusTagFig8}\r\n    imageAlt=\"A correct example of status tag labelling. The default variant has the label 'incomplete', the success variant has the label 'accepted’, the warning variant has the label 'in review', the danger variant has the label 'rejected'.\"\r\n    state=\"good\"\r\n    caption=\"Use relevant wording that supports the status tag colour.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={statusTagFig9}\r\n    imageAlt=\"An incorrect example of status tag labelling. The default variant has the label 'urgent', the success variant has the label 'error’, the warning variant has the label 'success', the danger variant has the label 'approved'.\"\r\n    state=\"bad\"\r\n    caption=\"Don't use wording that directly contradicts or doesn’t support the status of the tag.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nUse concise labels for better readability. Longer labels will force the text to wrap.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={statusTagFig10}\r\n    imageAlt=\"An example of a long label being wrapped on two lines.\"\r\n    state=\"caution\"\r\n    caption=\"Avoid using long labels as it will force the text to wrap.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Related components\r\n\r\n- [Chips](/components/chip)\r\n",
      "path": "/components/status-tag",
      "navPriority": 31,
      "date": "2023-04-17",
      "title": "Status tag",
      "status": "BETA",
      "subTitle": "Status tags are short, clear and digestible ways to display the status of something on the page.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/status-tag",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/status-tag"
        },
        {
          "title": "Code",
          "path": "/components/status-tag/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/status-tag/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\status-tags\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.018Z",
        "lastModified": "2024-06-04T07:48:35.018Z",
        "size": 7036,
        "formattedSize": "6.9 KB"
      }
    },
    {
      "id": "components\\stepper\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nThe stepper component is informational and non-interactive, acting as a visual aid to inform the user about their current progress within a form.\r\n\r\n## For Assistive Technology\r\n\r\nThe stepper is a visual aid and is non-interactive. It's therefore included in the tab-indexing for keyboard navigation as individual list items, allowing it to be read out by screen readers using the aria-current attribute.\r\n\r\n## Based on\r\n\r\nThe stepper component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/tutorials/forms/multi-page/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Multi-page Forms\r\n    </ic-link>\r\n    , W3C, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://a11y-guidelines.orange.com/en/web/components-examples/stepbar/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Stepbar or multi-step process\r\n    </ic-link>\r\n    , Orange, accessed July 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/stepper/accessibility",
      "date": "2024-04-15",
      "title": "Stepper",
      "status": "BETA",
      "subTitle": "A stepper is a visual representation of a user's progress through a predefined set of steps in a linear process.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/stepper",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/stepper"
        },
        {
          "title": "Code",
          "path": "/components/stepper/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/stepper/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\stepper\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:35.019Z",
        "lastModified": "2024-06-04T07:48:35.019Z",
        "size": 1789,
        "formattedSize": "1.7 KB"
      }
    },
    {
      "id": "components\\stepper\\codex",
      "contents": "\r\nimport { IcStepper, IcStep } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-stepper>\r\n    <ic-step step-title=\"Order coffee\" step-type=\"completed\"></ic-step>\r\n    <ic-step step-title=\"Pay for order\" step-type=\"current\"></ic-step>\r\n    <ic-step step-title=\"Collect\" step-type=\"disabled\"></ic-step>\r\n</ic-stepper>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcStepper>\r\n    <IcStep stepTitle=\"Order coffee\" stepType=\"completed\" />\r\n    <IcStep stepTitle=\"Pay for order\" stepType=\"current\" />\r\n    <IcStep stepTitle=\"Collect\" stepType=\"disabled\" />\r\n</IcStepper>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <IcStepper>\r\n    <IcStep stepTitle=\"Order coffee\" stepType=\"completed\" />\r\n    <IcStep stepTitle=\"Pay for order\" stepType=\"current\" />\r\n    <IcStep stepTitle=\"Collect\" stepType=\"disabled\" />\r\n  </IcStepper>\r\n</ComponentPreview>\r\n\r\n## Step details\r\n\r\n<ComponentDetails component=\"ic-step\" />\r\n\r\n## Stepper details\r\n\r\n<ComponentDetails component=\"ic-stepper\" />\r\n\r\n## Variants\r\n\r\n### Compact stepper\r\n\r\nexport const compactStepper = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-stepper variant=\"compact\">\r\n  <ic-step step-title=\"Order coffee\" step-type=\"completed\"></ic-step>\r\n  <ic-step step-title=\"Pay for order\" step-type=\"current\"></ic-step>\r\n  <ic-step step-title=\"Collect\" step-type=\"disabled\"></ic-step>\r\n</ic-stepper>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcStepper variant=\"compact\">\r\n  <IcStep stepTitle=\"Order coffee\" stepType=\"completed\" />\r\n  <IcStep stepTitle=\"Pay for order\" stepType=\"current\" />\r\n  <IcStep stepTitle=\"Collect\" stepType=\"disabled\" />\r\n</IcStepper>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={compactStepper}>\r\n  <IcStepper variant=\"compact\">\r\n    <IcStep stepTitle=\"Order coffee\" stepType=\"completed\" />\r\n    <IcStep stepTitle=\"Pay for order\" stepType=\"current\" />\r\n    <IcStep stepTitle=\"Collect\" stepType=\"disabled\" />\r\n  </IcStepper>\r\n</ComponentPreview>\r\n\r\n### Left-aligned\r\n\r\nexport const leftAligned = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-stepper aligned=\"left\">\r\n  <ic-step step-title=\"Order coffee\" step-type=\"completed\"></ic-step>\r\n  <ic-step step-title=\"Pay for order\" step-type=\"current\"></ic-step>\r\n  <ic-step step-title=\"Collect\" step-type=\"disabled\"></ic-step>\r\n</ic-stepper>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcStepper aligned=\"left\">\r\n  <IcStep stepTitle=\"Order coffee\" stepType=\"completed\" />\r\n  <IcStep stepTitle=\"Pay for order\" stepType=\"current\" />\r\n  <IcStep stepTitle=\"Collect\" stepType=\"disabled\" />\r\n</IcStepper>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={leftAligned}>\r\n  <IcStepper aligned=\"left\">\r\n    <IcStep stepTitle=\"Order coffee\" stepType=\"completed\" />\r\n    <IcStep stepTitle=\"Pay for order\" stepType=\"current\" />\r\n    <IcStep stepTitle=\"Collect\" stepType=\"disabled\" />\r\n  </IcStepper>\r\n</ComponentPreview>\r\n\r\n### With hidden step information\r\n\r\nexport const hiddenStepInfo = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-stepper hide-step-info=\"true\">\r\n  <ic-step step-title=\"Order coffee\" step-type=\"completed\"></ic-step>\r\n  <ic-step step-title=\"Pay for order\" step-type=\"current\"></ic-step>\r\n  <ic-step step-title=\"Collect\" step-type=\"disabled\"></ic-step>\r\n</ic-stepper>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcStepper hideStepInfo>\r\n  <IcStep stepTitle=\"Order coffee\" stepType=\"completed\" />\r\n  <IcStep stepTitle=\"Pay for order\" stepType=\"current\" />\r\n  <IcStep stepTitle=\"Collect\" stepType=\"disabled\" />\r\n</IcStepper>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={hiddenStepInfo}>\r\n  <IcStepper hideStepInfo>\r\n    <IcStep stepTitle=\"Order coffee\" stepType=\"completed\" />\r\n    <IcStep stepTitle=\"Pay for order\" stepType=\"current\" />\r\n    <IcStep stepTitle=\"Collect\" stepType=\"disabled\" />\r\n  </IcStepper>\r\n</ComponentPreview>\r\n\r\n### With subtitles\r\n\r\nexport const withSubtitles = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-stepper>\r\n  <ic-step step-title=\"Order coffee\" step-type=\"completed\"></ic-step>\r\n  <ic-step \r\n    step-title=\"Customise your order\" \r\n    step-subtitle=\"Optional\" \r\n    step-type=\"completed\" \r\n  >\r\n  </ic-step>\r\n  <ic-step \r\n    step-title=\"Pay for order\" \r\n    step-subtitle=\"We accept all major debit/credit cards\" \r\n    step-type=\"current\" \r\n  >\r\n  </ic-step>\r\n  <ic-step step-title=\"Collect\" step-type=\"disabled\"></ic-step>\r\n</ic-stepper>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcStepper>\r\n  <IcStep stepTitle=\"Order coffee\" stepType=\"completed\" />\r\n  <IcStep \r\n    stepTitle=\"Customise your order\" \r\n    stepSubtitle=\"Optional\" \r\n    stepType=\"completed\" \r\n    />\r\n  <IcStep \r\n    stepTitle=\"Pay for order\" \r\n    stepSubtitle=\"We accept all major debit/credit cards\" \r\n    stepType=\"current\" \r\n  />\r\n  <IcStep stepTitle=\"Collect\" stepType=\"disabled\"/>\r\n</IcStepper>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={withSubtitles}>\r\n  <IcStepper>\r\n    <IcStep stepTitle=\"Order coffee\" stepType=\"completed\" />\r\n    <IcStep\r\n      stepTitle=\"Customise your order\"\r\n      stepSubtitle=\"Optional\"\r\n      stepType=\"completed\"\r\n    />\r\n    <IcStep\r\n      stepTitle=\"Pay for order\"\r\n      stepSubtitle=\"We accept all major debit/credit cards\"\r\n      stepType=\"current\"\r\n    />\r\n    <IcStep stepTitle=\"Collect\" stepType=\"disabled\" />\r\n  </IcStepper>\r\n</ComponentPreview>\r\n\r\n### Custom connector width\r\n\r\nexport const customConnectorWidth = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-stepper connector-width=\"150\">\r\n  <ic-step step-title=\"Order coffee\" step-type=\"completed\"></ic-step>\r\n  <ic-step step-title=\"Pay for order\" step-type=\"current\"></ic-step>\r\n  <ic-step step-title=\"Collect\" step-type=\"disabled\"></ic-step>\r\n</ic-stepper>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcStepper aligned=\"left\" connectorWidth={150}>\r\n  <IcStep stepTitle=\"Order coffee\" stepType=\"completed\" />\r\n  <IcStep stepTitle=\"Pay for order\" stepType=\"current\" />\r\n  <IcStep stepTitle=\"Collect\" stepType=\"disabled\" />\r\n</IcStepper>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={customConnectorWidth}>\r\n  <IcStepper aligned=\"left\" connectorWidth={150}>\r\n    <IcStep stepTitle=\"Order coffee\" stepType=\"completed\" />\r\n    <IcStep stepTitle=\"Pay for order\" stepType=\"current\" />\r\n    <IcStep stepTitle=\"Collect\" stepType=\"disabled\" />\r\n  </IcStepper>\r\n</ComponentPreview>\r\n",
      "path": "/components/stepper/code",
      "date": "2023-02-03",
      "title": "Stepper",
      "status": "BETA",
      "subTitle": "A stepper is a visual representation of a user's progress through a predefined set of steps in a linear process.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/stepper",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/stepper"
        },
        {
          "title": "Code",
          "path": "/components/stepper/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/stepper/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\stepper\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.155Z",
        "lastModified": "2024-04-04T12:41:44.155Z",
        "size": 6929,
        "formattedSize": "6.8 KB"
      }
    },
    {
      "id": "components\\stepper\\guidancex",
      "contents": "\r\nimport { IcStepper, IcStep } from \"@ukic/react\";\r\nimport stepperFig1 from \"./images/fig-1-stepper-component-being-used-to-describe-the-steps-of-a-multistep-form.png\";\r\nimport stepperFig2 from \"./images/fig-2-use-concise-labels-within-a-stepper.png\";\r\nimport stepperFig3 from \"./images/fig-3-dont-use-long-labels-within-a-stepper.png\";\r\nimport stepperFig4 from \"./images/fig-4-a-stepper-accompanied-by-a-page-title-showing-how-the-stepper-should-be-implemented.png\";\r\nimport stepperFig5 from \"./images/fig-5-dont-use-a-compact-stepper-if-the-page-content-does-not-include-the-step-name-in-a-heading.png\";\r\nimport stepperFig6 from \"./images/fig-6-a-stepper-that-is-leftaligned-at-the-top-of-the-page-showing-how-the-stepper-should-be-implemented.png\";\r\nimport stepperFig7 from \"./images/fig-7-a-stepper-that-is-centrealigned-at-the-top-of-the-page-showing-how-the-stepper-should-not-be-implemented.png\";\r\nimport stepperFig8 from \"./images/fig-8-use-compact-stepper-when-there-is-not-much-room.png\";\r\n\r\n## Introduction\r\n\r\nAn example of the stepper component.\r\n\r\n<ComponentPreview>\r\n  <IcStepper>\r\n    <IcStep stepTitle=\"Order coffee\" stepType=\"completed\" />\r\n    <IcStep stepTitle=\"Pay for order\" stepType=\"current\" />\r\n    <IcStep stepTitle=\"Collect\" stepType=\"disabled\" />\r\n  </IcStepper>\r\n</ComponentPreview>\r\n\r\n## Component variants\r\n\r\n### Default\r\n\r\nUse the default stepper when you have the available space.\r\n\r\n### Compact\r\n\r\nUse the compact variant for compact layouts or processes with many steps.\r\n\r\n## When to use\r\n\r\nUse steppers when a multi-step linear process is required. Steps are displayed from left to right and show the direction of movement through the process.\r\n\r\n<DoDontCaution\r\n  imageSrc={stepperFig1}\r\n  imageAlt=\"An image showing a form titled 'Make a coffee' featuring a stepper with four steps, titled 'Take order', 'Make drink', 'Take payment', and 'Finish'. The first step is selected, and the page below shows three input fields and a button labelled 'Confirm order'.\"\r\n  state=\"good\"\r\n  caption=\"Stepper component being used to describe the steps of a multi-step form.\"\r\n/>\r\n\r\nAlways indicate which step the user is currently on. This gives a sense of control and describes their position in the process in relation to where they have been, as well as how much they have left to do.\r\n\r\n## When not to use\r\n\r\nDon't use the stepper to indicate a non-linear process where steps can be completed in any order. Linear processes require each step to be completed in order.\r\n\r\n## Interaction behaviour\r\n\r\n### Steps\r\n\r\nSteps are single elements that together form the stepper. Steps have four different states:\r\n\r\n- Active: Indicates that the step is available but not yet completed by the user. This step type is rendered as current if displayed in the compact stepper.\r\n\r\n- Current: Shows the step the user is currently on.\r\n\r\n- Completed: Shows a previous step that has been completed by the user.\r\n\r\n- Disabled: Shows a step that is unavailable. This could be because it's conditional on another step. If a step is always unavailable, then it should not be included in the stepper when it's loaded.\r\n\r\n<ComponentPreview>\r\n  <IcStepper>\r\n    <IcStep stepTitle=\"Add details\" stepType=\"completed\" />\r\n    <IcStep stepTitle=\"Customer\" stepType=\"current\" />\r\n    <IcStep stepTitle=\"Upload\" />\r\n    <IcStep stepTitle=\"Submit\" stepType=\"disabled\" />\r\n  </IcStepper>\r\n</ComponentPreview>\r\n\r\n## Layout and placement\r\n\r\nAlways align steppers to the left and place them above the main body content of the page.\r\n\r\n<DoDontCaution\r\n  imageSrc={stepperFig6}\r\n  imageAlt=\"An image showing a stepper with four steps, titled 'Warm kettle', 'Add milk', 'Pour water', and 'Drink coffee'. The first step is selected, and the stepper is accurately placed at the top-left of a page.\"\r\n  state=\"good\"\r\n  caption=\"A stepper that is left-aligned at the top of the page, showing how the stepper should be implemented.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={stepperFig7}\r\n  imageAlt=\"An image showing a stepper with four steps, titled 'Warm kettle', 'Add milk’, 'Pour water’, and 'Drink coffee'. The first step is selected, and the stepper is incorrectly placed in the centre of a page.\"\r\n  state=\"bad\"\r\n  caption=\"A stepper that is centre-aligned at the top of the page, showing how the stepper should not be implemented.\"\r\n/>\r\n\r\nWhen a stepper is too large to fit comfortably within its container, it will switch to use the compact stepper. This shows the current step along with its status, as well as the next step in the process.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={stepperFig8}\r\n    imageAlt=\"A compact stepper showing the current step labelled 'warm kettle' and the next step label 'add milk'.\"\r\n    state=\"good\"\r\n    caption=\"The compact stepper shows the current step as well as the next step in the process.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Content\r\n\r\n### Labels\r\n\r\nUse the step title to describe each step concisely in one or two words. Avoid using lengthy step titles.\r\n\r\n<DoDontCaution\r\n  imageSrc={stepperFig2}\r\n  imageAlt=\"An image showing a stepper with four steps, labelled 'Take order', 'make drink', 'Take payment', and 'Finish’. The first step is selected.\"\r\n  state=\"good\"\r\n  caption=\"Use concise labels within a stepper.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={stepperFig3}\r\n  imageAlt=\"An image showing a stepper with four steps, each with very long labels. The first step is selected.\"\r\n  state=\"caution\"\r\n  caption=\"Avoid using long labels within a stepper.\"\r\n/>\r\n\r\nWhen a stepper is used, always use page titles and section headings on the page content itself.\r\n\r\n<DoDontCaution\r\n  imageSrc={stepperFig4}\r\n  imageAlt=\"An image showing a form titled 'Make a coffee' featuring a stepper with four steps, labelled 'Take order', 'Make drink', 'Take payment', and 'Finish’. The first step, 'Take order', is selected, and the page below shows three input fields and a button labelled 'Confirm order'.\"\r\n  state=\"good\"\r\n  caption=\"A stepper accompanied by a page title, showing how the stepper should be implemented.\"\r\n/>\r\n\r\nHide step information only if the step content is clearly labelled itself. Do not omit step labels if no headings are provided in the step content.\r\n\r\n<DoDontCaution\r\n  imageSrc={stepperFig5}\r\n  imageAlt=\"An image showing a form without a heading featuring a stepper with 4 steps, each without a label. The first unlabelled step is selected, and the page below shows three input fields and a button labelled ‘Confirm order’.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t use a stepper without step labels if the page content does not include the step name in a heading.\"\r\n/>\r\n\r\nSet a step status to show whether the step is required or optional in the step's subtitle. Override the step subtitle text to provide a custom message.\r\n\r\n### Validation\r\n\r\nValidate each step as the user moves through the process. Use the standard error handling approach to display inline [alert](/components/alert) and error messages if the user attempts to proceed to the next step without first completing the current step correctly.\r\n",
      "path": "/components/stepper",
      "navPriority": 32,
      "date": "2023-02-03",
      "title": "Stepper",
      "status": "BETA",
      "subTitle": "A stepper is a visual representation of a user's progress through a predefined set of steps in a linear process.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/stepper",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/stepper"
        },
        {
          "title": "Code",
          "path": "/components/stepper/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/stepper/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\stepper\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.021Z",
        "lastModified": "2024-06-04T07:48:35.021Z",
        "size": 7646,
        "formattedSize": "7.5 KB"
      }
    },
    {
      "id": "components\\switch\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nA switch is selected or unselected using the **space bar** key when focused.\r\n\r\nAdditional I/O visuals have been added to assist the understanding of which state of the switch means 'on' and which means 'off'.\r\n\r\nHigh contrast colours have been used to emphasise the difference between 'on' and 'off' states. The conventional positioning of a switch's handle on the right-hand side also denotes the 'on' state.\r\n\r\n## For Assistive Technology\r\n\r\nSwitches use the ARIA `switch` role so that the change of state is announced by screen readers.\r\n\r\n## Based on\r\n\r\nThe switch component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/Switch_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      ARIA: switch role\r\n    </ic-link>\r\n    , MDN web docs, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://inclusive-components.design/toggle-button/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Toggle Buttons\r\n    </ic-link>\r\n    , Inclusive Components, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.sarasoueidan.com/blog/toggle-switch-design/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      On Designing and Building Toggle Switches\r\n    </ic-link>\r\n    , Sara Soueidan, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.nngroup.com/articles/toggle-switch-guidelines/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Toggle-Switch Guidelines\r\n    </ic-link>\r\n    , Alita Joyce - Nielsen Norman Group, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.scottohara.me/note/2019/04/03/switch-script.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Updated Switch script & more\r\n    </ic-link>\r\n    , Scott O'Hara, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://kittygiraudel.com/2021/04/05/an-accessible-toggle/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      An accessible toggle\r\n    </ic-link>\r\n    , Kitty Giraudel, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://scottaohara.github.io/a11y_styled_form_controls/src/toggle-button-switch/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Switch Component: Toggle Button\r\n    </ic-link>\r\n    , Scott O'Hara, accessed July 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/switch/accessibility",
      "date": "2024-04-15",
      "title": "Switch",
      "status": "BETA",
      "subTitle": "Switches are used to quickly toggle an option on or off.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/switch",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/switch"
        },
        {
          "title": "Code",
          "path": "/components/switch/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/switch/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\switch\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:35.022Z",
        "lastModified": "2024-06-04T07:48:35.022Z",
        "size": 3273,
        "formattedSize": "3.2 KB"
      }
    },
    {
      "id": "components\\switch\\codex",
      "contents": "\r\nimport { IcSwitch } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-switch label=\"Coffee preferences\"></ic-switch>\r\n<script>\r\n  const switchEl = document.querySelector('ic-switch');\r\n  switchEl.addEventListener('icChange', (ev) => {\r\n    console.log({\r\n      checked: ev.detail.checked,\r\n      value: ev.detail.value\r\n    })\r\n  })\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSwitch\r\n  label=\"Coffee preferences\"\r\n  onIcChange={(ev) => console.log({ \r\n    checked: ev.detail.checked, \r\n    value: ev.detail.value\r\n  })}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDefault}>\r\n  <IcSwitch\r\n    label=\"Coffee preferences\"\r\n    onIcChange={(ev) =>\r\n      console.log({\r\n        checked: ev.detail.checked,\r\n        value: ev.detail.value,\r\n      })\r\n    }\r\n  />\r\n</ComponentPreview>\r\n\r\n## Switch details\r\n\r\n<ComponentDetails component=\"ic-switch\" />\r\n\r\n## Variants\r\n\r\n### State\r\n\r\nexport const snippetsState = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-switch label=\"Coffee preferences\" show-state=\"true\" ></ic-switch>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSwitch label=\"Coffee preferences\" showState/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsState}>\r\n  <IcSwitch label=\"Coffee preferences\" showState />\r\n</ComponentPreview>\r\n\r\n### Small\r\n\r\nexport const snippetsSmall = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-switch label=\"Coffee preferences\" show-state=\"true\" size=\"small\"></ic-switch>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSwitch label=\"Coffee preferences\" showState size=\"small\"/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsSmall}>\r\n  <IcSwitch label=\"Coffee preferences\" showState size=\"small\" />\r\n</ComponentPreview>\r\n\r\n### Disabled\r\n\r\nexport const snippetsDisabled = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-switch label=\"Coffee preferences\" show-state=\"true\" disabled=\"true\"></ic-switch>\r\n<ic-switch label=\"Coffee preferences\" show-state=\"true\" disabled=\"true\" checked=\"true\"></ic-switch>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSwitch label=\"Coffee preferences\" showState disabled/>\r\n<IcSwitch label=\"Coffee preferences\" showState disabled checked/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDisabled}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\r\n    <IcSwitch label=\"Coffee preferences\" showState disabled />\r\n    <IcSwitch label=\"Coffee preferences\" showState disabled checked />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Helper text and right adornment\r\n\r\nexport const snippetsHelperAndAdornment = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-switch label=\"Coffee preferences\" helper-text=\"Choose your coffee preferences\">\r\n  <svg\r\n    slot=\"right-adornment\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n     <path d=\"M2,21H20V19H2M20,8H18V5H20M20,3H4V13A4,4 0 0,0 8,17H14A4,4 0 0,0 18,13V10H20A2,2 0 0,0 22,8V5C22,3.89 21.1,3 20,3Z\"/>\r\n  </svg>\r\n</ic-switch>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcSwitch label=\"Coffee preferences\" helperText=\"Choose your coffee preferences\">\r\n  <SlottedSVG\r\n    slot=\"right-adornment\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path d=\"M2,21H20V19H2M20,8H18V5H20M20,3H4V13A4,4 0 0,0 8,17H14A4,4 0 0,0 18,13V10H20A2,2 0 0,0 22,8V5C22,3.89 21.1,3 20,3Z\"/>\r\n  </SlottedSVG>\r\n</IcSwitch>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsHelperAndAdornment}>\r\n  <IcSwitch\r\n    label=\"Coffee preferences\"\r\n    helperText=\"Choose your coffee preferences\"\r\n  >\r\n    <svg\r\n      slot=\"right-adornment\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M2,21H20V19H2M20,8H18V5H20M20,3H4V13A4,4 0 0,0 8,17H14A4,4 0 0,0 18,13V10H20A2,2 0 0,0 22,8V5C22,3.89 21.1,3 20,3Z\" />\r\n    </svg>\r\n  </IcSwitch>\r\n</ComponentPreview>\r\n",
      "path": "/components/switch/code",
      "date": "2023-10-24",
      "title": "Switch",
      "status": "BETA",
      "subTitle": "Switches are used to quickly toggle an option on or off.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/switch",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/switch"
        },
        {
          "title": "Code",
          "path": "/components/switch/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/switch/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\switch\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.170Z",
        "lastModified": "2024-04-04T12:41:44.170Z",
        "size": 4605,
        "formattedSize": "4.5 KB"
      }
    },
    {
      "id": "components\\switch\\guidancex",
      "contents": "\r\nimport { IcSwitch, IcTypography } from \"@ukic/react\";\r\nimport switchVid1 from \"./images/anim-1-avoid-change-a-switch-state-from-a-different-trigger.mp4\";\r\nimport switchVid2 from \"./images/anim-2-dont-change-switch-label-at-same-time-as-switch-state.mp4\";\r\nimport switchFig1 from \"./images/fig-1-make-sure-switch-changes-take-effect-immediately.png\";\r\nimport switchFig2 from \"./images/fig-2-dont-use-a-separate-trigger-to-make-switch-changes-take-effect.png\";\r\nimport switchFig3 from \"./images/fig-3-dont-use-a-switch-for-yes-no-answers.png\";\r\nimport switchFig4 from \"./images/fig-4-give-switches-clear-labels.png\";\r\nimport switchFig5 from \"./images/fig-5-dont-give-switches-ambiguous-labels.png\";\r\nimport switchFig6 from \"./images/fig-6-dont-mix-switches-with-icons-with-switches-without-icons.png\";\r\n\r\n## Introduction\r\n\r\nAn example of the switch component.\r\n\r\n<ComponentPreview>\r\n  <IcSwitch label=\"Coffee preferences\" />\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse switches to turn a single option 'on' or 'off' and when you want the selection to take immediate effect.\r\n\r\nUse switches when there is an obvious default value: either 'on' or 'off'.\r\n\r\n## When not to use\r\n\r\nDon't use a switch when the selection of the option should take effect after a separate trigger such as a submit button. Instead, use a single [checkbox](/components/checkbox).\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={switchFig1}\r\n    imageAlt=\"An example settings panel with text that says 'Your changes will take place immediately'. Three switches are displayed for 'notifications', 'don't disturb' and 'night mode'.\"\r\n    state=\"good\"\r\n    caption=\"Make sure the change in a switch's state causes immediate effect.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={switchFig2}\r\n    imageAlt=\"An example settings panel with text that says 'Remember to save your changes'. Three switches are displayed for 'notifications', 'don't disturb' and 'night mode'. A button that says 'Save changes' sits below the switches. \"\r\n    state=\"bad\"\r\n    caption=\"Don't use a separate trigger to make the change in state take effect.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nSwitches always have a default state: either 'on' or 'off'. Don't use a switch if there is no default setting. Instead, use checkboxes or two [radio buttons](/components/radio).\r\n\r\nDon't use a switch as an input in a form. Use them to instantaneously control a single option.\r\n\r\nDon't use a switch for 'yes' or 'no' answers. Use two [radio buttons](/components/radio) instead.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={switchFig3}\r\n    imageAlt=\"An example settings panel with a single switch with a heading that says 'Do you want to receive notifications?''. The switch is in the 'on' position and it has a label that says 'Yes'.\"\r\n    state=\"bad\"\r\n    caption=\"Don't use a switch for 'yes' or 'no' answers.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Interaction behaviour\r\n\r\nAvoid automatically altering a switch's state based on another trigger. A change in a switch's state should always be the user's decision.\r\n\r\n<video width=\"50%\" muted controls loop>\r\n  <source src={switchVid1} type=\"video/mp4\" />\r\n</video>\r\n\r\n<IcTypography\r\n  variant=\"label\"\r\n  style={{ marginTop: \"-16px\", marginBottom: \"24px\" }}\r\n>\r\n  Avoid changing a switches state without the user’s specific instruction.\r\n</IcTypography>\r\n\r\n## Sizing\r\n\r\nUse a default sized switch in most scenarios where other default sized components are used.\r\n\r\nUse a small sized switch with other small sized components for compact layouts.\r\n\r\n## Content\r\n\r\nUse clear labels so that it's obvious what the switch will do when in the 'on' or 'off' position. Don't make them neutral or ambiguous. The switch should read 'Label: on' or 'Label: off'.\r\n\r\nFor example, a switch to turn notifications 'on' or 'off', with a label that says 'Notifications', is understandable when read as 'Notifications: on' and 'Notifications: off'. If the label said 'Turn notifications off', it's ambiguous and more difficult to understand what the 'on' and 'off' position will do.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={switchFig4}\r\n    imageAlt=\"An example settings panel with a single switch in the 'off' position. It's label says 'Notifications'.\"\r\n    state=\"good\"\r\n    caption=\"Give switches labels that make it clear what the switch will do in either the 'on' or 'off' position.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={switchFig5}\r\n    imageAlt=\"An example settings panel with a single switch in the 'off' position. It's label says 'Turn notifications off?'.\"\r\n    state=\"bad\"\r\n    caption=\"Don't give switches ambiguous labels that makes it hard to understand what the switch will do.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nAvoid using additional labels that say 'on' or 'off' in the switch label. The position of the switch describes this itself. Changing the label between state changes makes it difficult to understand the current state.\r\n\r\n<video width=\"50%\" muted controls loop>\r\n  <source src={switchVid2} type=\"video/mp4\" />\r\n</video>\r\n\r\n<IcTypography\r\n  variant=\"label\"\r\n  style={{ marginTop: \"-16px\", marginBottom: \"24px\" }}\r\n>\r\n  Don’t change the switch’s label at the same time as the state changes.\r\n</IcTypography>\r\n\r\nUse an icon with a switch label only if it aids the recognition of the option.\r\n\r\nDon't group switches with icons with other switches without icons.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={switchFig6}\r\n    imageAlt=\"An example settings panel with three switches. The first switch is on with a label that says 'Notifications'. The second switch is off with a label that says 'Don't disturb'. The third switch is off with a label that includes a moon icon and says 'Night mode'.\"\r\n    state=\"bad\"\r\n    caption=\"Don't mix switches with icons with switches without icons.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n",
      "path": "/components/switch",
      "navPriority": 33,
      "date": "2023-02-03",
      "title": "Switch",
      "status": "BETA",
      "subTitle": "Switches are used to quickly toggle an option on or off.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/switch",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/switch"
        },
        {
          "title": "Code",
          "path": "/components/switch/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/switch/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\switch\\guidance.mdx",
        "createdAt": "2024-05-20T13:20:43.349Z",
        "lastModified": "2024-05-20T13:20:43.349Z",
        "size": 6362,
        "formattedSize": "6.2 KB"
      }
    },
    {
      "id": "components\\tabs\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nWe’ve made sure that tabs are easy to use for people who use a keyboard to navigate. The tab bar acts as a single focusable element, whilst its tabs can be individually focused using the **arrow** keys. This avoids the user having to move focus through every tab in order to reach the content.\r\n\r\nInstead, they move focus into the tab bar, focus on the tab they wish to view using the **arrow** keys, select it using the **space** or **enter** key, and can then directly move focus to the content within the selected tab. Using **shift+tab** moves focus back to the tab bar and highlights the currently selected tab.\r\n\r\nUsing the **home** key moves focus to the first tab in the tab bar, and the **end** key moves focus to the last tab.\r\n\r\nWhen a compact version of a tab bar is displayed, the tabs can be accessed using the same keyboard functionality described above. When focus is moved to different tabs, the compact tab bar automatically scrolls to show the currently focused tab in the visible area.\r\n\r\n## For Assistive Technology\r\n\r\nUsing the arrow keys in screen readers allows people to move between all elements of the page. When a selected tab is focused on, the down arrow key would tell the screen reader to move to the first element within the tab's content. Each tab container is labelled by the tab it relates to so that the relationship between them is clear when using a screen reader.\r\n\r\n## Based on\r\n\r\nThis tabs component is based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://inclusive-components.design/tabbed-interfaces/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Tabbed Interfaces, Inclusive Components\r\n    </ic-link>\r\n    , Heydon Pickering, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-1/tabs.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Example of tabs with automatic activation\r\n    </ic-link>\r\n    , w3, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Example of tabs with manual activation\r\n    </ic-link>\r\n    , w3, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/TR/wai-aria-practices/#kbd_selection_follows_focus\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Deciding when to make selection automatically follow focus\r\n    </ic-link>\r\n    , WAI Aria Practices, accessed March 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/tabs/accessibility",
      "date": "2024-04-15",
      "title": "Tabs",
      "status": "BETA",
      "subTitle": "Tabs let users navigate between content within the same context. Tabs organise complex layouts by moving content into multiple sections.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/tabs",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/tabs"
        },
        {
          "title": "Code",
          "path": "/components/tabs/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/tabs/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\tabs\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.349Z",
        "lastModified": "2024-05-20T13:20:43.349Z",
        "size": 3437,
        "formattedSize": "3.4 KB"
      }
    },
    {
      "id": "components\\tabs\\codex",
      "contents": "\r\nimport { IcTab, IcTabContext, IcTabGroup, IcTabPanel } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-tab-context>\r\n  <ic-tab-group label=\"Example tab group\">\r\n    <ic-tab>Ingredients</ic-tab>\r\n    <ic-tab>Method</ic-tab>\r\n    <ic-tab>History</ic-tab>\r\n  </ic-tab-group>\r\n  <ic-tab-panel>Tab One - Ingredients</ic-tab-panel>\r\n  <ic-tab-panel>Tab Two - Method</ic-tab-panel>\r\n  <ic-tab-panel>Tab Three - History</ic-tab-panel>\r\n</ic-tab-context>\r\n<script>\r\n  const tabContext = document.querySelector('ic-tab-context');\r\n  tabContext.addEventListener('icTabSelect', (ev) => \r\n    console.log({\r\n      tabIndex: ev.detail.tabIndex,\r\n      tabLabel: ev.detail.tabLabel,\r\n    })\r\n  )\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTabContext\r\n  onIcTabSelect={(ev) =>\r\n    console.log({\r\n      tabIndex: ev.detail.tabIndex,\r\n      tabLabel: ev.detail.tabLabel,\r\n    })\r\n  }\r\n>\r\n  <IcTabGroup label=\"Example tab group\">\r\n    <IcTab>Ingredients</IcTab>\r\n    <IcTab>Method</IcTab>\r\n    <IcTab>History</IcTab>\r\n  </IcTabGroup>\r\n  <IcTabPanel>Tab One - Ingredients</IcTabPanel>\r\n  <IcTabPanel>Tab Two - Method</IcTabPanel>\r\n  <IcTabPanel>Tab Three - History</IcTabPanel>\r\n</IcTabContext>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <IcTabContext\r\n    onIcTabSelect={(ev) =>\r\n      console.log({\r\n        tabIndex: ev.detail.tabIndex,\r\n        tabLabel: ev.detail.tabLabel,\r\n      })\r\n    }\r\n  >\r\n    <IcTabGroup label=\"Example tab group\">\r\n      <IcTab>Ingredients</IcTab>\r\n      <IcTab>Method</IcTab>\r\n      <IcTab>History</IcTab>\r\n    </IcTabGroup>\r\n    <IcTabPanel>Tab One - Ingredients</IcTabPanel>\r\n    <IcTabPanel>Tab Two - Method</IcTabPanel>\r\n    <IcTabPanel>Tab Three - History</IcTabPanel>\r\n  </IcTabContext>\r\n</ComponentPreview>\r\n\r\n## Tab details\r\n\r\n<ComponentDetails component=\"ic-tab\" />\r\n\r\n## Tab context details\r\n\r\n<ComponentDetails component=\"ic-tab-context\" />\r\n\r\n## Tab list details\r\n\r\n<ComponentDetails component=\"ic-tab-group\" />\r\n\r\n## Tab panel details\r\n\r\n<ComponentDetails component=\"ic-tab-panel\" />\r\n\r\n## Variants\r\n\r\n### With icons\r\n\r\nexport const withIcons = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-tab-context>\r\n  <ic-tab-group label=\"Example tab group\">\r\n    <ic-tab>\r\n      Ingredients\r\n      <svg \r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M9,21V22H7V21A2,2 0 0,1 5,19V4A2,2 0 0,1 7,2H17A2,2 0 0,1 19,4V19A2,2 0 0,1 17,21V22H15V21H9M7,4V9H17V4H7M7,19H17V11H7V19M8,12H10V15H8V12M8,6H10V8H8V6Z\" />\r\n      </svg>\r\n    </ic-tab>\r\n    <ic-tab>\r\n      Method\r\n      <svg\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M3,5H9V11H3V5M5,7V9H7V7H5M11,7H21V9H11V7M11,15H21V17H11V15M5,20L1.5,16.5L2.91,15.09L5,17.17L9.59,12.59L11,14L5,20Z\" />\r\n      </svg>\r\n    </ic-tab>\r\n    <ic-tab>\r\n      History\r\n      <svg\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M13.5,8H12V13L16.28,15.54L17,14.33L13.5,12.25V8M13,3A9,9 0 0,0 4,12H1L4.96,16.03L9,12H6A7,7 0 0,1 13,5A7,7 0 0,1 20,12A7,7 0 0,1 13,19C11.07,19 9.32,18.21 8.06,16.94L6.64,18.36C8.27,20 10.5,21 13,21A9,9 0 0,0 22,12A9,9 0 0,0 13,3\" />\r\n      </svg>\r\n    </ic-tab>\r\n  </ic-tab-group>\r\n  <ic-tab-panel>Tab One - Ingredients</ic-tab-panel>\r\n  <ic-tab-panel>Tab Two - Method</ic-tab-panel>\r\n  <ic-tab-panel>Tab Three - History</ic-tab-panel>\r\n</ic-tab-context>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTabContext>\r\n    <IcTabGroup label=\"Example tab group\">\r\n      <IcTab>\r\n        Ingredients\r\n        <SlottedSVG\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M9,21V22H7V21A2,2 0 0,1 5,19V4A2,2 0 0,1 7,2H17A2,2 0 0,1 19,4V19A2,2 0 0,1 17,21V22H15V21H9M7,4V9H17V4H7M7,19H17V11H7V19M8,12H10V15H8V12M8,6H10V8H8V6Z\" />\r\n        </SlottedSVG>\r\n      </IcTab>\r\n      <IcTab>\r\n        Method\r\n        <SlottedSVG\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M3,5H9V11H3V5M5,7V9H7V7H5M11,7H21V9H11V7M11,15H21V17H11V15M5,20L1.5,16.5L2.91,15.09L5,17.17L9.59,12.59L11,14L5,20Z\" />\r\n        </SlottedSVG>\r\n      </IcTab>\r\n      <IcTab>\r\n        History\r\n        <SlottedSVG\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M13.5,8H12V13L16.28,15.54L17,14.33L13.5,12.25V8M13,3A9,9 0 0,0 4,12H1L4.96,16.03L9,12H6A7,7 0 0,1 13,5A7,7 0 0,1 20,12A7,7 0 0,1 13,19C11.07,19 9.32,18.21 8.06,16.94L6.64,18.36C8.27,20 10.5,21 13,21A9,9 0 0,0 22,12A9,9 0 0,0 13,3\" />\r\n        </SlottedSVG>\r\n      </IcTab>\r\n    </IcTabGroup>\r\n    <IcTabPanel>Tab One - Ingredients</IcTabPanel>\r\n    <IcTabPanel>Tab Two - Method</IcTabPanel>\r\n    <IcTabPanel>Tab Three - History</IcTabPanel>\r\n  </IcTabContext>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={withIcons}>\r\n  <IcTabContext>\r\n    <IcTabGroup label=\"Example tab group\">\r\n      <IcTab>\r\n        Ingredients\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M9,21V22H7V21A2,2 0 0,1 5,19V4A2,2 0 0,1 7,2H17A2,2 0 0,1 19,4V19A2,2 0 0,1 17,21V22H15V21H9M7,4V9H17V4H7M7,19H17V11H7V19M8,12H10V15H8V12M8,6H10V8H8V6Z\" />\r\n        </svg>\r\n      </IcTab>\r\n      <IcTab>\r\n        Method\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M3,5H9V11H3V5M5,7V9H7V7H5M11,7H21V9H11V7M11,15H21V17H11V15M5,20L1.5,16.5L2.91,15.09L5,17.17L9.59,12.59L11,14L5,20Z\" />\r\n        </svg>\r\n      </IcTab>\r\n      <IcTab>\r\n        History\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M13.5,8H12V13L16.28,15.54L17,14.33L13.5,12.25V8M13,3A9,9 0 0,0 4,12H1L4.96,16.03L9,12H6A7,7 0 0,1 13,5A7,7 0 0,1 20,12A7,7 0 0,1 13,19C11.07,19 9.32,18.21 8.06,16.94L6.64,18.36C8.27,20 10.5,21 13,21A9,9 0 0,0 22,12A9,9 0 0,0 13,3\" />\r\n        </svg>\r\n      </IcTab>\r\n    </IcTabGroup>\r\n    <IcTabPanel>Tab One - Ingredients</IcTabPanel>\r\n    <IcTabPanel>Tab Two - Method</IcTabPanel>\r\n    <IcTabPanel>Tab Three - History</IcTabPanel>\r\n  </IcTabContext>\r\n</ComponentPreview>\r\n\r\n### Disabled\r\n\r\nexport const disabled = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-tab-context>\r\n  <ic-tab-group label=\"Example tab group\">\r\n    <ic-tab>Ingredients</ic-tab>\r\n    <ic-tab disabled=\"true\">Method</ic-tab>\r\n    <ic-tab>History</ic-tab>\r\n  </ic-tab-group>\r\n  <ic-tab-panel>Tab One - Ingredients</ic-tab-panel>\r\n  <ic-tab-panel>Tab Two - Method</ic-tab-panel>\r\n  <ic-tab-panel>Tab Three - History</ic-tab-panel>\r\n</ic-tab-context>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTabContext>\r\n  <IcTabGroup label=\"Example tab group\">\r\n    <IcTab>Ingredients</IcTab>\r\n    <IcTab disabled>Method</IcTab>\r\n    <IcTab>History</IcTab>\r\n  </IcTabGroup>\r\n  <IcTabPanel>Tab One - Ingredients</IcTabPanel>\r\n  <IcTabPanel>Tab Two - Method</IcTabPanel>\r\n  <IcTabPanel>Tab Three - History</IcTabPanel>\r\n</IcTabContext>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={disabled}>\r\n  <IcTabContext>\r\n    <IcTabGroup label=\"Example tab group\">\r\n      <IcTab>Ingredients</IcTab>\r\n      <IcTab disabled>Method</IcTab>\r\n      <IcTab>History</IcTab>\r\n    </IcTabGroup>\r\n    <IcTabPanel>Tab One - Ingredients</IcTabPanel>\r\n    <IcTabPanel>Tab Two - Method</IcTabPanel>\r\n    <IcTabPanel>Tab Three - History</IcTabPanel>\r\n  </IcTabContext>\r\n</ComponentPreview>\r\n\r\n### Light\r\n\r\nexport const light = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-tab-context appearance=\"light\">\r\n  <ic-tab-group label=\"Example tab group\">\r\n    <ic-tab>Ingredients</ic-tab>\r\n    <ic-tab>Method</ic-tab>\r\n    <ic-tab>History</ic-tab>\r\n  </ic-tab-group>\r\n  <ic-tab-panel>Tab One - Ingredients</ic-tab-panel>\r\n  <ic-tab-panel>Tab Two - Method</ic-tab-panel>\r\n  <ic-tab-panel>Tab Three - History</ic-tab-panel>\r\n</ic-tab-context>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTabContext appearance=\"light\">\r\n  <IcTabGroup label=\"Example tab group\">\r\n    <IcTab>Ingredients</IcTab>\r\n    <IcTab>Method</IcTab>\r\n    <IcTab>History</IcTab>\r\n  </IcTabGroup>\r\n  <IcTabPanel>Tab One - Ingredients</IcTabPanel>\r\n  <IcTabPanel>Tab Two - Method</IcTabPanel>\r\n  <IcTabPanel>Tab Three - History</IcTabPanel>\r\n</IcTabContext>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={light} style={{ backgroundColor: \"#2c2f34\" }}>\r\n  <IcTabContext appearance=\"light\">\r\n    <IcTabGroup label=\"Example tab group\">\r\n      <IcTab>Ingredients</IcTab>\r\n      <IcTab>Method</IcTab>\r\n      <IcTab>History</IcTab>\r\n    </IcTabGroup>\r\n    <IcTabPanel>Tab One - Ingredients</IcTabPanel>\r\n    <IcTabPanel>Tab Two - Method</IcTabPanel>\r\n    <IcTabPanel>Tab Three - History</IcTabPanel>\r\n  </IcTabContext>\r\n</ComponentPreview>\r\n\r\n### Compact\r\n\r\nexport const compact = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-tab-context class=\"tabs\">\r\n    <ic-tab-group label=\"Example tab group\">\r\n      <ic-tab>Ingredients</ic-tab>\r\n      <ic-tab>Method</ic-tab>\r\n      <ic-tab>History</ic-tab>\r\n      <ic-tab>Drinks</ic-tab>\r\n      <ic-tab>Recipes</ic-tab>\r\n    </ic-tab-group>\r\n    <ic-tab-panel>Tab One - Ingredients</ic-tab-panel>\r\n    <ic-tab-panel>Tab Two - Method</ic-tab-panel>\r\n    <ic-tab-panel>Tab Three - History</ic-tab-panel>\r\n    <ic-tab-panel>Tab Four - Drinks</ic-tab-panel>\r\n    <ic-tab-panel>Tab Five - Recipes</ic-tab-panel>\r\n  <style>\r\n    .tabs ic-tab-group,\r\n    .tabs ic-tab-panel {\r\n      width: 60%;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n    }\r\n  </style>\r\n</ic-tab-context>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const compactStyle = {\r\n      width: \"60%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    }\r\nreturn (\r\n  <>\r\n    <IcTabContext style={compactStyle}>\r\n        <IcTabGroup label=\"Example tab group\">\r\n          <IcTab>Ingredients</IcTab>\r\n          <IcTab>Method</IcTab>\r\n          <IcTab>History</IcTab>\r\n          <IcTab>Drinks</IcTab>\r\n          <IcTab>Recipes</IcTab>\r\n        </IcTabGroup>\r\n        <IcTabPanel>Tab One - Ingredients</IcTabPanel>\r\n        <IcTabPanel>Tab Two - Method</IcTabPanel>\r\n        <IcTabPanel>Tab Three - History</IcTabPanel>\r\n        <IcTabPanel>Tab Four - Drinks</IcTabPanel>\r\n        <IcTabPanel>Tab Five - Recipes</IcTabPanel>\r\n    </IcTabContext>\r\n  </>\r\n);`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={compact}>\r\n  <IcTabContext class=\"tabs\">\r\n    <IcTabGroup label=\"Example tab group\">\r\n      <IcTab>Ingredients</IcTab>\r\n      <IcTab>Method</IcTab>\r\n      <IcTab>History</IcTab>\r\n      <IcTab>Drinks</IcTab>\r\n      <IcTab>Recipes</IcTab>\r\n    </IcTabGroup>\r\n    <IcTabPanel>Tab One - Ingredients</IcTabPanel>\r\n    <IcTabPanel>Tab Two - Method</IcTabPanel>\r\n    <IcTabPanel>Tab Three - History</IcTabPanel>\r\n    <IcTabPanel>Tab Four - Drinks</IcTabPanel>\r\n    <IcTabPanel>Tab Five - Recipes</IcTabPanel>\r\n  </IcTabContext>\r\n</ComponentPreview>\r\n\r\n### Nested Tabs\r\n\r\nexport const nested = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-tab-context>\r\n  <ic-tab-group label=\"Example tab group\">\r\n    <ic-tab>Ingredients</ic-tab>\r\n    <ic-tab>Method</ic-tab>\r\n    <ic-tab>History</ic-tab>\r\n  </ic-tab-group>\r\n  <ic-tab-panel>\r\n    <ic-tab-context context-id=\"context-nested\">\r\n      <ic-tab-group label=\"Example tab group\">\r\n        <ic-tab>Espresso</ic-tab>\r\n        <ic-tab>Water</ic-tab>\r\n        <ic-tab>Milk</ic-tab>\r\n      </ic-tab-group>\r\n      <ic-tab-panel>Nested Tab Panel One - Espresso</ic-tab-panel>\r\n      <ic-tab-panel>Nested Tab Panel Two - Water</ic-tab-panel>\r\n      <ic-tab-panel>Nested Tab Panel Three - Milk</ic-tab-panel>\r\n    </ic-tab-context>\r\n  </ic-tab-panel>\r\n  <ic-tab-panel>Outer Tab Panel Two - Method</ic-tab-panel>\r\n  <ic-tab-panel>Outer Tab Panel Three - History</ic-tab-panel>\r\n</ic-tab-context>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTabContext>\r\n  <IcTabGroup label=\"Example tab group\">\r\n    <IcTab>Ingredients</IcTab>\r\n    <IcTab>Method</IcTab>\r\n    <IcTab>History</IcTab>\r\n  </IcTabGroup>\r\n  <IcTabPanel>\r\n    <IcTabContext contextId=\"context-nested\">\r\n      <IcTabGroup label=\"Example tab group\">\r\n        <IcTab>Espresso</IcTab>\r\n        <IcTab>Water</IcTab>\r\n        <IcTab>Milk</IcTab>\r\n      </IcTabGroup>\r\n      <IcTabPanel>Nested Tab Panel One - Espresso</IcTabPanel>\r\n      <IcTabPanel>Nested Tab Panel Two - Water</IcTabPanel>\r\n      <IcTabPanel>Nested Tab Panel Three - Milk</IcTabPanel>\r\n    </IcTabContext>\r\n  </IcTabPanel>\r\n  <IcTabPanel>Outer Tab Panel Two - Method</IcTabPanel>\r\n  <IcTabPanel>Outer Tab Panel Three - History</IcTabPanel>\r\n</IcTabContext>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={nested}>\r\n  <IcTabContext>\r\n    <IcTabGroup label=\"Example tab group\">\r\n      <IcTab>Ingredients</IcTab>\r\n      <IcTab>Method</IcTab>\r\n      <IcTab>History</IcTab>\r\n    </IcTabGroup>\r\n    <IcTabPanel>\r\n      <IcTabContext contextId=\"context-nested\">\r\n        <IcTabGroup label=\"Example tab group\">\r\n          <IcTab>Espresso</IcTab>\r\n          <IcTab>Water</IcTab>\r\n          <IcTab>Milk</IcTab>\r\n        </IcTabGroup>\r\n        <IcTabPanel>Nested Tab Panel One - Espresso</IcTabPanel>\r\n        <IcTabPanel>Nested Tab Panel Two - Water</IcTabPanel>\r\n        <IcTabPanel>Nested Tab Panel Three - Milk</IcTabPanel>\r\n      </IcTabContext>\r\n    </IcTabPanel>\r\n    <IcTabPanel>Outer Tab Panel Two - Method</IcTabPanel>\r\n    <IcTabPanel>Outer Tab Panel Three - History</IcTabPanel>\r\n  </IcTabContext>\r\n</ComponentPreview>\r\n",
      "path": "/components/tabs/code",
      "date": "2024-04-17",
      "title": "Tabs",
      "status": "BETA",
      "subTitle": "Tabs let users navigate between content within the same context. Tabs organise complex layouts by moving content into multiple sections.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/tabs",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/tabs"
        },
        {
          "title": "Code",
          "path": "/components/tabs/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/tabs/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\tabs\\code.mdx",
        "createdAt": "2024-05-20T13:20:43.349Z",
        "lastModified": "2024-05-20T13:20:43.349Z",
        "size": 15007,
        "formattedSize": "14.7 KB"
      }
    },
    {
      "id": "components\\tabs\\guidancex",
      "contents": "\r\nimport { IcTab, IcTabContext, IcTabGroup, IcTabPanel } from \"@ukic/react\";\r\nimport tabsFig1 from \"./images/fig-1-light-tab-bar-example.png\";\r\nimport tabsFig2 from \"./images/fig-2-dark-tab-bar-example.png\";\r\nimport tabsFig3 from \"./images/fig-3-dont-separate-the-tab-container-from-the-tab-bar.png\";\r\nimport tabsFig4 from \"./images/fig-4-compact-tab-presentation.png\";\r\nimport tabsFig5 from \"./images/fig-5-keep-labels-concise.png\";\r\nimport tabsFig6 from \"./images/fig-6-dont-use-long-labels.png\";\r\nimport tabsFig7 from \"./images/fig-7-avoid-using-too-many-tabs.png\";\r\nimport tabsFig8 from \"./images/fig-8-use-clear-icons-for-tabs.png\";\r\nimport tabsFig9 from \"./images/fig-9-dont-use-ambiguous-icons.png\";\r\nimport tabsFig10 from \"./images/fig-10-dont-mix-icon-tabs-with-normal-tabs.png\";\r\n\r\n## Introduction\r\n\r\nAn example of the tab component.\r\n\r\n<ComponentPreview>\r\n  <IcTabContext>\r\n    <IcTabGroup label=\"Example tab group\">\r\n      <IcTab>Ingredients</IcTab>\r\n      <IcTab>Method</IcTab>\r\n      <IcTab>History</IcTab>\r\n    </IcTabGroup>\r\n    <IcTabPanel>Tab One - Ingredients</IcTabPanel>\r\n    <IcTabPanel>Tab Two - Method</IcTabPanel>\r\n    <IcTabPanel>Tab Three - History</IcTabPanel>\r\n  </IcTabContext>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse tabs to organise large amounts of related content into different sections and allow people to quickly switch between them. Tabs display one section at a time.\r\n\r\nAlways consider the amount of content presented on one page and decide if it can be reduced or split across multiple pages to make it more digestible instead of placing into tabs.\r\n\r\n## When not to use\r\n\r\nDon’t use tabs if the order of the content is important, such as in a checkout process. Instead use a [stepper](/components/stepper) to order the sections into a linear process.\r\n\r\nDon’t use tabs if the content on different tabs needs to be compared.\r\n\r\n## Colour\r\n\r\nUse a dark tab bar on light backgrounds and use a light tab bar on darker backgrounds.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={tabsFig1}\r\n    imageAlt=\"A recipe site showing a recipe titled ‘Hazelnut macchiato recipe’. The recipe sits on a white background and has a dark tab bar with two tabs for ‘Ingredients’ and ‘Method’.\"\r\n    state=\"good\"\r\n    caption=\"Use a dark tab bar on light backgrounds.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={tabsFig2}\r\n    imageAlt=\"A recipe site showing a recipe titled ‘Hazelnut macchiato recipe’. The recipe sits on a dark blue background and has a light tab bar with two tabs for ‘Ingredients’ and ‘Method’.\"\r\n    state=\"good\"\r\n    caption=\"Use a light tab bar on dark backgrounds.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Layout and placement\r\n\r\nAlways place tabs directly above the content container that they control.\r\n\r\nDon’t position tabs so that they are unconnected from the content that belongs to them.\r\n\r\n<DoDontCaution\r\n  imageSrc={tabsFig3}\r\n  imageAlt=\"A recipe site showing a page titled ‘Hazelnut macchiato recipe’. The page title has a tab bar showing two tabs ‘Ingredients’ and ‘Method’. Between the tab bar and the tab container is a link to ‘our menu’.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t separate the tab container from the tab bar.\"\r\n/>\r\n\r\nOn smaller screen sizes, tab bars with a large number of tabs will collapse into a compact tab selector instead.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={tabsFig4}\r\n    imageAlt=\"A recipe site showing a page titled ‘Hazelnut macchiato recipe’. The page title has a tab bar showing a series of tabs. Three tabs are viewable on the screen and scroll buttons are displayed in the tab bar indicating that more tabs can be scrolled into view.\"\r\n    state=\"good\"\r\n    caption=\"A tab bar showing multiple tabs in a compact layout. Scroll controls are added to navigate through the tab bar.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Content\r\n\r\n### Labels\r\n\r\nKeep labels short and informative so that the tab’s content is clear. Tab labels always display on one line, so keeping them short means that more tabs can be displayed if required.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={tabsFig5}\r\n    imageAlt=\"A recipe page showing a tab bar with two tabs labelled ‘Ingredients’ and ‘Method’.\"\r\n    state=\"good\"\r\n    caption=\"Use concise labels on tabs.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={tabsFig6}\r\n    imageAlt=\"A recipe page showing a tab bar with two tabs labelled ‘This is what goes in it’ and 'How it's made’.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t use long labels.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n### Order of tabs\r\n\r\nArrange the tabs in an order that makes the most sense in context. Always show the first tab by default when the page loads. Place the most important content in the first tab.\r\n\r\nAvoid using six or more tabs as this may add too much complexity to the page. Consider if content can be reduced or split across multiple pages instead.\r\n\r\n<DoDontCaution\r\n  imageSrc={tabsFig7}\r\n  imageAlt=\"A recipe page with a tab bar with six tabs.\"\r\n  state=\"caution\"\r\n  caption=\"Avoid using too many tabs as it can complicate the page.\"\r\n/>\r\n\r\n### Icons\r\n\r\nAdd icons to tab labels to provide an extra visual cue to the tab’s content. Ensure that icons are relevant to the tab content.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={tabsFig8}\r\n    imageAlt=\"A tab bar with two icon tabs labelled ‘Ingredients’ and ‘Method’. The ingredients tab has a fridge icon and the method tab has a checklist icon.\"\r\n    state=\"good\"\r\n    caption=\"Use clear icons on tab labels.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={tabsFig9}\r\n    imageAlt=\"A tab bar with two icon tabs labelled ‘Ingredients’ and ‘Method’. Both icons are difficult to understand as they don't clearly match the label.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t use ambiguous icons.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nDon’t use icons for some tabs and not others. Always apply icons to all tabs if using them.\r\n\r\n<DoDontCaution\r\n  imageSrc={tabsFig10}\r\n  imageAlt=\" A recipe page that shows a tab bar with three tabs. Only one tab out of the three uses an icon.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t mix normal tabs with icon tabs. Use either all normal tabs or all icon tabs.\"\r\n/>\r\n\r\n## Accessibility considerations\r\n\r\nWhen deciding to use tabs, consider whether this component gives users the most understandable and usable way of navigating between the content.\r\n\r\nConsider laying out your content into a single page with anchor links to move between sections.\r\n\r\nAlso consider using other containers that are more suited to responsive behaviour such as accordions, which use a single column.\r\n",
      "path": "/components/tabs",
      "navPriority": 34,
      "date": "2023-02-03",
      "title": "Tabs",
      "status": "BETA",
      "subTitle": "Tabs let users navigate between content within the same context. Tabs organise complex layouts by separating content into multiple sections.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/tabs",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/tabs"
        },
        {
          "title": "Code",
          "path": "/components/tabs/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/tabs/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\tabs\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.023Z",
        "lastModified": "2024-06-04T07:48:35.023Z",
        "size": 7251,
        "formattedSize": "7.1 KB"
      }
    },
    {
      "id": "components\\text-field\\accessibilityx",
      "contents": "\r\n# Accessibility\r\n\r\n## Easy to use for everyone\r\n\r\nText inputs can have `aria-labelledby` or `aria-label` tags that provide additional content to the visible label.\r\n\r\n## For Assistive Technology\r\n\r\nText inputs use `aria-invalid=\"true\"` and `aria-live=\"assertive\"` for validation. Use `aria-invalid=\"false\"` for successes or warnings and `aria-live=\"polite\"` to announce the character count.\r\n\r\nWe have included a hidden label through `aria-describedby`, contained in a hidden span to inform the users of the maximum character count when the component is focused.\r\n\r\n## Based on\r\n\r\nThe text input component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/tutorials/forms/labels/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Labeling controls\r\n    </ic-link>\r\n    , W3, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/tutorials/forms/validation/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Validation Input\r\n    </ic-link>\r\n    , W3, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://a11y-101.com/development/inputs\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Inputs\r\n    </ic-link>\r\n    , A11Y 101, accessed July 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://webaim.org/techniques/forms/controls\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Creating accessible forms\r\n    </ic-link>\r\n    , WebAIM, accessed July 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/text-field/accessibility",
      "date": "2024-04-15",
      "title": "Text field",
      "status": "BETA",
      "subTitle": "Text fields let users input and edit text. Text fields capture a single line of text and text areas capture multiple lines of text.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/text-field",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/text-field"
        },
        {
          "title": "Code",
          "path": "/components/text-field/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/text-field/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\text-field\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.349Z",
        "lastModified": "2024-05-20T13:20:43.349Z",
        "size": 2383,
        "formattedSize": "2.3 KB"
      }
    },
    {
      "id": "components\\text-field\\codex",
      "contents": "\r\nimport { IcTextField } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-text-field \r\n    label=\"What is your favourite coffee?\" \r\n    placeholder=\"Please enter…\" \r\n    helper-text=\"Such as Arabica, Robusta or Liberica\">\r\n</ic-text-field>\r\n<script>\r\n  const textField = document.querySelector('ic-text-field');\r\n  textfield.addEventListenter('icChange', (ev) => console.log(ev.detail.value));\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTextField \r\n  label=\"What is your favourite coffee?\" \r\n  placeholder=\"Please enter…\" \r\n  helperText=\"Such as Arabica, Robusta or Liberica\"\r\n  onIcChange={(ev) => console.log(ev.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDefault}>\r\n  <IcTextField\r\n    label=\"What is your favourite coffee?\"\r\n    placeholder=\"Please enter…\"\r\n    helperText=\"Such as Arabica, Robusta or Liberica\"\r\n    onIcChange={(ev) => console.log(ev.detail.value)}\r\n  />\r\n</ComponentPreview>\r\n\r\n## Text field details\r\n\r\n<ComponentDetails component=\"ic-text-field\" />\r\n\r\n## Variants\r\n\r\n### With icon, value and max length\r\n\r\nexport const snippetsIconValueMaxLength = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-text-field \r\n  max-length=\"25\" \r\n  value=\"Arabica\" \r\n  label=\"What is your favourite coffee?\" \r\n  required=\"true\" \r\n  placeholder=\"Please enter…\" \r\n  helper-text=\"Such as Arabica, Robusta or Liberica\" \r\n>\r\n  <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21H20V19H2M20,8H18V5H20M20,3H4V13A4,4 0 0,0 8,17H14A4,4 0 0,0 18,13V10H20A2,2 0 0,0 22,8V5C22,3.89 21.1,3 20,3Z\" />\r\n  </svg>\r\n</ic-text-field>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTextField \r\n  maxLength={25} \r\n  value=\"Arabica\" \r\n  label=\"What is your favourite coffee?\" \r\n  required \r\n  placeholder=\"Please enter…\" \r\n  helperText=\"Such as Arabica, Robusta or Liberica\"\r\n>\r\n  <SlottedSVG\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M2,21H20V19H2M20,8H18V5H20M20,3H4V13A4,4 0 0,0 8,17H14A4,4 0 0,0 18,13V10H20A2,2 0 0,0 22,8V5C22,3.89 21.1,3 20,3Z\" />\r\n  </SlottedSVG>\r\n</IcTextField>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsIconValueMaxLength}>\r\n  <IcTextField\r\n    maxLength={25}\r\n    value=\"Arabica\"\r\n    label=\"What is your favourite coffee?\"\r\n    required\r\n    placeholder=\"Please enter…\"\r\n    helperText=\"Such as Arabica, Robusta or Liberica\"\r\n  >\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21H20V19H2M20,8H18V5H20M20,3H4V13A4,4 0 0,0 8,17H14A4,4 0 0,0 18,13V10H20A2,2 0 0,0 22,8V5C22,3.89 21.1,3 20,3Z\" />\r\n    </svg>\r\n  </IcTextField>\r\n</ComponentPreview>\r\n\r\n### Disabled\r\n\r\nexport const snippetsDisabled = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-text-field \r\n    label=\"What is your favourite coffee?\" \r\n    required=\"true\" \r\n    placeholder=\"Please enter…\" \r\n    disabled=\"true\">\r\n    <svg\r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n    <path d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\" />\r\n  </svg>\r\n</ic-text-field>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTextField \r\n    label=\"What is your favourite coffee?\" \r\n    required \r\n    placeholder=\"Please enter…\" \r\n    disabled>\r\n  <SlottedSVG \r\n    slot=\"icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n    <path d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\" />\r\n  </SlottedSVG>\r\n</IcTextField>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDisabled}>\r\n  <IcTextField\r\n    label=\"What is your favourite coffee?\"\r\n    required\r\n    placeholder=\"Please enter…\"\r\n    disabled\r\n  >\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n      <path d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\" />\r\n    </svg>\r\n  </IcTextField>\r\n</ComponentPreview>\r\n\r\n### Size small\r\n\r\nexport const snippetsSmall = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-text-field \r\n    label=\"What is your favourite coffee?\" \r\n    placeholder=\"Please enter…\" \r\n    size=\"small\">\r\n</ic-text-field>\r\n<script>\r\n  const textField = document.querySelector('ic-text-field');\r\n  textfield.addEventListenter('icChange', (ev) => console.log(ev.detail.value));\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTextField \r\n  label=\"What is your favourite coffee?\" \r\n  placeholder=\"Please enter…\" \r\n  size=\"small\"\r\n  onIcChange={(ev) => console.log(ev.detail.value)}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsSmall}>\r\n  <IcTextField\r\n    label=\"What is your favourite coffee?\"\r\n    placeholder=\"Please enter…\"\r\n    size=\"small\"\r\n    onIcChange={(ev) => console.log(ev.detail.value)}\r\n  />\r\n</ComponentPreview>\r\n\r\n### Validation\r\n\r\nexport const snippetsValidation = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-text-field \r\n    validation-status=\"success\" \r\n    validation-text=\"Good choice!\" \r\n    value=\"Arabica\" max-length=\"25\" \r\n    label=\"What is your favourite coffee?\" \r\n    required=\"true\" placeholder=\"Please enter…\" \r\n    helper-text=\"Such as Arabica, Robusta or Liberica\">\r\n</ic-text-field>\r\n<ic-text-field \r\n  validation-status=\"success\" \r\n  validation-text=\"Good choice!\" \r\n  validation-inline=\"true\" \r\n  value=\"Arabica\" \r\n  max-length=\"25\" \r\n  label=\"What is your favourite coffee?\" \r\n  required=\"true\" placeholder=\"Please enter…\" \r\n  helper-text=\"Such as Arabica, Robusta or Liberica\">\r\n</ic-text-field>\r\n<ic-text-field \r\n  validation-status=\"warning\" \r\n  validation-text=\"There’s only a few left! Order now to avoid missing out.\" \r\n  value=\"Arabica\"\r\n  max-length=\"25\" \r\n  label=\"What is your favourite coffee?\" \r\n  required=\"true\" \r\n  placeholder=\"Please enter…\" \r\n  helper-text=\"Such as Arabica, Robusta or Liberica\">\r\n</ic-text-field>\r\n<ic-text-field \r\n  validation-status=\"error\" \r\n  validation-text=\"now it has really gone to (coffee) pot\" \r\n  value=\"Tea\" \r\n  max-length=\"25\" \r\n  label=\"What is your favourite coffee?\" \r\n  required=\"true\" \r\n  placeholder=\"Please enter…\" \r\n  helper-text=\"Such as Arabica, Robusta or Liberica\">\r\n</ic-text-field>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTextField \r\n    maxLength={25} \r\n    value=\"Arabica\" \r\n    label=\"What is your favourite coffee?\" \r\n    required \r\n    placeholder=\"Please enter…\" \r\n    helperText=\"Such as Arabica, Robusta or Liberica\" \r\n    validationStatus=\"success\" \r\n    validationText=\"Good choice!\" />\r\n<IcTextField \r\n  maxLength={25} \r\n  value=\"Arabica\" \r\n  label=\"What is your favourite coffee?\" \r\n  required \r\n  placeholder=\"Please enter…\" \r\n  helperText=\"Such as Arabica, Robusta or Liberica\" \r\n  validationStatus=\"success\" \r\n  validationText=\"Good choice!\" \r\n  validationInline />\r\n<IcTextField \r\n  maxLength={25} \r\n  value=\"Arabica\" \r\n  label=\"What is your favourite coffee?\" \r\n  required \r\n  placeholder=\"Please enter…\" \r\n  helperText=\"Such as Arabica, Robusta or Liberica\" \r\n  validationStatus=\"warning\" \r\n  validationText=\"There’s only a few left! Order now to avoid missing out.\" />\r\n<IcTextField \r\n  maxLength={25} \r\n  value=\"Tea\" \r\n  label=\"What is your favourite coffee?\" \r\n  required \r\n  placeholder=\"Please enter…\" \r\n  helperText=\"Such as Arabica, Robusta or Liberica\" \r\n  validationStatus=\"error\" \r\n  validationText=\"Now it has really gone to (coffee) pot\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsValidation}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\r\n    <IcTextField\r\n      maxLength={25}\r\n      value=\"Arabica\"\r\n      label=\"What is your favourite coffee?\"\r\n      required\r\n      placeholder=\"Please enter…\"\r\n      helperText=\"Such as Arabica, Robusta or Liberica\"\r\n      validationStatus=\"success\"\r\n      validationText=\"Good choice!\"\r\n    />\r\n    <IcTextField\r\n      maxLength={25}\r\n      value=\"Arabica\"\r\n      label=\"What is your favourite coffee?\"\r\n      required\r\n      placeholder=\"Please enter…\"\r\n      helperText=\"Such as Arabica, Robusta or Liberica\"\r\n      validationStatus=\"success\"\r\n      validationText=\"Good choice!\"\r\n      validationInline\r\n    />\r\n    <IcTextField\r\n      maxLength={25}\r\n      value=\"Arabica\"\r\n      label=\"What is your favourite coffee?\"\r\n      required\r\n      placeholder=\"Please enter…\"\r\n      helperText=\"Such as Arabica, Robusta or Liberica\"\r\n      validationStatus=\"warning\"\r\n      validationText=\"There’s only a few left! Order now to avoid missing out.\"\r\n    />\r\n    <IcTextField\r\n      maxLength={25}\r\n      value=\"Tea\"\r\n      label=\"What is your favourite coffee?\"\r\n      required\r\n      placeholder=\"Please enter…\"\r\n      helperText=\"Such as Arabica, Robusta or Liberica\"\r\n      validationStatus=\"error\"\r\n      validationText=\"Now it has really gone to (coffee) pot\"\r\n    />\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### With min and max values\r\n\r\nIn this example, an error message will display when the input is either below the min value or above the max value. This only affects numeric input fields.\r\n\r\nexport const snippetsMinMax = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-text-field\r\n  label=\"How many coffees do you want?\"\r\n  helper-text=\"Our coffee machines have a maximum capacity of 4 coffees at a time.\"\r\n  placeholder=\"Please enter…\" \r\n  type=\"number\"\r\n  inputmode=\"numeric\"\r\n  min=\"1\"\r\n  max=\"4\"\r\n  value=\"6\"\r\n>\r\n</ic-text-field>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTextField\r\n  label=\"How many coffees do you want?\"\r\n  helperText=\"Our coffee machines have a maximum capacity of 4 coffees at a time.\"\r\n  placeholder=\"Please enter…\" \r\n  type=\"number\"\r\n  inputmode=\"numeric\"\r\n  min=\"1\"\r\n  max=\"4\"\r\n  value=\"6\"\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsMinMax}>\r\n  <IcTextField\r\n    label=\"How many coffees do you want?\"\r\n    helperText=\"Our coffee machines have a maximum capacity of 4 coffees at a time.\"\r\n    placeholder=\"Please enter…\"\r\n    type=\"number\"\r\n    inputmode=\"numeric\"\r\n    min=\"1\"\r\n    max=\"4\"\r\n    value=\"6\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Text area with resize\r\n\r\nexport const snippetsTextArea = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-text-field \r\n    rows=\"6\"\r\n    resize=\"true\" \r\n    label=\"What is your favourite coffee?\" \r\n    placeholder=\"Please enter…\" \r\n    helper-text=\"Such as Arabica, Robusta or Liberica\">\r\n</ic-text-field>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTextField \r\n    rows={6} \r\n    resize \r\n    label=\"What is your favourite coffee?\" \r\n    placeholder=\"Please enter…\" \r\n    helperText=\"Such as Arabica, Robusta or Liberica\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsTextArea}>\r\n  <IcTextField\r\n    rows={6}\r\n    resize\r\n    label=\"What is your favourite coffee?\"\r\n    placeholder=\"Please enter…\"\r\n    helperText=\"Such as Arabica, Robusta or Liberica\"\r\n  />\r\n</ComponentPreview>\r\n",
      "path": "/components/text-field/code",
      "date": "2023-10-25",
      "title": "Text field",
      "status": "BETA",
      "subTitle": "Text fields let users input and edit text. Text fields capture a single line of text and text areas capture multiple lines of text.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/text-field",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/text-field"
        },
        {
          "title": "Code",
          "path": "/components/text-field/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/text-field/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\text-field\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.202Z",
        "lastModified": "2024-04-04T12:41:44.202Z",
        "size": 12108,
        "formattedSize": "11.8 KB"
      }
    },
    {
      "id": "components\\text-field\\guidancex",
      "contents": "\r\nimport { IcTextField } from \"@ukic/react\";\r\nimport textInputFig1 from \"./images/fig-1-a-textfield-with-helper-text.png\";\r\nimport textInputFig2 from \"./images/fig-2-a-textfield-with-an-example-of-placeholder-text-and-user-inputted-text.png\";\r\nimport textInputFig3 from \"./images/fig-3-use-understandable-visual-icons-to-add-clarity-to-the-field-and-draw-attention.png\";\r\nimport textInputFig4 from \"./images/fig-4-dont-use-unrelated-icons.png\";\r\nimport textInputFig5 from \"./images/fig-5-examples-of-a-textarea-with-a-character-count.png\";\r\nimport textInputFig6 from \"./images/fig-6-three-text-fields-correctly-sized-to-the-expected-length-of-input.png\";\r\nimport textInputFig7 from \"./images/fig-7-three-text-fields-not-correctly-sized-to-expected-content.png\";\r\nimport textInputFig8 from \"./images/fig-8-textfields-showing-the-three-different-validation-states.png\";\r\nimport textInputFig9 from \"./images/fig-9-use-inline-validation-for-successes-that-dont-require-success-labels.png\";\r\n\r\n## Component variants\r\n\r\nThere are two types of text field:\r\n\r\n- Single line text fields\r\n- Multi-line text fields (also known as text areas)\r\n\r\n### Text fields\r\n\r\nUse text fields for entering and editing single lines of text.\r\n\r\n<ComponentPreview>\r\n  <IcTextField\r\n    label=\"What is your favourite coffee?\"\r\n    placeholder=\"Please enter…\"\r\n    helperText=\"Such as Arabica, Robusta or Liberica\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Text areas\r\n\r\nUse text areas for entering and editing large amounts of text that require more than a single line.\r\n\r\n<ComponentPreview>\r\n  <IcTextField\r\n    rows=\"6\"\r\n    label=\"What is your favourite coffee?\"\r\n    placeholder=\"Please enter…\"\r\n    helperText=\"Such as Arabica, Robusta or Liberica\"\r\n  />\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse text fields as part of a form or other data collection page for capturing text input.\r\n\r\n## Content\r\n\r\n### Labels\r\n\r\nUse clear labels to indicate what information should be entered into the field.\r\n\r\n### Helper text\r\n\r\nUse helper text in addition to the field label when additional information helps users understand what information is required.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={textInputFig1}\r\n    imageAlt=\"A text field component with a label and helper text.\"\r\n    state=\"good\"\r\n    caption=\"A text field with helper text.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nWhen setting minimum and maximum values using the `min` and `max` props, make sure to add an indication of these formatting rules in the helper text.\r\n\r\n### Placeholder text\r\n\r\nUse placeholder text to optionally provide an example of what to type into the field.\r\n\r\nOnly use placeholder text if it makes it easier to fill in the text field.\r\n\r\nDon't use placeholder text to convey additional meaning other than an example of the expected input.\r\n\r\n<DoDontCaution\r\n  imageSrc={textInputFig2}\r\n  imageAlt=\"An image showing two text fields, both with a label which states 'Email'. One shows a placeholder email in the input box, while the other shows a filled in input box with an actual email address.\"\r\n  state=\"good\"\r\n  caption=\"A text field with an example of placeholder text and user-inputted text.\"\r\n/>\r\n\r\n### Icons\r\n\r\nWhen including an icon in a text input make sure that the icon is understandable and relevant to the type of input required by the field. Always provide alternative descriptions for icons. Don't use icons if they aren't necessary.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={textInputFig3}\r\n    imageAlt=\"An image showing two text fields. The top one titled 'Username' features an icon of a person, and the field titled 'Password' features an icon of a lock.\"\r\n    state=\"good\"\r\n    caption=\"Use understandable visual icons to add clarity to the field and draw attention.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={textInputFig4}\r\n    imageAlt=\"An image showing two text fields. The top one titled 'Username' features an icon of a telephone, and the field titled 'Password' features an icon of a dog paw.\"\r\n    state=\"bad\"\r\n    caption=\"Incorrect use of icons can cause confusion.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Character count\r\n\r\nInclude a character limit and counter to show how close the current input is to the maximum input length.\r\n\r\n<DoDontCaution\r\n  imageSrc={textInputFig5}\r\n  imageAlt=\"An example of two text areas with a character count. The first is below the character count, and the second is over the character count and is showing an error.\"\r\n  state=\"good\"\r\n  caption=\"Use a character count to clearly inform users of the character limit.\"\r\n/>\r\n\r\n## Layout and placement\r\n\r\n### Field width\r\n\r\nMake the width of the field reflect the length of content you expect the user to enter.\r\n\r\n<DoDontCaution\r\n  imageSrc={textInputFig6}\r\n  imageAlt=\"An image showing three text fields. The top two, titled 'First name' and 'Second name' take up half the horizontal size of the third one, titled 'Address'.\"\r\n  state=\"good\"\r\n  caption=\"Three text fields correctly sized to the expected length of input.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={textInputFig7}\r\n  imageAlt=\"An image showing three text fields. The top two, titled 'First name' and 'Second name' are the same horizontal size of the third one, titled 'Address'.\"\r\n  state=\"bad\"\r\n  caption=\"Three text fields not correctly sized to expected content.\"\r\n/>\r\n\r\n## Validation (error handling)\r\n\r\nReal-time validation helps the user streamline their process and efficiently complete a form. All error validation should be accompanied by an error label. Use inline validation for successes that don't require success labels.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={textInputFig8}\r\n    imageAlt=\"An image showing three different text fields with different validation states. The first one shows an success validation message. The second one shows a warning validation message. The third one shows an error validation message.\"\r\n    state=\"good\"\r\n    caption=\"Text fields showing the three different validation states.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={textInputFig9}\r\n    imageAlt=\"A text field labelled 'Favourite hot drink', with a green tick icon within the input field to show the successful validation state.\"\r\n    state=\"good\"\r\n    caption=\"Use inline validation for successes that don't require success labels.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n",
      "path": "/components/text-field",
      "navPriority": 35,
      "date": "2023-04-25",
      "title": "Text field",
      "status": "BETA",
      "subTitle": "Text fields let users input and edit text. Text fields capture a single line of text and text areas capture multiple lines of text.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/text-field",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/text-field"
        },
        {
          "title": "Code",
          "path": "/components/text-field/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/text-field/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\text-field\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.024Z",
        "lastModified": "2024-06-04T07:48:35.024Z",
        "size": 6931,
        "formattedSize": "6.8 KB"
      }
    },
    {
      "id": "components\\toasts\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nToasts can be difficult for people to notice due to their auto-dismiss behaviour meaning they can easily be missed.\r\n\r\nOur guidance highlights the importance of making sure that the content of toast messages is always non-essential to completing a task.\r\n\r\nIf more time is needed to read the toast's content, then a longer timeout duration can be set. A user can also hover over the toast with their mouse to pause the timer. Auto-dismiss toasts also include a visual timer, to show how long remains until it disappears.\r\n\r\nIf any actions are included within a toast, then it can’t be set to auto-dismiss. This gives a user extra time to locate and trigger the action.\r\n\r\n## For Assistive Technology\r\n\r\nAuto-dismissible toasts use a role of alert, which uses an `aria-live` region to announce the contents immediately to users of assistive technology.\r\n\r\nToasts that don't auto-dismiss use a role of dialog and focus is moved to the toast when displayed. After dismissing the toast, focus is returned to the same position on the page that was focused before the toast was displayed. Focus is also trapped between the toast's interactive elements, so that users can complete the action quickly and easily.\r\n\r\nPressing `Escape` on the keyboard will dismiss manual toasts immediately.\r\n\r\n## Based on\r\n\r\nThe toast component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.scottohara.me/blog/2019/07/08/a-toast-to-a11y-toasts.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      A toast to a11y toasts\r\n    </ic-link>\r\n    , Scott O’Hara, accessed March 20222.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://adrianroselli.com/2019/06/scraping-burned-toast.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Scraping burned toast\r\n    </ic-link>\r\n    , Adrian Roselli, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://adrianroselli.com/2020/01/defining-toast-messages.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Defining toast messages\r\n    </ic-link>\r\n    , Adrian Roselli, accessed March 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/WCAG22/Understanding/timing-adjustable.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      2.2.1 Timing adjustable\r\n    </ic-link>\r\n    , WCAG 2.2, accessed April 2024.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/dialog_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Dialog role\r\n    </ic-link>\r\n    , MDN web docs, accessed March 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/toast/accessibility",
      "date": "2024-04-15",
      "title": "Toast",
      "status": "BETA",
      "subTitle": "Toasts give brief, non-critical updates about events that happen in an app. Toasts are sometimes called 'snackbars'.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/toast",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/toast"
        },
        {
          "title": "Code",
          "path": "/components/toast/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/toast/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\toasts\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:35.025Z",
        "lastModified": "2024-06-04T07:48:35.025Z",
        "size": 3504,
        "formattedSize": "3.4 KB"
      }
    },
    {
      "id": "components\\toasts\\codex",
      "contents": "\r\nimport {\r\n  IcToast,\r\n  IcToastRegion,\r\n  IcButton,\r\n  IcLink,\r\n  SlottedSVG,\r\n} from \"@ukic/react\";\r\nimport { useRef } from \"react\";\r\n\r\nexport const defaultSnippet = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button onclick=\"displayToast()\">Display toast</ic-button>\r\n<ic-toast-region>\r\n  <ic-toast id=\"toast-01\" heading=\"Your coffee is ready\"></ic-toast>\r\n</ic-toast-region>\r\n<script>\r\n  const toastRegion = document.querySelector(\"ic-toast-region\");\r\n  function displayToast() {\r\n    var toast = document.querySelector(\"#toast-01\");\r\n    toastRegion.openToast = toast;\r\n  }\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const toastRegionEl = useRef(null);\r\nconst toastEl = useRef(null);\r\nconst handleClick = () => {\r\n  toastRegionEl.current.openToast = toastEl.current;\r\n}\r\nreturn (\r\n  <>\r\n    <IcButton onClick={handleClick}>Display toast component</IcButton>\r\n    <IcToastRegion ref={toastRegionEl}>\r\n      <IcToast heading='Your coffee is ready' ref={toastEl} />\r\n    </IcToastRegion>\r\n  </>\r\n)`,\r\n  },\r\n];\r\n\r\n## Component demo\r\n\r\nexport const DefaultToast = () => {\r\n  const toastRegionEl = useRef(null);\r\n  const toastEl = useRef(null);\r\n  const handleClick = () => {\r\n    toastRegionEl.current.openToast = toastEl.current;\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton onClick={handleClick}>Display toast component</IcButton>\r\n      <IcToastRegion ref={toastRegionEl}>\r\n        <IcToast heading=\"Your coffee is ready\" ref={toastEl} />\r\n      </IcToastRegion>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={defaultSnippet}>\r\n  <DefaultToast />\r\n</ComponentPreview>\r\n\r\n## Toast region details\r\n\r\n<ComponentDetails component=\"ic-toast-region\" />\r\n\r\n## Toast details\r\n\r\n<ComponentDetails component=\"ic-toast\" />\r\n\r\n## Variants\r\n\r\n### Displaying toasts\r\n\r\nUse the `openToast` prop on the toast region component to display a toast message. Do not use the `setVisible` method on the toast component as this does not work with the toast queuing functionality.\r\n\r\n### Queuing toasts\r\n\r\nTo view the toasts queuing in the following example, click each button to open a toast and then the dismiss button on the visible toast. Each toast will appear one after the other.\r\n\r\nexport const queuingSnippet = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button onclick=\"handleClick()\">Display default toast</ic-button>\r\n<ic-button onclick=\"handleErrorClick()\">Display error toast</ic-button>\r\n<ic-button onclick=\"handleAutoDismissClick()\">Display auto dismiss toast</ic-button>\r\n<ic-toast-region>\r\n  <ic-toast id=\"toast-01\" heading=\"Your coffee is ready\"></ic-toast>\r\n  <ic-toast id=\"toast-02\" heading=\"There is no coffee left\" variant=\"error\"></ic-toast>\r\n  <ic-toast id=\"toast-03\" heading=\"Your coffee is ready\" dismiss-mode=\"automatic\" auto-dismiss-timeout=\"10000\"></ic-toast>\r\n</ic-toast-region>\r\n<script>\r\n  const toastRegion = document.querySelector(\"ic-toast-region\");\r\n  function handleClick() {\r\n    var toast = document.querySelector(\"#toast-01\");\r\n    toastRegion.openToast = toast;\r\n  }\r\n  function handleErrorClick() {\r\n    var toast = document.querySelector(\"#toast-02\");\r\n    toastRegion.openToast = toast;\r\n  }\r\n  function handleAutoDismissClick() {\r\n    var toast = document.querySelector(\"#toast-03\");\r\n    toastRegion.openToast = toast;\r\n  }\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const toastRegionEl = useRef(null);\r\nconst toastEl = useRef(null);\r\nconst errorToastEl = useRef(null);\r\nconst autoDismissToastEl = useRef(null);\r\nconst handleClick = () => {\r\n  toastRegionEl.current.openToast = toastEl.current;\r\n};\r\nconst handleErrorClick = () => {\r\n  toastRegionEl.current.openToast = errorToastEl.current;\r\n};\r\nconst handleAutoDismissClick = () => {\r\n  toastRegionEl.current.openToast = autoDismissToastEl.current;\r\n};\r\nreturn (\r\n  <>\r\n    <div style={{ display: \"flex\", gap: \"8px\" }}>\r\n    <IcButton onClick={handleClick}>Display default toast</IcButton>\r\n    <IcButton onClick={handleErrorClick}>Display error toast</IcButton>\r\n    <IcButton onClick={handleAutoDismissClick}>Display auto dismiss toast</IcButton>\r\n    </div>\r\n    <IcToastRegion ref={toastRegionEl}>\r\n      <IcToast heading=\"Your coffee is ready\" ref={toastEl} />\r\n      <IcToast heading=\"There is no coffee left\" variant=\"error\" ref={errorToastEl} />\r\n      <IcToast heading=\"Your coffee is ready\" dismissMode=\"automatic\" autoDismissTimeout={10000} ref={autoDismissToastEl} />\r\n    </IcToastRegion>\r\n  </>\r\n);`,\r\n  },\r\n];\r\n\r\nexport const QueuingToast = () => {\r\n  const toastRegionEl = useRef(null);\r\n  const toastEl = useRef(null);\r\n  const errorToastEl = useRef(null);\r\n  const autoDismissToastEl = useRef(null);\r\n  const handleClick = () => {\r\n    toastRegionEl.current.openToast = toastEl.current;\r\n  };\r\n  const handleErrorClick = () => {\r\n    toastRegionEl.current.openToast = errorToastEl.current;\r\n  };\r\n  const handleAutoDismissClick = () => {\r\n    toastRegionEl.current.openToast = autoDismissToastEl.current;\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ display: \"flex\", gap: \"8px\" }}>\r\n        <IcButton onClick={handleClick}>Display default toast</IcButton>\r\n        <IcButton onClick={handleErrorClick}>Display error toast</IcButton>\r\n        <IcButton onClick={handleAutoDismissClick}>\r\n          Display auto dismiss toast\r\n        </IcButton>\r\n      </div>\r\n      <IcToastRegion ref={toastRegionEl}>\r\n        <IcToast heading=\"Your coffee is ready\" ref={toastEl} />\r\n        <IcToast\r\n          heading=\"There is no coffee left\"\r\n          variant=\"error\"\r\n          ref={errorToastEl}\r\n        />\r\n        <IcToast\r\n          heading=\"Your coffee is ready\"\r\n          dismissMode=\"automatic\"\r\n          autoDismissTimeout={10000}\r\n          ref={autoDismissToastEl}\r\n        />\r\n      </IcToastRegion>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={queuingSnippet}>\r\n  <QueuingToast />\r\n</ComponentPreview>\r\n\r\n### Status variant\r\n\r\nexport const withVariantSnippet = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button onclick=\"displayToast()\">Display success toast</ic-button>\r\n<ic-toast-region>\r\n  <ic-toast variant=\"success\" id=\"toast-02\" heading=\"Your coffee is ready\" message=\"Please dismiss and collect\"></ic-toast>\r\n</ic-toast-region>\r\n<script>\r\n  const toastRegion = document.querySelector(\"ic-toast-region\");\r\n  function displayToast() {\r\n    const successToast = document.querySelector(\"#toast-02\");\r\n    toastRegion.openToast = successToast;\r\n  }\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const toastRegionEl = useRef(null);\r\nconst toastEl = useRef(null);\r\nconst handleClick = () => {\r\n toastRegionEl.current.openToast = toastEl.current;\r\n}\r\nreturn (\r\n  <>\r\n    <IcButton onClick={handleClick}>Display success toast</IcButton>\r\n    <IcToastRegion ref={toastRegionEl}>\r\n      <IcToast\r\n        heading='Your coffee is ready'\r\n        ref={toastEl}\r\n        message='Please dismiss and collect'\r\n        variant='success'\r\n      />\r\n    </IcToastRegion>\r\n  </>\r\n)`,\r\n  },\r\n];\r\n\r\nexport const WithVariantToast = () => {\r\n  const toastRegionEl = useRef(null);\r\n  const toastEl = useRef(null);\r\n  const handleClick = () => {\r\n    toastRegionEl.current.openToast = toastEl.current;\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton onClick={handleClick}>Display success toast</IcButton>\r\n      <IcToastRegion ref={toastRegionEl}>\r\n        <IcToast\r\n          heading=\"Your coffee is ready\"\r\n          ref={toastEl}\r\n          message=\"Please dismiss and collect\"\r\n          variant=\"success\"\r\n        />\r\n      </IcToastRegion>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={withVariantSnippet}>\r\n  <WithVariantToast />\r\n</ComponentPreview>\r\n\r\n### Multi-line\r\n\r\nexport const withMultilineSnippet = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button onclick=\"displayToast()\">Display multi-line toast</ic-button>\r\n<ic-toast-region>\r\n  <ic-toast id=\"toast-03\" heading=\"Your coffee is ready\" message=\"Please dismiss and come to collect your delicious coffee from the barista right away before it gets cold.\"></ic-toast>\r\n</ic-toast-region>\r\n<script>\r\n  const toastRegion = document.querySelector(\"ic-toast-region\");\r\n  function displayToast() {\r\n    const multilineToast = document.querySelector(\"#toast-03\");\r\n    toastRegion.openToast = multilineToast;\r\n  }\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const toastRegionEl = useRef(null);\r\nconst toastEl = useRef(null);\r\nconst handleClick = () => {\r\n  toastRegionEl.current.openToast = toastEl.current;\r\n}\r\nreturn (\r\n  <>\r\n    <IcButton onClick={handleClick}>Display multi-line toast</IcButton>\r\n    <IcToastRegion ref={toastRegionEl}>\r\n      <IcToast\r\n        heading='Your coffee is ready'\r\n        ref={toastEl}\r\n        message='Please dismiss and come to collect your delicious coffee from the barista right away before it gets cold.'\r\n      />\r\n    </IcToastRegion>\r\n  </>\r\n)`,\r\n  },\r\n];\r\n\r\nexport const MultilineToast = () => {\r\n  const toastRegionEl = useRef(null);\r\n  const toastEl = useRef(null);\r\n  const handleClick = () => {\r\n    toastRegionEl.current.openToast = toastEl.current;\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton onClick={handleClick}>Display multi-line toast</IcButton>\r\n      <IcToastRegion ref={toastRegionEl}>\r\n        <IcToast\r\n          heading=\"Your coffee is ready\"\r\n          ref={toastEl}\r\n          message=\"Please dismiss and come to collect your delicious coffee from the barista right away before it gets cold.\"\r\n        />\r\n      </IcToastRegion>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={withMultilineSnippet}>\r\n  <MultilineToast />\r\n</ComponentPreview>\r\n\r\n### Slotted 'action' toast\r\n\r\nexport const slottedActionsSnippet = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button onclick=\"displayButtonToast()\">Display slotted buttons toast</ic-button>\r\n<ic-button onclick=\"displayLinkToast()\">Display slotted buttons toast</ic-button>\r\n<ic-toast-region>\r\n  <ic-toast id=\"toast-04\" heading=\"Your order could not be placed\" message=\"Please try again\" variant='warning'>\r\n    <ic-button slot='action' appearance='light'>Retry</ic-button>\r\n  </ic-toast>\r\n  <ic-toast id=\"toast-05\" heading=\"Your order could not be placed\" message=\"Please try again\" variant='warning'>\r\n    <ic-link slot='action' appearance='light'>Retry</ic-link>\r\n  </ic-toast>\r\n</ic-toast-region>\r\n<script>\r\n  const toastRegion = document.querySelector(\"ic-toast-region\");\r\n  function displayButtonToast() {\r\n    const slottedButtonToast = document.querySelector(\"#toast-04\");\r\n    toastRegion.openToast = slottedButtonToast;\r\n  }\r\n  function displayLinkToast() {\r\n    const slottedLinkToast = document.querySelector(\"#toast-05\");\r\n    toastRegion.openToast = slottedLinkToast;\r\n  }\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const toastRegionEl = useRef(null);\r\nconst buttonToastEl = useRef(null);\r\nconst linkToastEl = useRef(null);\r\nconst handleButtonToastClick = () => {\r\n  toastRegionEl.current.openToast = buttonToastEl.current;\r\n}\r\nconst handleLinkToastClick = () => {\r\n  toastRegionEl.current.openToast = linkToastEl.current;\r\n}\r\nreturn (\r\n  <>\r\n    <div style={{'display': 'flex', 'gap': '8px'}}>\r\n      <IcButton onClick={handleButtonToastClick}>Display slotted button toast</IcButton>\r\n      <IcButton onClick={handleLinkToastClick}>Display slotted link toast</IcButton>\r\n    </div>\r\n    <IcToastRegion ref={toastRegionEl}>\r\n      <IcToast\r\n        heading='Your order could not be placed'\r\n        ref={buttonToastEl}\r\n        message='Please try again'\r\n        variant='warning'\r\n      >\r\n        <IcButton slot='action' appearance='light'>Retry</IcButton>\r\n      </IcToast>\r\n      <IcToast\r\n        heading='Your order could not be placed'\r\n        ref={linkToastEl}\r\n        message='Please try again'\r\n        variant='warning'\r\n      >\r\n        <IcLink href=\"#\" slot=\"action\" appearance=\"light\">Retry</IcLink>\r\n      </IcToast>\r\n    </IcToastRegion>\r\n  </>\r\n)`,\r\n  },\r\n];\r\n\r\nexport const SlottedActionsToast = () => {\r\n  const toastRegionEl = useRef(null);\r\n  const buttonToastEl = useRef(null);\r\n  const linkToastEl = useRef(null);\r\n  const handleButtonToastClick = () => {\r\n    toastRegionEl.current.openToast = buttonToastEl.current;\r\n  };\r\n  const handleLinkToastClick = () => {\r\n    toastRegionEl.current.openToast = linkToastEl.current;\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ display: \"flex\", gap: \"8px\" }}>\r\n        <IcButton onClick={handleButtonToastClick}>\r\n          Display slotted button toast\r\n        </IcButton>\r\n        <IcButton onClick={handleLinkToastClick}>\r\n          Display slotted link toast\r\n        </IcButton>\r\n      </div>\r\n      <IcToastRegion ref={toastRegionEl}>\r\n        <IcToast\r\n          heading=\"Your order could not be placed\"\r\n          ref={buttonToastEl}\r\n          message=\"Please try again\"\r\n          variant=\"warning\"\r\n        >\r\n          <IcButton slot=\"action\" appearance=\"light\">\r\n            Retry\r\n          </IcButton>\r\n        </IcToast>\r\n        <IcToast\r\n          heading=\"Your order could not be placed\"\r\n          ref={linkToastEl}\r\n          message=\"Please try again\"\r\n          variant=\"warning\"\r\n        >\r\n          <IcLink href=\"#\" slot=\"action\" appearance=\"light\">\r\n            Retry\r\n          </IcLink>\r\n        </IcToast>\r\n      </IcToastRegion>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={slottedActionsSnippet}>\r\n  <SlottedActionsToast />\r\n</ComponentPreview>\r\n\r\n### Auto-dismiss\r\n\r\nexport const autoDismissSnippet = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button onclick=\"displayToast()\">Display auto-dismiss toast</ic-button>\r\n<ic-toast-region>\r\n  <ic-toast id=\"toast-06\" heading=\"Your coffee is ready\" dismiss-mode=\"automatic\" auto-dismiss-timeout=\"10000\" variant='info'></ic-toast>\r\n</ic-toast-region>\r\n<script>\r\n  const toastRegion = document.querySelector(\"ic-toast-region\");\r\n  function displayToast() {\r\n    var toast = document.querySelector(\"#toast-06\");\r\n    toastRegion.openToast = toast;\r\n  }\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const toastRegionEl = useRef(null);\r\nconst toastEl = useRef(null);\r\nconst handleClick = () => {\r\n  toastRegionEl.current.openToast = toastEl.current;\r\n}\r\nreturn (\r\n  <>\r\n    <IcButton onClick={handleClick}>Display auto-dismiss toast</IcButton>\r\n    <IcToastRegion ref={toastRegionEl}>\r\n      <IcToast heading='Your coffee is ready' ref={toastEl} dismissMode=\"automatic\" autoDismissTimeout={10000} variant='info' />\r\n    </IcToastRegion>\r\n  </>\r\n)`,\r\n  },\r\n];\r\n\r\nexport const AutoDismissToast = () => {\r\n  const toastRegionEl = useRef(null);\r\n  const toastEl = useRef(null);\r\n  const handleClick = () => {\r\n    toastRegionEl.current.openToast = toastEl.current;\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton onClick={handleClick}>Display auto-dismiss toast</IcButton>\r\n      <IcToastRegion ref={toastRegionEl}>\r\n        <IcToast\r\n          heading=\"Your coffee is ready\"\r\n          ref={toastEl}\r\n          dismissMode=\"automatic\"\r\n          autoDismissTimeout={10000}\r\n          variant=\"info\"\r\n        />\r\n      </IcToastRegion>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={autoDismissSnippet}>\r\n  <AutoDismissToast />\r\n</ComponentPreview>\r\n\r\n### Custom neutral icon and aria-labels\r\n\r\nexport const customIconAriaLabelsSnippet = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-button onclick=\"displayToast()\">Display auto-dismiss toast</ic-button>\r\n<ic-toast-region>\r\n  <ic-toast id=\"toast-07\" heading=\"Your coffee is ready\" variant='neutral' neutral-icon-aria-label=\"It is time to collect your coffee\" dismiss-button-aria-label=\"Dismiss me\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" slot='neutral-icon' viewBox=\"0 0 24 24\">\r\n      <title>coffee-outline</title>\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </ic-toast>\r\n</ic-toast-region>\r\n<script>\r\n  const toastRegion = document.querySelector(\"ic-toast-region\");\r\n  function displayToast() {\r\n    var toast = document.querySelector(\"#toast-07\");\r\n    toastRegion.openToast = toast;\r\n  }\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `const toastRegionEl = useRef(null);\r\nconst toastEl = useRef(null);\r\nconst handleClick = () => {\r\n  toastRegionEl.current.openToast = toastEl.current;\r\n}\r\nreturn (\r\n  <>\r\n    <IcButton onClick={handleClick}>Display custom icon and aria-label toast</IcButton>\r\n    <IcToastRegion ref={toastRegionEl}>\r\n      <IcToast\r\n        heading='Your coffee is ready'\r\n        ref={toastEl}\r\n        variant='neutral'\r\n        neutralIconAriaLabel=\"It is time to collect your coffee\"\r\n        dismissButtonAriaLabel=\"Dismiss me\"\r\n      >\r\n        <SlottedSVG slot='neutral-icon'>\r\n          <title>coffee-outline</title>\r\n          <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n        </SlottedSVG>\r\n      </IcToast>\r\n    </IcToastRegion>\r\n  </>\r\n)`,\r\n  },\r\n];\r\n\r\nexport const CustomIconAriaLabels = () => {\r\n  const toastRegionEl = useRef(null);\r\n  const toastEl = useRef(null);\r\n  const handleClick = () => {\r\n    toastRegionEl.current.openToast = toastEl.current;\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton onClick={handleClick}>\r\n        Display custom icon and aria-labels toast\r\n      </IcButton>\r\n      <IcToastRegion ref={toastRegionEl}>\r\n        <IcToast\r\n          heading=\"Your coffee is ready\"\r\n          ref={toastEl}\r\n          variant=\"neutral\"\r\n          neutralIconAriaLabel=\"It is time to collect your coffee\"\r\n          dismissButtonAriaLabel=\"Dismiss me\"\r\n        >\r\n          <SlottedSVG slot=\"neutral-icon\">\r\n            <title>coffee-outline</title>\r\n            <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n          </SlottedSVG>\r\n        </IcToast>\r\n      </IcToastRegion>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview snippets={customIconAriaLabelsSnippet}>\r\n  <CustomIconAriaLabels />\r\n</ComponentPreview>\r\n",
      "path": "/components/toast/code",
      "date": "2023-11-09",
      "title": "Toast",
      "status": "BETA",
      "subTitle": "Toasts give brief, non-critical updates about events that happen in an app. Toasts are sometimes called 'snackbars'.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/toast",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/toast"
        },
        {
          "title": "Code",
          "path": "/components/toast/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/toast/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\toasts\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.217Z",
        "lastModified": "2024-04-04T12:41:44.217Z",
        "size": 18707,
        "formattedSize": "18.3 KB"
      }
    },
    {
      "id": "components\\toasts\\guidancex",
      "contents": "\r\nimport { IcTypography, IcToast, IcToastRegion, IcButton } from \"@ukic/react\";\r\nimport { useRef } from \"react\";\r\nimport toastVid1 from \"./images/anim-1-auto-dismiss-toast.mp4\";\r\nimport toastVid2 from \"./images/anim-2-manual-dismiss-toast.mp4\";\r\nimport toastFig1 from \"./images/fig-1c-toast-with-action-button.png\";\r\nimport toastFig2 from \"./images/fig-2c-toast-with-link.png\";\r\nimport toastFig3 from \"./images/fig-3c-dont-use-toast-to-display-errors.png\";\r\nimport toastFig4 from \"./images/fig-4c-correct-toast-positioning.png\";\r\nimport toastFig5 from \"./images/fig-5c-incorrect-toast-positioning.png\";\r\nimport toastFig6 from \"./images/fig-6c-toast-with-description.png\";\r\n\r\n## Introduction\r\n\r\nAn example of the toast component.\r\n\r\nexport const IntroToast = () => {\r\n  const toastRegionEl = useRef(null);\r\n  const toastEl = useRef(null);\r\n  const handleClick = () => {\r\n    toastRegionEl.current.openToast = toastEl.current;\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton onClick={handleClick}>Display toast component</IcButton>\r\n      <IcToastRegion ref={toastRegionEl}>\r\n        <IcToast id=\"toast-01\" heading=\"Your coffee is ready\" ref={toastEl} />\r\n      </IcToastRegion>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview>\r\n  <IntroToast />\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse toasts to provide non-essential information relating to a user’s current task.\r\n\r\nUse toasts to provide an additional method of feedback about a user action. Avoid using toasts as the only method of conveying information to the user.\r\n\r\nToasts can be set to disappear on their own, or remain visible on screen until actioned. Toasts that automatically disappear should not contain any essential information.\r\n\r\nAn action, such as a link or button, can be included but isn’t recommended. Try to place actions in the main content of the page instead. If an action is included, then the toast can't be set to automatically dismiss.\r\n\r\n<DoDontCaution\r\n  imageSrc={toastFig1}\r\n  imageAlt=\"A comments section with a toast message that says ‘Comment added’ with an ‘undo’ button and a dismiss button.\"\r\n  state=\"caution\"\r\n  caption=\"A toast message containing an action button. The toast has to be manually dismissed.\"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={toastFig2}\r\n  imageAlt=\"A comments section with a toast message that says ‘Comment added’ with a link that reads ‘View our privacy statement’, and a dismiss button.\"\r\n  state=\"caution\"\r\n  caption=\"A toast message containing a link. The toast has to be manually dismissed.\"\r\n/>\r\n\r\nIt's best to use toasts for passive success messages, for example 'document saved'. This provides useful additional feedback about the completion of a process, without being the only method of conveying this information.\r\n\r\n## When not to use\r\n\r\nIf the message must be seen, use an [alert](/components/alert) or dialog depending on the severity of the problem.\r\n\r\n<DoDontCaution\r\n  imageSrc={toastFig3}\r\n  imageAlt=\"A comments section with a toast message displaying an error that reads ‘Your comment couldn’t be saved’.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t use toast messages to display errors.\"\r\n/>\r\n\r\nUse a dialog to display messages a user must see or acknowledge.\r\n\r\n## Interaction behaviour\r\n\r\n### Action\r\n\r\nUse a single action in a toast. A button or link can be provided, but the toast can't automatically dismiss if an action is included.\r\n\r\n### Auto-dismiss\r\n\r\nToasts can be set to auto-dismiss after an adjustable length of time. Make sure that auto-dismissing toasts are displayed for long enough for their content to be read. Make sure the toast content is non-critical so it doesn’t matter if it's missed.\r\n\r\n<video width=\"100%\" muted controls loop>\r\n  <source src={toastVid1} type=\"video/mp4\" />\r\n</video>\r\n\r\n<IcTypography\r\n  variant=\"label\"\r\n  style={{ marginTop: \"-16px\", marginBottom: \"24px\" }}\r\n>\r\n  A page with a toast that appears at the bottom center of the screen and\r\n  disappears after a short delay.\r\n</IcTypography>\r\n\r\nToasts that contain an action or link can’t be set to auto-dismiss.\r\n\r\nToasts that don’t auto-dismiss will have a close button.\r\n\r\n<video width=\"100%\" muted controls loop>\r\n  <source src={toastVid2} type=\"video/mp4\" />\r\n</video>\r\n\r\n<IcTypography\r\n  variant=\"label\"\r\n  style={{ marginTop: \"-16px\", marginBottom: \"24px\" }}\r\n>\r\n  A page with a toast, that has a close button, that appears at the bottom\r\n  center of the screen and disappears only when the dismiss button is clicked.\r\n</IcTypography>\r\n\r\n### Layout and placement\r\n\r\nToasts always appear centred at the bottom of the screen. Positioning toasts here makes sure that they don't obscure key content or navigation that might be positioned at the top of the screen.\r\n\r\nOnly one toast can be displayed at a time. If multiple toasts are required, they are queued one after the other.\r\n\r\n<DoDontCaution\r\n  imageSrc={toastFig4}\r\n  imageAlt=\"An app called ‘Better latte than never’ displaying an article page and showing a toast message positioned at the bottom and centre of the screen that reads ‘Comment added’.  \"\r\n  state=\"good\"\r\n  caption=\"Position toast message at the centre and bottom of the screen.  \"\r\n/>\r\n\r\n<DoDontCaution\r\n  imageSrc={toastFig5}\r\n  imageAlt=\"An app whose title is obscured by a toast message positioned at the top of the screen that reads ‘Comment added’.\"\r\n  state=\"bad\"\r\n  caption=\"Don’t position toasts at the top of the screen as they may interfere with important content.  \"\r\n/>\r\n\r\n## Content\r\n\r\nUse short messages in toasts. Use the optional description text in addition to the toast title for additional content.\r\n\r\n<DoDontCaution\r\n  imageSrc={toastFig6}\r\n  imageAlt=\"An app called ‘Better latte than never’ showing an article page with comments that displays a toast message with a title that says ‘Comment added’ and a description that says ‘Thanks for letting us know.’.\"\r\n  state=\"good\"\r\n  caption=\"Use the optional toast description to provide more information on the toast message.\"\r\n/>\r\n\r\nUse one of the following statuses to provide additional meaning to the message:\r\n\r\n- Success\r\n- Warning\r\n- Error\r\n- Info\r\n- Status unknown\r\n\r\nSpecify a custom icon when using status unknown. Make sure that the icon is related to the toast’s content and that an alt-text description is provided.\r\n\r\n## Accessibility considerations\r\n\r\n<p>\r\n  When using an auto-dismissible toast message, the app needs to provide a\r\n  method to extend the duration of the message. This is to satisfy the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.w3.org/WAI/WCAG22/Understanding/timing-adjustable.html\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    WCAG 2.2 success criterion 2.2.1 Timing Adjustable\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n## Related components\r\n\r\n- [Alert](/components/alert)\r\n- [App errors](/patterns/app-errors)\r\n- [Success messages](/patterns/success)\r\n",
      "path": "/components/toast",
      "navPriority": 36,
      "date": "2024-04-15",
      "title": "Toast",
      "status": "BETA",
      "subTitle": "Toasts give brief, non-critical updates about events that happen in an app. Toasts are sometimes called 'snackbars'.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/toast",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/toast"
        },
        {
          "title": "Code",
          "path": "/components/toast/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/toast/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\toasts\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.026Z",
        "lastModified": "2024-06-04T07:48:35.026Z",
        "size": 7413,
        "formattedSize": "7.2 KB"
      }
    },
    {
      "id": "components\\toggle-buttons\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nToggle buttons provide another means of selecting an option. They work well where space is limited but this means they do not include other labels that can be used to explain their purpose. Therefore, it is always important to make sure that the visible label makes sense when in either the ‘on’ or ‘off’ position.\r\n\r\nIt is important that the selected state can be clearly identified from the unselected state. To conform with the WCAG criteria [1.4.1 Use of color](https://www.w3.org/TR/WCAG22/#use-of-color), the ICDS toggle button does not solely rely on colour to indicate the selection state, but instead makes use of an additional shape added to the interior of the button to clearly distinguish it from its unselected state.\r\n\r\nThe ICDS toggle button is based upon the [ICDS button](../components/button) so that it inherits the accessibility functionality from that component.\r\n\r\nA toggle button group can be set to either single-select or multi-select, and has settings that allow automatic selection or manual selection of its options as each toggle button is navigated through. This helps to speed up selection in a single-select toggle button group. However, this does change the keyboard interaction.\r\n\r\nFor a single select group, the whole group is focussed upon using the ‘tab’ key and the options are navigated using the ‘arrow’ keys, such as with a [radio button group](../components/radio-buttons). For a multi-select group each toggle button in the group is individually focusable with the ‘tab’ key.\r\n\r\nWhen an individual toggle button is focussed, either on its own or within a toggle button group, it can be actioned by using the ‘enter’ or ‘space’ keys.\r\n\r\n## For Assistive Technology\r\n\r\nWhen a toggle button is navigated to using a screen reader, its label is announced along with its selection status and its role. If an aria-label has been provided, then this will be announced instead of the visible label. This allows additional context to be provided for screen reader users who may not be able to pick up on visual cues elsewhere on the page.\r\n\r\nThe selection state is also appended to the aria-label to make sure that it is correctly announced by all screen readers.\r\n\r\nWhen a toggle button is set to disabled, it uses aria-disabled so that it is still perceivable even though it is not editable.\r\n\r\n## Based on\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://inclusive-components.design/toggle-button/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Toggle button, Inclusive Components\r\n    </ic-link>\r\n    , published 31st March 2017, accessed February 2023.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      ARIA: button role, MDN Web Docs\r\n    </ic-link>\r\n    , accessed February 2023.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe’ve tested this component against WCAG 2.2 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/toggle-button/accessibility",
      "date": "2024-04-15",
      "title": "Toggle button",
      "status": "BETA",
      "subTitle": "Toggle buttons provide an action capable of indicating a state. They are commonly used for turning settings either ‘on’ or ‘off’.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/toggle-button",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/toggle-button"
        },
        {
          "title": "Code",
          "path": "/components/toggle-button/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/toggle-button/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\toggle-buttons\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:35.027Z",
        "lastModified": "2024-06-04T07:48:35.027Z",
        "size": 3791,
        "formattedSize": "3.7 KB"
      }
    },
    {
      "id": "components\\toggle-buttons\\codex",
      "contents": "\r\nimport {\r\n  IcToggleButton,\r\n  IcToggleButtonGroup,\r\n  SlottedSVG,\r\n  IcBadge,\r\n} from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-toggle-button id=\"toggle-btn\" label=\"Switch to oat milk\"></ic-toggle-button>\r\n<script>\r\n  const btn = document.querySelector('#toggle-btn');\r\n  btn.addEventListener(\"icToggleChecked\", function (event) {\r\n    console.log(event.detail.checked);\r\n  });\r\n</script>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcToggleButton\r\n    label=\"Switch to oat milk\"\r\n    onIcToggleChecked={(event) => console.log(event.detail.checked)}\r\n/>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDefault}>\r\n  <IcToggleButton\r\n    label=\"Switch to oat milk\"\r\n    onIcToggleChecked={(event) => console.log(event.detail.checked)}\r\n  />\r\n</ComponentPreview>\r\n\r\n## Toggle button details\r\n\r\n<ComponentDetails component=\"ic-toggle-button\" />\r\n\r\n## Toggle button group details\r\n\r\n<ComponentDetails component=\"ic-toggle-button-group\" />\r\n\r\n## Variants\r\n\r\n### Other states\r\n\r\nexport const snippetsOtherStates = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-toggle-button label=\"Switch to oat milk\" disabled=\"true\"></ic-toggle-button>\r\n<ic-toggle-button label=\"Switch to oat milk\" disabled=\"true\" toggle-checked=\"true\"></ic-toggle-button>\r\n<ic-toggle-button label=\"Switch to oat milk\" loading=\"true\"></ic-toggle-button>\r\n<ic-toggle-button label=\"Switch to oat milk\" loading=\"true\" toggle-checked=\"true\"></ic-toggle-button>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcToggleButton label=\"Switch to oat milk\" disabled />\r\n<IcToggleButton label=\"Switch to oat milk\" disabled toggleChecked />\r\n<IcToggleButton label=\"Switch to oat milk\" loading />\r\n<IcToggleButton label=\"Switch to oat milk\" loading toggleChecked />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }} snippets={snippetsOtherStates}>\r\n  <IcToggleButton label=\"Switch to oat milk\" disabled />\r\n  <IcToggleButton label=\"Switch to oat milk\" disabled toggleChecked />\r\n  <IcToggleButton label=\"Switch to oat milk\" loading />\r\n  <IcToggleButton label=\"Switch to oat milk\" loading toggleChecked />\r\n</ComponentPreview>\r\n\r\n### With icon\r\n\r\nexport const snippetsWithIcon = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-toggle-button label=\"Switch to oat milk\">\r\n    <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" /></svg>\r\n</ic-toggle-button>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcToggleButton label=\"Switch to oat milk\">\r\n    <SlottedSVG\r\n     slot=\"icon\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n     height=\"24px\"\r\n     viewBox=\"0 0 24 24\"\r\n     width=\"24px\"\r\n     fill=\"#000000\"\r\n    >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n</IcToggleButton>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsWithIcon}>\r\n  <IcToggleButton label=\"Switch to oat milk\">\r\n    <SlottedSVG\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n  </IcToggleButton>\r\n</ComponentPreview>\r\n\r\n### Sizing\r\n\r\nexport const snippetsSizing = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-toggle-button label=\"Switch to oat milk\" size=\"small\"></ic-toggle-button>\r\n<ic-toggle-button label=\"Switch to oat milk\"></ic-toggle-button>\r\n<ic-toggle-button label=\"Switch to oat milk\" size=\"large\"></ic-toggle-button>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcToggleButton label=\"Switch to oat milk\" size=\"small\" />\r\n<IcToggleButton label=\"Switch to oat milk\" size=\"default\" />\r\n<IcToggleButton label=\"Switch to oat milk\" size=\"large\" />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }} snippets={snippetsSizing}>\r\n  <IcToggleButton label=\"Switch to oat milk\" size=\"small\" />\r\n  <IcToggleButton label=\"Switch to oat milk\" size=\"default\" />\r\n  <IcToggleButton label=\"Switch to oat milk\" size=\"large\" />\r\n</ComponentPreview>\r\n\r\n### With badge\r\n\r\nexport const snippetsWithBadge = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-toggle-button label=\"Switch to oat milk\">\r\n    <ic-badge textLabel=\"1\" slot=\"badge\" variant=\"success\"></ic-badge>\r\n</ic-toggle-button>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcToggleButton label=\"Switch to oat milk\">\r\n    <IcBadge textLabel=\"1\" slot=\"badge\" variant=\"success\" />\r\n</IcToggleButton>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsWithBadge}>\r\n  <IcToggleButton label=\"Switch to oat milk\">\r\n    <IcBadge textLabel=\"1\" slot=\"badge\" variant=\"success\" />\r\n  </IcToggleButton>\r\n</ComponentPreview>\r\n\r\n### Dark\r\n\r\nexport const snippetsDark = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-toggle-button label=\"Switch to oat milk\" appearance=\"dark\"></ic-toggle-button>\r\n<ic-toggle-button label=\"Switch to oat milk\" appearance=\"dark\" loading=\"true\"></ic-toggle-button>\r\n<ic-toggle-button label=\"Switch to oat milk\" appearance=\"dark\" loading=\"true\" toggle-checked=\"true\"></ic-toggle-button>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcToggleButton label=\"Switch to oat milk\" appearance=\"dark\" />\r\n<IcToggleButton label=\"Switch to oat milk\" appearance=\"dark\" loading />\r\n<IcToggleButton label=\"Switch to oat milk\" appearance=\"dark\" loading toggleChecked />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ gap: \"8px\" }} snippets={snippetsDark}>\r\n  <IcToggleButton label=\"Switch to oat milk\" appearance=\"dark\" />\r\n  <IcToggleButton label=\"Switch to oat milk\" appearance=\"dark\" loading />\r\n  <IcToggleButton\r\n    label=\"Switch to oat milk\"\r\n    appearance=\"dark\"\r\n    loading\r\n    toggleChecked\r\n  />\r\n</ComponentPreview>\r\n\r\n### Light\r\n\r\nexport const snippetsLight = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-toggle-button label=\"Switch to oat milk\" appearance=\"light\"></ic-toggle-button>\r\n<ic-toggle-button label=\"Switch to oat milk\" appearance=\"light\" loading=\"true\"></ic-toggle-button>\r\n<ic-toggle-button label=\"Switch to oat milk\" appearance=\"light\" loading=\"true\" toggle-checked=\"true\"></ic-toggle-button>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcToggleButton label=\"Switch to oat milk\" appearance=\"light\" />\r\n<IcToggleButton label=\"Switch to oat milk\" appearance=\"light\" loading />\r\n<IcToggleButton label=\"Switch to oat milk\" appearance=\"light\" loading toggleChecked />`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  style={{ backgroundColor: \"#2c2f34\", gap: \"8px\" }}\r\n  snippets={snippetsLight}\r\n>\r\n  <IcToggleButton label=\"Switch to oat milk\" appearance=\"light\" />\r\n  <IcToggleButton label=\"Switch to oat milk\" appearance=\"light\" loading />\r\n  <IcToggleButton\r\n    label=\"Switch to oat milk\"\r\n    appearance=\"light\"\r\n    loading\r\n    toggleChecked\r\n  />\r\n</ComponentPreview>\r\n\r\n### Full width\r\n\r\nexport const snippetsFullWidth = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-toggle-button-group label=\"Milk selection\" full-width=\"true\" select-type=\"single\">\r\n  <ic-toggle-button label=\"Switch to oat milk\" ></ic-toggle-button>\r\n  <ic-toggle-button label=\"Switch to almond milk\" ></ic-toggle-button>\r\n  <ic-toggle-button label=\"Switch to coconut milk\" ></ic-toggle-button>\r\n  <ic-toggle-button label=\"Switch to rice milk\" ></ic-toggle-button>\r\n</ic-toggle-button-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcToggleButtonGroup fullWidth selectType=\"single\">\r\n  <IcToggleButton label=\"Switch to oat milk\"/>\r\n  <IcToggleButton label=\"Switch to almond milk\"/>\r\n  <IcToggleButton label=\"Switch to coconut milk\"/>\r\n  <IcToggleButton label=\"Switch to rice milk\"/>\r\n</IcToggleButtonGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview style={{ display: \"block\" }} snippets={snippetsFullWidth}>\r\n  <IcToggleButtonGroup fullWidth selectType=\"single\">\r\n    <IcToggleButton label=\"Switch to oat milk\" />\r\n    <IcToggleButton label=\"Switch to almond milk\" />\r\n    <IcToggleButton label=\"Switch to coconut milk\" />\r\n    <IcToggleButton label=\"Switch to rice milk\" />\r\n  </IcToggleButtonGroup>\r\n</ComponentPreview>\r\n\r\n### Icon only\r\n\r\nexport const snippetsIconOnly = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-toggle-button-group label=\"Coffee icon variants\" variant=\"icon\">\r\n    <ic-toggle-button accessibleLabel=\"Coffee icon\" variant=\"icon\">\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </svg>\r\n      </ic-toggle-button>\r\n      <ic-toggle-button accessibleLabel=\"Loading coffee\" variant=\"icon\" loading=\"true\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n        </svg>\r\n      </ic-toggle-button>\r\n      <ic-toggle-button accessibleLabel=\"Disabled coffee\" variant=\"icon\"  disabled=\"true\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n        </svg>\r\n      </ic-toggle-button>\r\n    </ic-toggle-button-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcToggleButtonGroup label=\"Coffee icon variants\" variant=\"icon\">\r\n      <IcToggleButton variant=\"icon\" accessibleLabel=\"Coffee icon\">\r\n        <SlottedSVG\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n        </SlottedSVG>\r\n      </IcToggleButton>\r\n      <IcToggleButton variant=\"icon\" accessibleLabel=\"Loading coffee\" loading>\r\n        <SlottedSVG\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n        </SlottedSVG>\r\n      </IcToggleButton>\r\n      <IcToggleButton variant=\"icon\" accessibleLabel=\"Disabled coffee\" disabled>\r\n        <SlottedSVG\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n        </SlottedSVG>\r\n      </IcToggleButton>\r\n  </IcToggleButtonGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsIconOnly}>\r\n  <IcToggleButtonGroup label=\"Coffee icon variants\" variant=\"icon\">\r\n    <IcToggleButton variant=\"icon\" accessibleLabel=\"Coffee icon\">\r\n      <SlottedSVG\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n    </IcToggleButton>\r\n    <IcToggleButton variant=\"icon\" accessibleLabel=\"Loading coffee\" loading>\r\n      <SlottedSVG\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n    </IcToggleButton>\r\n    <IcToggleButton variant=\"icon\" accessibleLabel=\"Disabled coffee\" disabled>\r\n      <SlottedSVG\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n    </IcToggleButton>\r\n  </IcToggleButtonGroup>\r\n</ComponentPreview>\r\n\r\n### Icon right\r\n\r\nexport const snippetsIconRight = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: ` <ic-toggle-button-group label=\"Milk selection\" icon-placement=\"right\">\r\n  <ic-toggle-button label=\"Switch to oat milk\">\r\n     <svg\r\n     slot=\"icon\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n     height=\"24px\"\r\n     viewBox=\"0 0 24 24\"\r\n     width=\"24px\"\r\n     fill=\"#000000\"\r\n    >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </ic-toggle-button>\r\n  <ic-toggle-button label=\"Switch to almond milk\">\r\n     <svg\r\n     slot=\"icon\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n     height=\"24px\"\r\n     viewBox=\"0 0 24 24\"\r\n     width=\"24px\"\r\n     fill=\"#000000\"\r\n    >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </ic-toggle-button>\r\n</ic-toggle-button-group>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcToggleButtonGroup label=\"Milk selection\" iconPlacement=\"right\">  \r\n  <IcToggleButton label=\"Switch to oat milk\" iconPlacement=\"right\">\r\n    <SlottedSVG\r\n     slot=\"icon\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n     height=\"24px\"\r\n     viewBox=\"0 0 24 24\"\r\n     width=\"24px\"\r\n     fill=\"#000000\"\r\n    >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n</IcToggleButton>\r\n <IcToggleButton label=\"Switch to almond milk\" iconPlacement=\"right\">\r\n    <SlottedSVG\r\n     slot=\"icon\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n     height=\"24px\"\r\n     viewBox=\"0 0 24 24\"\r\n     width=\"24px\"\r\n     fill=\"#000000\"\r\n    >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n  </IcToggleButton>\r\n</IcToggleButtonGroup>\r\n`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsIconRight}>\r\n  <IcToggleButtonGroup label=\"Milk selection\" iconPlacement=\"right\">\r\n    <IcToggleButton label=\"Switch to oat milk\" iconPlacement=\"right\">\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n    </IcToggleButton>\r\n    <IcToggleButton label=\"Switch to almond milk\" iconPlacement=\"right\">\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n    </IcToggleButton>\r\n  </IcToggleButtonGroup>\r\n</ComponentPreview>\r\n\r\n### Icon top\r\n\r\nexport const snippetsIconTopGroup = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: ` <ic-toggle-button-group label=\"milk selection\" icon-placement=\"top\">\r\n    <ic-toggle-button label=\"Switch to oat milk\" >\r\n      <svg\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n        >\r\n            <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </svg>\r\n    </ic-toggle-button>\r\n    <ic-toggle-button label=\"Switch to almond milk\" >\r\n      <svg\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n        >\r\n            <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </svg>\r\n    </ic-toggle-button>\r\n    </ic-toggle-button-group>\r\n`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: ` <IcToggleButtonGroup label=\"Milk selection\" iconPlacement=\"top\">\r\n    <IcToggleButton label=\"First toggle\" iconPlacement=\"top\">\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n        <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\r\n      </SlottedSVG>\r\n    </IcToggleButton>\r\n    <IcToggleButton label=\"Second toggle\" iconPlacement=\"top\">\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n        <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\r\n      </SlottedSVG>\r\n    </IcToggleButton>\r\n  </IcToggleButtonGroup>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsIconTopGroup}>\r\n  <IcToggleButtonGroup label=\"Milk selection\" iconPlacement=\"top\">\r\n    <IcToggleButton label=\"Switch to oat milk\" iconPlacement=\"top\">\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n    </IcToggleButton>\r\n    <IcToggleButton label=\"Switch to almond milk\" iconPlacement=\"top\">\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </SlottedSVG>\r\n    </IcToggleButton>\r\n  </IcToggleButtonGroup>\r\n</ComponentPreview>\r\n",
      "path": "/components/toggle-button/code",
      "date": "2024-03-08",
      "title": "Toggle button",
      "status": "BETA",
      "subTitle": "Toggle buttons provide an action capable of indicating a state. They are commonly used for turning settings either ‘on’ or ‘off’.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/toggle-button",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/toggle-button"
        },
        {
          "title": "Code",
          "path": "/components/toggle-button/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/toggle-button/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\toggle-buttons\\code.mdx",
        "createdAt": "2024-05-20T13:20:43.359Z",
        "lastModified": "2024-05-20T13:20:43.359Z",
        "size": 20858,
        "formattedSize": "20.4 KB"
      }
    },
    {
      "id": "components\\toggle-buttons\\guidancex",
      "contents": "\r\nimport { IcToggleButton } from \"@ukic/react\";\r\nimport toggleFig1 from \"./images/fig-1-use-standalone-toggle-buttons-to-show-a-selection-status.png\";\r\nimport toggleFig2 from \"./images/fig-2-use-toggle-button-groups-for-multiple-options.png\";\r\nimport toggleFig3 from \"./images/fig-3-use-single-select-group-when-all-buttons-can-be-deselected.png\";\r\nimport toggleFig4 from \"./images/fig-4-use-different-appearance-options-on-different-background.png\";\r\nimport toggleFig5 from \"./images/fig-5-dont-mix-different-appearance-options-together.png\";\r\nimport toggleFig6 from \"./images/fig-6-use-consistent-label-between-states.png\";\r\nimport toggleFig7 from \"./images/fig-7-dont-use-different-icon-positions-in-same-group.png\";\r\n\r\n## Introduction\r\n\r\nA toggle button is a type of button that shows a selection status and so is commonly used to turn a setting ‘on’ or ‘off’. It is similar to a [switch](/components/switch) but can be grouped into denser layouts, for example within a toolbar.\r\n\r\nAn icon toggle button provides the same functionality but removes the visible text label in favour of an icon to represent its meaning.\r\n\r\n<ComponentPreview>\r\n  <IcToggleButton label=\"Switch to oat milk\">\r\n    <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </IcToggleButton>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse a standalone toggle button to provide access to a single option that can be toggled ‘on’ or ‘off’. Make sure to clearly label the toggle button so that it is clear what toggling the setting would achieve.\r\n\r\nFor example, use a standalone toggle button for a mute button in an audio player.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={toggleFig1}\r\n    imageAlt=\"A standalone toggle button used for a mute button in an audio player.\"\r\n    state=\"good\"\r\n    caption=\"Use a standalone toggle button for a mute button to indicate when the setting is enabled or disabled.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nUse toggle buttons in dense layouts or sections of an app that don’t have a lot of space. Use other selection methods, such as [radio buttons](/components/radio-button) or [switches](/components/switch), when there is more space to include more text labelling.\r\n\r\nFor example, use toggle buttons when creating a toolbar as the small size and contained selection states allow for multiple settings to be organised within a small space.\r\n\r\nUse an icon toggle button to provide a setting with no text label, but an icon instead. Take care when selecting the icon so that it is clear what the setting is and always provide an accessible label so that it can be understood by users of assistive technology.\r\n\r\nGroup toggle buttons to provide multiple options for a setting or control. Select whether the toggle button group can have multiple options toggled on at one time, or if only one should be selected at a time.\r\n\r\nFor example, use a multi-select toggle button group to provide text styling options in a text editor where an item of text could be set to bold as well as italic.\r\n\r\nSimilarly, use a single-select toggle button group to provide text alignment options in a text editor where an item of text can only have one alignment option at a time.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={toggleFig2}\r\n    imageAlt=\"A toggle button group used for text styling options including bold, italic, underline and strikethrough, and a second toggle button group used for text alignment options including left, centre, right, and justified.\"\r\n    state=\"good\"\r\n    caption=\"Use toggle button groups to provide multiple options for a setting such as text styling options.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## When not to use\r\n\r\nConsider whether toggle buttons are the best selection method for your use case. [Radio buttons](/components/radio-button), [checkboxes](/components/checkboxes) and [switches](/components/switch) provide alternative methods of proving a selection.\r\n\r\nAvoid using toggle buttons or toggle button groups to capture input within a form, instead use checkboxes or radio buttons.\r\n\r\nAvoid using toggle buttons to control the state of another content section in your app. Instead, use [tabs](/components/tabs) for switching views.\r\n\r\n## Interaction behaviour\r\n\r\nWhen implementing a toggle button group, set the selection type to either single-select or multi-select. Single-select allows only one option to be selected at a time, where multi-select allows multiple options to be selected.\r\n\r\nIf using a single-select toggle button group, choose whether the selection method should be automatic or manual. The automatic selection method selects the option as you navigate through the options, whereas manual selection requires the option to be manually selected after navigating to it.\r\n\r\nUse manual selection if no selected option is viable for the toggle button group.\r\n\r\nFor example, an audio player could use a toggle button group for its play, fast forward and rewind buttons. Only one option can be selected at a time, but all options can also be turned off.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={toggleFig3}\r\n    imageAlt=\"An audio player’s play, fast forward and rewind buttons where all toggle buttons can be deselected at the same time.\"\r\n    state=\"good\"\r\n    caption=\"Use a single select group with manual selection to allow all options in a toggle button group to be deselected at the same time.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Colour\r\n\r\nUse the appearance options when placing toggle buttons on different coloured backgrounds. This makes sure that a good colour contrast can be achieved in adherence to the accessibility guidelines.\r\n\r\nDon’t mix different appearance buttons in the same toggle button group, always use the same appearance for all toggle buttons within a group.\r\n\r\nDon’t re-colour the icons in a toggle button, make sure they match the text label so that they also achieve a high colour contrast ratio.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={toggleFig4}\r\n    imageAlt=\"Two versions of a text styling setting that uses toggle button groups. One has a dark background with light appearance toggle buttons, and the other has a light coloured background with dark appearance toggle button groups.\"\r\n    state=\"good\"\r\n    caption=\"Use the appearance options to achieve good contrast on different coloured backgrounds.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={toggleFig5}\r\n    imageAlt=\"A text styling setting that uses toggle button groups. Within the toggle button groups different toggle buttons use different appearance options.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t mix appearance options together in the same toggle button group.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Sizing\r\n\r\nUse the size options to resize the toggle buttons. Match the selected size to other components in the same section so that they are vertically aligned.\r\n\r\nSet a custom width for a toggle button instead of the default behaviour that hugs the toggle button’s label or icon. Text labels will wrap onto multiple lines if the custom width is too small to fit the label in one line.\r\n\r\nUse the full width properties to make the toggle button or toggle button group expand to horizontally fill its container.\r\n\r\n## Content\r\n\r\nTake care when choosing a toggle button’s text label so that it is clear what will happen when it is toggled ‘on’ or ‘off’. Don’t use neutral or ambiguous labels. The toggle button should be read ‘label: on’ or ‘label: off’.\r\n\r\nDon’t change the text label on a toggle button between different selection states as it causes it to become ambiguous as to what state it is in. Instead, keep the label the same, but use the icon to indicate a change in state.\r\n\r\nFor example, when using a toggle button for a mute button, the label should read ‘mute’ and the state of the button indicates whether ‘mute’ is ‘on’ or ‘off’. The change in icon also helps to indicate the current state.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={toggleFig6}\r\n    imageAlt=\"An example of an audio player with a mute button. The button reads ‘mute’ when the button is toggled either on or off.\"\r\n    state=\"good\"\r\n    caption=\"Use consistent labels between states on a toggle button to avoid confusion.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nUse an icon on a toggle button to add a visual indicator of its function. Take care to choose an appropriate icon that clearly represents the toggle button’s function and doesn’t introduce ambiguity into its meaning.\r\n\r\nSet the icon position to be either left, right or above the text label. Don’t use different icon positions on different toggle buttons within a toggle button group. Use the toggle button group’s icon position to set all toggle buttons’ icons to the same position.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={toggleFig7}\r\n    imageAlt=\"A text alignment setting with three options for left, centre and right. Each button has its icon positioned differently on the toggle button.\"\r\n    state=\"bad\"\r\n    caption=\"Don’t mix icon positions on buttons within the same group.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nAim to only include two to six toggle buttons within a toggle button group. The larger the number of buttons the less horizontal space is available to display the labels. If more options are required, consider using a [popover menu](/components/popover-menu) instead.\r\n\r\n## Accessibility considerations\r\n\r\nWhen labelling toggle buttons, consider adding an accessible label that includes the visible label. This provides more context to users of assistive technology.\r\n\r\nAlways provide an accessible label when using icon toggle buttons as this is what identifies the purpose of the icon toggle buttons to screen readers.\r\n\r\nWhen using a toggle button group, set a label for the group explaining the setting. This is not displayed visibly but is used to identify the group when navigated using assistive technology.\r\n\r\nSelect the optimal appearance option when using toggle buttons on different coloured backgrounds to maximise the colour contrast. User interface controls need to achieve 3:1 ratio with adjacent colours.\r\n\r\n## Related components\r\n\r\n- [Switch](/Components/switch)\r\n- [Radio button](/Components/radio-buttons)\r\n- [Checkbox](/Components/checkbox)\r\n- [Popover menu](/Components/popover-menu)\r\n",
      "path": "/components/toggle-button",
      "navPriority": 37,
      "date": "2024-03-08",
      "title": "Toggle button",
      "status": "BETA",
      "subTitle": "Toggle buttons provide an action capable of indicating a state. They are commonly used for turning settings either ‘on’ or ‘off’.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/toggle-button",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/toggle-button"
        },
        {
          "title": "Code",
          "path": "/components/toggle-button/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/toggle-button/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\toggle-buttons\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.028Z",
        "lastModified": "2024-06-04T07:48:35.028Z",
        "size": 11220,
        "formattedSize": "11.0 KB"
      }
    },
    {
      "id": "components\\tooltips\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nTooltips can be used by people using any input method. They display by default on hover or on focus.\r\n\r\nTo ensure the tooltip content can be understood, the tooltip remains displayed if the cursor is moved over the tooltip area, even if it leaves the associated element’s area.\r\n\r\nThe text displayed within a tooltip is selectable so that it can be copied or focused with a virtual cursor.\r\n\r\n## For Assistive Technology\r\n\r\nTooltips use `aria-describedby` or `aria-labelledby` to link it with the associated element.\r\n\r\nTooltips have an internal `silent` property, which applies `aria-hidden` to the tooltip when the tooltip information would have been duplicated, for example when an icon button has a `title` or `aria-label` set.\r\n\r\n## Based on\r\n\r\nThe tooltip component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://sarahmhigley.com/writing/tooltips-in-wcag-21/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Tooltips in the time of WCAG 2.1\r\n    </ic-link>\r\n    , Sarah M Higley, accessed August 2022.\r\n  </li>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.nngroup.com/articles/tooltip-guidelines/\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Tooltip guidelines\r\n    </ic-link>\r\n    , Nielsen Normal Group, accessed August 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/tooltip/accessibility",
      "date": "2024-04-15",
      "title": "Tooltip",
      "status": "BETA",
      "subTitle": "Tooltips provide helpful information when the cursor hovers over an element or when focus is applied.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/tooltip",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/tooltip"
        },
        {
          "title": "Code",
          "path": "/components/tooltip/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/tooltip/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\tooltips\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:35.030Z",
        "lastModified": "2024-06-04T07:48:35.030Z",
        "size": 2126,
        "formattedSize": "2.1 KB"
      }
    },
    {
      "id": "components\\tooltips\\codex",
      "contents": "\r\nimport { IcTooltip, IcButton, IcChip } from \"@ukic/react\";\r\nimport { useRef } from \"react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-tooltip target=\"test-button-0\" label=\"Add Americano to favourites\" placement=\"top\">\r\n  <ic-button id=\"test-button-0\" aria-describedby=\"ic-tooltip-test-button-0\">Add</ic-button>\r\n</ic-tooltip>\r\n<ic-tooltip target=\"test-button-1\" label=\"Remove Americano from favourites\" placement=\"bottom\">\r\n  <ic-button id=\"test-button-1\" aria-describedby=\"ic-tooltip-test-button-1\">Remove</ic-button>\r\n</ic-tooltip>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTooltip target=\"test-button-0\" label=\"Add Americano to favourites\" placement=\"top\">\r\n  <IcButton id=\"test-button-0\" aria-describedby=\"ic-tooltip-test-button-0\">Add</IcButton>\r\n</IcTooltip>\r\n<IcTooltip target=\"test-button-1\" label=\"Remove Americano from favourites\" placement=\"bottom\">\r\n  <IcButton id=\"test-button-1\" aria-describedby=\"ic-tooltip-test-button-1\">Remove</IcButton>\r\n</IcTooltip>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\r\n    <IcTooltip\r\n      label=\"Add Americano to favourites\"\r\n      target=\"test-button-0\"\r\n      placement=\"top\"\r\n    >\r\n      <IcButton id=\"test-button-0\" aria-describedby=\"ic-tooltip-test-button-0\">\r\n        Add\r\n      </IcButton>\r\n    </IcTooltip>\r\n    <IcTooltip\r\n      label=\"Remove Americano from favourites\"\r\n      target=\"test-button-1\"\r\n      placement=\"bottom\"\r\n    >\r\n      <IcButton id=\"test-button-1\" aria-describedby=\"ic-tooltip-test-button-1\">\r\n        Remove\r\n      </IcButton>\r\n    </IcTooltip>\r\n  </div>\r\n</ComponentPreview>\r\n\r\n## Tooltip details\r\n\r\n<ComponentDetails component=\"ic-tooltip\" />\r\n\r\n## Variants\r\n\r\n### Left placement\r\n\r\nexport const snippetsLeft = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-tooltip target=\"test-button\" label=\"Add Americano to favourites\" placement=\"left\">\r\n  <ic-button id=\"test-button\" aria-describedby=\"ic-tooltip-test-button\">Add</ic-button>\r\n</ic-tooltip>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTooltip target=\"test-button\" label=\"Add Americano to favourites\" placement=\"left\">\r\n  <IcButton id=\"test-button\" aria-describedby=\"ic-tooltip-test-button\">Add</IcButton>\r\n</IcTooltip>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  style={{\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  }}\r\n  snippets={snippetsLeft}\r\n>\r\n  <IcTooltip\r\n    label=\"Add Americano to favourites\"\r\n    target=\"test-button\"\r\n    placement=\"left\"\r\n  >\r\n    <IcButton id=\"test-button\" aria-describedby=\"ic-tooltip-test-button\">\r\n      Add\r\n    </IcButton>\r\n  </IcTooltip>\r\n</ComponentPreview>\r\n\r\n### Right placement\r\n\r\nexport const snippetsRight = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-tooltip target=\"test-button\" label=\"Add Americano to favourites\" placement=\"right\">  \r\n  <ic-button id=\"test-button\" aria-describedby=\"ic-tooltip-test-button\">Add</ic-button>\r\n</ic-tooltip>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTooltip target=\"test-button\" label=\"Add Americano to favourites\" placement=\"right\">\r\n  <IcButton id=\"test-button\" aria-describedby=\"ic-tooltip-test-button\">Add</IcButton>\r\n</IcTooltip>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  style={{\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n  }}\r\n  snippets={snippetsRight}\r\n>\r\n  <IcTooltip\r\n    label=\"Add Americano to favourites\"\r\n    target=\"test-button\"\r\n    placement=\"right\"\r\n  >\r\n    <IcButton id=\"test-button\" aria-describedby=\"ic-tooltip-test-button\">\r\n      Add\r\n    </IcButton>\r\n  </IcTooltip>\r\n</ComponentPreview>\r\n\r\n### Chip\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-tooltip target=\"small-chip\" label=\"An espresso-based drink\"> \r\n  <ic-chip id=\"small-chip\" label=\"Americano\" size=\"small\">\r\n    <svg slot=\"icon\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </svg>\r\n  </ic-chip>\r\n</ic-tooltip>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTooltip target=\"small-chip\" label=\"An espresso-based drink\">\r\n  <IcChip id=\"small-chip\" label=\"Americano\" size=\"small\">\r\n    <SlottedSVG slot=\"icon\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n    </SlottedSVG>\r\n    </IcChip>\r\n</IcTooltip>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  style={{\r\n    gap: \"8px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  }}\r\n  snippets={snippetsDefault}\r\n>\r\n  <IcTooltip target=\"small-chip\" label=\"An espresso-based drink\">\r\n    <IcChip id=\"small-chip\" label=\"Americano\" size=\"small\">\r\n      <svg\r\n        slot=\"icon\"\r\n        width=\"26\"\r\n        height=\"26\"\r\n        viewBox=\"0 0 26 26\"\r\n        fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path d=\"M2,21V19H20V21H2M20,8V5H18V8H20M20,3A2,2 0 0,1 22,5V8A2,2 0 0,1 20,10H18V13A4,4 0 0,1 14,17H8A4,4 0 0,1 4,13V3H20M16,5H6V13A2,2 0 0,0 8,15H14A2,2 0 0,0 16,13V5Z\" />\r\n      </svg>\r\n    </IcChip>\r\n  </IcTooltip>\r\n</ComponentPreview>\r\n\r\n### Programmatic trigger\r\n\r\nexport const snippetsProgrammatic = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<script>\r\n  let display = true;\r\n  document\r\n    .querySelector(\"#clickMe\")\r\n    .addEventListener(\"click\", handleDisplay);\r\n  const tooltip = document.querySelector(\"#targetTooltip\");\r\n  function handleDisplay() {\r\n    tooltip.displayTooltip(display, display);\r\n    display = !display;\r\n  }\r\n</script>\r\n<ic-button id=\"clickMe\">Show tooltip</ic-button>\r\n<ic-tooltip id=\"targetTooltip\" label=\"Add Americano to favourites\" target=\"test-button\">\r\n  <ic-button id=\"test-button\" aria-describedby=\"ic-tooltip-test-button\">\r\n    Add\r\n  </ic-button>\r\n</ic-tooltip>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `let display = true;\r\nconst tooltipEl = useRef(null);\r\nconst handleDisplay = () => {\r\n  tooltipEl.current.displayTooltip(display, display);\r\n  display = !display;\r\n}\r\nreturn (\r\n  <>\r\n    <IcButton onClick={handleDisplay}>Show tooltip</IcButton>\r\n    <IcTooltip ref={tooltipEl} label=\"Add Americano to favourites\" target=\"test-button\">\r\n      <IcButton aria-describedby=\"ic-tooltip-test-button\" id=\"test-button\">\r\n        Add\r\n      </IcButton>\r\n    </IcTooltip>\r\n  </>\r\n);`,\r\n  },\r\n];\r\n\r\nexport const TriggerExample = () => {\r\n  let display = true;\r\n  const tooltipEl = useRef(null);\r\n  const handleDisplay = () => {\r\n    tooltipEl.current.displayTooltip(display, display);\r\n    display = !display;\r\n  };\r\n  return (\r\n    <>\r\n      <IcButton onClick={handleDisplay}>Show tooltip</IcButton>\r\n      <IcTooltip\r\n        ref={tooltipEl}\r\n        target=\"test-button\"\r\n        label=\"Add Americano to favourites\"\r\n      >\r\n        <IcButton id=\"test-button\" aria-describedby=\"ic-tooltip-test-button\">\r\n          Add\r\n        </IcButton>\r\n      </IcTooltip>\r\n    </>\r\n  );\r\n};\r\n\r\n<ComponentPreview\r\n  style={{\r\n    gap: \"8px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  }}\r\n  snippets={snippetsProgrammatic}\r\n>\r\n  <TriggerExample />\r\n</ComponentPreview>\r\n",
      "path": "/components/tooltip/code",
      "date": "2024-02-02",
      "title": "Tooltip",
      "status": "BETA",
      "subTitle": "Tooltips provide helpful information when the cursor hovers over an element or when focus is applied.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/tooltip",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/tooltip"
        },
        {
          "title": "Code",
          "path": "/components/tooltip/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/tooltip/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\tooltips\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.233Z",
        "lastModified": "2024-04-04T12:41:44.233Z",
        "size": 8056,
        "formattedSize": "7.9 KB"
      }
    },
    {
      "id": "components\\tooltips\\guidancex",
      "contents": "\r\nimport { IcTooltip, IcButton } from \"@ukic/react\";\r\nimport tooltipsFig1 from \"./images/fig-1-tooltips-provide-text-alternatives.png\";\r\nimport tooltipsFig2 from \"./images/fig-2-dont-describe-unrelated-things.png\";\r\nimport tooltipsFig3 from \"./images/fig-3-keep-the-tooltip-visible-when-cursor-is-over-tooltip.png\";\r\nimport tooltipsFig4 from \"./images/fig-4-use-multiple-lines-to-show-longer-messages.png\";\r\nimport tooltipsFig5 from \"./images/fig-5-avoid-position-tooltips-so-they-obscure-other-content.png\";\r\nimport tooltipsFig6 from \"./images/fig-6-dont-include-interactive-content-in-a-tooltip.png\";\r\n\r\n## Introduction\r\n\r\nA tooltip wraps around a component and displays a message when the component is hovered over.\r\n\r\nBelow is an example of the tooltip component on a button.\r\n\r\n<ComponentPreview>\r\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\r\n    <IcTooltip\r\n      label=\"Add Americano to favourites\"\r\n      target=\"test-button-0\"\r\n      placement=\"top\"\r\n    >\r\n      <IcButton id=\"test-button-0\" aria-describedby=\"ic-tooltip-test-button-0\">\r\n        Add\r\n      </IcButton>\r\n    </IcTooltip>\r\n    <IcTooltip\r\n      label=\"Remove Americano from favourites\"\r\n      target=\"test-button-1\"\r\n      placement=\"bottom\"\r\n    >\r\n      <IcButton id=\"test-button-1\" aria-describedby=\"ic-tooltip-test-button-1\">\r\n        Remove\r\n      </IcButton>\r\n    </IcTooltip>\r\n  </div>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nWhen interacting with an element, use a tooltip to provide additional and helpful information.\r\n\r\nAlways use tooltips on icon buttons to provide a textual alternative.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={tooltipsFig1}\r\n    imageAlt=\"A focused icon button displaying a tooltip that says 'Search'.\"\r\n    state=\"good\"\r\n    caption=\"Use tooltips to provide a text alternative to icon buttons.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## When not to use\r\n\r\nDon't use tooltips to provide information relating to anything other than the element the tooltip is attached to.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={tooltipsFig2}\r\n    imageAlt=\"Three icon buttons with a cursor hovering over the search icon button. A tooltip is displayed that says 'Settings, inbox and search'.\"\r\n    state=\"bad\"\r\n    caption=\"Don't use tooltips to contain information regarding another element.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nDon't use tooltips to provide vital information to completing a task. Instead, include vital information on the page itself.\r\n\r\nDon't use tooltips if its content is unnecessary. Not every element needs to have a tooltip.\r\n\r\n## Interaction behaviour\r\n\r\nTooltips are triggered by hovering over its associated element, or by focusing on it. Make sure the tooltip is displayed the whole time the associated element is focused or hovered over.\r\n\r\nMoving the pointer over the tooltip's content maintains the tooltip visibility even if the pointer has moved out of the associated element's area.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={tooltipsFig3}\r\n    imageAlt=\"A button showing a tooltip with the cursor hovering over the button, and a second button showing a tooltip with the cursor hovering over the tooltip content.\"\r\n    state=\"good\"\r\n    caption=\"Tooltips display when hovering over the triggering element or the tooltip itself.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Sizing\r\n\r\nSet the width of a tooltip to contain the content. Adhere to readable line lengths when setting tooltip widths, and wrap content onto multiple lines if necessary.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={tooltipsFig4}\r\n    imageAlt=\"Three icon buttons and a tooltip displayed. The tooltip says ‘Search for drinks, recipes and pairing suggestions’ and wraps onto two lines.\"\r\n    state=\"good\"\r\n    caption=\"Size the tooltip so that its content adheres to readable line lengths.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Layout and placement\r\n\r\nAvoid positioning tooltips so that they obscure other content. Use the directional options to place the tooltip on different sides of the associated element.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={tooltipsFig5}\r\n    imageAlt=\"A set of icon buttons that are obscured by a tooltip that is displayed.\"\r\n    state=\"caution\"\r\n    caption=\"Avoid positioning tooltips so that they obscure other content.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Content\r\n\r\nUse short, simple sentences within a tooltip. Don't provide more than one sentence in a tooltip. If a lot of information is required in a tooltip, consider placing it on the page content itself.\r\n\r\nInclude an icon on a tooltip if it helps to provide additional meaning, but don't use icons if they don't add anything.\r\n\r\nDon't include links or other interactive content within a tooltip. If an interaction is useful, place it within the page content.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={tooltipsFig6}\r\n    imageAlt=\"A tooltip that says 'For advanced search click here' where the word 'here' is a link.\"\r\n    state=\"bad\"\r\n    caption=\"Don't use interactive content within a tooltip.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n",
      "path": "/components/tooltip",
      "navPriority": 38,
      "date": "2023-02-03",
      "title": "Tooltip",
      "status": "BETA",
      "subTitle": "Tooltips provide helpful information when the cursor hovers over an element or when focus is applied.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/tooltip",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/tooltip"
        },
        {
          "title": "Code",
          "path": "/components/tooltip/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/tooltip/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\tooltips\\guidance.mdx",
        "createdAt": "2024-05-20T13:20:43.359Z",
        "lastModified": "2024-05-20T13:20:43.359Z",
        "size": 5685,
        "formattedSize": "5.6 KB"
      }
    },
    {
      "id": "components\\top-nav\\accessibilityx",
      "contents": "\r\nimport topNavFig11 from \"./images/fig-11-tab-order.png\";\r\n\r\n## Easy to use for everyone\r\n\r\nOn top navigation layouts that contain a search button (rather than an expanded search bar), when the search button is activated the search bar will appear below. This will extend the height of the top navigation, shifting other content down.\r\n\r\nFocus will move to the search bar automatically, allowing users to begin typing their query. When focus is moved from the search bar, the search bar will be hidden and focus is returned to the search button unless it was moved elsewhere. When the search bar is next opened, any input previously entered should persist.\r\n\r\nAll individual components used within the top navigation use their own accessibility guidance.\r\n\r\nThe top navigation forms an app's main navigation. Therefore, it always appears at the start of a page's tab index. It also uses a `navigation` landmark to allow quick navigation from anywhere within a page's content.\r\n\r\nThe top navigation content uses logical tabbing order to move between the focusable elements.\r\n\r\nThe order that the top navigation's internal elements follow is:\r\n\r\n1. App title (homepage)\r\n2. Search bar\r\n3. First icon button\r\n4. Second icon button\r\n5. Third icon button\r\n6. First tab\r\n7. Second tab\r\n8. Third tab\r\n9. Fourth tab\r\n\r\n<DoDontCaution\r\n  imageSrc={topNavFig11}\r\n  imageAlt=\"An example top navigation that displays the tab order of its internal elements.\"\r\n  state=\"none\"\r\n  caption=\"Tab ordering of the top navigation's internal elements.\"\r\n/>\r\n\r\n## For Assistive Technology\r\n\r\nThe secondary links and icon buttons have accessible labels that are announced by a screen reader when focused.\r\n\r\nOn smaller screens, the drawer menu acts modally and captures focus within its elements until the menu is closed.\r\n\r\nCollapsible groups in the drawer menu use `aria-expanded` to indicate whether the group is open or closed.\r\n\r\n## Based on\r\n\r\nThe top navigation component has been based on the following resources:\r\n\r\n<ul>\r\n  <li>\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.w3.org/WAI/ARIA/apg/example-index/landmarks/navigation.html\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Navigation Landmark\r\n    </ic-link>\r\n    , W3, accessed July 2022.\r\n  </li>\r\n</ul>\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/top-navigation/accessibility",
      "date": "2024-04-15",
      "title": "Top navigation",
      "status": "BETA",
      "subTitle": "Top navigation sits across the top of the page. It includes the app name, search bar, main navigation and secondary links.  ",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/top-navigation",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/top-navigation"
        },
        {
          "title": "Code",
          "path": "/components/top-navigation/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/top-navigation/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\top-nav\\accessibility.mdx",
        "createdAt": "2024-06-04T07:48:35.030Z",
        "lastModified": "2024-06-04T07:48:35.030Z",
        "size": 3089,
        "formattedSize": "3.0 KB"
      }
    },
    {
      "id": "components\\top-nav\\codex",
      "contents": "\r\nimport {\r\n  IcTopNavigation,\r\n  IcSearchBar,\r\n  IcNavigationButton,\r\n  IcNavigationItem,\r\n  IcNavigationGroup,\r\n  SlottedSVG,\r\n  IcBadge,\r\n  IcButton,\r\n} from \"@ukic/react\";\r\n\r\nimport { MemoryRouter, NavLink } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\n## Component demo\r\n\r\nexport const snippetsDefault = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-top-navigation app-title=\"ICDS\" status=\"alpha\" version=\"v0.0.7\">\r\n  <svg\r\n    slot=\"app-icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n  </svg>\r\n  <ic-search-bar slot=\"search\" placeholder=\"Search\" label=\"Search\"></ic-search-bar>\r\n  <ic-navigation-button label=\"Notifications\" slot=\"buttons\">\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z\" />\r\n    </svg>\r\n  </ic-navigation-button>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Get started\" href=\"#\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Accessibility\" href=\"#\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Styles\" href=\"#\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Components\" href=\"#\" selected=\"true\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Patterns\" href=\"#\"></ic-navigation-item>\r\n</ic-top-navigation>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTopNavigation appTitle=\"ICDS\" status=\"alpha\" version=\"v0.0.7\">\r\n  <SlottedSVG\r\n    slot=\"app-icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n  </SlottedSVG>\r\n  <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n  <IcNavigationButton label=\"Notifications\" slot=\"buttons\">\r\n    <SlottedSVG\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationButton>\r\n  <IcNavigationItem slot=\"navigation\" label=\"Get started\" href=\"#\" />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Accessibility\" href=\"#\" />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Styles\" href=\"#\" />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Components\" href=\"#\" selected />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Patterns\" href=\"#\" />\r\n</IcTopNavigation>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsDefault}>\r\n  <IcTopNavigation appTitle=\"ICDS\" status=\"alpha\" version=\"v0.0.7\">\r\n    <SlottedSVG\r\n      slot=\"app-icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n    </SlottedSVG>\r\n    <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n    <IcNavigationButton label=\"Notifications\" slot=\"buttons\">\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationButton>\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Get started\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Accessibility\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Styles\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Components\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n      selected\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Patterns\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n  </IcTopNavigation>\r\n</ComponentPreview>\r\n\r\n## Top navigation details\r\n\r\n<ComponentDetails component=\"ic-top-navigation\" />\r\n\r\n## Navigation group details\r\n\r\n<ComponentDetails component=\"ic-navigation-group\" />\r\n\r\n## Navigation item details\r\n\r\n<ComponentDetails component=\"ic-navigation-item\" />\r\n\r\n## Navigation button details\r\n\r\n<ComponentDetails component=\"ic-navigation-button\" />\r\n\r\n## Variants\r\n\r\n### Grouped links\r\n\r\nexport const snippetsGroupedLinks = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-top-navigation app-title=\"ICDS\" status=\"alpha\" version=\"v0.0.7\">\r\n  <svg\r\n    slot=\"app-icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n  </svg>\r\n  <ic-search-bar slot=\"search\" placeholder=\"Search\" label=\"Search\"></ic-search-bar>\r\n  <ic-navigation-group slot=\"navigation\" label=\"Get started\">\r\n    <ic-navigation-item label=\"Tests\" href=\"#\"></ic-navigation-item>\r\n    <ic-navigation-item label=\"Theme\" href=\"#\"></ic-navigation-item>\r\n    <ic-navigation-item label=\"Design\" href=\"#\"></ic-navigation-item>\r\n  </ic-navigation-group>\r\n  <ic-navigation-group slot=\"navigation\" label=\"Accessibility\">\r\n    <ic-navigation-item label=\"Introduction\" href=\"#\"></ic-navigation-item>\r\n    <ic-navigation-item label=\"Accessibility Statement\" href=\"#\"></ic-navigation-item>\r\n  </ic-navigation-group>\r\n</ic-top-navigation>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTopNavigation appTitle=\"ICDS\" status=\"alpha\" version=\"v0.0.7\">\r\n  <SlottedSVG\r\n    slot=\"app-icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n  </SlottedSVG>\r\n  <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n  <IcNavigationGroup slot=\"navigation\" label=\"Get started\" expandable>\r\n    <IcNavigationItem label=\"Tests\" href=\"#\" />\r\n    <IcNavigationItem label=\"Theme\" href=\"#\" />\r\n    <IcNavigationItem label=\"Design\" href=\"#\" />\r\n  </IcNavigationGroup>\r\n  <IcNavigationGroup slot=\"navigation\" label=\"Accessibility\" expandable>\r\n    <IcNavigationItem label=\"Introduction\" href=\"#\" />\r\n    <IcNavigationItem label=\"Accessibility statement\" href=\"#\" />\r\n  </IcNavigationGroup>\r\n</IcTopNavigation>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsGroupedLinks} style={{ zIndex: \"1\" }}>\r\n  <IcTopNavigation appTitle=\"ICDS\" status=\"alpha\" version=\"v0.0.7\">\r\n    <svg\r\n      slot=\"app-icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n    </svg>\r\n    <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n    <IcNavigationGroup slot=\"navigation\" label=\"Get started\">\r\n      <IcNavigationItem\r\n        label=\"Tests\"\r\n        href=\"#\"\r\n        onClick={(e) => e.preventDefault()}\r\n      />\r\n      <IcNavigationItem\r\n        label=\"Theme\"\r\n        href=\"#\"\r\n        onClick={(e) => e.preventDefault()}\r\n      />\r\n      <IcNavigationItem\r\n        label=\"Design\"\r\n        href=\"#\"\r\n        onClick={(e) => e.preventDefault()}\r\n      />\r\n    </IcNavigationGroup>\r\n    <IcNavigationGroup slot=\"navigation\" label=\"Accessibility\">\r\n      <IcNavigationItem\r\n        label=\"Introduction\"\r\n        href=\"#\"\r\n        onClick={(e) => e.preventDefault()}\r\n      />\r\n      <IcNavigationItem\r\n        label=\"Accessibility statement\"\r\n        href=\"#\"\r\n        onClick={(e) => e.preventDefault()}\r\n      />\r\n    </IcNavigationGroup>\r\n  </IcTopNavigation>\r\n</ComponentPreview>\r\n\r\n### Centre aligned\r\n\r\nexport const snippetsCentreAligned = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-top-navigation app-title=\"ICDS\" status=\"alpha\" version=\"v0.0.7\" content-aligned=\"center\">\r\n  <svg\r\n    slot=\"app-icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n  </svg>\r\n  <ic-navigation-button label=\"button1\" slot=\"buttons\" onclick=\"alert('test')\">\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n    </svg>\r\n  </ic-navigation-button>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Get started\" href=\"/\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Accessibility\" href=\"/\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Styles\" href=\"/\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Components\" href=\"/\" selected=\"true\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Patterns\" href=\"/\"></ic-navigation-item>\r\n</ic-top-navigation>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTopNavigation appTitle=\"ICDS\" status=\"alpha\" version=\"v0.0.7\" contentAligned=\"center\">\r\n  <SlottedSVG\r\n    slot=\"app-icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n  </SlottedSVG>\r\n  <IcNavigationButton label=\"button1\" slot=\"buttons\" onclick=\"alert('test')\">\r\n    <SlottedSVG\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationButton>\r\n  <IcNavigationItem slot=\"navigation\" label=\"Get started\" href=\"/\" />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Accessibility\" href=\"/\" />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Styles\" href=\"/\" />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Components\" href=\"/\" selected />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Patterns\" href=\"/\" />\r\n</IcTopNavigation>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsCentreAligned}>\r\n  <IcTopNavigation\r\n    appTitle=\"ICDS\"\r\n    status=\"alpha\"\r\n    version=\"v0.0.7\"\r\n    contentAligned=\"center\"\r\n  >\r\n    <svg\r\n      slot=\"app-icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n    </svg>\r\n    <IcNavigationButton label=\"button1\" slot=\"buttons\" onclick=\"alert('test')\">\r\n      <svg\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n      </svg>\r\n    </IcNavigationButton>\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Get started\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Accessibility\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Styles\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Components\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n      selected\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Patterns\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n  </IcTopNavigation>\r\n</ComponentPreview>\r\n\r\n### Left aligned\r\n\r\nexport const snippetsLeftAligned = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-top-navigation app-title=\"ICDS\" status=\"alpha\" version=\"v0.0.7\" content-aligned=\"left\">\r\n  <svg\r\n    slot=\"app-icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n  </svg>\r\n  <ic-search-bar slot=\"search\" placeholder=\"Search\" label=\"Search\"></ic-search-bar>\r\n  <ic-navigation-button label=\"button1\" slot=\"buttons\" onclick=\"alert('test')\">\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n    </svg>\r\n  </ic-navigation-button>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Get started\" href=\"/\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Accessibility\" href=\"/\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Styles\" href=\"/\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Components\" href=\"/\" selected=\"true\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Patterns\" href=\"/\"></ic-navigation-item>\r\n</ic-top-navigation>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTopNavigation appTitle=\"ICDS\" status=\"alpha\" version=\"v0.0.7\" contentAligned=\"left\">\r\n  <SlottedSVG\r\n    slot=\"app-icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n  </SlottedSVG>\r\n  <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n  <IcNavigationButton label=\"button1\" slot=\"buttons\" onclick=\"alert('test')\">\r\n    <SlottedSVG\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationButton>\r\n  <IcNavigationItem slot=\"navigation\" label=\"Get started\" href=\"/\" />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Accessibility\" href=\"/\" />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Styles\" href=\"/\" />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Components\" href=\"/\" selected />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Patterns\" href=\"/\" />\r\n</IcTopNavigation>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsLeftAligned}>\r\n  <IcTopNavigation\r\n    appTitle=\"ICDS\"\r\n    status=\"alpha\"\r\n    version=\"v0.0.7\"\r\n    contentAligned=\"left\"\r\n  >\r\n    <svg\r\n      slot=\"app-icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n    </svg>\r\n    <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n    <IcNavigationButton label=\"button1\" slot=\"buttons\" onclick=\"alert('test')\">\r\n      <svg\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n      </svg>\r\n    </IcNavigationButton>\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Get started\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Accessibility\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Styles\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Components\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n      selected\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Patterns\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n  </IcTopNavigation>\r\n</ComponentPreview>\r\n\r\n### With badge on navigation button\r\n\r\nexport const snippetsBadge = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-top-navigation app-title=\"ICDS\" status=\"alpha\" version=\"v0.0.7\">\r\n  <svg\r\n    slot=\"app-icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n  </svg>\r\n  <ic-search-bar slot=\"search\" placeholder=\"Search\" label=\"Search\"></ic-search-bar>\r\n  <ic-navigation-button label=\"Notifications\" slot=\"buttons\">\r\n    <ic-badge text-label=\"4\" slot=\"badge\" variant=\"light\" position=\"near\"></ic-badge>\r\n    <svg\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z\" />\r\n    </svg>\r\n  </ic-navigation-button>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Get started\" href=\"#\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Accessibility\" href=\"#\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Styles\" href=\"#\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Components\" href=\"#\" selected=\"true\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Patterns\" href=\"#\"></ic-navigation-item>\r\n</ic-top-navigation>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTopNavigation appTitle=\"ICDS\" status=\"alpha\" version=\"v0.0.7\">\r\n  <SlottedSVG\r\n    slot=\"app-icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n  </SlottedSVG>\r\n  <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n  <IcNavigationButton label=\"Notifications\" slot=\"buttons\">\r\n    <IcBadge textLabel=\"4\" slot=\"badge\" variant=\"light\" position=\"near\"/>\r\n    <SlottedSVG\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z\" />\r\n    </SlottedSVG>\r\n  </IcNavigationButton>\r\n  <IcNavigationItem slot=\"navigation\" label=\"Get started\" href=\"#\" />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Accessibility\" href=\"#\" />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Styles\" href=\"#\" />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Components\" href=\"#\" selected />\r\n  <IcNavigationItem slot=\"navigation\" label=\"Patterns\" href=\"#\" />\r\n</IcTopNavigation>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsBadge}>\r\n  <IcTopNavigation appTitle=\"ICDS\" status=\"alpha\" version=\"v0.0.7\">\r\n    <SlottedSVG\r\n      slot=\"app-icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n    </SlottedSVG>\r\n    <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n    <IcNavigationButton label=\"Notifications\" slot=\"buttons\">\r\n      <IcBadge textLabel=\"4\" slot=\"badge\" variant=\"light\" position=\"near\" />\r\n      <SlottedSVG\r\n        slot=\"icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z\" />\r\n      </SlottedSVG>\r\n    </IcNavigationButton>\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Get started\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Accessibility\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Styles\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Components\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n      selected\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Patterns\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n  </IcTopNavigation>\r\n</ComponentPreview>\r\n\r\n### With short app title\r\n\r\nView on a small screen size to display the short title in place of the app title.\r\n\r\nexport const snippetsShortTitle = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-top-navigation app-title=\"Intelligence Community Design System\" short-app-title=\"ICDS\" status=\"alpha\" version=\"v0.0.7\">\r\n  <svg\r\n    slot=\"app-icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n  </svg>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Get started\" href=\"/\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Accessibility\" href=\"/\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Styles\" href=\"/\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Components\" href=\"/\" selected=\"true\"></ic-navigation-item>\r\n  <ic-navigation-item slot=\"navigation\" label=\"Patterns\" href=\"/\"></ic-navigation-item>\r\n</ic-top-navigation>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTopNavigation appTitle=\"Intelligence Community Design System\" shortAppTitle=\"ICDS\" status=\"alpha\" version=\"v0.0.7\">\r\n  <SlottedSVG\r\n    slot=\"app-icon\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n  </SlottedSVG>\r\n    <IcNavigationItem slot=\"navigation\" label=\"Get started\" href=\"#\" />\r\n    <IcNavigationItem slot=\"navigation\" label=\"Accessibility\" href=\"#\" />\r\n    <IcNavigationItem slot=\"navigation\" label=\"Styles\" href=\"#\" />\r\n    <IcNavigationItem slot=\"navigation\" label=\"Components\" href=\"#\" selected />\r\n    <IcNavigationItem slot=\"navigation\" label=\"Patterns\" href=\"#\" />\r\n</IcTopNavigation>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsShortTitle}>\r\n  <IcTopNavigation\r\n    appTitle=\"Intelligence Community Design System\"\r\n    status=\"alpha\"\r\n    version=\"v0.0.7\"\r\n    shortAppTitle=\"ICDS\"\r\n  >\r\n    <svg\r\n      slot=\"app-icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n    </svg>\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Get started\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Accessibility\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Styles\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Components\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n      selected\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Patterns\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n  </IcTopNavigation>\r\n</ComponentPreview>\r\n\r\n### Conditional tabs\r\n\r\nexport const ConditionalTabsExample = () => {\r\n  const [showTabs, setShowTabs] = useState(false);\r\n  return (\r\n    <>\r\n      <IcTopNavigation\r\n        appTitle=\"ApplicationName\"\r\n        status=\"alpha\"\r\n        version=\"v0.0.7\"\r\n      >\r\n        <SlottedSVG\r\n          slot=\"app-icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n        </SlottedSVG>\r\n        <IcNavigationItem\r\n          label=\"One\"\r\n          href=\"/\"\r\n          selected=\"true\"\r\n          slot=\"navigation\"\r\n        />\r\n        <IcNavigationItem label=\"Two\" href=\"/\" slot=\"navigation\" />\r\n        <IcNavigationItem label=\"Three\" href=\"/\" slot=\"navigation\" />\r\n        {showTabs && (\r\n          <>\r\n            <IcNavigationItem label=\"Four\" href=\"/\" slot=\"navigation\" />\r\n            <IcNavigationItem label=\"Five\" href=\"/\" slot=\"navigation\" />\r\n          </>\r\n        )}\r\n      </IcTopNavigation>\r\n      <IcButton onClick={() => setShowTabs(!showTabs)}>Show/Hide tabs</IcButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const conditionalTabs = [\r\n  {\r\n    language: \"React\",\r\n    snippet: `const [showTabs, setShowTabs] = useState(false);\r\nreturn (\r\n  <>\r\n    <IcTopNavigation appTitle=\"ApplicationName\" status=\"alpha\" version=\"v0.0.7\">\r\n      <SlottedSVG\r\n        slot=\"app-icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24px\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24px\"\r\n        fill=\"#000000\"\r\n      >\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n      </SlottedSVG>\r\n      <IcNavigationItem \r\n        label=\"One\"\r\n        href=\"/\"\r\n        selected=\"true\"\r\n        slot=\"navigation\"\r\n      />\r\n      <IcNavigationItem label=\"Two\" href=\"/\" slot=\"navigation\" />\r\n      <IcNavigationItem label=\"Three\" href=\"/\" slot=\"navigation\" />\r\n      {showTabs && (\r\n        <>\r\n          <IcNavigationItem label=\"Four\" href=\"/\" slot=\"navigation\" />\r\n          <IcNavigationItem label=\"Five\" href=\"/\" slot=\"navigation\" />\r\n        </>\r\n      )}\r\n    </IcTopNavigation>\r\n    <IcButton onClick={() => setShowTabs(!showTabs)}>Show/Hide tabs</IcButton>\r\n  </>\r\n);`,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={conditionalTabs}\r\n  style={{ display: \"flex\", flexDirection: \"column\" }}\r\n>\r\n  <ConditionalTabsExample />\r\n</ComponentPreview>\r\n\r\n### With React Router (using slots)\r\n\r\nThe following examples also demonstrate using a slotted link for app title, short app title and app icon.\r\n\r\nTo guarantee the correct styling for non-svg content slotted into app-icon, set `width`, `height` and `fill` to `inherit`.\r\n\r\nexport const withReactRouter = [\r\n  {\r\n    language: \"React\",\r\n    snippet: `<MemoryRouter initialEntries={[\"/\"]}>\r\n  <IcTopNavigation version=\"v0.0.7\">\r\n    <NavLink to=\"/\" slot=\"app-title\">ICDS Title</NavLink>\r\n    <NavLink to=\"/\" slot=\"short-app-title\">ICDS</NavLink>\r\n    <NavLink to=\"/\" slot=\"app-icon\">\r\n      <SlottedSVG\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"inherit\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"inherit\"\r\n        fill=\"inherit\"\r\n      >\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n      </SlottedSVG>\r\n    </NavLink>\r\n  <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n  <IcNavigationButton label=\"button1\" slot=\"buttons\" onClick={() => alert('test')}>\r\n    <SlottedSVG\r\n      slot=\"icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n    </SlottedSVG>\r\n    </IcNavigationButton>\r\n    <IcNavigationItem slot=\"navigation\">\r\n      <NavLink to=\"/\" slot=\"navigation-item\">Get started</NavLink>\r\n    </IcNavigationItem>\r\n    <IcNavigationItem slot=\"navigation\">\r\n      <NavLink to=\"/accessibility\" slot=\"navigation-item\">Accessibility</NavLink>\r\n    </IcNavigationItem>\r\n  </IcTopNavigation>\r\n  <main>\r\n    <IcSectionContainer style={{padding: \"16px\"}}>\r\n      <Routes>\r\n        <Route path=\"/\" element={() => <IcTypography>This is the get started page</IcTypography>} />\r\n        <Route path=\"/accessibility\" element={() => <IcTypography>This page is about accessibility</IcTypography>} />\r\n      </Routes>\r\n    </IcSectionContainer>\r\n  </main>\r\n</MemoryRouter>\r\n    `,\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={withReactRouter}\r\n  style={{ display: \"flex\", flexDirection: \"column\" }}\r\n>\r\n  <MemoryRouter initialEntries={[\"/\"]}>\r\n    <IcTopNavigation version=\"v0.0.7\">\r\n      <NavLink to=\"/\" slot=\"app-title\">\r\n        ICDS Title\r\n      </NavLink>\r\n      <NavLink to=\"/\" slot=\"short-app-title\">\r\n        ICDS\r\n      </NavLink>\r\n      <NavLink to=\"/\" slot=\"app-icon\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"inherit\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"inherit\"\r\n          fill=\"inherit\"\r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n        </svg>\r\n      </NavLink>\r\n      <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n      <IcNavigationButton\r\n        label=\"button1\"\r\n        slot=\"buttons\"\r\n        onClick={() => alert(\"test\")}\r\n      >\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n        </svg>\r\n      </IcNavigationButton>\r\n      <IcNavigationItem slot=\"navigation\">\r\n        <NavLink to=\"/\" slot=\"navigation-item\">\r\n          Get started\r\n        </NavLink>\r\n      </IcNavigationItem>\r\n      <IcNavigationItem slot=\"navigation\">\r\n        <NavLink to=\"/accessibility\" slot=\"navigation-item\">\r\n          Accessibility\r\n        </NavLink>\r\n      </IcNavigationItem>\r\n    </IcTopNavigation>\r\n  </MemoryRouter>\r\n</ComponentPreview>\r\n",
      "path": "/components/top-navigation/code",
      "date": "2024-02-02",
      "title": "Top navigation",
      "status": "BETA",
      "subTitle": "Top navigation sits across the top of the page. It includes the app name, search bar, main navigation and secondary links.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/top-navigation",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/top-navigation"
        },
        {
          "title": "Code",
          "path": "/components/top-navigation/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/top-navigation/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\top-nav\\code.mdx",
        "createdAt": "2024-06-04T07:48:35.031Z",
        "lastModified": "2024-06-04T07:48:35.031Z",
        "size": 38549,
        "formattedSize": "37.6 KB"
      }
    },
    {
      "id": "components\\top-nav\\guidancex",
      "contents": "\r\nimport {\r\n  IcTopNavigation,\r\n  IcSearchBar,\r\n  IcNavigationItem,\r\n  IcNavigationGroup,\r\n} from \"@ukic/react\";\r\nimport topNavFig1 from \"./images/fig-1-dont-use-both-side-and-top-navigation.png\";\r\nimport topNavFig2 from \"./images/fig-2-show-status-version-and-secondary-links.png\";\r\nimport topNavFig3 from \"./images/fig-3-top-nav-with-megamenu.png\";\r\nimport topNavFig4 from \"./images/fig-4-use-drawer-navigation-on-small-screens.png\";\r\nimport topNavFig5 from \"./images/fig-5-personality-colours.png\";\r\nimport topNavFig6 from \"./images/fig-6-dont-position-top-nav-not-full-width.png\";\r\nimport topNavFig7 from \"./images/fig-7-use-full-width-alignment.png\";\r\nimport topNavFig8 from \"./images/fig-8-use-centre-alignment.png\";\r\nimport topNavFig9 from \"./images/fig-9-dont-use-long-labels.png\";\r\nimport topNavFig10 from \"./images/fig-10-megamenu-with-too-many-links.png\";\r\n\r\n## Component variants\r\n\r\nTop navigation has two variants: standard and one with a mega-menu.\r\n\r\n### Standard\r\n\r\nUse a standard top navigation for apps with eight or fewer navigation options.\r\n\r\n<ComponentPreview>\r\n  <IcTopNavigation appTitle=\"ICDS\" status=\"alpha\" version=\"v0.0.7\">\r\n    <svg\r\n      slot=\"app-icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n    </svg>\r\n    <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Get started\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Accessibility\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Styles\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Components\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n      selected=\"true\"\r\n    />\r\n    <IcNavigationItem\r\n      slot=\"navigation\"\r\n      label=\"Patterns\"\r\n      href=\"#\"\r\n      onClick={(e) => e.preventDefault()}\r\n    />\r\n  </IcTopNavigation>\r\n</ComponentPreview>\r\n\r\n### With mega-menu\r\n\r\nUse a top navigation with mega-menu for apps with more than eight navigation options, or options that can be grouped into categories. The main link groups are displayed in the top navigation and open a mega-menu when hovered over or focused.\r\n\r\n<ComponentPreview style={{ zIndex: \"1\" }}>\r\n  <IcTopNavigation appTitle=\"ICDS\" status=\"alpha\" version=\"v0.0.7\">\r\n    <svg\r\n      slot=\"app-icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#000000\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n    </svg>\r\n    <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n    <IcNavigationGroup slot=\"navigation\" label=\"Navigation group\">\r\n      <IcNavigationItem label=\"Navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Navigation\" href=\"#\" />\r\n    </IcNavigationGroup>\r\n    <IcNavigationGroup slot=\"navigation\" label=\"Second navigation group\">\r\n      <IcNavigationItem label=\"Second navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Second navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Second navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Second navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Second navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Second navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Second navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Second navigation\" href=\"#\" />\r\n      <IcNavigationItem label=\"Second navigation\" href=\"#\" />\r\n    </IcNavigationGroup>\r\n  </IcTopNavigation>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse the top navigation component for intranet-style and content-heavy apps. Use it for apps with complex page structures where every page should be accessible from any other page using the mega-menu.\r\n\r\nUse top navigation alongside additional components like [page headers](/components/page-header) to create a variety of different [layout](/styles/layout-spacing) and navigation styles.\r\n\r\n## When not to use\r\n\r\nFor apps with a small number of pages, use [side navigation](/components/side-navigation) as it's better suited for providing quick access and maximising the screen space for page content.\r\n\r\nUse either top navigation or side navigation. Don't use both at the same time.\r\n\r\n<DoDontCaution\r\n  imageSrc={topNavFig1}\r\n  imageAlt=\"An example app that shows a top navigation and side navigation used on the same page.\"\r\n  state=\"bad\"\r\n  caption=\"Don't use both top navigation and side navigation at the same time.\"\r\n/>\r\n\r\n## Optional elements\r\n\r\n### Search bar\r\n\r\nInclude an optional [search bar](/components/search-bar) to provide search functionality on every page in the app.\r\n\r\n### Secondary links\r\n\r\nInclude secondary links or actions that appear on the right-hand side of the top navigation. Use these for global utilities like application settings, or as links to other related sites.\r\n\r\n### App status and version\r\n\r\nUse the title adornment and app version to display the app's info in the top navigation.\r\n\r\n<DoDontCaution\r\n  imageSrc={topNavFig2}\r\n  imageAlt=\"An example of top navigation with a search bar included as well as secondary links and app status and version information.\"\r\n  state=\"good\"\r\n  caption=\"Top navigation with search bar, secondary links and app status and version.\"\r\n/>\r\n\r\n## Interaction behaviour\r\n\r\nWhen using a top navigation with mega-menu, the menu is displayed when hovering over, or focusing on, the main navigation groups.\r\n\r\n<DoDontCaution\r\n  imageSrc={topNavFig3}\r\n  imageAlt=\"An example top navigation with mega-menu showing the mega-menu appearing when the user hovers over a navigation group in the top navigation component.\"\r\n  state=\"good\"\r\n  caption=\"A mega-menu is displayed when hovering or focusing on the top navigation's main groups.\"\r\n/>\r\n\r\nOn smaller screens, both top navigation variants will display a menu button that opens a drawer menu from the right-hand side of the screen. The drawer menu can display lists of single links or grouped links that can be expanded and collapsed.\r\n\r\n<DoDontCaution\r\n  imageSrc={topNavFig4}\r\n  imageAlt=\"An example of top navigation displayed on a smaller screen. It displays a menu button that opens a drawer menu that includes the navigation links.\"\r\n  state=\"good\"\r\n  caption=\"Top navigation displayed on smaller screens uses a drawer menu to display its navigation links.\"\r\n/>\r\n\r\n## Colour\r\n\r\nThe top navigation uses the app's [theme colour](/styles/colour/#theme) as the background and automatically sets the foreground colour to ensure accessible contrast ratios.\r\n\r\nChange the app's theme colour to change the background colour of the top navigation and help distinguish your app from others your users may use.\r\n\r\n<DoDontCaution\r\n  imageSrc={topNavFig5}\r\n  imageAlt=\"Six examples of top navigation components using different theme colours.\"\r\n  state=\"good\"\r\n  caption=\"Examples of top navigation using different theme colours.\"\r\n/>\r\n\r\n## Sizing\r\n\r\nAlways position the top navigation at the top of the screen and make sure that it horizontally fills the browser window.\r\n\r\n<DoDontCaution\r\n  imageSrc={topNavFig6}\r\n  imageAlt=\"An example app with top navigation that does not horizontally fill the browser window.\"\r\n  state=\"bad\"\r\n  caption=\"Don't position the top navigation so that it does not horizontally fill the browser window.\"\r\n/>\r\n\r\n## Layout and placement\r\n\r\n### Alignment\r\n\r\nAlign the top navigation's content either full width or centred.\r\n\r\nUse full width alignment to position the top navigation content to the left and right of the browser window.\r\n\r\n<DoDontCaution\r\n  imageSrc={topNavFig7}\r\n  imageAlt=\"An example top navigation that is aligned full width. The app name and main navigation is aligned to the left-hand side of the browser window and the secondary links and search bar is aligned to the right.\"\r\n  state=\"good\"\r\n  caption=\"Use full width alignment to position the top navigation content to the left and right of the browser window.\"\r\n/>\r\n\r\nUse centre alignment to position the top navigation content in line with other page content.\r\n\r\n<DoDontCaution\r\n  imageSrc={topNavFig8}\r\n  imageAlt=\"An example top navigation with its content aligned to centre. The top navigation content aligns with the page margins used for the rest of the page content.\"\r\n  state=\"good\"\r\n  caption=\"Use centre alignment to position the top navigation content in line with other page content.\"\r\n/>\r\n\r\n## Content\r\n\r\n### Labels and icons\r\n\r\nFollow the [content style guidelines](/styles/content-style) for all navigation option labels as well as each option group label.\r\n\r\nFollow the [icon style guidelines](/styles/icons) when selecting icons for menu options or secondary links.\r\n\r\n### Navigation options\r\n\r\nMake sure to keep navigation option labels concise, as they may not all fit within the top navigation on all screen sizes.\r\n\r\nFor the standard variant, don't use more than eight links as this may not display correctly.\r\n\r\n<DoDontCaution\r\n  imageSrc={topNavFig9}\r\n  imageAlt=\"An example top navigation with eight links with long labels. The links don't fit horizontally within the top navigation.\"\r\n  state=\"bad\"\r\n  caption=\"Don't use lengthy navigation option labels as they may not fit on all screen sizes.\"\r\n/>\r\n\r\n### Mega-menu\r\n\r\nInclude up to five columns of navigation links in the mega-menu and aim to keep the number of links in each column to six or fewer.\r\n\r\n<DoDontCaution\r\n  imageSrc={topNavFig10}\r\n  imageAlt=\"An example top navigation with mega-menu that shows seven columns of links, with each column containing eight links.\"\r\n  state=\"caution\"\r\n  caption=\"Avoid using a mega-menu with more than five columns of links, and avoid using more than six links in each group.\"\r\n/>\r\n",
      "path": "/components/top-navigation",
      "navPriority": 39,
      "date": "2023-02-03",
      "title": "Top navigation",
      "status": "BETA",
      "subTitle": "Top navigation sits across the top of the page. It includes the app name, search bar, main navigation and secondary links.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/top-navigation",
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/top-navigation"
        },
        {
          "title": "Code",
          "path": "/components/top-navigation/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/top-navigation/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\top-nav\\guidance.mdx",
        "createdAt": "2024-06-04T07:48:35.032Z",
        "lastModified": "2024-06-04T07:48:35.032Z",
        "size": 11529,
        "formattedSize": "11.3 KB"
      }
    },
    {
      "id": "components\\typography\\accessibilityx",
      "contents": "\r\n## Easy to use for everyone\r\n\r\nTypography uses the [Open Sans](https://fonts.google.com/specimen/Open+Sans) font for most text and [Nunito Sans](https://fonts.google.com/specimen/Nunito+Sans) for `h1` and `h2`. These are flexible and readable fonts that works well across digital and print.\r\n\r\nBy wrapping elements, it allows the use of semantic headings and HTML tags to structure the app, and retains flexibility.\r\n\r\nUsing correct HTML will allow assistive technologies to read an overview of the page when landmarks, regions and headings are implemented appropriately.\r\n\r\n## Based on\r\n\r\nThe typography component is based on the following resources:\r\n\r\n- [WCAG 2.2 1.3.1 Info and Relationships](https://www.w3.org/WAI/WCAG22/Understanding/info-and-relationships), W3, accessed April 2024.\r\n\r\n## Testing\r\n\r\nWe've tested this component against WCAG 2.2 Level AA. It's been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n",
      "path": "/components/typography/accessibility",
      "date": "2024-04-15",
      "title": "Typography",
      "status": "BETA",
      "subTitle": "Use the typography component for consistent styling across typographical elements.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/typography",
      "hidden": false,
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/typography"
        },
        {
          "title": "Code",
          "path": "/components/typography/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/typography/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\typography\\accessibility.mdx",
        "createdAt": "2024-05-20T13:20:43.365Z",
        "lastModified": "2024-05-20T13:20:43.365Z",
        "size": 1537,
        "formattedSize": "1.5 KB"
      }
    },
    {
      "id": "components\\typography\\codex",
      "contents": "\r\nimport { IcTypography } from \"@ukic/react\";\r\n\r\n## Component demo\r\n\r\nexport const snippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-typography variant=\"h1\">H1</ic-typography>\r\n<ic-typography variant=\"h2\">H2</ic-typography>\r\n<ic-typography variant=\"h3\">H3</ic-typography>\r\n<ic-typography variant=\"h4\">H4</ic-typography>\r\n<ic-typography>Body</ic-typography>\r\n<ic-typography variant=\"subtitle-large\">Subtitle large</ic-typography>\r\n<ic-typography variant=\"subtitle-small\">Subtitle small</ic-typography>\r\n<ic-typography variant=\"label\">Label</ic-typography>\r\n<ic-typography variant=\"label-uppercase\">Label uppercase</ic-typography>\r\n<ic-typography variant=\"caption\">Caption</ic-typography>\r\n<ic-typography variant=\"caption-uppercase\">Caption uppercase</ic-typography>\r\n<ic-typography variant=\"code-large\">Code large</ic-typography>\r\n<ic-typography variant=\"code-small\">Code small</ic-typography>\r\n<ic-typography variant=\"code-extra-small\">Code extra small</ic-typography>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTypography variant=\"h1\">H1</IcTypography>\r\n<IcTypography variant=\"h2\">H2</IcTypography>\r\n<IcTypography variant=\"h3\">H3</IcTypography>\r\n<IcTypography variant=\"h4\">H4</IcTypography>\r\n<IcTypography>Body</IcTypography>\r\n<IcTypography variant=\"subtitle-large\">Subtitle large</IcTypography>\r\n<IcTypography variant=\"subtitle-small\">Subtitle small</IcTypography>\r\n<IcTypography variant=\"label\">Label</IcTypography>\r\n<IcTypography variant=\"label-uppercase\">Label uppercase</IcTypography>\r\n<IcTypography variant=\"caption\">Caption</IcTypography>\r\n<IcTypography variant=\"caption-uppercase\">Caption uppercase</IcTypography>\r\n<IcTypography variant=\"code-large\">Code large</IcTypography>\r\n<IcTypography variant=\"code-small\">Code small</IcTypography>\r\n<IcTypography variant=\"code-extra-small\">Code extra small</IcTypography>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippets}>\r\n  <div>\r\n    <IcTypography variant=\"h1\">H1</IcTypography>\r\n    <IcTypography variant=\"h2\">H2</IcTypography>\r\n    <IcTypography variant=\"h3\">H3</IcTypography>\r\n    <IcTypography variant=\"h4\">H4</IcTypography>\r\n    <IcTypography>Body</IcTypography>\r\n    <IcTypography variant=\"subtitle-large\">Subtitle large</IcTypography>\r\n    <IcTypography variant=\"subtitle-small\">Subtitle small</IcTypography>\r\n    <IcTypography variant=\"label\">Label</IcTypography>\r\n    <IcTypography variant=\"label-uppercase\">Label uppercase</IcTypography>\r\n    <IcTypography variant=\"caption\">Caption</IcTypography>\r\n    <IcTypography variant=\"caption-uppercase\">Caption uppercase</IcTypography>\r\n    <IcTypography variant=\"code-large\">Code large</IcTypography>\r\n    <IcTypography variant=\"code-small\">Code small</IcTypography>\r\n    <IcTypography variant=\"code-extra-small\">Code extra small</IcTypography>\r\n  </div>\r\n</ComponentPreview>\r\n\r\n## Typography details\r\n\r\n<ComponentDetails component=\"ic-typography\" />\r\n\r\n## Variants\r\n\r\n### Re-styled typography\r\n\r\nAdd a variant to the typography element to change its style. This does not change the semantic level of the typography element.\r\n\r\nexport const snippetsRestyled = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-typography variant=\"h2\">\r\n  <h5>H5 with H2 styling</h5>\r\n</ic-typography>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTypography variant=\"h2\">\r\n  <h5>H5 with H2 styling</h5>\r\n</IcTypography>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={snippetsRestyled}>\r\n  <IcTypography variant=\"h2\">\r\n    <h5>H5 with H2 styling</h5>\r\n  </IcTypography>\r\n</ComponentPreview>\r\n\r\n### Vertical margins applied\r\n\r\nexport const spacingSnippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-typography apply-vertical-margins=\"true\">\r\n  <h5>H5 with margins applied</h5>\r\n</ic-typography>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTypography applyVerticalMargins>\r\n  <h5>H5 with margins applied</h5>\r\n</IcTypography>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={spacingSnippets}>\r\n  <IcTypography applyVerticalMargins>\r\n    <h5>H5 with margins applied</h5>\r\n  </IcTypography>\r\n</ComponentPreview>\r\n\r\n### Vertical margins applied on re-styled typography\r\n\r\nexport const spacingRestyledSnippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-typography variant=\"h2\" apply-vertical-margins=\"true\">\r\n  <h5>H5 with H2 styling and margins applied</h5>\r\n</ic-typography>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTypography variant=\"h2\" applyVerticalMargins>\r\n  <h5>H5 with H2 styling and margins applied</h5>\r\n</IcTypography>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={spacingRestyledSnippets}>\r\n  <IcTypography variant=\"h2\" applyVerticalMargins>\r\n    <h5>H5 with H2 styling and margins applied</h5>\r\n  </IcTypography>\r\n</ComponentPreview>\r\n\r\n### Truncation\r\n\r\nText can be truncated to a maximum number of lines when using `variant=\"body\"`.\r\n\r\nexport const truncationSnippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-typography max-lines=\"3\" variant=\"body\">\r\n  Body of text that is truncated to three lines. Click the 'See more' link\r\n  to expand the text, then click 'See less' to truncate the text once\r\n  more!\r\n  <br />\r\n  Dripper caramelization java saucer grounds galão, mocha, and robusta\r\n  kopi-luwak, percolator, instant, qui saucer latte in brewed café au\r\n  lait. Con panna, cup, cream, body americano affogato cup espresso, rich\r\n  milk seasonal saucer grinder spoon that cultivar strong redeye\r\n  frappuccino barista extraction redeye mazagran. Grounds, french press\r\n  dripper organic and foam id saucer, crema, black rich dark, grounds\r\n  breve coffee steamed caramelization percolator.\r\n</ic-typography>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTypography maxLines=\"3\" variant=\"body\">\r\n  Body of text that is truncated to three lines. Click the 'See more' link\r\n  to expand the text, then click 'See less' to truncate the text once\r\n  more!\r\n  <br />\r\n  Dripper caramelization java saucer grounds galão, mocha, and robusta\r\n  kopi-luwak, percolator, instant, qui saucer latte in brewed café au\r\n  lait. Con panna, cup, cream, body americano affogato cup espresso, rich\r\n  milk seasonal saucer grinder spoon that cultivar strong redeye\r\n  frappuccino barista extraction redeye mazagran. Grounds, french press\r\n  dripper organic and foam id saucer, crema, black rich dark, grounds\r\n  breve coffee steamed caramelization percolator.\r\n</IcTypography>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={truncationSnippets}>\r\n  <IcTypography maxLines=\"3\" variant=\"body\">\r\n    Body of text that is truncated to three lines. Click the 'See more' link to\r\n    expand the text, then click 'See less' to truncate the text once more!\r\n    <br />\r\n    Dripper caramelization java saucer grounds galão, mocha, and robusta\r\n    kopi-luwak, percolator, instant, qui saucer latte in brewed café au lait.\r\n    Con panna, cup, cream, body americano affogato cup espresso, rich milk\r\n    seasonal saucer grinder spoon that cultivar strong redeye frappuccino\r\n    barista extraction redeye mazagran. Grounds, french press dripper organic\r\n    and foam id saucer, crema, black rich dark, grounds breve coffee steamed\r\n    caramelization percolator.\r\n  </IcTypography>\r\n</ComponentPreview>\r\n\r\n### Additional styling\r\n\r\nexport const additionalStylingSnippets = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: `<ic-typography variant=\"h4\" bold=\"true\">Bold</ic-typography>\r\n<ic-typography variant=\"h4\" italic=\"true\">Italic</ic-typography>\r\n<ic-typography variant=\"h4\" underline=\"true\">Underline</ic-typography>\r\n<ic-typography variant=\"h4\" strikethrough=\"true\">Strikethrough</ic-typography>`,\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: `<IcTypography variant=\"h4\" bold>Bold</IcTypography>\r\n<IcTypography variant=\"h4\" italic>Italic</IcTypography>\r\n<IcTypography variant=\"h4\" underline>Underline</IcTypography>\r\n<IcTypography variant=\"h4\" strikethrough>Strikethrough</IcTypography>`,\r\n  },\r\n];\r\n\r\n<ComponentPreview snippets={additionalStylingSnippets}>\r\n  <div>\r\n    <IcTypography variant=\"h4\" bold>\r\n      Bold\r\n    </IcTypography>\r\n    <IcTypography variant=\"h4\" italic>\r\n      Italic\r\n    </IcTypography>\r\n    <IcTypography variant=\"h4\" underline>\r\n      Underline\r\n    </IcTypography>\r\n    <IcTypography variant=\"h4\" strikethrough>\r\n      Strikethrough\r\n    </IcTypography>\r\n  </div>\r\n</ComponentPreview>\r\n",
      "path": "/components/typography/code",
      "date": "2023-11-27",
      "title": "Typography",
      "status": "BETA",
      "subTitle": "Use the typography component for consistent styling across typographical elements.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/typography",
      "hidden": false,
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/typography"
        },
        {
          "title": "Code",
          "path": "/components/typography/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/typography/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\typography\\code.mdx",
        "createdAt": "2024-04-04T12:41:44.264Z",
        "lastModified": "2024-04-04T12:41:44.264Z",
        "size": 8884,
        "formattedSize": "8.7 KB"
      }
    },
    {
      "id": "components\\typography\\guidancex",
      "contents": "\r\nimport { IcTypography } from \"@ukic/react\";\r\n\r\n## Introduction\r\n\r\nThe typography component is used to style text elements like `p`, `h1` and `label`. The element to be styled should be wrapped with the typography component.\r\n\r\nThe typography variants are defined on the [typography styles](/styles/typography) page.\r\n\r\nUse one of the typography component's variants to style an element. For example, the following uses a `h2` variant to wrap a `h5` element and apply the 'heading large' styling.\r\n\r\n<ComponentPreview>\r\n  <IcTypography variant=\"h2\">\r\n    <h5>&lt;h5&gt; with 'heading large' styling</h5>\r\n  </IcTypography>\r\n</ComponentPreview>\r\n\r\n## When to use\r\n\r\nUse typography to provide consistent styling across an app's text content.\r\n\r\nUse the logical order of `h#` tags in code for headings. For example, a `h3` heading needs to come after a `h2` heading but can be styled as any variant.\r\n\r\nAdd a variant to the typography element to change its style. This doesn't change the semantic level of the typography element so make sure to always adhere to <ic-link target=\"_blank\" href=\"https://www.w3.org/WAI/tutorials/page-structure/headings/\" rel=\"noreferer noopener nofollow\">accessible heading levels</ic-link>. For example, body text with a variant of `h2` will appear visually as an `h2` but still be body text in the DOM.\r\n\r\n## Vertical margins\r\n\r\nWhen using a typography component within page content, apply the vertical margins to evenly space out text elements on the page.\r\n\r\nIf using the typography component within other components or compact layouts, don't apply vertical margins. You can then position the typography component with precision.\r\n",
      "path": "/components/typography",
      "navPriority": 40,
      "date": "2023-11-27",
      "title": "Typography",
      "status": "BETA",
      "subTitle": "Use the typography component for consistent styling across typographical elements.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/components/typography",
      "hidden": false,
      "tabs": [
        {
          "title": "Guidance",
          "path": "/components/typography"
        },
        {
          "title": "Code",
          "path": "/components/typography/code"
        },
        {
          "title": "Accessibility",
          "path": "/components/typography/accessibility"
        }
      ],
      "meta": {
        "relativePath": "components\\typography\\guidance.mdx",
        "createdAt": "2024-05-20T13:20:43.365Z",
        "lastModified": "2024-05-20T13:20:43.365Z",
        "size": 2234,
        "formattedSize": "2.2 KB"
      }
    },
    {
      "id": "get-started\\a-design-systemx",
      "contents": "\r\n## Our reasons behind building a Design System\r\n\r\nOur Design System helps MI6, MI5 and GCHQ to create powerful and accessible capabilities that keep the UK and its partners safe and prosperous.\r\n\r\n<p>\r\n  We’ve built our own Design System because of our unique requirements. We\r\n  needed both flexibility and solid accessibility to{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://gds.blog.gov.uk/2020/02/28/podcast-gov-uk-design-system/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    unlock efficiencies\r\n  </ic-link>{\" \"}\r\n  at speed.\r\n</p>\r\n\r\nWe’re passionate about making sure that everyone can contribute equitably to our shared missions. We believe our Design System is the best way to help our teams and partners do that.\r\n\r\n## Changing a culture\r\n\r\nBuilding our own Design System and UI Kit allows our teams and partners to join us on this journey. It’s key for our growth that they have a deep understanding of accessibility and good design practice.\r\n\r\nWe need teams to understand the value of consistent, usable and accessible design. To achieve this across departments, platforms, technologies and skill level requires a collaborative and community-driven approach.\r\n\r\n## Game-changing potential\r\n\r\nFaster capability development benefits everyone. The Design System has already proven that we can simultaneously speed up and improve the quality of what we build. This means the community and assets we adopt can better serve our fast-changing mission needs and we can be confident in them being accessible.\r\n\r\n## This is for everyone\r\n\r\nThe complexity of the capabilities in use is high and user needs are often open-ended and require a high level of skill. The key value delivered by our Design System is repeatable patterns across a huge number of diverse but interconnected systems.\r\n\r\nInclusion and accessibility are core to our Design System. We’ve put a lot of effort into the atomic design components (such as typography and buttons) to instil confidence in the control of our ecosystem as we learn more about the vast use cases we encounter.\r\n\r\n## What now?\r\n\r\nWe’re interested to see the potential of our work and where it can go now, sharing it with more and more people. Open sourcing is a big step, and opportunity, for MI6, MI5 and GCHQ.\r\n\r\nWe hope our experiences can support your efforts in improving accessibility and usability of complex government, enterprise and specialist technology.\r\n\r\nWe want our Design System to continue to evolve and we’re excited to see what happens next.\r\n\r\n**- The IC Design System team from MI6, MI5, GCHQ and partners.**\r\n",
      "path": "/get-started/a-design-system",
      "navPriority": 7,
      "date": "2024-04-18",
      "title": "Why we built a Design System",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/a-design-system.mdx",
      "meta": {
        "relativePath": "get-started\\a-design-system.mdx",
        "createdAt": "2024-06-04T07:48:35.033Z",
        "lastModified": "2024-06-04T07:48:35.033Z",
        "size": 2857,
        "formattedSize": "2.8 KB"
      }
    },
    {
      "id": "get-started\\angularx",
      "contents": "\r\nimport { IcAlert } from \"@ukic/react\";\r\n\r\n<IcAlert\r\n  variant=\"info\"\r\n  heading=\"Version check\"\r\n  message=\"These instructions were used with Angular version 13.2.5.\"\r\n/>\r\n\r\n## Step one\r\n\r\nIn the root of your project:\r\n\r\n```shell\r\n// using npm\r\nnpm install @ukic/web-components @ukic/fonts\r\n\r\n// using yarn\r\nrm package-lock.json\r\nyarn add @ukic/web-components @ukic/fonts\r\n```\r\n\r\n## Step two\r\n\r\nIn the `app.modules.ts` file, import the `CUSTOM_ELEMENTS_SCHEMA`.\r\n\r\nOr for standalone components, import the `CUSTOM_ELEMENTS_SCHEMA` into the `.ts` file of any component using ICDS components.\r\n\r\n```jsx\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from \"@angular/core\";\r\n```\r\n\r\n## Step three\r\n\r\nThen include it in the `@NgModule` decorator object. Or for standalone components, include it in the `@Component` decorator object.\r\n\r\n```jsx\r\n// Modules\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [BrowserModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n// Standalone components\r\n@Component({\r\n  selector: 'app-foo',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './foo.component.html',\r\n  styleUrl: './foo.component.scss',\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n```\r\n\r\n## Step four\r\n\r\nSet skipLibCheck to `true` in your `tsconfig.json` file.\r\n\r\n```jsx\r\n\"compilerOptions\": {\r\n  \"skipLibCheck\": true,\r\n},\r\n```\r\n\r\n## Step five\r\n\r\nImport defineCustomElements in your `main.ts` file.\r\n\r\n```jsx\r\nimport { defineCustomElements } from \"@ukic/web-components/loader\";\r\n```\r\n\r\n## Step six\r\n\r\nCall defineCustomElements at the bottom of `main.ts`:\r\n\r\n```jsx\r\n//other configuration\r\n...\r\ndefineCustomElements();\r\n```\r\n\r\n## Step seven\r\n\r\nAdd the following into the top level CSS file for your project. For newly generated Angular projects this will be `src/styles.css`.\r\n\r\n```css\r\n@import \"@ukic/fonts/dist/fonts.css\";\r\n@import \"@ukic/web-components/dist/core/core.css\";\r\n```\r\n\r\n<br />\r\n\r\n<p>\r\n  In order to be rendered consistently across browsers and in line with modern\r\n  standards, each of the ICDS components uses styles from a global CSS file\r\n  based on{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://necolas.github.io/normalize.css/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Normalize.css\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\nIf you would like to import these styles to apply them to the rest of your project and slotted elements used within any of the ICDS components, add the following into the top level CSS file as well.\r\n\r\n```css\r\n@import \"@ukic/web-components/dist/core/normalize.css\";\r\n```\r\n\r\n## Step eight\r\n\r\nDeclare the component in your `app.component.html` file.\r\n\r\n```html\r\n<ic-status-tag label=\"Neutral\"></ic-status-tag>\r\n```\r\n",
      "path": "/get-started/install-components/angular",
      "navPriority": 3,
      "date": "2024-04-22",
      "title": "Angular",
      "subTitle": "How to use the components in an Angular-based application.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/angular.mdx",
      "meta": {
        "relativePath": "get-started\\angular.mdx",
        "createdAt": "2024-05-20T13:20:43.365Z",
        "lastModified": "2024-05-20T13:20:43.365Z",
        "size": 3021,
        "formattedSize": "3.0 KB"
      }
    },
    {
      "id": "get-started\\custom-themex",
      "contents": "\r\n## Customising component colours\r\n\r\nSome components can have their theme colour changed by using either of the methods below. When the theme colour is changed, components will automatically update.\r\n\r\nOther styles on affected components will also adapt accordingly, such as the colour of text or icons.\r\n\r\n## CSS variables\r\n\r\nYou can set the theme colour by using the three CSS variables (one for each of the RGB values for the colour) shown below:\r\n\r\n```css\r\n:root {\r\n  --ic-theme-primary-r: 92;\r\n  --ic-theme-primary-g: 9;\r\n  --ic-theme-primary-b: 72;\r\n}\r\n```\r\n\r\n## Theme component\r\n\r\nAlternatively, you can include the `ic-theme` component and set the `color` property:\r\n\r\n```jsx\r\n<ic-theme color=\"rgb(92, 9, 72)\"></ic-theme>\r\n<ic-theme color=\"#5c0949\"></ic-theme>\r\n```\r\n\r\n### Components that use the theme colour\r\n\r\n- [Footer](/components/footer)\r\n- [Hero](/components/hero)\r\n- [Side navigation](/components/side-navigation)\r\n- [Top navigation](/components/top-navigation)\r\n",
      "path": "/get-started/install-components/custom-theme",
      "navPriority": 9,
      "date": "2024-02-05",
      "title": "Custom theme",
      "subTitle": "How to change the theme colour of some components.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/custom-theme.mdx",
      "meta": {
        "relativePath": "get-started\\custom-theme.mdx",
        "createdAt": "2024-04-04T12:41:44.264Z",
        "lastModified": "2024-04-04T12:41:44.264Z",
        "size": 1294,
        "formattedSize": "1.3 KB"
      }
    },
    {
      "id": "get-started\\design-principlesx",
      "contents": "\r\n## Introduction\r\n\r\nDesign principles should be referred to throughout the whole design process to question whether design decisions uphold the principles or break them.\r\n\r\n## Inclusivity by design\r\n\r\nThe Design System's contents, components, patterns and processes should be able to be used by everyone equally. This means addressing accessibility and context of use as well as personal preference.\r\n\r\n## Consistency through re-use\r\n\r\nWe use re-usable patterns and components to drive consistency through the use of familiar and intuitive design.\r\n\r\n## Mission driven\r\n\r\nWe build by listening to the Intelligence Community in order to deliver their specific needs.\r\n\r\n## Research first\r\n\r\nWe make decisions based on data and research, not opinions.\r\n\r\n## Flexible, adaptive, powerful\r\n\r\nThe system should be flexible; it should adapt as necessary; it should empower users.\r\n\r\n## Continuously evolving\r\n\r\nThe system should evolve to stay in alignment with modern practices and adapt to include new content that helps to solve new design problems. Future proofing enables adoption and sustainability.\r\n\r\n## Transparent and open\r\n\r\nEnable feedback on processes and content from the entire community. Allow contribution from users as well as producers.\r\n\r\n## Responsible\r\n\r\nWe factor environmental sustainability into our decisions, minimising our resource usage and enabling the community to do the same.\r\n",
      "path": "/get-started/design-principles",
      "navPriority": 6,
      "date": "2022-11-15",
      "title": "Design principles",
      "subTitle": "Follow our community design principles.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/design-principles.mdx?at=develop",
      "hidden": false,
      "meta": {
        "relativePath": "get-started\\design-principles.mdx",
        "createdAt": "2024-06-04T07:48:35.034Z",
        "lastModified": "2024-06-04T07:48:35.034Z",
        "size": 1732,
        "formattedSize": "1.7 KB"
      }
    },
    {
      "id": "get-started\\figmax",
      "contents": "\r\nimport figmaFig1 from \"./images/assets2x.png\";\r\nimport figmaFig2 from \"./images/libraries2x.png\";\r\n\r\n## About the Figma UI Kit\r\n\r\nWe've built a Figma UI Kit to use alongside the guidance and code you'll find on this website. It'll make it easier to prototype and build things quickly.\r\n\r\nAll Figma resources have been built with our users in mind, with a strong focus on making sure accessibility is embedded from the start. That way we can provide an amazing experience that is usable for everyone.\r\n\r\n## Accessing the library for internal users\r\n\r\nThe UI Kit is turned on by default for all projects within our community. Check that you are using the latest version.\r\n\r\n1. In a new or existing Figma design file, click 'Assets' from the left-hand side panel then click the 'Team library' icon (the book).\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={figmaFig1}\r\n    imageAlt=\"Image of the left-hand side panel in Figma with the 'Assets' tab open and icon buttons on the right of the panel including the 'Team library' button.\"\r\n    state=\"none\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n2. Make sure the Intelligence Community Design System library is turned on.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={figmaFig2}\r\n    imageAlt=\"Image of the Libraries menu in Figma with the Intelligence Community Design System library turned on.\"\r\n    state=\"none\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Not part of the Intelligence Community?\r\n\r\n<p>\r\n  We've published our{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.figma.com/community/file/1283021660431259186\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Figma UI Kit\r\n  </ic-link>{\" \"}\r\n  to the Figma Community so that everyone can use our resources.\r\n</p>\r\n<p>\r\n  You can make a copy of it in your local files and use the components in your\r\n  designs. This is a static version and you won't automatically receive\r\n  component updates. Check Figma Community regularly for new updates and\r\n  versions.\r\n</p>\r\n\r\n<ol>\r\n  <li>\r\n    Navigate to the{\" \"}\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://www.figma.com/community/file/1283021660431259186\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      Intelligence Community UI Kit on Figma Community\r\n    </ic-link>\r\n    .\r\n  </li>\r\n  <li>\r\n    Duplicate the library into your drafts and connect your project files.\r\n  </li>\r\n  <li>\r\n    Use the{\" \"}\r\n    <ic-link\r\n      target=\"_blank\"\r\n      href=\"https://help.figma.com/hc/en-us/articles/360039150413-Swap-components-and-instances\"\r\n      rel=\"noreferer noopener nofollow\"\r\n    >\r\n      swap libraries\r\n    </ic-link>{\" \"}\r\n    function in Figma to quickly swap your components from one version to the\r\n    next.\r\n  </li>\r\n</ol>\r\n<p>\r\n  If you want to request a new feature, or if you notice any issues, you can{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://github.com/mi6/ic-design-system/issues\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    raise it on GitHub issues\r\n  </ic-link>\r\n  . For more information please read <ic-link href=\"/community/contribute#contribute-to-the-figma-ui-kit\">\r\n    how to contribute to the Figma UI Kit\r\n  </ic-link>.\r\n</p>\r\n",
      "path": "/get-started/figma",
      "navPriority": 5,
      "date": "2024-02-06",
      "title": "Figma UI Kit",
      "subTitle": "Reusable and flexible Figma components used to design, prototype and hand-off designs for apps and digital products.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/figma.mdx",
      "meta": {
        "relativePath": "get-started\\figma.mdx",
        "createdAt": "2024-06-04T07:48:35.035Z",
        "lastModified": "2024-06-04T07:48:35.035Z",
        "size": 3519,
        "formattedSize": "3.4 KB"
      }
    },
    {
      "id": "get-started\\gatsbyx",
      "contents": "\r\nimport { IcAlert } from \"@ukic/react\";\r\n\r\n<IcAlert\r\n  heading=\"Locking packages\"\r\n  variant=\"info\"\r\n  message=\"If you lock the React components to a particular version, you should also install and lock the corresponding web components package.\"\r\n  dismissible\r\n/>\r\n\r\n## Step one\r\n\r\nIn the root of your project:\r\n\r\n```shell\r\n// using npm\r\nnpm install @ukic/react @ukic/fonts\r\n\r\n// using yarn\r\nrm package-lock.json\r\nyarn add @ukic/react @ukic/fonts\r\n```\r\n\r\n## Step Two\r\n\r\nInstall the `gatsby-plugin-stencil` package to allow Gatsby to render the components server-side.\r\n\r\n```shell\r\n// using npm\r\nnpm install --save gatsby-plugin-stencil\r\n```\r\n\r\n## Step three\r\n\r\nIn your `gatsby-config.js` file (at the root of the project), add the following:\r\n\r\n```js\r\nplugins: [\r\n  {\r\n    resolve: `gatsby-plugin-stencil`,\r\n\r\n    options: {\r\n      module: \"@ukic/web-components\",\r\n      renderToStringOptions: {\r\n        prettyHtml: true,\r\n      },\r\n    },\r\n  },\r\n];\r\n```\r\n\r\n## Step four\r\n\r\nAdd the following to the top level index file of your project.\r\n\r\n```jsx\r\nimport \"@ukic/fonts/dist/fonts.css\";\r\nimport \"@ukic/react/dist/core/core.css\";\r\n```\r\n\r\n<br />\r\n\r\n<p>\r\n  In order to be rendered consistently across browsers and in line with modern\r\n  standards, each of the ICDS components uses styles from a global CSS file\r\n  based on{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://necolas.github.io/normalize.css/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Normalize.css\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\nIf you would like to import these styles to apply them to the rest of your project\r\nand slotted elements used within any of the ICDS components, add the following into\r\nthe top level index file as well.\r\n\r\n```jsx\r\nimport \"@ukic/react/dist/core/normalize.css\";\r\n```\r\n\r\n## Step five\r\n\r\nImport the component(s) in your Gatsby pages.\r\n\r\n```jsx\r\nimport { IcComponent } from \"@ukic/react\";\r\n```\r\n\r\n## Helpful links\r\n\r\n<p>\r\n  The Gatsby documentation contains more information on the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.gatsbyjs.com/plugins/gatsby-plugin-stencil/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    gatsby-plugin-stencil\r\n  </ic-link>{\" \"}\r\n  plugin. Further information can be found on{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://dev.to/brunnerlivio/use-stencil-with-gatsbyjs-1omo\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    using Stencil web components in Gatsby\r\n  </ic-link>\r\n  .\r\n</p>\r\n",
      "path": "/get-started/install-components/gatsby",
      "navPriority": 7,
      "date": "2024-04-24",
      "title": "Gatsby",
      "subTitle": "How to use the components in a Gatsby-based application.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/gatsby.mdx",
      "meta": {
        "relativePath": "get-started\\gatsby.mdx",
        "createdAt": "2024-06-04T07:48:35.036Z",
        "lastModified": "2024-06-04T07:48:35.036Z",
        "size": 2748,
        "formattedSize": "2.7 KB"
      }
    },
    {
      "id": "get-started\\indexx",
      "contents": "\r\nimport { IcCard } from \"@ukic/react\";\r\n\r\n## Design System and UI Kit\r\n\r\n- [Accessibility guidance](/accessibility) to design, build and test apps and services that work for everyone.\r\n- [Style tokens](/styles) to create consistent experiences.\r\n- [Component guidance](/components) to implement accessible, usable and consistent user interfaces (UI).\r\n- [Patterns](/patterns) to help users with intuitive experiences for common user tasks.\r\n\r\n### For developers\r\n\r\n<IcCard\r\n  heading=\"Install the UI Kit components\"\r\n  message=\"Install and use the UI Kit component library. Use React or web components to quickly build accessible interfaces.\"\r\n  href=\"get-started/install-components\"\r\n  clickable\r\n  fullWidth\r\n/>\r\n\r\n### For designers\r\n\r\n<IcCard\r\n  heading=\"Figma UI Kit\"\r\n  message=\"Reusable and flexible Figma components used to design, prototype and hand-off designs for apps and digital products.\"\r\n  href=\"get-started/figma\"\r\n  clickable\r\n  fullWidth\r\n/>\r\n\r\n## Contribute\r\n\r\nWe are expanding the UI Kit. You can check out the [roadmap](/community/roadmap) for what's coming. If you would like to help please [read more on how to contribute](/community).\r\n\r\n## Using v1.0 component library\r\n\r\nYou can still use v1.0 (link available for internal users only). Support will be limited and the library deprecated in the future.\r\n",
      "path": "/get-started",
      "navPriority": 0,
      "date": "2022-11-15",
      "title": "Get started",
      "subTitle": "Use the Design System and UI Kit to create accessible, usable and consistent apps and services for the United Kingdom Intelligence Community.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/index.mdx",
      "meta": {
        "relativePath": "get-started\\index.mdx",
        "createdAt": "2024-04-04T12:41:44.264Z",
        "lastModified": "2024-04-04T12:41:44.264Z",
        "size": 1695,
        "formattedSize": "1.7 KB"
      }
    },
    {
      "id": "get-started\\install-componentsx",
      "contents": "\r\n## Installing the components\r\n\r\n<p>\r\n  The UI Kit components are available on{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.npmjs.com/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    npmjs.com\r\n  </ic-link>\r\n  , and can be installed from the command line.\r\n</p>\r\n\r\n```shell\r\n// Web components, Angular, Vue, Svelte\r\nnpm install @ukic/web-components @ukic/fonts\r\n\r\n// React\r\nnpm install @ukic/react @ukic/fonts\r\n```\r\n\r\n## Using the components\r\n\r\nWeb components can be used without the need for a framework. To use web components without a framework, follow the [web components instructions](/get-started/install-components/web-components).\r\n\r\nTo use the components in a particular framework, follow the framework instructions.\r\n\r\n- [React](/get-started/install-components/react)\r\n- [Angular](/get-started/install-components/angular)\r\n- [Vue](/get-started/install-components/vue)\r\n- [Svelte](/get-started/install-components/svelte)\r\n- [Gatsby](/get-started/install-components/gatsby)\r\n- [Next.js](/get-started/install-components/nextJS)\r\n\r\n<p>\r\n  Custom Elements Everywhere has{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://custom-elements-everywhere.com\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    more information on how web components work with other frameworks\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n## Using third-party libraries alongside ICDS\r\n\r\nIf you can't find a suitable component in ICDS, then you can use one from a third-party library in your project. Use that library's theming and customisation options to style the third-party component following the [ICDS styles](/styles) so that they look and feel as similar as possible on the page. Make sure to check for new component releases from ICDS regularly so you can replace the third-party components with ICDS ones when they are released.\r\n",
      "path": "/get-started/install-components",
      "navPriority": 1,
      "date": "2024-01-04",
      "title": "Install the components",
      "subTitle": "Install and use the UI Kit component library. Use React or web components to quickly build accessible interfaces.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/install-components.mdx",
      "meta": {
        "relativePath": "get-started\\install-components.mdx",
        "createdAt": "2024-06-04T07:48:35.037Z",
        "lastModified": "2024-06-04T07:48:35.037Z",
        "size": 2209,
        "formattedSize": "2.2 KB"
      }
    },
    {
      "id": "get-started\\nextjsx",
      "contents": "\r\n## Transpile react package\r\n\r\nThe `@ukic/react` package will need to be transpiled for use with Next.js. The steps required will depend on the version of Next.js you are using.\r\n\r\n### Next.js 13\r\n\r\nSet the following in the `next.config.js` file.\r\n\r\n```jsx\r\nconst nextConfig = {\r\n  //other configuration\r\n  transpilePackages: [\"@ukic/react\"],\r\n};\r\n\r\nmodule.exports = nextConfig;\r\n```\r\n\r\n### Next.js 12 and earlier\r\n\r\n#### Step one\r\n\r\nInstall the `next-transpile-modules` package in the root of your project.\r\n\r\n```shell\r\n// using npm\r\nnpm install next-transpile-modules\r\n\r\n// using yarn\r\nyarn add next-transpile-modules\r\n```\r\n\r\n#### Step two\r\n\r\nSet the following in the `next.config.js` file.\r\n\r\n```jsx\r\nconst nextConfig = {\r\n  //other configuration\r\n};\r\n\r\nconst withTM = require(\"next-transpile-modules\")([\"@ukic/react\"]);\r\nmodule.exports = withTM(nextConfig);\r\n```\r\n\r\n## Web components limitations\r\n\r\nWhile our component library is built with web components, which offer numerous benefits, there may be limitations when using them with Next.js or other Server-Side Rendering (SSR) frameworks due to current limitations in web component support.\r\n\r\nThis may result in slower performance and manual workarounds. We're actively working to provide more information and updates on this topic as it evolves.\r\n",
      "path": "/get-started/install-components/nextJS",
      "navPriority": 8,
      "date": "2024-01-17",
      "title": "Next.js",
      "subTitle": "How to use the components in a Next.js-based application.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/nextJS.mdx",
      "meta": {
        "relativePath": "get-started\\nextjs.mdx",
        "createdAt": "2024-06-04T07:48:35.038Z",
        "lastModified": "2024-06-04T07:48:35.038Z",
        "size": 1610,
        "formattedSize": "1.6 KB"
      }
    },
    {
      "id": "get-started\\reactx",
      "contents": "\r\nimport { IcAlert } from \"@ukic/react\";\r\n\r\n<IcAlert\r\n  heading=\"Locking packages\"\r\n  variant=\"info\"\r\n  message=\"If you lock the React components to a particular version, you should also install and lock the corresponding web components package.\"\r\n  dismissible\r\n/>\r\n\r\n## Step one\r\n\r\nIn the root of your project:\r\n\r\n```shell\r\n// using npm\r\nnpm install @ukic/react @ukic/fonts\r\n\r\n// using yarn\r\nrm package-lock.json\r\nyarn add @ukic/react @ukic/fonts\r\n```\r\n\r\n## Step two\r\n\r\nAdd the following into the top level CSS file for your project.\r\n\r\n```css\r\n@import \"@ukic/fonts/dist/fonts.css\";\r\n@import \"@ukic/react/dist/core/core.css\";\r\n```\r\n\r\n<p>\r\n  In order to be rendered consistently across browsers and in line with modern\r\n  standards, each of the ICDS components uses styles from a global CSS file\r\n  based on{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://necolas.github.io/normalize.css/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Normalize.css\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\nIf you would like to import these styles to apply them to the rest of your project and slotted elements used within any of the ICDS components, add the following into the top level CSS file as well.\r\n\r\n```css\r\n@import \"@ukic/react/dist/core/normalize.css\";\r\n```\r\n\r\n## Step three\r\n\r\nImport the component(s) in your React files.\r\n\r\n```jsx\r\nimport { IcComponent } from \"@ukic/react\";\r\n```\r\n\r\n## Working with slotted SVGs\r\n\r\n### Step one\r\n\r\nTo slot an SVG into one of our React components, import the `SlottedSVG` component from `@ukic/react` into your React files. This will prevent an error stating that property 'slot' doesn't exist.\r\n\r\n<p>\r\n  To scale the icons, use the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://css-tricks.com/scale-svg/#aa-the-viewbox-attribute\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    <code style={{ backgroundColor: \"#EEEFF0\", color: \"black\" }}>viewBox</code>{\" \"}\r\n    attribute\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n```jsx\r\nimport { SlottedSVG } from \"@ukic/react\";\r\n```\r\n\r\n### Step two\r\n\r\nReplace any instances of `<svg>` with `<SlottedSVG>`.\r\n\r\n```jsx\r\n//Before\r\n<IcTopNavigation appTitle=\"App title\">\r\n  <svg slot=\"app-icon\" path={path} />\r\n  <svg slot=\"app-icon\">\r\n    <path d=\"...\" />\r\n  </svg>\r\n</IcTopNavigation>\r\n\r\n//After\r\n<IcTopNavigation appTitle=\"App title\">\r\n  {/* Can be implemented either way */}\r\n  <SlottedSVG slot=\"app-icon\" path={path} viewBox=\"0 0 24 24\" />\r\n  <SlottedSVG slot=\"app-icon\" viewBox=\"0 0 24 24\">\r\n    <path d=\"...\" />\r\n\r\n  </SlottedSVG>\r\n</IcTopNavigation>\r\n```\r\n\r\n### Using Material Design Icons (MDI) with SlottedSVG\r\n\r\nTo use `<SlottedSVG>` with MDI Icons, install and import the `@mdi/js` package.\r\n\r\n```bash\r\nnpm i @mdi/js\r\n```\r\n\r\n```jsx\r\nimport { mdiHome } from \"@mdi/js\";\r\n\r\n<IcTopNavigation appTitle=\"App title\">\r\n  <SlottedSVG slot=\"app-icon\" path={mdiHome} viewBox=\"0 0 24 24\" />\r\n</IcTopNavigation>;\r\n```\r\n",
      "path": "/get-started/install-components/react",
      "navPriority": 2,
      "date": "2024-04-24",
      "title": "React",
      "subTitle": "How to use the components in a React-based application.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/react.mdx",
      "meta": {
        "relativePath": "get-started\\react.mdx",
        "createdAt": "2024-06-04T07:48:35.039Z",
        "lastModified": "2024-06-04T07:48:35.039Z",
        "size": 3177,
        "formattedSize": "3.1 KB"
      }
    },
    {
      "id": "get-started\\releases-versioningx",
      "contents": "\r\n## How we release and version\r\n\r\nThis page provides details on how the `@ukic/` packages and website are released and versioned.\r\n\r\n<p>\r\n  Releases are triggered once the <code class=\"language-text\">develop</code> branch pull request is merged\r\n  into the <code class=\"language-text\">main</code> branch. The package versions follow the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://semver.org/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    semantic versioning\r\n  </ic-link>{\" \"}\r\n  scheme.\r\n</p>\r\n\r\n```js\r\nmajor.minor.patch;\r\n```\r\n\r\n<br />\r\n\r\n**Major releases** contain breaking changes to the component libraries. Breaking changes are communicated to the community as early as possible to allow teams to plan when to integrate the new packages into their projects. Major releases are very infrequent, with at least a year between them.\r\n\r\n**Minor releases** contain new component features. Minor releases are backwards-compatible with no requirement for the developer to make updates to their existing implementation. However, to use the new feature, the implementation will require a small update (such as adding a new prop) in order to use the new component application programming interface (API).\r\n\r\n**Patch releases** contain bug fixes.\r\n\r\n<p>\r\n  Minor and/or patch releases are scheduled every two weeks. All\r\n  changes to the component library are recorded in the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://github.com/mi6/ic-ui-kit/blob/main/packages/web-components/CHANGELOG.md\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Web Components CHANGELOG.md\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\nAll packages are published with identical version numbers.\r\n\r\n## How we manage Beta components\r\n\r\nBeta components are an intermediate stage in our versioning system, between the initial \"Alpha\" testing phase (peer review) and the stable release.\r\n\r\nWhen a component reaches the Beta stage, it has passed the preliminary phase but is not yet deemed fully stable. This allows us to release components for wider testing and gather feedback from our user community while further fine-tuning their functionalities and addressing potential issues.\r\n\r\nBeta components are integrated into our normal `@ukic/` packages and can be installed just like any other stable component. They are easily accessible to developers and users who wish to explore the latest developments and contribute to the improvements.\r\n\r\nIt is important to be aware of a few points when working with Beta components:\r\n\r\n1. **Potential API changes:** As Beta components are still in development, there may be changes to their API between major version updates. This could require manual adjustments in the codebase to accommodate the changes.\r\n2. **Presence of bugs:** Beta components may contain bugs or missing features.\r\n3. **Potential future major changes:** Since Beta components are actively evolving, there may be major behind-the-scenes changes planned for the future.\r\n\r\nWe consider Beta components acceptable for use in production-ready applications, as long as customers are happy with the issues mentioned previously.\r\n\r\nWe regularly review the stability and reliability of Beta components. When the component meets the criteria it can be transitioned to a stable release.\r\n\r\n## Canary components\r\n\r\nCanary components are unstable components that are released for testing purposes.\r\n\r\nThese components should not be used in production apps without understanding the risk that changes may occur in order to fix bugs or improve functionality.\r\n\r\nWe consider a canary component to be acceptable for moving to Beta once customers have tested its usage and provided enough feedback to suggest they're happy with it.\r\n\r\nCanary components can be installed in the same way as our core `@ukic/` packages, but prefixed with canary, for example `@ukic/canary-react` or `@ukic/canary-web-components`.\r\n\r\n```shell\r\n// Canary Web Components\r\nnpm i @ukic/canary-web-components @ukic/fonts\r\n\r\n// Canary React\r\nnpm i @ukic/canary-react @ukic/fonts\r\n```\r\n\r\nA difference between our canary packages and our core `@ukic/` packages is that canary package versions follow a `<version>-canary.<build-number>` pattern.\r\n\r\n<p>\r\n  Another difference is that docs for canary components won't appear in the\r\n  Components guidance section of this site. Instead, docs can be viewed in our\r\n  Storybook instance for either{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://mi6.github.io/ic-ui-kit/branches/canary/main/react/?path=/docs/getting-started--docs\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    React\r\n  </ic-link>{\" \"}\r\n  or{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://mi6.github.io/ic-ui-kit/branches/canary/main/web-components/?path=/docs/getting-started--docs\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    web components\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n## Supporting previous versions\r\n\r\nAs the component library matures and new versions arrive, the ICDS team will actively maintain and support the previous major version for up to 6 months. This is to allow the team to provide as much resource as possible on the current version. Any support for the legacy versions will only include security updates and bug fixes. No new features will be added.\r\n",
      "path": "/get-started/releases-versions",
      "date": "2024-02-15",
      "title": "Releases and versions",
      "subTitle": "Our approach to releases and versioning.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/releases-versioning.mdx",
      "meta": {
        "relativePath": "get-started\\releases-versioning.mdx",
        "createdAt": "2024-06-04T07:48:35.040Z",
        "lastModified": "2024-06-04T07:48:35.040Z",
        "size": 5544,
        "formattedSize": "5.4 KB"
      }
    },
    {
      "id": "get-started\\sveltex",
      "contents": "\r\nimport { IcAlert } from \"@ukic/react\";\r\n\r\n<IcAlert\r\n  variant=\"info\"\r\n  heading=\"Version check\"\r\n  message=\"These instructions were used with Svelte version 3.50.1.\"\r\n/>\r\n\r\n## Step one\r\n\r\nIn the root of your project:\r\n\r\n```shell\r\n// using npm\r\nnpm install @ukic/web-components @ukic/fonts\r\n\r\n// using yarn\r\nrm package-lock.json\r\nyarn add @ukic/web-components @ukic/fonts\r\n```\r\n\r\n## Step two\r\n\r\nImport defineCustomElements in your `main.ts` file.\r\n\r\n```jsx\r\nimport { defineCustomElements } from \"@ukic/web-components/loader\";\r\n```\r\n\r\n## Step three\r\n\r\nCall defineCustomElements in your `main.ts` file:\r\n\r\n```jsx\r\n//other configuration\r\n...\r\ndefineCustomElements();\r\n```\r\n\r\n## Step four\r\n\r\nAdd the following into the top level CSS file for your project. For newly generated Svelte projects this will be `src/global.css`.\r\n\r\n```css\r\n@import \"@ukic/fonts/dist/fonts.css\";\r\n@import \"@ukic/web-components/dist/core/core.css\";\r\n```\r\n\r\n<br />\r\n\r\n<p>\r\n  In order to be rendered consistently across browsers and in line with modern\r\n  standards, each of the ICDS components uses styles from a global CSS file\r\n  based on{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://necolas.github.io/normalize.css/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Normalize.css\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\nIf you would like to import these styles to apply them to the rest of your project and slotted elements used within any of the ICDS components, add the following into the top level CSS file as well.\r\n\r\n```css\r\n@import \"@ukic/web-components/dist/core/normalize.css\";\r\n```\r\n\r\n## Step five\r\n\r\nIn your HTML, you can now declare a component as follows:\r\n\r\n```html\r\n<ic-status-tag label=\"Neutral\"></ic-status-tag>\r\n```\r\n",
      "path": "/get-started/install-components/svelte",
      "navPriority": 6,
      "date": "2024-04-22",
      "title": "Svelte",
      "subTitle": "How to use the components in a Svelte-based application.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/svelte.mdx",
      "meta": {
        "relativePath": "get-started\\svelte.mdx",
        "createdAt": "2024-06-04T07:48:35.041Z",
        "lastModified": "2024-06-04T07:48:35.041Z",
        "size": 2010,
        "formattedSize": "2.0 KB"
      }
    },
    {
      "id": "get-started\\test-componentsx",
      "contents": "\r\n## How we've built the components\r\n\r\n<p>\r\n  Typically, components sit in the DOM, also known as the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.codecademy.com/resources/blog/what-is-dom/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    'light DOM'\r\n  </ic-link>\r\n  . DOM stands for 'Document Object Model'. The light DOM represents the structure\r\n  of a webpage as a tree, where each DOM object is a node.\r\n</p>\r\n\r\nAt the core, the UI Kit components are based off the web components specification, which utilises the shadow DOM. This makes it possible to encapsulate each component’s markup structure, styling and functionality.\r\n\r\n<p>\r\n  According to{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Mozilla\r\n  </ic-link>\r\n  , the \"shadow DOM allows hidden DOM trees to be attached to elements in the regular\r\n  DOM tree — this shadow DOM tree starts with a shadow root, underneath which you\r\n  can attach any element, in the same way as the normal DOM.\"\r\n</p>\r\n\r\nTherefore, testing components within the shadow DOM can be problematic because elements inside a shadow root technically do not exist in the main DOM, and can prevent testing frameworks from selecting internal elements.\r\n\r\n## Testing the components\r\n\r\nTo ease the process of testing, here are guides to testing our UI Kit components in different testing frameworks.\r\n\r\n- [Jest](/get-started/test-components/testing-with-jest)\r\n- [React Testing Library](/get-started/test-components/testing-with-react-testing-library)\r\n- [Cypress](/get-started/test-components/testing-with-cypress)\r\n",
      "path": "/get-started/test-components",
      "navPriority": 2,
      "date": "2023-02-16",
      "title": "Testing the components",
      "subTitle": "Test the UI Kit components within the shadow DOM using a testing framework.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/test-components.mdx",
      "meta": {
        "relativePath": "get-started\\test-components.mdx",
        "createdAt": "2024-06-04T07:48:35.042Z",
        "lastModified": "2024-06-04T07:48:35.042Z",
        "size": 2035,
        "formattedSize": "2.0 KB"
      }
    },
    {
      "id": "get-started\\testing-with-cypressx",
      "contents": "\r\n## About Cypress\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.cypress.io/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Cypress\r\n  </ic-link>{\" \"}\r\n  is a developer-friendly, Javascript-based front-end testing tool. It comes\r\n  bundled with popular libraries like Mocha and Chai, allowing for swift\r\n  adoption. Advantages include snapshots at the time of test execution, implicit\r\n  wait commands, multiple browsers in which to test and real-time command\r\n  execution with visual feedback.\r\n</p>\r\n\r\nCypress allows for end-to-end testing, replicating how \"users interact with your app by using a real browser\", and component testing, also known as unit testing, which tests a component's functionality, styling and appearance in isolation.\r\n\r\n## Cypress and the Shadow DOM\r\n\r\nCypress gives two ways in which to test `@ukic` components in the [shadow DOM](/get-started/test-components#how-weve-built-the-components).\r\n\r\n### Configuring at test level\r\n\r\nAdd `includeShadowDom: true` to the `cy.get` query.\r\n\r\n```js\r\n// cypress/e2e/test.cy.js\r\nit(\"has an app bar with title link\", () => {\r\n  cy.get(\"ic-top-navigation\", { includeShadowDom: true })\r\n    .shadow()\r\n    .find(\".title-link\")\r\n    .should(\"have.attr\", \"href\", \"/\")\r\n    .should(\"have.text\", \"My App Title\");\r\n});\r\n```\r\n\r\nThis allows traversing the shadow DOM by chaining the `.shadow()` method.\r\n\r\n### Configuring at global level\r\n\r\nAdd `includeShadowDom: true` to the `cypress.config.js`.\r\n\r\n```js\r\n// cypress.config.js\r\nconst { defineConfig } = require(\"cypress\");\r\n\r\nmodule.exports = defineConfig({\r\n  includeShadowDom: true,\r\n  component: {\r\n    devServer: {\r\n      framework: \"create-react-app\",\r\n      bundler: \"webpack\",\r\n    },\r\n  },\r\n});\r\n```\r\n\r\nThis allows traversing the shadow DOM using assertions without having to explicitly chain the `.shadow()` method.\r\n\r\n## Example: Component testing\r\n\r\nBelow are examples of component tests on the `@ukic/react` components `IcTextfield` and `IcButton`. Component tests are normally located adjacent to the component they are testing and are rendered on a development server.\r\n\r\n```tsx\r\n// Textfield.tsx\r\nimport { IcTextField, IcButton } from \"@ukic/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Textfield() {\r\n  const [favouriteCoffee, setFavouriteCoffee] = useState<String>(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    event.preventDefault();\r\n    setFavouriteCoffee(event.detail.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    console.log(\"This is the best coffee going:\", favouriteCoffee);\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <IcTextField\r\n        label=\"What is your favourite coffee?\"\r\n        placeholder=\"Placeholder\"\r\n        helperText=\"Such as Arabica, Robusta or Liberica\"\r\n        onIcChange={(ev) => handleChange(ev)}\r\n      />\r\n\r\n      <IcButton variant=\"primary\" onClick={() => handleClick()}>\r\n        Send\r\n      </IcButton>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Textfield;\r\n```\r\n\r\n```tsx\r\n// Textfield.cy.tsx\r\nimport React from \"react\";\r\nimport Textfield from \"./Textfield.tsx\";\r\n\r\ndescribe(\"<Textfield />\", () => {\r\n  it(\"renders\", () => {\r\n    cy.mount(<Textfield />).should(\"have.property\", \"component\");\r\n  });\r\n  it(\"takes a value in the textfield and prints to console when the button is clicked\", () => {\r\n    // Render the component\r\n    cy.mount(<Textfield />);\r\n    // Capture the log to check later\r\n    cy.stub(window.console, \"log\").as(\"consoleLog\");\r\n\r\n    // Check the IcComponents have finished rendering\r\n    cy.get(\"ic-text-field\").should(\"have.class\", \"hydrated\");\r\n    cy.get(\"ic-button\").should(\"have.class\", \"hydrated\");\r\n\r\n    // Interact with the components and provide assertions\r\n    cy.get(\"#ic-text-field-input-1\").type(\"Black\");\r\n    cy.get(\"ic-button\").click();\r\n    cy.get(\"@consoleLog\").should(\r\n      \"be.calledWith\",\r\n      \"This is the best coffee going:\",\r\n      \"Black\"\r\n    );\r\n  });\r\n});\r\n```\r\n\r\n## Example: End-to-end testing\r\n\r\nBelow is an additional example for end-to-end tests on the same component. End-to-end tests normally live within the Cypress test directory and are rendered as a complete site with live interaction.\r\n\r\n```jsx\r\n// cypress/e2e/App.cy.js\r\ndescribe(\"Textfield\", () => {\r\n  beforeEach(() => {\r\n    cy.visit(\"http://localhost:3000/\", {\r\n      onBeforeLoad(window) {\r\n        // Capture the log to check later\r\n        cy.stub(window.console, \"log\").as(\"consoleLog\");\r\n      },\r\n    });\r\n  });\r\n\r\n  it(\"should have visited the correect URL\", () => {\r\n    // Check that your App server is running\r\n    cy.url().should(\"eq\", \"http://localhost:3000/\");\r\n  });\r\n\r\n  it(\"should check the label on the IcTextfield\", () => {\r\n    // Checks the component has rendered fully\r\n    cy.get(\"ic-text-field\").should(\"have.class\", \"hydrated\");\r\n    cy.get(\"ic-button\").should(\"have.class\", \"hydrated\");\r\n    cy.get(\"ic-text-field\").should(\r\n      \"have.html\",\r\n      '<input type=\"hidden\" class=\"ic-input\" name=\"ic-text-field-input-0\" value=\"\">'\r\n    );\r\n\r\n    // Interact with the components\r\n    cy.get(\"#ic-text-field-input-0\").type(\"Frappucino\");\r\n    cy.get(\"ic-button\").click();\r\n    cy.get(\"@consoleLog\").should(\r\n      \"be.calledWith\",\r\n      \"This is the best coffee going:\",\r\n      \"Frappucino\"\r\n    );\r\n  });\r\n});\r\n```\r\n",
      "path": "/get-started/test-components/testing-with-cypress",
      "date": "2023-02-22",
      "title": "Testing with Cypress",
      "subTitle": "How to test our components with Cypress.",
      "navPriority": 4,
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/testing-with-cypress.mdx",
      "meta": {
        "relativePath": "get-started\\testing-with-cypress.mdx",
        "createdAt": "2024-06-04T07:48:35.043Z",
        "lastModified": "2024-06-04T07:48:35.043Z",
        "size": 5586,
        "formattedSize": "5.5 KB"
      }
    },
    {
      "id": "get-started\\testing-with-jestx",
      "contents": "\r\n## About Jest\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://jestjs.io/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Jest\r\n  </ic-link>{\" \"}\r\n  is a JavaScript testing framework designed to ensure correctness of any\r\n  JavaScript codebase. It allows you to write tests with an approachable,\r\n  familiar and feature-rich API that gives you results quickly.\r\n</p>\r\n\r\n<p>\r\n  These instructions have been written with JavaScript in mind. Jest also\r\n  supports TypeScript. Further instructions on how to set up Jest for TypeScript\r\n  can be found on their{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://jestjs.io/docs/getting-started#using-typescript\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    'Getting Started'\r\n  </ic-link>{\" \"}\r\n  page.\r\n</p>\r\n\r\n## Installing Jest\r\n\r\n### Step one\r\n\r\nInstall Jest with `npm` or `yarn`.\r\n\r\n```shell\r\nnpm install --save-dev jest\r\n\r\nyarn add --dev jest\r\n```\r\n\r\n### Step two\r\n\r\nCreate a test file using the extension: `.test.js` and add some tests.\r\n\r\n### Step three\r\n\r\nAdd the following section to your package.json:\r\n\r\n```shell\r\n{\r\n  \"scripts\": {\r\n    \"test\": \"jest\"\r\n  }\r\n}\r\n```\r\n\r\n### Step four\r\n\r\nFinally, run your tests using `npm test` or `yarn test`.\r\n\r\n<p>\r\n  More information on setting up Jest can be found on{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://jestjs.io/docs/getting-started\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Jest’s Getting Started page\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n## Testing with React components\r\n\r\nThe `@ukic/react` package will need to be transformed before you can use these components in Jest tests.\r\n\r\nAdd a `transformIgnorePatterns` field with the value `[\"/node_modules/(?!@ukic/react)\"]` to your Jest config.\r\n\r\n## Testing shadow components\r\n\r\nIn the DOM, elements can be found using `document.querySelector`. Shadow components can be found in a similar way using the `shadowRoot` prefix. The shadow root is the root node of the shadow DOM tree.\r\n\r\nNote: components that have been slotted in can be found in the 'light' DOM. They are not a part of their parent component's shadow DOM.\r\n\r\n### Example\r\n\r\n```js\r\n// Find all navigation items in a top nav\r\ndocument\r\n  .querySelector(\"ic-top-navigation\")\r\n  .querySelectorAll(\"ic-navigation-item\");\r\n\r\n// Find the text content of the first navigation item in a top nav\r\ndocument\r\n  .querySelector(\"ic-top-navigation > ic-navigation-item:first-child\")\r\n  .shadowRoot.querySelector(\"ic-tooltip > a > ic-typography\").textContent;\r\n\r\n// Find the search button for the search bar in the top nav (nested shadow DOM)\r\ndocument\r\n  .querySelector(\"ic-top-navigation > ic-search-bar\")\r\n  .shadowRoot.querySelector(\"ic-button#search-submit-button\")\r\n  .shadowRoot.querySelector(\"#ic-button-with-tooltip-search-submit-button\");\r\n```\r\n\r\n## Example test\r\n\r\nBelow is an example of a React component that uses the `IcTopNavigation` component. The labels for the navigation items are being mapped to the `IcNavigationItem` component.\r\n\r\n```js\r\n// topNav.js\r\nimport React from \"react\";\r\nimport { IcTopNavigation, IcNavigationItem, IcSearchBar } from \"@ukic/react\";\r\n\r\nexport const topNav = () => {\r\n  const navItemLabels = [\"About\", \"Drinks\", \"Recipes\", \"Blog\"];\r\n\r\n  const navItems = navItemsLabels.map((navItemLabel, index) => (\r\n    <IcNavigationItem\r\n      key={index}\r\n      label={navItemLabel}\r\n      href={`/${navItemLabel}`}\r\n      slot=\"navigation\"\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <IcTopNavigation\r\n      appTitle=\"Wake me up before you cocoa\"\r\n      status=\"alpha\"\r\n      version=\"v0.0.7\"\r\n    >\r\n      <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n      {navItems}\r\n    </IcTopNavigation>\r\n  );\r\n};\r\n```\r\n\r\nWe are now going to test that the labels are being mapped correctly using the Arrange-Act-Assert pattern.\r\n\r\n<p>\r\n  Jest has a range of{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://jestjs.io/docs/expect\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    matchers\r\n  </ic-link>{\" \"}\r\n  to choose from for your test assertions. Below, we make use of the{\" \"}\r\n  <code style={{ backgroundColor: \"#EEEFF0\" }}>.toMatch</code> matcher for our\r\n  test assertion.\r\n</p>\r\n\r\n```js\r\n// topNav.test.js\r\ndescribe(\"top navigation\", () => {\r\n  it(\"renders navigation items correctly\", async () => {\r\n    // Arrange\r\n    const navItemsLabels = [\"About\", \"Drinks\", \"Recipes\", \"Blog\"];\r\n\r\n    // Act\r\n    const navItems = Array.from(\r\n      document.querySelectorAll(\"ic-top-navigation ic-navigation-item\")\r\n    ).map((i) => i.shadowRoot.querySelector(\".ic-tooltip\").textContent);\r\n\r\n    // Assert\r\n    navItems.forEach((navItem, i) => {\r\n      expect(navItem).toMatch(navItemsLabels[i]);\r\n    });\r\n  });\r\n});\r\n```\r\n",
      "path": "/get-started/test-components/testing-with-jest",
      "date": "2023-02-16",
      "title": "Testing with Jest",
      "subTitle": "How to test our components with Jest.",
      "navPriority": 2,
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/testing-with-jest.mdx",
      "meta": {
        "relativePath": "get-started\\testing-with-jest.mdx",
        "createdAt": "2024-04-04T12:41:44.279Z",
        "lastModified": "2024-04-04T12:41:44.279Z",
        "size": 5017,
        "formattedSize": "4.9 KB"
      }
    },
    {
      "id": "get-started\\testing-with-react-testing-libraryx",
      "contents": "\r\n## About React Testing Library\r\n\r\n<p>\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://testing-library.com/docs/react-testing-library/intro\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    React Testing Library (RTL)\r\n  </ic-link>{\" \"}\r\n  provides a set of utility functions, which interrogate the DOM tree, in order to\r\n  build maintainable React tests. The recommended approach with React Testing\r\n  Library is to test React components based on how the users view the components\r\n  rather than the implementation of the component. For example, a user would\r\n  view a button by the label 'Add', so the library provides a method called{\" \"}\r\n  <code style={{ backgroundColor: \"#EEEFF0\" }}>getByText()</code> to facilitate\r\n  that.\r\n</p>\r\n\r\n## Shadow DOM Testing Library\r\n\r\n<p>\r\n  It is not possible to exclusively use RTL to test{\" \"}\r\n  <code style={{ backgroundColor: \"#EEEFF0\" }}>@ukic/react</code> components as\r\n  they are React-wrapped web components, which use the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    shadow DOM\r\n  </ic-link>{\" \"}\r\n  (<code style={{ backgroundColor: \"#EEEFF0\" }}>&lt;ShadowRoot&gt;</code>). RTL\r\n  does not provide utility functions that traverse beyond the shadow DOM. With\r\n  the addition of{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://github.com/KonnorRogers/shadow-dom-testing-library\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Shadow DOM Testing Library\r\n  </ic-link>\r\n  , elements within the shadow DOM can be selected and then interacted with by using\r\n  methods provided by RTL. Shadow DOM Testing Library provides functions with 'Shadow'\r\n  prefixed to the query type (for example, <code style={{ backgroundColor: \"#EEEFF0\" }}>\r\n    getByShadowText()\r\n  </code>\r\n  ).\r\n</p>\r\n\r\n```tsx\r\n// DOM tree for IcAlert.\r\n<ic-alert class=\"dark hydrated\" message=\"Foo\" role=\"alert\">\r\n  <ShadowRoot>\r\n    ...\r\n    <ic-typography class=\"ic-typography-body hydrated\">\r\n      <ShadowRoot>\r\n        <slot />\r\n      </ShadowRoot>\r\n      Foo\r\n    </ic-typography>\r\n    ...\r\n  </ShadowRoot>\r\n</ic-alert>\r\n```\r\n\r\n```tsx\r\nimport { IcAlert } from \"@ukic/react\";\r\nimport { render, waitFor } from \"@testing-library/react\";\r\nimport { screen } from \"shadow-dom-testing-library\";\r\n\r\nit(\"renders IcAlert\", async () => {\r\n  const { getByRole /* container */ } = render(<IcAlert message=\"Foo\" />);\r\n\r\n  // Wait for IcAlert to hydrate before continuing to view the full IcAlert DOM tree.\r\n  await waitFor(() => {\r\n    expect(getByRole(\"alert\")).toHaveClass(\"hydrated\");\r\n\r\n    // 'container' can also be used with querySelector to select ic-alert.\r\n    // expect(container.querySelector('ic-alert')).toHaveClass('hydrated');\r\n  });\r\n\r\n  expect(await screen.findByShadowText(\"Foo\")).toBeInTheDocument();\r\n});\r\n```\r\n\r\n## Examples with IcSelect and IcTextField\r\n\r\nBelow are examples on testing `@ukic/react` components using RTL and Shadow DOM Testing Library with `IcSelect` and `IcTextField`.\r\n\r\n### IcSelect\r\n\r\n```jsx\r\n// Select.tsx\r\nimport { useState } from \"react\";\r\nimport { IcSelect } from \"@ukic/react\";\r\nimport { IcMenuOption } from \"@ukic/web-components\";\r\n\r\ninterface IcMenuOptions {\r\n  options: IcMenuOption[];\r\n}\r\n\r\nconst Select = ({ options }: IcMenuOptions) => {\r\n  const [selectedValue, setSelectedValue] =\r\n    (useState < string) | (undefined > undefined);\r\n  return (\r\n    <IcSelect\r\n      label=\"Title\"\r\n      onIcChange={(e) => setSelectedValue(e.detail.value)}\r\n      options={options}\r\n      value={selectedValue}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Select;\r\n```\r\n\r\n```jsx\r\n// Select.test.tsx\r\nimport { fireEvent, render, waitFor } from '@testing-library/react';\r\nimport { screen } from 'shadow-dom-testing-library';\r\nimport Select from './components/Select';\r\nimport userEvent from '@testing-library/user-event';\r\n\r\nconst options = [\r\n    { label: 'Americano', value: 'americano' },\r\n    { label: 'Espresso', value: 'espresso' },\r\n]\r\n\r\ndescribe('IcSelect', () => {\r\n    it('renders', async () => {\r\n        const { container } = render(<Select options={options} />);\r\n        // Using 'container' to query the render and select 'ic-select'.\r\n        const select = container.querySelector('ic-select');\r\n\r\n        // Make sure component is hydrated before moving to the next action.\r\n        await waitFor(() => {\r\n            expect(select).toHaveClass('hydrated');\r\n        });\r\n\r\n        /**\r\n         * 'Shallow' sets the selector to go one <ShadowRoot> level deep.\r\n         * There are multiple instances where 'Title' is selected due to aria properties\r\n         * so one level deep is enough to select the label.\r\n         */\r\n        expect(screen.getByShadowText('Title')).toBeInTheDocument();\r\n    })\r\n\r\n    it(\"should render the correct number of options in the menu\", async () => {\r\n        const { container } = render(<Select options={options} />);\r\n        const select = container.querySelector('ic-select');\r\n\r\n        await waitFor(() => {\r\n            expect(select).toHaveClass('hydrated');\r\n        });\r\n\r\n        const allOptions = await screen.findAllByShadowRole('option');\r\n\r\n        expect(await (allOptions).length).toBe(2);\r\n    });\r\n\r\n    it('should change select value using userEvent', async () => {\r\n        // Using testing-library/user-events to select an option from ic-select.\r\n        const user = userEvent.setup();\r\n        const { container } = render(<Select options={options} />);\r\n        const select = container.querySelector('ic-select') as HTMLIcSelectElement;\r\n\r\n        await waitFor(() => {\r\n            expect(select).toHaveClass('hydrated');\r\n        });\r\n\r\n        // ic-select uses a button element to trigger the dropdown so using the button role as the selector.\r\n        const btn = await screen.findByShadowRole('button');\r\n        await user.click(btn);\r\n\r\n        // Selecting 'Espresso' from the option list.\r\n        const espressoOption = await screen.getByShadowLabelText('Espresso');\r\n        await user.click(espressoOption);\r\n\r\n        expect(select).toHaveValue('espresso');\r\n    })\r\n\r\n    it('should change select value using fireEvent', async () => {\r\n        const { container } = render(<Select options={options} />);\r\n        const select = container.querySelector('ic-select') as HTMLIcSelectElement;\r\n\r\n        await waitFor(() => {\r\n            expect(select).toHaveClass('hydrated');\r\n        });\r\n\r\n        // Invoking icChange method to select an item from the option list.\r\n        fireEvent(select, new CustomEvent('icChange', { detail: { value: 'americano' }}));\r\n\r\n        expect(select).toHaveValue('americano');\r\n    });\r\n})\r\n\r\n```\r\n\r\n### IcTextField\r\n\r\n```jsx\r\n// TextField.tsx\r\nimport { IcTextField } from \"@ukic/react\";\r\nimport { useState } from \"react\";\r\n\r\ninterface NameProps {\r\n  name: string;\r\n}\r\n\r\nconst TextField = ({ name }: NameProps) => {\r\n  const [value, setTextFieldValue] = useState < string > \"\";\r\n\r\n  const handleInput = (event: CustomEvent) => {\r\n    setTextFieldValue(event?.detail?.value);\r\n  };\r\n\r\n  return <IcTextField label={name} onIcInput={handleInput} value={value} />;\r\n};\r\n\r\nexport default TextField;\r\n```\r\n\r\n```jsx\r\n// TextField.test.tsx\r\nimport { render, waitFor } from '@testing-library/react';\r\nimport { screen, findByShadowLabelText } from 'shadow-dom-testing-library';\r\nimport TextField from '../components/TextField';\r\nimport userEvent from '@testing-library/user-event';\r\n\r\ndescribe('IcTextField', () => {\r\n    it('should change textField value while typing', async () => {\r\n        const user = userEvent.setup();\r\n        const { container } = render(<TextField name='Foo' />);\r\n        const textField = container.querySelector('ic-text-field') as HTMLIcTextFieldElement;\r\n\r\n        await waitFor(() => {\r\n            expect(textField).toHaveClass('hydrated');\r\n        });\r\n\r\n        const input = await findByShadowLabelText(textField, 'Foo');\r\n\r\n        // Using the userEvent 'type' method to input a value into IcTextField.\r\n        await user.type(input, 'Bar');\r\n\r\n        expect(textField).toHaveValue('Bar');\r\n    });\r\n})\r\n```\r\n",
      "path": "/get-started/test-components/testing-with-react-testing-library",
      "date": "2023-02-16",
      "title": "Testing with React Testing Library",
      "subTitle": "How to test our components with React Testing Library.",
      "navPriority": 3,
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/testing-with-react-testing-library.mdx",
      "meta": {
        "relativePath": "get-started\\testing-with-react-testing-library.mdx",
        "createdAt": "2024-06-04T07:48:35.044Z",
        "lastModified": "2024-06-04T07:48:35.044Z",
        "size": 8531,
        "formattedSize": "8.3 KB"
      }
    },
    {
      "id": "get-started\\vuex",
      "contents": "\r\nimport { IcAlert } from \"@ukic/react\";\r\n\r\n<IcAlert\r\n  variant=\"info\"\r\n  heading=\"Version check\"\r\n  message=\"These instructions were used with Vue version 3.2.31.\"\r\n/>\r\n\r\n## Step one\r\n\r\nIn the root of your project:\r\n\r\n```shell\r\n// using npm\r\nnpm install @ukic/web-components @ukic/fonts\r\n\r\n// using yarn\r\nrm package-lock.json\r\nyarn add @ukic/web-components @ukic/fonts\r\n```\r\n\r\n## Step two\r\n\r\nAdd options into your relevant config.\r\n\r\n### In-Browser config\r\n\r\n```jsx\r\n// Only works if using in-browser compilation.\r\napp.config.compilerOptions.isCustomElement = (tag) => tag.includes(\"-\");\r\n```\r\n\r\n### Vite config\r\n\r\n```jsx\r\n// vite.config.js\r\nimport vue from \"@vitejs/plugin-vue\";\r\n\r\nexport default {\r\n  plugins: [\r\n    vue({\r\n      template: {\r\n        compilerOptions: {\r\n          // treat all tags with a dash as custom elements\r\n          isCustomElement: (tag) => tag.includes(\"-\"),\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n};\r\n```\r\n\r\n### Vue CLI config\r\n\r\n```jsx\r\n// vue.config.js\r\nmodule.exports = {\r\n  chainWebpack: (config) => {\r\n    config.module\r\n      .rule(\"vue\")\r\n      .use(\"vue-loader\")\r\n      .tap((options) => ({\r\n        ...options,\r\n        compilerOptions: {\r\n          // treat any tag that starts with ic- as custom elements\r\n          isCustomElement: (tag) => tag.startsWith(\"ic-\"),\r\n        },\r\n      }));\r\n  },\r\n};\r\n```\r\n\r\n## Step three\r\n\r\nImport defineCustomElements in your `main.js` file.\r\n\r\n```jsx\r\nimport { defineCustomElements } from \"@ukic/web-components/loader\";\r\n```\r\n\r\n## Step four\r\n\r\nCall defineCustomElements at the bottom of `main.js`.\r\n\r\n```jsx\r\n//other configuration\r\n...\r\ndefineCustomElements();\r\n```\r\n\r\n## Step five\r\n\r\nAdd the following into the top level CSS file for your project.\r\n\r\n```css\r\n@import \"@ukic/fonts/dist/fonts.css\";\r\n@import \"@ukic/web-components/dist/core/core.css\";\r\n```\r\n\r\n<br />\r\n\r\n<p>\r\n  In order to be rendered consistently across browsers and in line with modern\r\n  standards, each of the ICDS components uses styles from a global CSS file\r\n  based on{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://necolas.github.io/normalize.css/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Normalize.css\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\nIf you would like to import these styles to apply them to the rest of your project and slotted elements used within any of the ICDS components, add the following into the top level CSS file as well.\r\n\r\n```css\r\n@import \"@ukic/web-components/dist/core/normalize.css\";\r\n```\r\n\r\n## Step six\r\n\r\nDeclare and use components in your file.\r\n\r\n```html\r\n<ic-status-tag label=\"Neutral\"></ic-status-tag>\r\n```\r\n",
      "path": "/get-started/install-components/vue",
      "navPriority": 4,
      "date": "2024-04-22",
      "title": "Vue",
      "subTitle": "How to use the components in a Vue-based application.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/vue.mdx",
      "meta": {
        "relativePath": "get-started\\vue.mdx",
        "createdAt": "2024-05-20T13:20:43.365Z",
        "lastModified": "2024-05-20T13:20:43.365Z",
        "size": 2885,
        "formattedSize": "2.8 KB"
      }
    },
    {
      "id": "get-started\\web-componentsx",
      "contents": "\r\n## Step one\r\n\r\nIn the root of your project:\r\n\r\n```shell\r\n// using npm\r\nnpm install @ukic/web-components @ukic/fonts\r\n\r\n// using yarn\r\nrm package-lock.json\r\nyarn add @ukic/web-components @ukic/fonts\r\n```\r\n\r\n## Step two\r\n\r\nImport `defineCustomElements` in your file. Where you do this will depend on your framework or build tool, but the format is as follows:\r\n\r\n```jsx\r\nimport { defineCustomElements } from \"@ukic/web-components/loader\";\r\n```\r\n\r\n## Step three\r\n\r\nCall `defineCustomElements` in your file. Again, the file you edit will depend on your framework or build tool, but the format is as follows:\r\n\r\n```jsx\r\n//other code\r\n...\r\ndefineCustomElements();\r\n```\r\n\r\n## Step four\r\n\r\nDepending on your framework or build tool, this can be included in either a CSS file or Javascript\\Typescript file.\r\n\r\nAdd the following into the top level CSS file for your project.\r\n\r\n```css\r\n@import \"@ukic/fonts/dist/fonts.css\";\r\n@import \"@ukic/web-components/dist/core/core.css\";\r\n```\r\n\r\n<br />\r\n\r\n<p>\r\n  In order to be rendered consistently across browsers and in line with modern\r\n  standards, each of the ICDS components uses styles from a global CSS file\r\n  based on{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://necolas.github.io/normalize.css/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Normalize.css\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\nIf you would like to import these styles to apply them to the rest of your project and slotted elements used within any of the ICDS components, add the following into the top level CSS file as well.\r\n\r\n```css\r\n@import \"@ukic/web-components/dist/core/normalize.css\";\r\n```\r\n\r\n## Step five\r\n\r\nIn your HTML, you can now declare a component as follows:\r\n\r\n```jsx\r\n<ic-status-tag label=\"Neutral\"></ic-status-tag>\r\n```\r\n\r\n## Webpack example\r\n\r\nWebpack is a tool for bundling web applications. This example assumes the following config in `webpack.config.js`. For more detailed information on Webpack configuration, please refer to the Webpack documentation.\r\n\r\n```jsx\r\nconst path = require(\"path\");\r\n\r\nmodule.exports = {\r\n  entry: \"./src/index.js\",\r\n  output: {\r\n    filename: \"main.js\",\r\n    path: path.resolve(__dirname, \"dist\"),\r\n  },\r\n  devServer: {\r\n    static: \"./dist\",\r\n  },\r\n  mode: \"development\",\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/i,\r\n        use: [\"style-loader\", \"css-loader\"],\r\n      },\r\n    ],\r\n  },\r\n};\r\n```\r\n\r\n### Step one\r\n\r\n```shell\r\n// using npm\r\nnpm install @ukic/web-components @ukic/fonts\r\n\r\n// using yarn\r\nrm package-lock.json\r\nyarn add @ukic/web-components @ukic/fonts\r\n\r\n```\r\n\r\n### Step two\r\n\r\nIn the file defined as the `entry` in the `webpack.config.js`, add the following:\r\n\r\n```jsx\r\n//src/index.js\r\nimport \"@ukic/fonts/dist/fonts.css\";\r\nimport \"@ukic/web-components/dist/core/core.css\";\r\n\r\nimport { defineCustomElements } from \"@ukic/web-components/loader\";\r\ndefineCustomElements();\r\n```\r\n\r\n### Step three\r\n\r\nYou can now use any of the ICDS components so long as your HTML page includes the output file defined in your `webpack.config.js`. For example, including an [ic-status-tag](/components/status-tag) below:\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"utf-8\" />\r\n    <title>Getting Started with ICDS</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"dist/main.js\"></script>\r\n    <ic-status-tag label=\"Neutral\"></ic-status-tag>\r\n  </body>\r\n</html>\r\n```\r\n",
      "path": "/get-started/install-components/web-components",
      "navPriority": 5,
      "date": "2024-04-22",
      "title": "Web components",
      "subTitle": "How to use the web components.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/web-components.mdx",
      "meta": {
        "relativePath": "get-started\\web-components.mdx",
        "createdAt": "2024-05-20T13:20:43.365Z",
        "lastModified": "2024-05-20T13:20:43.365Z",
        "size": 3665,
        "formattedSize": "3.6 KB"
      }
    },
    {
      "id": "icds\\accessibility-statementx",
      "contents": "\r\n## Our Accessibility Statement\r\n\r\nThis accessibility statement applies to the \"Intelligence Community Design System\" hosted at design.sis.gov.uk.\r\n\r\nThis app is managed by the [Secret Intelligence Service (SIS)](https://sis.gov.uk), which is also known as MI6.\r\n\r\nWe want as many people as possible to be able to use this app. That means we’ve built the app so that you can:\r\n\r\n- Zoom in up to 500% without the text spilling off the screen.\r\n- Navigate all of the app using just a keyboard.\r\n- Navigate all of the app using speech recognition software.\r\n- Use all of the app with a screen reader (including the most recent versions of JAWS and VoiceOver).\r\n- Change most colours, contrast levels and fonts (using your browser).\r\n\r\nWe've also made the text in the app as simple as possible to understand.\r\n\r\n[AbilityNet](https://mcmw.abilitynet.org.uk) has advice on making your device easier to use if you have different needs. Search your intranet or contact your IT Service Desk if you're using an offline system.\r\n\r\n## How accessible this app is\r\n\r\nWe are confident that this app is accessible.\r\n\r\n### Images and diagrams\r\n\r\nThe Design System relies on images and diagrams to describe how designs and UI components should look. Some users may find limited value in the 'alt' (or alternative) text that we've been able to provide for these images.\r\n\r\nThis is especially true if the alternative text is describing colour or layout.\r\n\r\nSome images and diagrams in the Design System purposefully show 'bad' or 'non-accessible' examples of designs or UI components.\r\n\r\n## Reporting accessibility problems with this app\r\n\r\nWe're always looking to improve the accessibility of the Design System. If you find any problems not listed in this Statement or think we're not meeting your needs or the needs of others, consider contacting us using the details below.\r\n\r\n## Enforcement procedure\r\n\r\nThe Equality and Human Rights Commission (EHRC) is responsible for enforcing the Public Sector Bodies (Websites and Mobile Applications) (No. 2) Accessibility Regulations 2018 (the 'accessibility regulations').\r\n\r\nThe responsible organisation for the Design System is SIS.\r\n\r\nIf you aren't satisfied with the accessibility of this app, consider contacting us using the details below.\r\n\r\nIf you’re not happy with how we respond to your complaint, contact the [Equality Advisory and Support Service (EASS)](https://www.equalityadvisoryservice.com/).\r\n\r\n## Contacting us\r\n\r\nUnfortunately, it can be hard to contact any one of the Intelligence Community organisations (SIS, GCHQ and MI5).\r\n\r\nThere are a few ways you can contact us, and we're trying to make it easier. You can contact us using:\r\n\r\n- [Raise an issue on GitHub](https://github.com/mi6/ic-design-system/issues).\r\n- Internal teams can use the service desk if they prefer and we'll add the issue to GitHub.\r\n- Write to P.O. Box 1300, London SE1 1BD, marking your envelope ‘ICDS Website Accessibility’.\r\n\r\nIt isn't possible to visit us in person.\r\n\r\n## Technical information about this app's accessibility\r\n\r\nSIS is committed to making this app accessible, in accordance with the [Public Sector Bodies (Websites and Mobile Applications) (No. 2) Accessibility Regulations 2018](https://www.legislation.gov.uk/uksi/2018/952/contents/made).\r\n\r\n### Compliance status\r\n\r\nThis app is fully compliant with the Web Content Accessibility Guidelines version 2.2 AA standard.\r\n\r\n### How we tested this app\r\n\r\nThis app was last tested on 17 January 2024. The testing was carried out by Accessibility Specialists from SIS and [GCHQ](https://gchq.gov.uk).\r\n\r\nWe tested all types of pages within the app, including documentation and component pages.\r\n\r\nWe tested:\r\n\r\n- Our website at https://design.sis.gov.uk.\r\n- Each of the published ICDS Components.\r\n\r\nYou can read the <a href=\"/icds-accessibility-conformance-report-17-01-24.docx\" target=\"_blank\">full accessibility test report</a>. This report is called an 'Accessibility Conformance Report'. It's created by filling in a 'Voluntary Product Accessibility Template ®' (VPAT). The VPAT tests if the app complies with WCAG 2.2 criteria.\r\n\r\n## Non-accessible content\r\n\r\nThe content listed below is non-accessible for the following reasons.\r\n\r\n### Content that's not within the scope of the accessibility regulations\r\n\r\nSome images and diagrams in the Design System purposefully show 'bad' or 'non-accessible' examples of designs or UI components. Because they are core to the service that the Design System is providing, they are exempt from the accessibility regulations.\r\n\r\n## Disproportionate burden\r\n\r\nWe aren't claiming a disproportionate burden to making any part of the Design System compliant to the accessibility regulations.\r\n\r\n## What we're doing to improve accessibility\r\n\r\nWe make sure any new features and content added to the Design System are compliant with the accessibility regulations. All new features are tested against WCAG 2.2 Level AA criteria.\r\n\r\nWe do this through a combination of manual browser tests, screen reader tests and automated build-time testing.\r\n\r\n## Preparation of this accessibility statement\r\n\r\nThis statement was prepared on 26 March 2021. It was last updated on 18 January 2024.\r\n\r\nThis app was last tested on 17 January 2024. The testing was carried out by Accessibility Specialists from SIS and GCHQ.\r\n\r\nYou can read the <a href=\"/icds-accessibility-conformance-report-17-01-24.docx\" target=\"_blank\">full accessibility test report</a>.\r\n",
      "path": "/icds/accessibility-statement",
      "date": "2024-04-15",
      "title": "Accessibility Statement",
      "subTitle": "Accessibility Statement for the Intelligence Community Design System.",
      "meta": {
        "relativePath": "icds\\accessibility-statement.mdx",
        "createdAt": "2024-06-04T07:48:35.045Z",
        "lastModified": "2024-06-04T07:48:35.045Z",
        "size": 5667,
        "formattedSize": "5.5 KB"
      }
    },
    {
      "id": "icds\\cookies-policyx",
      "contents": "\r\nimport InlineCookiesManager from \"../../static/components/InlineCookiesManager\";\r\nimport CookiesData from \"../../static/components/CookiesData\";\r\n\r\nexport const cookiesHeaders = [\"Provider\", \"Domain\", \"Description\", \"Cookies\"];\r\nexport const essentialCookies = [\r\n  {\r\n    provider: \"design.sis.gov.uk\",\r\n    domain: \"design.sis.gov.uk\",\r\n    desc: \"This cookie records whether or not the cookie notification pop-up has been acknowledged by the user, including whether or not you permit us to use Google Analytics (GA).\",\r\n    cookies: \"ICDSPREF\",\r\n  },\r\n  {\r\n    provider: \"Google Analytics\",\r\n    domain: \"sis.gov.uk\",\r\n    desc: \"These cookies are generated from our parent site, sis.gov.uk. These cookies are used to collect essential performance data so that we can review performance of the website, including aspects such as number of visitors and which pages are most popular.\",\r\n    cookies: \"_ga, _gid, _gcl_au\",\r\n  },\r\n  {\r\n    provider: \"Google Doubleclick\",\r\n    domain: \"sis.gov.uk\",\r\n    desc: \"These cookies are used to help us to monitor which digital advertising channels are most effective. By recording which job adverts are generating the most interest, we are able to make better choices about where to advertise.\",\r\n    cookies: \"APISID, SSID, NID, PREF, drt, SID, SAPISID, id, HSID\",\r\n  },\r\n  {\r\n    provider: \"OneTrust\",\r\n    domain: \"sis.gov.uk\",\r\n    desc: \"These cookies are generated from our parent site, sis.gov.uk. These cookies record whether or not the cookie notification pop-up that appears on our parent site has been acknowledged by the user and records whether consent for the cookies have been given.\",\r\n    cookies: \"OptanonConsent, OptanonAlertBoxClosed\",\r\n  },\r\n  {\r\n    provider: \"Cloudflare\",\r\n    domain: \"sis.gov.uk\",\r\n    desc: \"This cookie is generated from our parent site, sis.gov.uk. It helps manage incoming traffic to our parent site and allows for better visibility on the origin of a particular request.\",\r\n    cookies: \"_cfruid\",\r\n  },\r\n];\r\nexport const optionalCookies = [\r\n  {\r\n    provider: \"Google Analytics\",\r\n    domain: \"design.sis.gov.uk\",\r\n    desc: \"These cookies are used to collect essential performance data so that we can review performance of the website, including aspects such as number of visitors and which pages are most popular.\",\r\n    cookies: \"_ga, _gat\",\r\n  },\r\n];\r\n\r\n## About cookies\r\n\r\nA cookie is a file stored on your device that contains an identifier (usually a string of letters and numbers) when you access a website. When you visit the same website again, the cookies stored on your device are accessed by code on the website. This means that the website can recognise the device being used and provide useful features, such as remembering your preferences or keeping you logged in.\r\n\r\nCookies may be either 'persistent cookies' or 'session cookies'. A persistent cookie will be stored by a web browser and will remain valid until its set expiry date, unless deleted by the user before the expiry date. A session cookie, on the other hand, will expire at the end of the user session, when the web browser is closed.\r\n\r\nCookies that are set by the website owner are called 'first party cookies'. Cookies that are set by another platform or service are called 'third party cookies'. These tend to be used for additional services, such as advertising or analytics.\r\n\r\nCookies do not typically contain any information that personally identifies a user, but personal information that we store about you may be linked to the information stored in and obtained from cookies.\r\n\r\nWe use cookies on this website to help improve the performance of our digital advertising and to collect basic data about how the website is used so that we can make decisions about how to improve it.\r\n\r\n## Summary of cookies used by this website\r\n\r\n### Essential cookies\r\n\r\nEssential cookies do things like remember the notifications you’ve seen so we don't show them to you again, and to adhere to your cookie preferences. They are always present and help us host the website.\r\n\r\n<CookiesData\r\n  headers={cookiesHeaders}\r\n  data={essentialCookies}\r\n  caption=\"Essential Cookies Table\"\r\n/>\r\n\r\n## Manage your cookie preferences\r\n\r\n<InlineCookiesManager />\r\n<br />\r\n<br />\r\n\r\nWe use optional cookies from Google Analytics (GA) to collect data that we use to improve your experience of our website. We do this to help make sure the site is meeting the needs of its users and to help us make improvements.\r\n\r\nFor more information, please read [Google's overview of privacy and safeguarding data](https://support.google.com/analytics/answer/6004245), and should you wish, you can [opt-out of Google Analytics cookies](https://tools.google.com/dlpage/gaoptout).\r\n\r\n<CookiesData\r\n  headers={cookiesHeaders}\r\n  data={optionalCookies}\r\n  caption=\"Optional Cookies Table\"\r\n/>\r\n\r\n## Limitations and amendments\r\n\r\nThis statement only covers the Design System website at design.sis.gov.uk. This statement does not cover third party websites to which we may link. It does not cover the main SIS website.\r\n\r\n## Changes to this notice\r\n\r\nWe may change this privacy notice. When we make changes to this notice, the 'last updated' date at the bottom of this page will also change. Any changes to this privacy notice will apply to you and your data immediately. If these changes affect how your personal data is processed, SIS will take reasonable steps to make sure you know.\r\n",
      "path": "/icds/cookies-policy",
      "date": "2022-11-20",
      "title": "Cookies Policy",
      "subTitle": "Cookies Policy for the Intelligence Community Design System.",
      "meta": {
        "relativePath": "icds\\cookies-policy.mdx",
        "createdAt": "2024-06-04T07:48:35.046Z",
        "lastModified": "2024-06-04T07:48:35.046Z",
        "size": 5590,
        "formattedSize": "5.5 KB"
      }
    },
    {
      "id": "icds\\indexx",
      "contents": "\r\n## Our Policy Documents\r\n\r\n- [Accessibility Statement](/icds/accessibility-statement) - A summary of the Design System's compliance to the Web Content Accessibility Guidelines.\r\n- [Cookies Policy](/icds/cookies-policy) - A breakdown of the cookies that the ICDS uses to operate.\r\n- [Privacy Policy](/icds/privacy-policy) - A summary of the user information that the ICDS collects.\r\n",
      "path": "/icds",
      "date": "2023-02-03",
      "title": "Documents Overview",
      "subTitle": "This section contains documents regarding the Design System website and your use of it.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/icds/index.mdx",
      "meta": {
        "relativePath": "icds\\index.mdx",
        "createdAt": "2024-04-04T12:41:44.279Z",
        "lastModified": "2024-04-04T12:41:44.279Z",
        "size": 670,
        "formattedSize": "670 Bytes"
      }
    },
    {
      "id": "icds\\privacy-policyx",
      "contents": "\r\n## Our Privacy Policy\r\n\r\nThe [Intelligence Community Design System](/) brings together experts and users from across [SIS (also known as MI6)](https://sis.gov.uk), [MI5](https://www.mi5.gov.uk), [GCHQ](https://gchq.gov.uk) and a number of partners. We've open-sourced the Design System to give an insight into what we do, and work with experts across a number of topics.\r\n\r\nTo do this, we work with contributors who don't work for or with SIS, MI5, GCHQ or our partners. That means we may need to collect some personal data from them.\r\n\r\nThe Design System is run by SIS, MI5 and GCHQ, but SIS is the responsible entity for the website.\r\n\r\n[Read SIS's entry in the Data Protection Public Register for accurate contact details](https://ico.org.uk/ESDWebPages/Entry/ZA455227).\r\n\r\n## What data we collect on the Design System\r\n\r\n### Contributing on GitHub\r\n\r\nIf you choose to contribute to the Design System using your GitHub account, you will associate your GitHub identity with us.\r\n\r\nWhen you contribute, the data we might therefore collect includes:\r\n\r\n- Your name.\r\n- User profile on GitHub and associated tools and platforms.\r\n\r\nIf you choose to submit a 'pull request' (code contribution) to the Design System using your GitHub account, you will be asked to sign our Contributor's License Agreement.\r\n\r\nWhere you provide consent, the data we collect includes:\r\n\r\n- Your name.\r\n- Your email address.\r\n- User profile on GitHub and associated tools and platforms.\r\n- Your consent to be contacted (or not) for career opportunities.\r\n- Your consent to be contacted (or not) regarding a token of gratitude.\r\n\r\nFor more information, [please read GitHub's Privacy Statement](https://docs.github.com/en/site-policy/privacy-policies/github-privacy-statement).\r\n\r\n## How long we keep your data\r\n\r\nWe will only keep your personal data for as long as:\r\n\r\n- The law requires us to.\r\n- We need for the purposes listed above.\r\n\r\n## Providers we use\r\n\r\nSIS does not store your personal data we collect on our own services. We use data processors who provide us with:\r\n\r\n- Software collaboration platforms when you share research, feedback or make a contribution.\r\n- Web analytics services.\r\n\r\nWe take all reasonable steps to make sure your data on these platforms is secure. For more information, read GitHub and Google's privacy statements using the links above.\r\n\r\nWe will not:\r\n\r\n- Sell or rent your data to third parties.\r\n- Share your data with third parties for marketing purposes.\r\n\r\nWe will share your data if we’re required to do so by law &ndash; for example, by court order, or to prevent fraud or other crime.\r\n\r\n## Questions and complaints\r\n\r\nSIS, along with MI5 and GCHQ, is one of the UK Intelligence Agencies. SIS runs this Design System website.\r\n\r\nFor full information on the Privacy Policy of each Intelligence Agency, please see the respective page:\r\n\r\n- [SIS Privacy Policy](https://www.sis.gov.uk/privacy-policy.html)\r\n- [MI5 Privacy Policy](https://www.mi5.gov.uk/privacy-policy)\r\n- [GCHQ Privacy Policy](https://www.gchq.gov.uk/section/about-this-website/privacy)\r\n\r\n## Limitations and amendments\r\n\r\nThis statement only covers the Design System website at design.sis.gov.uk. This statement does not cover third party websites to which we may link. It does not cover the main SIS website.\r\n\r\n## Changes to this notice\r\n\r\nWe may change this privacy notice. When we make changes to this notice, the 'last updated' date at the bottom of this page will also change. Any changes to this privacy notice will apply to you and your data immediately. If these changes affect how your personal data is processed, SIS will take reasonable steps to make sure you know.\r\n",
      "path": "/icds/privacy-policy",
      "date": "2022-11-15",
      "title": "Privacy Policy",
      "subTitle": "Privacy Policy for the Intelligence Community Design System.",
      "meta": {
        "relativePath": "icds\\privacy-policy.mdx",
        "createdAt": "2024-06-04T07:48:35.048Z",
        "lastModified": "2024-06-04T07:48:35.048Z",
        "size": 3836,
        "formattedSize": "3.7 KB"
      }
    },
    {
      "id": "patterns\\app-errorsx",
      "contents": "\r\nimport { IcAlert, IcTypography, IcLink } from \"@ukic/react\";\r\n\r\n<IcAlert\r\n  heading=\"Pattern in development\"\r\n  message=\"We are refreshing this pattern to include new guidance and code.\"\r\n  variant=\"info\"\r\n/>\r\n\r\n## When to use\r\n\r\nDisplay an app error when:\r\n\r\n- When you need to make users aware that something’s not working as expected.\r\n- When a system is partially functioning.\r\n- When data sources are unavailable.\r\n- Where an incoming data source SLA has been breached.\r\n- When an app is unavailable for scheduled system maintenance.\r\n\r\n## When not to use\r\n\r\n- Don't use app errors for [form validation feedback](/patterns/form-validation).\r\n- Don't use a [toast](/components/toast) for errors because a user might not notice the error message.\r\n\r\n## Usage\r\n\r\nApp errors should bring sufficient context to allow the user to understand whether they can still use the app, and they should contain resolution information.\r\n\r\nIf possible, manage users' expectations on how long something will take to fix and offer workarounds (if available).\r\n\r\nUse words that describe the cause of the error and, where possible, give the user a way to resolve it.\r\n\r\n### Alerts\r\n\r\nUse an alert if only part of an app (such as an asynchronous component) has a problem.\r\n\r\n<ComponentPreview icds>\r\n  <IcAlert\r\n    heading=\"Something went wrong\"\r\n    message=\"The app couldn't connect to the server to download the latest information. Please check your connection or contact your local IT Service Desk.\"\r\n    variant=\"error\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Dialogs and modals\r\n\r\nUse dialogs for critical problems where you need to preserve information on the page.\r\n\r\nFor example, for a network problem when trying to save information and to prevent interaction with the rest of the app.\r\n\r\n### Full page\r\n\r\nUse full-page errors for the most critical problems, especially those that can't be resolved.\r\n\r\nFor example, use a full-page error message when content is missing or when the app fails to load.\r\n\r\n<ComponentPreview noPadding left>\r\n  <div style={{ padding: \"36px\" }}>\r\n    <IcTypography variant=\"h1\" component=\"h3\" applyVerticalMargins>\r\n      LATTE STREET is unavailable\r\n    </IcTypography>\r\n    <IcTypography variant=\"body\" applyVerticalMargins>\r\n      This app is currently unavailable whilst we carry out an update.\r\n    </IcTypography>\r\n    <IcTypography variant=\"caption\">\r\n      Please check the <IcLink href=\"#\">downtime calendar</IcLink> and try again\r\n      later.\r\n    </IcTypography>\r\n  </div>\r\n</ComponentPreview>\r\n\r\n### Persistent banner\r\n\r\nUse a persistent banner at the top of an app experiencing a system or data problem. If multiple problems exist, group them into one banner.\r\n\r\nLink to available support pages and provide resolution information (if available) to provide assurance and transparency to your users.\r\n\r\nBe careful to keep persistent banners visually distinct when used alongside classification banners.\r\n\r\n### Email\r\n\r\nUse an email to notify users of a system being down, including for scheduled maintenance.\r\n\r\n### Tone of voice\r\n\r\nWrite your error message with short, jargon-free language to inform your users and consider that errors can increase anxiety for people. An error shouldn't blame the user.\r\n\r\nUse words that describe the cause of the error and, where possible, give the user a way to resolve it.\r\n\r\n## Accessibility considerations\r\n\r\nWhen building or using this pattern:\r\n\r\n- Make sure components for app errors are announced to screen readers and other assistive technology.\r\n- Don't use colour on its own to convey the app error. Always include text or iconography.\r\n- Consider that errors can increase anxiety for people. An error shouldn't blame the user.\r\n",
      "path": "/patterns/app-errors",
      "navPriority": 2,
      "date": "2022-11-15",
      "title": "App errors",
      "subTitle": "App errors are shown when a problem occurs that the user has no control over.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/patterns/deprecated-patterns/app-errors.mdx",
      "meta": {
        "relativePath": "patterns\\app-errors.mdx",
        "createdAt": "2024-06-04T07:48:35.049Z",
        "lastModified": "2024-06-04T07:48:35.049Z",
        "size": 4038,
        "formattedSize": "3.9 KB"
      }
    },
    {
      "id": "patterns\\form-layoutx",
      "contents": "\r\nimport { IcAlert } from \"@ukic/react\";\r\nimport basicFormGood from \"./images/basic-form-good.png\";\r\nimport basicFormBad from \"./images/basic-form-bad.png\";\r\nimport basicFormBad2 from \"./images/basic-form-bad-2.png\";\r\nimport stepper1 from \"./images/stepper1.png\";\r\nimport stepper2 from \"./images/stepper2.png\";\r\n\r\n<IcAlert\r\n  heading=\"Pattern in development\"\r\n  message=\"We are refreshing this pattern to include new guidance and code.\"\r\n  variant=\"info\"\r\n/>\r\n\r\n## Basic form\r\n\r\nThis form layout involves displaying multiple form fields on one page.\r\n\r\nTry to limit the number of fields on a page to about five or six.\r\n\r\nAlways keep the layout of the form simple by preferring a single column of fields.\r\n\r\nForm fields should match the size of the answer you expect to each question &ndash; such as a short, single-line text field for a first name, or a long, multi-line text field for a paragraph.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={basicFormGood}\r\n    imageAlt=\"A good example of a form with fields that match the size of the expected input and are displayed in a single column.\"\r\n    state=\"good\"\r\n    caption=\"Use fields that reflect the size of the expected input to make it easier to understand what each question is asking for. The whole width of the page does not need to be filled.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={basicFormBad}\r\n    imageAlt=\"A bad example of a form with fields that take up the whole width of the screen instead of matching the size of the expected input. The form fields are also displayed in multiple columns.\"\r\n    state=\"bad\"\r\n    caption=\"Don't use multiple columns as this can affect readability and make it more likely that users will miss something.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\nAlign form fields to the left for a clean and consistent layout for your application.\r\n\r\n<DoDontCaution\r\n  imageSrc={basicFormBad2}\r\n  imageAlt=\"A bad example of a form that is centre-aligned, with a left-aligned page header.\"\r\n  state=\"bad\"\r\n  caption=\"Don't align your form to the centre of the page.\"\r\n/>\r\n\r\n## Multi-page form\r\n\r\nUse a stepper (which is built into the [page header](/components/page-header) component) to separate a long form out into multiple pages.\r\n\r\nUse multiple pages if your form is much longer than about five or six fields.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={stepper1}\r\n    imageAlt=\"A form, with four fields, and a stepper indicating the current step.\"\r\n    state=\"none\"\r\n    caption=\"A stepper can split up complex forms to let you add inline guidance and design simpler layouts.\"\r\n  />\r\n  <DoDontCaution\r\n    imageSrc={stepper2}\r\n    imageAlt=\"A form, with two fields, and a stepper indicating the current, completed, and invalid steps.\"\r\n    state=\"none\"\r\n    caption=\"A stepper can help you manage complex validation and intermediate (as-you-go) saving of forms.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n",
      "path": "/patterns/form-layout",
      "navPriority": 3,
      "date": "2022-11-15",
      "title": "Form layout",
      "subTitle": "A simple layout for a form helps to make it easier to complete and allows users to focus on the content of the questions.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/patterns/deprecated-pattern/form-layout.mdx",
      "meta": {
        "relativePath": "patterns\\form-layout.mdx",
        "createdAt": "2024-06-04T07:48:35.050Z",
        "lastModified": "2024-06-04T07:48:35.050Z",
        "size": 3278,
        "formattedSize": "3.2 KB"
      }
    },
    {
      "id": "patterns\\form-validationx",
      "contents": "\r\nimport { IcTextField, IcAlert } from \"@ukic/react\";\r\nimport ErrorSummaryEx from \"./components/ErrorSummaryEx\";\r\n\r\n<IcAlert\r\n  heading=\"Pattern in development\"\r\n  message=\"We are refreshing this pattern to include new guidance and code.\"\r\n  variant=\"info\"\r\n/>\r\n\r\n## When to use\r\n\r\nUse form validation for all forms where information is required or is required in a particular format.\r\n\r\nAlways show an error summary at the top of the form along with a message under invalid fields.\r\n\r\n## Usage\r\n\r\nIn some cases, you can present success validation on text fields. For example, if choosing a username.\r\n\r\nDon't display text field errors as the user is typing. Wait until typing is finished or the form is submitted.\r\n\r\n### Error summary\r\n\r\nUse a multiline error alert to display a summary list of the validation issues.\r\n\r\n<ComponentPreview noPadding>\r\n  <ErrorSummaryEx />\r\n</ComponentPreview>\r\n\r\nPut the alert at the top of the form. Set focus on the error summary when form validation has failed.\r\n\r\nEach issue in the list should link to the related input field. Set focus to the field when the summary list item is clicked.\r\n\r\n### Text fields\r\n\r\nDisplay an error message under each invalid text field. Don't hide any 'helper text' when showing an error message.\r\n\r\n<ComponentPreview icds>\r\n  <IcTextField\r\n    label=\"What's your favourite type of coffee?\"\r\n    required\r\n    helperText=\"Such as Arabica, Robusta or Liberica.\"\r\n    validationStatus=\"error\"\r\n    validationText=\"Please provide your subscription number.\"\r\n  />\r\n</ComponentPreview>\r\n\r\n## Accessibility considerations\r\n\r\nWhen building or using this pattern:\r\n\r\n- Set the focus of the keyboard and scroll to the error summary when it appears. Make sure the error summary is announced by a screen reader.\r\n- Consider that errors can increase anxiety for people. An error shouldn't blame the user.\r\n- Add ‘Error: ’ to the beginning of the page `<title>` to inform assistive technology users as soon as possible.\r\n",
      "path": "/patterns/form-validation",
      "navPriority": 4,
      "date": "2022-11-15",
      "title": "Form validation",
      "subTitle": "Form validation checks that the information provided is correct and helps the user to fix any problems.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/patterns/deprecated-patterns/form-validation.mdx",
      "meta": {
        "relativePath": "patterns\\form-validation.mdx",
        "createdAt": "2024-05-20T13:20:43.365Z",
        "lastModified": "2024-05-20T13:20:43.365Z",
        "size": 2351,
        "formattedSize": "2.3 KB"
      }
    },
    {
      "id": "patterns\\indexx",
      "contents": "\r\n## Introduction\r\n\r\nPatterns are best practice designs or implementations for common user needs.\r\n\r\nThey support consistent interactions across a wide range of apps. They make it easier for people to switch between app contexts, identify common tasks, and still know how to use your app.\r\n\r\nPatterns often use multiple [components](/components) and are always based on the [style tokens](/styles). All patterns have been tested to meet or exceed [accessibility requirements](/accessibility/requirement).\r\n\r\n## Contribute\r\n\r\nWe are expanding the Design System and UI Kit. You can check out the [roadmap](/community/roadmap) for what's coming. If you can help you can [read more on how to contribute](/community).\r\n",
      "path": "/patterns",
      "navPriority": 0,
      "date": "2022-11-15",
      "title": "Patterns",
      "subTitle": "This section introduces our common design patterns.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/patterns/index.mdx",
      "meta": {
        "relativePath": "patterns\\index.mdx",
        "createdAt": "2024-05-20T13:20:43.381Z",
        "lastModified": "2024-05-20T13:20:43.381Z",
        "size": 980,
        "formattedSize": "980 Bytes"
      }
    },
    {
      "id": "patterns\\navigation-patternsx",
      "contents": "\r\n## Introduction\r\n\r\nNavigation patterns are built with [components](/components) laid out in a ready-made structure. They are used to quickly design and develop pages.\r\n\r\nUse the navigation patterns to copy and paste the code directly into your project. Then, focus on adding your custom content without worrying about the navigation layouts.\r\n\r\nAdditionally, the code snippets manage the pattern's responsive layout so you don't have to.\r\n\r\n- [Top navigation layout](/patterns/navigation-patterns/top-navigation-layout)\r\n- [Side navigation layout](/patterns/navigation-patterns/side-navigation-layout)\r\n",
      "path": "/patterns/navigation-patterns",
      "navPriority": 1,
      "date": "2024-02-09",
      "title": "Navigation patterns",
      "subTitle": "Navigation patterns are ready-made pages with built-in components to help get you started.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/patterns/navigation-patterns.mdx",
      "meta": {
        "relativePath": "patterns\\navigation-patterns.mdx",
        "createdAt": "2024-05-20T13:20:43.381Z",
        "lastModified": "2024-05-20T13:20:43.381Z",
        "size": 955,
        "formattedSize": "955 Bytes"
      }
    },
    {
      "id": "patterns\\side-navigation-layoutx",
      "contents": "\r\nimport { IcLink } from \"@ukic/react\";\r\nimport {\r\n  createReactAppTsx,\r\n  createWebComponentsIndexHTML,\r\n} from \"./components/StackblitzButton/stackblitz-helpers\";\r\nimport sideNavigationPatternFig1 from \"./images/fig-1-example-of-theming-applied-to-side-navigation-layout.png\";\r\n\r\n## Introduction\r\n\r\nexport const snippetsSideNav = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: createWebComponentsIndexHTML(`<div class=\"parent-div\">\r\n      <ic-classification-banner></ic-classification-banner>\r\n      <ic-side-navigation\r\n        app-title=\"[Enter your application name]\"\r\n        status=\"alpha\"\r\n        version=\"v0.0.7\"\r\n      >\r\n        <svg\r\n          slot=\"app-icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n          <path\r\n            d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\"\r\n          />\r\n        </svg>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n          selected\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M12 5.69L17 10.19V18H15V12H9V18H7V10.19L12 5.69M12 3L2 12H5V20H11V14H13V20H19V12H22\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M3,14L3.5,14.07L8.07,9.5C7.89,8.85 8.06,8.11 8.59,7.59C9.37,6.8 10.63,6.8 11.41,7.59C11.94,8.11 12.11,8.85 11.93,9.5L14.5,12.07L15,12C15.18,12 15.35,12 15.5,12.07L19.07,8.5C19,8.35 19,8.18 19,8A2,2 0 0,1 21,6A2,2 0 0,1 23,8A2,2 0 0,1 21,10C20.82,10 20.65,10 20.5,9.93L16.93,13.5C17,13.65 17,13.82 17,14A2,2 0 0,1 15,16A2,2 0 0,1 13,14L13.07,13.5L10.5,10.93C10.18,11 9.82,11 9.5,10.93L4.93,15.5L5,16A2,2 0 0,1 3,18A2,2 0 0,1 1,16A2,2 0 0,1 3,14Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M9,22A1,1 0 0,1 8,21V18H4A2,2 0 0,1 2,16V4C2,2.89 2.9,2 4,2H20A2,2 0 0,1 22,4V16A2,2 0 0,1 20,18H13.9L10.2,21.71C10,21.9 9.75,22 9.5,22V22H9M10,16V19.08L13.08,16H20V4H4V16H10M6,7H18V9H6V7M6,11H15V13H6V11Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-divider slot=\"primary-navigation\"></ic-divider>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M19,19H5V5H19M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M12,17H14V7H10V9H12\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M15,15H11V13H13A2,2 0 0,0 15,11V9C15,7.89 14.1,7 13,7H9V9H13V11H11A2,2 0 0,0 9,13V17H15M19,19H5V5H19M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M15,15V13.5A1.5,1.5 0 0,0 13.5,12A1.5,1.5 0 0,0 15,10.5V9C15,7.89 14.1,7 13,7H9V9H13V11H11V13H13V15H9V17H13A2,2 0 0,0 15,15M19,19H5V5H19M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M19,19H5V5H19M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M13,17H15V7H13V11H11V7H9V13H13\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M21,9H15V22H13V16H11V22H9V9H3V7H21M12,2A2,2 0 0,1 14,4A2,2 0 0,1 12,6C10.89,6 10,5.1 10,4C10,2.89 10.89,2 12,2Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M16.36,14C16.44,13.34 16.5,12.68 16.5,12C16.5,11.32 16.44,10.66 16.36,10H19.74C19.9,10.64 20,11.31 20,12C20,12.69 19.9,13.36 19.74,14M14.59,19.56C15.19,18.45 15.65,17.25 15.97,16H18.92C17.96,17.65 16.43,18.93 14.59,19.56M14.34,14H9.66C9.56,13.34 9.5,12.68 9.5,12C9.5,11.32 9.56,10.65 9.66,10H14.34C14.43,10.65 14.5,11.32 14.5,12C14.5,12.68 14.43,13.34 14.34,14M12,19.96C11.17,18.76 10.5,17.43 10.09,16H13.91C13.5,17.43 12.83,18.76 12,19.96M8,8H5.08C6.03,6.34 7.57,5.06 9.4,4.44C8.8,5.55 8.35,6.75 8,8M5.08,16H8C8.35,17.25 8.8,18.45 9.4,19.56C7.57,18.93 6.03,17.65 5.08,16M4.26,14C4.1,13.36 4,12.69 4,12C4,11.31 4.1,10.64 4.26,10H7.64C7.56,10.66 7.5,11.32 7.5,12C7.5,12.68 7.56,13.34 7.64,14M12,4.03C12.83,5.23 13.5,6.57 13.91,8H10.09C10.5,6.57 11.17,5.23 12,4.03M18.92,8H15.97C15.65,6.75 15.19,5.55 14.59,4.44C16.43,5.07 17.96,6.34 18.92,8M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n      </ic-side-navigation>\r\n      <div class=\"content-div-container\">\r\n        <main>\r\n          <ic-section-container class=\"main-section-container\" aligned=\"center\">\r\n            <div class=\"main-content-div\">\r\n              <ic-typography variant=\"h2\">\r\n                <h2>Example heading</h2>\r\n              </ic-typography>\r\n              <ic-typography variant=\"subtitle-large\">\r\n                <p>Example sub-heading</p>\r\n              </ic-typography>\r\n              <ic-typography>\r\n                <p>\r\n                  Remove this div and add your custom content in\r\n                  ic-section-container.\r\n                </p>\r\n              </ic-typography>\r\n            </div>\r\n          </ic-section-container>\r\n        </main>\r\n        <ic-footer\r\n          aligned=\"center\"\r\n          caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\"\r\n          description=\"This pattern was built using the Intelligence Community Design System (ICDS).\"\r\n        >\r\n          <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n          <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n          <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n          <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n          <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n          <ic-footer-link slot=\"logo\" href=\"/\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"#FFFFFF\"\r\n              width=\"48\"\r\n              height=\"48\"\r\n            >\r\n              <path\r\n                d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n                fill=\"currentColor\"\r\n              />\r\n            </svg>\r\n          </ic-footer-link>\r\n        </ic-footer>\r\n      </div>\r\n    </div>`),\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: createReactAppTsx(\r\n      `const useStyles = createUseStyles({\r\n    contentDivContainer: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      flexGrow: \"1\",\r\n    },\r\n    mainContentDiv: {\r\n      border: \"var(--ic-border-width) dashed var(--ic-architectural-400)\",\r\n      padding: \"var(--ic-space-md)\",\r\n      height: \"800px\",\r\n    },\r\n    parentDiv: { display: \"flex\", height: \"100%\" },\r\n    main: { minHeight: \"100vh\" },\r\n  });\r\n  const classes = useStyles();\r\n  const alignment = \"center\";\r\n  return (\r\n    <div className={classes.parentDiv}>\r\n      <IcClassificationBanner />\r\n      <IcSideNavigation\r\n        appTitle=\"[Enter your application name]\"\r\n        status=\"alpha\"\r\n        version=\"v0.0.7\"\r\n      >\r\n        <SlottedSVG\r\n          slot=\"app-icon\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          path={mdiCompassOutline}\r\n        />\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n          selected\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiHomeOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiMagnify}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiChartTimelineVariant}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiCommentTextOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcDivider slot=\"primary-navigation\" />\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiNumeric1BoxOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiNumeric2BoxOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiNumeric3BoxOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiNumeric4BoxOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiCogOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiHuman}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiWeb}\r\n          />\r\n        </IcNavigationItem>\r\n      </IcSideNavigation>\r\n      <div className={classes.contentDivContainer}>\r\n        <main>\r\n          <IcSectionContainer aligned={alignment}>\r\n            <div className={classes.mainContentDiv}>\r\n              <IcTypography variant=\"h2\">\r\n                <h2>Example heading</h2>\r\n              </IcTypography>\r\n              <IcTypography variant=\"subtitle-large\">\r\n                <p>Example sub-heading</p>\r\n              </IcTypography>\r\n              <IcTypography>\r\n                <p>\r\n                  Remove this div and add your custom content in\r\n                  IcSectionContainer.\r\n                </p>\r\n              </IcTypography>\r\n            </div>\r\n          </IcSectionContainer>\r\n        </main>\r\n        <IcFooter\r\n          aligned={alignment}\r\n          caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\"\r\n          description=\"This pattern was built using the Intelligence Community Design System (ICDS).\"\r\n        >\r\n          <IcFooterLink slot=\"link\" href=\"\">\r\n            [footerLink]\r\n          </IcFooterLink>\r\n          <IcFooterLink slot=\"link\" href=\"\">\r\n            [footerLink]\r\n          </IcFooterLink>\r\n          <IcFooterLink slot=\"link\" href=\"\">\r\n            [footerLink]\r\n          </IcFooterLink>\r\n          <IcFooterLink slot=\"link\" href=\"\">\r\n            [footerLink]\r\n          </IcFooterLink>\r\n          <IcFooterLink slot=\"link\" href=\"\">\r\n            [footerLink]\r\n          </IcFooterLink>\r\n          <IcFooterLink slot=\"logo\" href=\"/\">\r\n            <SlottedSVG\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"48\"\r\n              height=\"48\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"#FFFFFF\"\r\n            >\r\n              <path\r\n                d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n                fill=\"currentColor\"\r\n              />\r\n            </SlottedSVG>\r\n          </IcFooterLink>\r\n        </IcFooter>\r\n      </div>\r\n    </div>)`,\r\n      \"SideNavigationPattern\",\r\n      \"jsx\",\r\n      true\r\n    ),\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsSideNav}\r\n  projectTitle=\"Side Navigation\"\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"16px\",\r\n  }}\r\n  type=\"pattern\"\r\n>\r\n  <IcLink href=\"/side-navigation-pattern\" target=\"_blank\">\r\n    View example in new window\r\n  </IcLink>\r\n</ComponentPreview>\r\n\r\nThis pattern includes the components:\r\n\r\n- [Side navigation](/components/side-navigation)\r\n- [Section container](/components/section-container)\r\n- [Footer](/components/footer)\r\n- [Classification banner](/components/classification-banner)\r\n\r\nWith options for:\r\n\r\n- [Page header](/components/page-header)\r\n- [Back to top](/components/back-to-top)\r\n\r\n## When to use\r\n\r\nWhen choosing a layout pattern, make sure it works for all pages within your app and avoid switching layout patterns on different pages.\r\n\r\nUse the side navigation layout to help provide more screen space for the main content. Side navigation is well suited to apps that have mutually exclusive features that need to be switched between easily from any page. For example, email providers often use side navigation to provide maximum screen space for email content whilst allowing constant access to other pages.\r\n\r\n## When not to use\r\n\r\nFor intranet-style and content-heavy apps, use the top navigation layout as it's better suited for providing links to a large number of pages.\r\n\r\nUse either the top navigation layout or the side navigation layout. Don't use both at the same time.\r\n\r\n## Implementation\r\n\r\nMake sure the pattern always fits the entire viewport and is never within another page container. The pattern content will adapt responsively when the viewport changes.\r\n\r\nAlways place the footer at the bottom of the page and below the fold, meaning users should scroll to see it.\r\n\r\n## Variants\r\n\r\nUse the side navigation layout with additional components including page header to create other common layouts.\r\n\r\n### Page header\r\n\r\nUse a page header to display an introduction to the content of the page. Add additional elements to provide actions, navigation or inputs at the page level.\r\n\r\nFor more information, see the [page header component](/components/page-header).\r\n\r\nexport const snippetsSideNavWithPageHeader = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: createWebComponentsIndexHTML(`<div class=\"parent-div\">\r\n      <ic-classification-banner></ic-classification-banner>\r\n      <ic-side-navigation\r\n        app-title=\"[Enter your application name]\"\r\n        status=\"alpha\"\r\n        version=\"v0.0.7\"\r\n      >\r\n        <svg\r\n          slot=\"app-icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n          <path\r\n            d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\"\r\n          />\r\n        </svg>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n          selected\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M12 5.69L17 10.19V18H15V12H9V18H7V10.19L12 5.69M12 3L2 12H5V20H11V14H13V20H19V12H22\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M3,14L3.5,14.07L8.07,9.5C7.89,8.85 8.06,8.11 8.59,7.59C9.37,6.8 10.63,6.8 11.41,7.59C11.94,8.11 12.11,8.85 11.93,9.5L14.5,12.07L15,12C15.18,12 15.35,12 15.5,12.07L19.07,8.5C19,8.35 19,8.18 19,8A2,2 0 0,1 21,6A2,2 0 0,1 23,8A2,2 0 0,1 21,10C20.82,10 20.65,10 20.5,9.93L16.93,13.5C17,13.65 17,13.82 17,14A2,2 0 0,1 15,16A2,2 0 0,1 13,14L13.07,13.5L10.5,10.93C10.18,11 9.82,11 9.5,10.93L4.93,15.5L5,16A2,2 0 0,1 3,18A2,2 0 0,1 1,16A2,2 0 0,1 3,14Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M9,22A1,1 0 0,1 8,21V18H4A2,2 0 0,1 2,16V4C2,2.89 2.9,2 4,2H20A2,2 0 0,1 22,4V16A2,2 0 0,1 20,18H13.9L10.2,21.71C10,21.9 9.75,22 9.5,22V22H9M10,16V19.08L13.08,16H20V4H4V16H10M6,7H18V9H6V7M6,11H15V13H6V11Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-divider slot=\"primary-navigation\"></ic-divider>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M19,19H5V5H19M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M12,17H14V7H10V9H12\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M15,15H11V13H13A2,2 0 0,0 15,11V9C15,7.89 14.1,7 13,7H9V9H13V11H11A2,2 0 0,0 9,13V17H15M19,19H5V5H19M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M15,15V13.5A1.5,1.5 0 0,0 13.5,12A1.5,1.5 0 0,0 15,10.5V9C15,7.89 14.1,7 13,7H9V9H13V11H11V13H13V15H9V17H13A2,2 0 0,0 15,15M19,19H5V5H19M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M19,19H5V5H19M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M13,17H15V7H13V11H11V7H9V13H13\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M21,9H15V22H13V16H11V22H9V9H3V7H21M12,2A2,2 0 0,1 14,4A2,2 0 0,1 12,6C10.89,6 10,5.1 10,4C10,2.89 10.89,2 12,2Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M16.36,14C16.44,13.34 16.5,12.68 16.5,12C16.5,11.32 16.44,10.66 16.36,10H19.74C19.9,10.64 20,11.31 20,12C20,12.69 19.9,13.36 19.74,14M14.59,19.56C15.19,18.45 15.65,17.25 15.97,16H18.92C17.96,17.65 16.43,18.93 14.59,19.56M14.34,14H9.66C9.56,13.34 9.5,12.68 9.5,12C9.5,11.32 9.56,10.65 9.66,10H14.34C14.43,10.65 14.5,11.32 14.5,12C14.5,12.68 14.43,13.34 14.34,14M12,19.96C11.17,18.76 10.5,17.43 10.09,16H13.91C13.5,17.43 12.83,18.76 12,19.96M8,8H5.08C6.03,6.34 7.57,5.06 9.4,4.44C8.8,5.55 8.35,6.75 8,8M5.08,16H8C8.35,17.25 8.8,18.45 9.4,19.56C7.57,18.93 6.03,17.65 5.08,16M4.26,14C4.1,13.36 4,12.69 4,12C4,11.31 4.1,10.64 4.26,10H7.64C7.56,10.66 7.5,11.32 7.5,12C7.5,12.68 7.56,13.34 7.64,14M12,4.03C12.83,5.23 13.5,6.57 13.91,8H10.09C10.5,6.57 11.17,5.23 12,4.03M18.92,8H15.97C15.65,6.75 15.19,5.55 14.59,4.44C16.43,5.07 17.96,6.34 18.92,8M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n      </ic-side-navigation>\r\n      <div class=\"content-div-container\">\r\n        <ic-page-header\r\n          heading=\"Page header\"\r\n          subheading=\"This is a page header component with additional functionality and this is the text.\"\r\n          reverse-order=\"true\"\r\n          aligned=\"center\"\r\n        >\r\n          <ic-chip slot=\"heading-adornment\" label=\"BETA\" size=\"large\"></ic-chip>\r\n          <ic-breadcrumb-group slot=\"breadcrumbs\">\r\n            <ic-breadcrumb page-title=\"Breadcrumb 1\" href=\"#\"></ic-breadcrumb>\r\n            <ic-breadcrumb page-title=\"Breadcrumb 2\" href=\"#\"></ic-breadcrumb>\r\n            <ic-breadcrumb page-title=\"Breadcrumb 3\" href=\"#\"></ic-breadcrumb>\r\n            <ic-breadcrumb page-title=\"Breadcrumb 4\" href=\"#\"></ic-breadcrumb>\r\n            <ic-breadcrumb page-title=\"Breadcrumb 5\" href=\"#\"></ic-breadcrumb>\r\n            <ic-breadcrumb\r\n              current=\"true\"\r\n              page-title=\"Breadcrumb 6\"\r\n              href=\"#\"\r\n            ></ic-breadcrumb>\r\n          </ic-breadcrumb-group>\r\n          <ic-button slot=\"actions\" variant=\"primary\">\r\n            <svg\r\n              slot=\"left-icon\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              height=\"24\"\r\n              width=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\r\n            </svg>\r\n            Primary button\r\n          </ic-button>\r\n          <ic-button slot=\"actions\" variant=\"tertiary\">Tertiary button</ic-button>\r\n          <div class=\"input-area\" slot=\"input\">\r\n            <ic-text-field\r\n              placeholder=\"Enter your input...\"\r\n              label=\"Input\"\r\n              hide-label=\"true\"\r\n            ></ic-text-field>\r\n            <ic-button>Submit</ic-button>\r\n        </div>\r\n      </ic-page-header>\r\n      <main>\r\n        <ic-section-container class=\"main-section-container\" aligned=\"center\">\r\n          <div class=\"main-content-div\">\r\n            <ic-typography variant=\"h2\">\r\n              <h2>Example heading</h2>\r\n            </ic-typography>\r\n            <ic-typography variant=\"subtitle-large\">\r\n              <p>Example sub-heading</p>\r\n            </ic-typography>\r\n            <ic-typography>\r\n              <p>\r\n                Remove this div and add your custom content in ic-section-container.\r\n              </p>\r\n            </ic-typography>\r\n          </div>\r\n        </ic-section-container>\r\n      </main>\r\n      <ic-footer\r\n        aligned=\"center\"\r\n        caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\"\r\n        description=\"This pattern was built using the Intelligence Community Design System (ICDS).\"\r\n      >\r\n        <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n        <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n        <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n        <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n        <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n        <ic-footer-link slot=\"logo\" href=\"/\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"#FFFFFF\"\r\n            width=\"48\"\r\n            height=\"48\"\r\n          >\r\n            <path\r\n              d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n              fill=\"currentColor\"\r\n            />\r\n          </svg>\r\n        </ic-footer-link>\r\n      </ic-footer>\r\n    </div>\r\n  </div>`),\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: createReactAppTsx(\r\n      `const useStyles = createUseStyles({\r\n    contentDivContainer: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      flexGrow: \"1\",\r\n    },\r\n    mainContentDiv: {\r\n      border: \"var(--ic-border-width) dashed var(--ic-architectural-400)\",\r\n      padding: \"var(--ic-space-md)\",\r\n      height: \"800px\",\r\n    },\r\n    parentDiv: { display: \"flex\", height: \"100%\" },\r\n    main: { minHeight: \"100vh\" },\r\n    inputArea: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      gap: \"var(--ic-space-md)\",\r\n      \"@media screen and (max-width: 320px)\": {\r\n        gap: \"var(--ic-space-xs)\",\r\n      },\r\n    },\r\n    textField: {\r\n      \"--input-width\": \"21.5rem\",\r\n      \"@media screen and (max-width: 768px)\": {\r\n        \"--input-width\": \"100%\",\r\n        flex: \"1 1 0\",\r\n      },\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  const alignment = \"center\";\r\n  const pageHeaderAlignment = \"center\";\r\n  return (\r\n    <div className={classes.parentDiv}>\r\n      <IcClassificationBanner />\r\n      <IcSideNavigation\r\n        appTitle=\"[Enter your application name]\"\r\n        status=\"alpha\"\r\n        version=\"v0.0.7\"\r\n      >\r\n        <SlottedSVG\r\n          slot=\"app-icon\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          path={mdiCompassOutline}\r\n        />\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n          selected\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiHomeOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiMagnify}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiChartTimelineVariant}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiCommentTextOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcDivider slot=\"primary-navigation\" />\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiNumeric1BoxOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiNumeric2BoxOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiNumeric3BoxOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiNumeric4BoxOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiCogOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiHuman}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiWeb}\r\n          />\r\n        </IcNavigationItem>\r\n      </IcSideNavigation>\r\n      <div className={classes.contentDivContainer}>\r\n        <IcPageHeader\r\n          heading=\"Page header\"\r\n          subheading=\"This is a page header component with additional functionality and this is the text.\"\r\n          reverseOrder\r\n          aligned={pageHeaderAlignment || alignment}\r\n        >\r\n          <IcChip slot=\"heading-adornment\" label=\"BETA\" size=\"large\" />\r\n          <IcBreadcrumbGroup slot=\"breadcrumbs\">\r\n            <IcBreadcrumb pageTitle=\"Breadcrumb 1\" href=\"#\" />\r\n            <IcBreadcrumb pageTitle=\"Breadcrumb 2\" href=\"#\" />\r\n            <IcBreadcrumb pageTitle=\"Breadcrumb 3\" href=\"#\" />\r\n            <IcBreadcrumb pageTitle=\"Breadcrumb 4\" href=\"#\" />\r\n            <IcBreadcrumb pageTitle=\"Breadcrumb 5\" href=\"#\" />\r\n            <IcBreadcrumb current pageTitle=\"Breadcrumb 6\" href=\"#\" />\r\n          </IcBreadcrumbGroup>\r\n          <IcButton slot=\"actions\" variant=\"primary\">\r\n            <SlottedSVG\r\n              slot=\"left-icon\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              height=\"24\"\r\n              width=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              path={mdiPlus}\r\n            />\r\n            Primary button\r\n          </IcButton>\r\n          <IcButton slot=\"actions\" variant=\"tertiary\">\r\n            Tertiary button\r\n          </IcButton>\r\n          <div className={classes.inputArea} slot=\"input\">\r\n            <IcTextField\r\n              className={classes.textField}\r\n              placeholder=\"Enter your input...\"\r\n              label=\"Input\"\r\n              hideLabel\r\n            />\r\n            <IcButton>Submit</IcButton>\r\n          </div>\r\n        </IcPageHeader>\r\n        <main>\r\n          <IcSectionContainer aligned={alignment}>\r\n            <div className={classes.mainContentDiv}>\r\n              <IcTypography variant=\"h2\">\r\n                <h2>Example heading</h2>\r\n              </IcTypography>\r\n              <IcTypography variant=\"subtitle-large\">\r\n                <p>Example sub-heading</p>\r\n              </IcTypography>\r\n              <IcTypography>\r\n                <p>\r\n                  Remove this div and add your custom content in\r\n                  IcSectionContainer.\r\n                </p>\r\n              </IcTypography>\r\n            </div>\r\n          </IcSectionContainer>\r\n        </main>\r\n        <IcFooter\r\n          aligned={alignment}\r\n          caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\"\r\n          description=\"This pattern was built using the Intelligence Community Design System (ICDS).\"\r\n        >\r\n          <IcFooterLink slot=\"link\" href=\"\">\r\n            [footerLink]\r\n          </IcFooterLink>\r\n          <IcFooterLink slot=\"link\" href=\"\">\r\n            [footerLink]\r\n          </IcFooterLink>\r\n          <IcFooterLink slot=\"link\" href=\"\">\r\n            [footerLink]\r\n          </IcFooterLink>\r\n          <IcFooterLink slot=\"link\" href=\"\">\r\n            [footerLink]\r\n          </IcFooterLink>\r\n          <IcFooterLink slot=\"link\" href=\"\">\r\n            [footerLink]\r\n          </IcFooterLink>\r\n          <IcFooterLink slot=\"logo\" href=\"/\">\r\n            <SlottedSVG\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"48\"\r\n              height=\"48\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"#FFFFFF\"\r\n            >\r\n              <path\r\n                d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n                fill=\"currentColor\"\r\n              />\r\n            </SlottedSVG>\r\n          </IcFooterLink>\r\n        </IcFooter>\r\n      </div>\r\n    </div>\r\n  )`,\r\n      \"SideNavigationWithPageHeaderPattern\",\r\n      \"jsx\",\r\n      true\r\n    ),\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsSideNavWithPageHeader}\r\n  projectTitle=\"Side Navigation with Page Header\"\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"16px\",\r\n  }}\r\n  type=\"pattern\"\r\n>\r\n  <IcLink href=\"/side-navigation-page-header-pattern\" target=\"_blank\">\r\n    View example in new window\r\n  </IcLink>\r\n</ComponentPreview>\r\n\r\n### Back to top\r\n\r\nUse the back to top component to help people quickly return to the top of a long page.\r\n\r\nConsider using it on all apps to improve usability for everyone, including keyboard-only and some assistive technology users.\r\n\r\nDon't use back to top when the page is designed to fill the viewport without scrolling.\r\n\r\nFor more information, see the [back to top component](/components/back-to-top).\r\n\r\nexport const snippetsSideNavBackToTop = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet: createWebComponentsIndexHTML(`<div class=\"parent-div\">\r\n      <ic-classification-banner></ic-classification-banner>\r\n      <ic-side-navigation\r\n        app-title=\"[Enter your application name]\"\r\n        status=\"alpha\"\r\n        version=\"v0.0.7\"\r\n      >\r\n        <svg\r\n          slot=\"app-icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          fill=\"#000000\"\r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n          <path\r\n            d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\"\r\n          />\r\n        </svg>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n          selected\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M12 5.69L17 10.19V18H15V12H9V18H7V10.19L12 5.69M12 3L2 12H5V20H11V14H13V20H19V12H22\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M3,14L3.5,14.07L8.07,9.5C7.89,8.85 8.06,8.11 8.59,7.59C9.37,6.8 10.63,6.8 11.41,7.59C11.94,8.11 12.11,8.85 11.93,9.5L14.5,12.07L15,12C15.18,12 15.35,12 15.5,12.07L19.07,8.5C19,8.35 19,8.18 19,8A2,2 0 0,1 21,6A2,2 0 0,1 23,8A2,2 0 0,1 21,10C20.82,10 20.65,10 20.5,9.93L16.93,13.5C17,13.65 17,13.82 17,14A2,2 0 0,1 15,16A2,2 0 0,1 13,14L13.07,13.5L10.5,10.93C10.18,11 9.82,11 9.5,10.93L4.93,15.5L5,16A2,2 0 0,1 3,18A2,2 0 0,1 1,16A2,2 0 0,1 3,14Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M9,22A1,1 0 0,1 8,21V18H4A2,2 0 0,1 2,16V4C2,2.89 2.9,2 4,2H20A2,2 0 0,1 22,4V16A2,2 0 0,1 20,18H13.9L10.2,21.71C10,21.9 9.75,22 9.5,22V22H9M10,16V19.08L13.08,16H20V4H4V16H10M6,7H18V9H6V7M6,11H15V13H6V11Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-divider slot=\"primary-navigation\"></ic-divider>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M19,19H5V5H19M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M12,17H14V7H10V9H12\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M15,15H11V13H13A2,2 0 0,0 15,11V9C15,7.89 14.1,7 13,7H9V9H13V11H11A2,2 0 0,0 9,13V17H15M19,19H5V5H19M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M15,15V13.5A1.5,1.5 0 0,0 13.5,12A1.5,1.5 0 0,0 15,10.5V9C15,7.89 14.1,7 13,7H9V9H13V11H11V13H13V15H9V17H13A2,2 0 0,0 15,15M19,19H5V5H19M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M19,19H5V5H19M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M13,17H15V7H13V11H11V7H9V13H13\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M21,9H15V22H13V16H11V22H9V9H3V7H21M12,2A2,2 0 0,1 14,4A2,2 0 0,1 12,6C10.89,6 10,5.1 10,4C10,2.89 10.89,2 12,2Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n        <ic-navigation-item\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <svg\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M16.36,14C16.44,13.34 16.5,12.68 16.5,12C16.5,11.32 16.44,10.66 16.36,10H19.74C19.9,10.64 20,11.31 20,12C20,12.69 19.9,13.36 19.74,14M14.59,19.56C15.19,18.45 15.65,17.25 15.97,16H18.92C17.96,17.65 16.43,18.93 14.59,19.56M14.34,14H9.66C9.56,13.34 9.5,12.68 9.5,12C9.5,11.32 9.56,10.65 9.66,10H14.34C14.43,10.65 14.5,11.32 14.5,12C14.5,12.68 14.43,13.34 14.34,14M12,19.96C11.17,18.76 10.5,17.43 10.09,16H13.91C13.5,17.43 12.83,18.76 12,19.96M8,8H5.08C6.03,6.34 7.57,5.06 9.4,4.44C8.8,5.55 8.35,6.75 8,8M5.08,16H8C8.35,17.25 8.8,18.45 9.4,19.56C7.57,18.93 6.03,17.65 5.08,16M4.26,14C4.1,13.36 4,12.69 4,12C4,11.31 4.1,10.64 4.26,10H7.64C7.56,10.66 7.5,11.32 7.5,12C7.5,12.68 7.56,13.34 7.64,14M12,4.03C12.83,5.23 13.5,6.57 13.91,8H10.09C10.5,6.57 11.17,5.23 12,4.03M18.92,8H15.97C15.65,6.75 15.19,5.55 14.59,4.44C16.43,5.07 17.96,6.34 18.92,8M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\"\r\n            />\r\n          </svg>\r\n        </ic-navigation-item>\r\n      </ic-side-navigation>\r\n      <div class=\"content-div-container\">\r\n        <main id=\"main\">\r\n        <ic-section-container class=\"main-section-container\" aligned=\"center\">\r\n          <div class=\"main-content-div\">\r\n            <ic-typography variant=\"h2\">\r\n              <h2>Example heading</h2>\r\n            </ic-typography>\r\n            <ic-typography variant=\"subtitle-large\">\r\n              <p>Example sub-heading</p>\r\n            </ic-typography>\r\n            <ic-typography>\r\n              <p>\r\n                Remove this div and add your custom content in ic-section-container.\r\n              </p>\r\n            </ic-typography>\r\n          </div>\r\n        </ic-section-container>\r\n      </main>\r\n      <ic-back-to-top target=\"main\"></ic-back-to-top>\r\n      <ic-footer\r\n        aligned=\"center\"\r\n        caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\"\r\n        description=\"This pattern was built using the Intelligence Community Design System (ICDS).\"\r\n      >\r\n        <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n        <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n        <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n        <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n        <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n        <ic-footer-link slot=\"logo\" href=\"/\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"#FFFFFF\"\r\n            width=\"48\"\r\n            height=\"48\"\r\n          >\r\n            <path\r\n              d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n              fill=\"currentColor\"\r\n            />\r\n          </svg>\r\n        </ic-footer-link>\r\n      </ic-footer>\r\n    </div>\r\n  </div>`),\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: createReactAppTsx(\r\n      `const useStyles = createUseStyles({\r\n    contentDivContainer: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      flexGrow: \"1\",\r\n    },\r\n    mainContentDiv: {\r\n      border: \"var(--ic-border-width) dashed var(--ic-architectural-400)\",\r\n      padding: \"var(--ic-space-md)\",\r\n      flex: 1,\r\n    },\r\n    parentDiv: { display: \"flex\", height: \"100%\" },\r\n    main: { minHeight: \"100vh\", display: \"flex\" },\r\n    mainSectionContainer: { display: \"flex\", flex: 1 },\r\n  });\r\n  const classes = useStyles();\r\n  const alignment = \"center\";\r\n  return (\r\n    <div className={classes.parentDiv}>\r\n      <IcClassificationBanner />\r\n      <IcSideNavigation\r\n        appTitle=\"[Enter your application name]\"\r\n        status=\"alpha\"\r\n        version=\"v0.0.7\"\r\n      >\r\n        <SlottedSVG\r\n          slot=\"app-icon\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          path={mdiCompassOutline}\r\n        />\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n          selected\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiHomeOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiMagnify}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiChartTimelineVariant}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiCommentTextOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcDivider slot=\"primary-navigation\" />\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiNumeric1BoxOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiNumeric2BoxOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiNumeric3BoxOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"primary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiNumeric4BoxOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiCogOutline}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiHuman}\r\n          />\r\n        </IcNavigationItem>\r\n        <IcNavigationItem\r\n          slot=\"secondary-navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n        >\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiWeb}\r\n          />\r\n        </IcNavigationItem>\r\n      </IcSideNavigation>\r\n      <div className={classes.contentDivContainer}>\r\n        <main className={classes.main} id=\"main\">\r\n          <IcSectionContainer\r\n            aligned={alignment}\r\n            className={classes.mainSectionContainer}\r\n          >\r\n            <div className={classes.mainContentDiv}>\r\n              <IcTypography variant=\"h2\">\r\n                <h2>Example heading</h2>\r\n              </IcTypography>\r\n              <IcTypography variant=\"subtitle-large\">\r\n                <p>Example sub-heading</p>\r\n              </IcTypography>\r\n              <IcTypography>\r\n                <p>\r\n                  Remove this div and add your custom content in\r\n                  IcSectionContainer.\r\n                </p>\r\n              </IcTypography>\r\n            </div>\r\n          </IcSectionContainer>\r\n        </main>\r\n        <IcBackToTop target=\"main\" />\r\n        <IcFooter\r\n          aligned={alignment}\r\n          caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\"\r\n          description=\"This pattern was built using the Intelligence Community Design System (ICDS).\"\r\n        >\r\n          <IcFooterLink slot=\"link\" href=\"\">\r\n            [footerLink]\r\n          </IcFooterLink>\r\n          <IcFooterLink slot=\"link\" href=\"\">\r\n            [footerLink]\r\n          </IcFooterLink>\r\n          <IcFooterLink slot=\"link\" href=\"\">\r\n            [footerLink]\r\n          </IcFooterLink>\r\n          <IcFooterLink slot=\"link\" href=\"\">\r\n            [footerLink]\r\n          </IcFooterLink>\r\n          <IcFooterLink slot=\"link\" href=\"\">\r\n            [footerLink]\r\n          </IcFooterLink>\r\n          <IcFooterLink slot=\"logo\" href=\"/\">\r\n            <SlottedSVG\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"48\"\r\n              height=\"48\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"#FFFFFF\"\r\n            >\r\n              <path\r\n                d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n                fill=\"currentColor\"\r\n              />\r\n            </SlottedSVG>\r\n          </IcFooterLink>\r\n        </IcFooter>\r\n      </div>\r\n    </div>\r\n  )`,\r\n      \"SideNavigationWithBackToTopPattern\",\r\n      \"jsx\",\r\n      true\r\n    ),\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsSideNavBackToTop}\r\n  projectTitle=\"Side Navigation with Back To Top\"\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"16px\",\r\n  }}\r\n  type=\"pattern\"\r\n>\r\n  <IcLink href=\"/side-navigation-back-to-top-pattern\" target=\"_blank\">\r\n    View example in new window\r\n  </IcLink>\r\n</ComponentPreview>\r\n\r\n## Customisation\r\n\r\nThis pattern can be themed to change the look and feel of the app. Use the [custom theme](/get-started/install-components/custom-theme) guidance to change your app's theme. Make sure to select your theme in line with the accessibility requirements around colour contrast.\r\n\r\n<DoDontCaution\r\n  imageSrc={sideNavigationPatternFig1}\r\n  imageAlt=\"An example page showing the layout with an alternatively themed look.\"\r\n  state=\"none\"\r\n  caption=\"An example of the side navigation layout themed to an alternative colour.\"\r\n/>\r\n\r\n## Accessibility considerations\r\n\r\nWhen configuring a page make sure to follow all [accessibility guidance](/accessibility). Most accessibility requirements are covered by the individual components. For further accessibility information see the individual component pages.\r\n\r\nWe’ve tested this pattern against WCAG 2.1 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n\r\n## Related patterns\r\n\r\n- [Top navigation layout](/patterns/navigation-patterns/top-navigation-layout)\r\n",
      "path": "/patterns/navigation-patterns/side-navigation-layout",
      "navPriority": 2,
      "date": "2024-03-25",
      "title": "Side navigation layout",
      "subTitle": "Use the side navigation layout to quickly set up a page where the side navigation is the primary form of navigation.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/patterns/navigation-patterns/side-navigation-layout.mdx",
      "meta": {
        "relativePath": "patterns\\side-navigation-layout.mdx",
        "createdAt": "2024-06-04T07:48:35.051Z",
        "lastModified": "2024-06-04T07:48:35.051Z",
        "size": 64660,
        "formattedSize": "63.1 KB"
      }
    },
    {
      "id": "patterns\\successx",
      "contents": "\r\nimport { IcAlert, IcButton, IcTextField } from \"@ukic/react\";\r\n\r\nexport const SnackbarBasic = () => {\r\n  const title = \"Your coffee order is being processed.\";\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  return (\r\n    <div>\r\n      <IcButton variant=\"primary\" onClick={toggle}>\r\n        Submit coffee order\r\n      </IcButton>{\" \"}\r\n      {open && (\r\n        <Snackbar\r\n          anchorOrigin={{ horizontal: \"left\", vertical: \"bottom\" }}\r\n          message={title}\r\n          open={open}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n<IcAlert\r\n  heading=\"Pattern in development\"\r\n  message=\"We are refreshing this pattern to include new guidance and code.\"\r\n  variant=\"info\"\r\n/>\r\n\r\n## When to use\r\n\r\nUse a success message when you want to inform the user that a task has been successful.\r\n\r\nFor example, show a [success alert](/components/alert) on a subsequent page after submitting a form.\r\n\r\n## When not to use\r\n\r\nDon't overuse success messages. Don't add success validation to every text field.\r\n\r\nDon't use full-page success messages. If a form is submitted successfully, consider a success alert component on the subsequent screen.\r\n\r\n## Usage\r\n\r\n### Toasts\r\n\r\nUse a [toast](/components/toast) to deliver a passive success message. Use a snackbar when you don't need to guarantee a user will notice the message.\r\n\r\n### Alerts\r\n\r\nUse alerts to give feedback after a significant task. Alerts are more likely to be noticed by users.\r\n\r\nFor example, use a success alert on a subsequent page after submitting a request to give the user a reference number.\r\n\r\n<ComponentPreview icds>\r\n  <IcAlert\r\n    heading=\"Application submitted\"\r\n    message=\"Your application for 'additional coffee allowance' was submitted successfully.\"\r\n    variant=\"success\"\r\n  />\r\n</ComponentPreview>\r\n\r\n### Summary and 'review' pages\r\n\r\nOnly use a summary page after submitting a form if you need the user to export the information.\r\n\r\nDon't use a full page for a success message; use a snackbar or alert on a list or homepage instead.\r\n\r\n### Text fields\r\n\r\nUse success messages on [text inputs](/components/text-field) if you need to validate information before submitting the form.\r\n\r\nUse them in situations where you need immediate feedback, such as choosing a username.\r\n\r\n<ComponentPreview icds>\r\n  <IcTextField\r\n    label=\"Username\"\r\n    value=\"coffeeninja005\"\r\n    validationStatus=\"success\"\r\n    validationText=\"This username is available.\"\r\n  />\r\n</ComponentPreview>\r\n\r\n## Accessibility considerations\r\n\r\nWhen building or using this pattern:\r\n\r\n- Make sure components such as alerts are announced to screen readers and other assistive technology.\r\n- Don't use colour on its own to convey that a problem has occurred; always include text.\r\n",
      "path": "/patterns/success",
      "navPriority": 5,
      "date": "2022-11-15",
      "title": "Success messages",
      "subTitle": "Success messages inform the user of a successful outcome.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/patterns/deprecated-patterns/success.mdx",
      "meta": {
        "relativePath": "patterns\\success.mdx",
        "createdAt": "2024-06-04T07:48:35.052Z",
        "lastModified": "2024-06-04T07:48:35.052Z",
        "size": 3085,
        "formattedSize": "3.0 KB"
      }
    },
    {
      "id": "patterns\\top-navigation-layoutx",
      "contents": "\r\nimport { IcLink } from \"@ukic/react\";\r\n\r\nimport {\r\n  createReactAppTsx,\r\n  createWebComponentsIndexHTML,\r\n} from \"./components/StackblitzButton/stackblitz-helpers\";\r\n\r\nimport topNavigationPatternFig1 from \"./images/fig-1-example-of-theming-applied-to-top-navigation-layout@2x.png\";\r\n\r\n## Introduction\r\n\r\nexport const snippetsTopNav = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet:\r\n      createWebComponentsIndexHTML(`<ic-classification-banner></ic-classification-banner>\r\n    <ic-top-navigation\r\n      app-title=\"[Enter your application name]\"\r\n      status=\"alpha\"\r\n      version=\"v0.0.7\"\r\n      content-aligned=\"center\"\r\n    >\r\n      <svg\r\n        slot=\"app-icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        viewBox=\"0 0 24 24\" \r\n        fill=\"#000000\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n      >\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n        <path\r\n          d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\"\r\n        />\r\n      </svg>\r\n      <ic-search-bar\r\n        slot=\"search\"\r\n        placeholder=\"Search\"\r\n        label=\"Search\"\r\n      ></ic-search-bar>\r\n      <ic-navigation-button label=\"Profile\" slot=\"buttons\">\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path\r\n            d=\"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\"\r\n          />\r\n        </svg>\r\n      </ic-navigation-button>\r\n      <ic-navigation-button label=\"Settings\" slot=\"buttons\">\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path\r\n            d=\"M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z\"\r\n          />\r\n        </svg>\r\n      </ic-navigation-button>\r\n      <ic-navigation-button label=\"Edit\" slot=\"buttons\">\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path\r\n            d=\"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\"\r\n          />\r\n        </svg>\r\n      </ic-navigation-button>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n        selected\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n    </ic-top-navigation>\r\n    <main>\r\n      <ic-section-container class=\"main-section-container\" aligned=\"center\">\r\n        <div class=\"main-content-div\">\r\n          <ic-typography variant=\"h2\">\r\n            <h2>Example heading</h2>\r\n          </ic-typography>\r\n          <ic-typography variant=\"subtitle-large\">\r\n            <p>Example sub-heading</p>\r\n          </ic-typography>\r\n          <ic-typography>\r\n            <p>\r\n              Remove this div and add your custom content in ic-section-container.\r\n            </p>\r\n          </ic-typography>\r\n        </div>\r\n      </ic-section-container>\r\n    </main>\r\n    <ic-footer\r\n      aligned=\"center\"\r\n      caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\"\r\n      description=\"This pattern was built using the Intelligence Community Design System (ICDS).\"\r\n    >\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"logo\" href=\"/\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"#FFFFFF\"\r\n          width=\"48\"\r\n          height=\"48\"\r\n        >\r\n          <path\r\n            d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n        </svg>\r\n      </ic-footer-link>\r\n    </ic-footer>`),\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: createReactAppTsx(\r\n      `const alignment = \"center\";\r\n  const useStyles = createUseStyles({\r\n    main: { minHeight: \"100vh\", display: \"flex\" },\r\n    mainContentDiv: {\r\n      border: \"var(--ic-border-width) dashed var(--ic-architectural-400)\",\r\n      padding: \"var(--ic-space-md)\",\r\n      flex: 1,\r\n    },\r\n    mainSectionContainer: { display: \"flex\", flex: 1 },\r\n  });\r\n  const classes = useStyles(); \r\n  return (\r\n    <>\r\n      <IcClassificationBanner />\r\n      <IcTopNavigation\r\n        appTitle=\"[Enter your application name]\"\r\n        status=\"alpha\"\r\n        version=\"v0.0.7\"\r\n        contentAligned={alignment}\r\n      >\r\n        <SlottedSVG\r\n          slot=\"app-icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\" \r\n          fill=\"#000000\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n        </SlottedSVG>\r\n        <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n        <IcNavigationButton label=\"Profile\" slot=\"buttons\">\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\" \r\n            path={mdiAccount}\r\n          />\r\n        </IcNavigationButton>\r\n        <IcNavigationButton label=\"Settings\" slot=\"buttons\">\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\" \r\n            path={mdiCog}\r\n          />\r\n        </IcNavigationButton>\r\n        <IcNavigationButton label=\"Edit\" slot=\"buttons\">\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\" \r\n            path={mdiPencil}\r\n          />\r\n        </IcNavigationButton>\r\n        <IcNavigationItem\r\n          slot=\"navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n          selected\r\n        />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n      </IcTopNavigation>\r\n      <main className={classes.main}>\r\n        <IcSectionContainer className={classes.mainSectionContainer} aligned={alignment}>\r\n          <div className={classes.mainContentDiv}>\r\n            <IcTypography variant=\"h2\">\r\n              <h2>Example heading</h2>\r\n            </IcTypography>\r\n            <IcTypography variant=\"subtitle-large\">\r\n              <p>Example sub-heading</p>\r\n            </IcTypography>\r\n            <IcTypography>\r\n              <p>\r\n                Remove this div and add your custom content in IcSectionContainer.\r\n              </p>\r\n            </IcTypography>\r\n          </div>\r\n        </IcSectionContainer>\r\n      </main>\r\n      <IcFooter\r\n        aligned={alignment}\r\n        caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\"\r\n        description=\"This pattern was built using the Intelligence Community Design System (ICDS).\"\r\n      >\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"logo\" href=\"/\">\r\n          <SlottedSVG\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"#FFFFFF\"\r\n            width=\"48\"\r\n            height=\"48\"\r\n          >\r\n            <path\r\n              d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n              fill=\"currentColor\"\r\n            />\r\n          </SlottedSVG>\r\n        </IcFooterLink>\r\n      </IcFooter>\r\n    </>\r\n  )`,\r\n      \"TopNavigation\",\r\n      \"jsx\",\r\n      true\r\n    ),\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsTopNav}\r\n  type=\"pattern\"\r\n  noPadding\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"16px\",\r\n  }}\r\n>\r\n  <IcLink href=\"/top-navigation-pattern\" target=\"_blank\">\r\n    View example in new window\r\n  </IcLink>\r\n</ComponentPreview>\r\n\r\nThis pattern includes the components:\r\n\r\n- [Top navigation](/components/top-navigation)\r\n- [Section container](/components/section-container)\r\n- [Footer](/components/footer)\r\n- [Classification banner](/components/classification-banner)\r\n\r\nWith options for:\r\n\r\n- [Page header](/components/page-header)\r\n- [Mega-menu](/components/top-navigation)\r\n- [Back to top](/components/back-to-top)\r\n\r\n## When to use\r\n\r\nWhen choosing a layout pattern, make sure it works for all pages within your app and avoid switching layouts on different pages.\r\n\r\nUse the top navigation layout for article pages or content-heavy apps with lots of text.\r\n\r\nUse the top navigation layout with a mega-menu for access to a large range of navigation items.\r\n\r\nUse a mega-menu for apps with complex page structures where every page should be accessible from any other page through the mega-menu. For example, department stores or supermarkets use a top navigation with mega-menu to provide access to their large number of product categories.\r\n\r\n## When not to use\r\n\r\nFor apps that require constant access to switch between pages, use side navigation as it's better suited for providing quick access and maximising the screen space for page content.\r\n\r\nUse either the top navigation layout or the side navigation layout. Don't use both at the same time.\r\n\r\n## Implementation\r\n\r\nMake sure the pattern always fits the entire viewport and is never within another page container. The pattern content will adapt responsively when the viewport changes.\r\n\r\nAlways place the footer at the bottom of the page and below the fold, meaning users should\r\nscroll to see it.\r\n\r\n## Variants\r\n\r\nUse the top navigation layout with additional components including page header to create other common layouts.\r\n\r\n### Page header\r\n\r\nUse a page header to display an introduction to the content of the page. Add additional elements to provide actions, navigation or inputs at the page level.\r\n\r\nFor more information, see the [page header component](/components/page-header).\r\n\r\nexport const snippetsTopNavPageHeader = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet:\r\n      createWebComponentsIndexHTML(`<ic-classification-banner></ic-classification-banner>\r\n    <ic-top-navigation\r\n      app-title=\"[Enter your application name]\"\r\n      status=\"alpha\"\r\n      version=\"v0.0.7\"\r\n      content-aligned=\"center\"\r\n    >\r\n      <svg\r\n        slot=\"app-icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        viewBox=\"0 0 24 24\" \r\n        fill=\"#000000\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n      >\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n        <path\r\n          d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\"\r\n        />\r\n      </svg>\r\n      <ic-search-bar\r\n        slot=\"search\"\r\n        placeholder=\"Search\"\r\n        label=\"Search\"\r\n      ></ic-search-bar>\r\n      <ic-navigation-button label=\"Profile\" slot=\"buttons\">\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path\r\n            d=\"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\"\r\n          />\r\n        </svg>\r\n      </ic-navigation-button>\r\n      <ic-navigation-button label=\"Settings\" slot=\"buttons\">\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path\r\n            d=\"M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z\"\r\n          />\r\n        </svg>\r\n      </ic-navigation-button>\r\n      <ic-navigation-button label=\"Edit\" slot=\"buttons\">\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path\r\n            d=\"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\"\r\n          />\r\n        </svg>\r\n      </ic-navigation-button>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n        selected\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n    </ic-top-navigation>\r\n    <ic-page-header\r\n      heading=\"Page header\"\r\n      subheading=\"This is a page header component with additional functionality and this is the text.\"\r\n      reverse-order=\"true\"\r\n      aligned=\"center\"\r\n    >\r\n      <ic-chip slot=\"heading-adornment\" label=\"BETA\" size=\"large\"></ic-chip>\r\n      <ic-breadcrumb-group slot=\"breadcrumbs\">\r\n        <ic-breadcrumb page-title=\"Breadcrumb 1\" href=\"#\"></ic-breadcrumb>\r\n        <ic-breadcrumb page-title=\"Breadcrumb 2\" href=\"#\"></ic-breadcrumb>\r\n        <ic-breadcrumb page-title=\"Breadcrumb 3\" href=\"#\"></ic-breadcrumb>\r\n        <ic-breadcrumb page-title=\"Breadcrumb 4\" href=\"#\"></ic-breadcrumb>\r\n        <ic-breadcrumb page-title=\"Breadcrumb 5\" href=\"#\"></ic-breadcrumb>\r\n        <ic-breadcrumb\r\n          current=\"true\"\r\n          page-title=\"Breadcrumb 6\"\r\n          href=\"#\"\r\n        ></ic-breadcrumb>\r\n      </ic-breadcrumb-group>\r\n      <ic-button slot=\"actions\" variant=\"primary\">\r\n        <svg\r\n          slot=\"left-icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\r\n        </svg>\r\n        Primary button\r\n      </ic-button>\r\n      <ic-button slot=\"actions\" variant=\"tertiary\">Tertiary button</ic-button>\r\n      <div class=\"input-area\" slot=\"input\">\r\n        <ic-text-field\r\n          placeholder=\"Enter your input...\"\r\n          label=\"Input\"\r\n          hide-label=\"true\"\r\n        ></ic-text-field>\r\n        <ic-button>Submit</ic-button>\r\n      </div>\r\n    </ic-page-header>\r\n    <main>\r\n      <ic-section-container class=\"main-section-container\" aligned=\"center\">\r\n        <div class=\"main-content-div\">\r\n          <ic-typography variant=\"h2\">\r\n            <h2>Example heading</h2>\r\n          </ic-typography>\r\n          <ic-typography variant=\"subtitle-large\">\r\n            <p>Example sub-heading</p>\r\n          </ic-typography>\r\n          <ic-typography>\r\n            <p>\r\n              Remove this div and add your custom content in ic-section-container.\r\n            </p>\r\n          </ic-typography>\r\n        </div>\r\n      </ic-section-container>\r\n    </main>\r\n    <ic-footer\r\n      aligned=\"center\"\r\n      caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\"\r\n      description=\"This pattern was built using the Intelligence Community Design System (ICDS).\"\r\n    >\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"logo\" href=\"/\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"#FFFFFF\"\r\n          width=\"48\"\r\n          height=\"48\"\r\n        >\r\n          <path\r\n            d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n        </svg>\r\n      </ic-footer-link>\r\n    </ic-footer>`),\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: createReactAppTsx(\r\n      `const alignment = \"center\";\r\n  let pageHeaderAlignment;\r\n  // pageHeaderAlignment = \"center\";\r\n  const useStyles = createUseStyles({\r\n    main: { minHeight: \"100vh\", display: \"flex\" },\r\n    mainContentDiv: {\r\n      border: \"var(--ic-border-width) dashed var(--ic-architectural-400)\",\r\n      padding: \"var(--ic-space-md)\",\r\n      flex: 1,\r\n    },\r\n    mainSectionContainer: { display: \"flex\", flex: 1 },\r\n    inputArea: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      gap: \"var(--ic-space-md)\",\r\n      \"@media screen and (max-width: 320px)\": {\r\n        gap: \"var(--ic-space-xs)\",\r\n      },\r\n    },\r\n    textField: {\r\n      \"--input-width\": \"21.5rem\",\r\n      \"@media screen and (max-width: 768px)\": {\r\n        \"--input-width\": \"100%\",\r\n        flex: \"1 1 0\",\r\n      },\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <IcClassificationBanner />\r\n      <IcTopNavigation\r\n        appTitle=\"[Enter your application name]\"\r\n        status=\"alpha\"\r\n        version=\"v0.0.7\"\r\n        contentAligned={alignment}\r\n      >\r\n        <SlottedSVG\r\n          slot=\"app-icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\" \r\n          fill=\"#000000\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n        </SlottedSVG>\r\n        <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n        <IcNavigationButton label=\"Profile\" slot=\"buttons\">\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\" \r\n            path={mdiAccount}\r\n          />\r\n        </IcNavigationButton>\r\n        <IcNavigationButton label=\"Settings\" slot=\"buttons\">\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\" \r\n            path={mdiCog}\r\n          />\r\n        </IcNavigationButton>\r\n        <IcNavigationButton label=\"Edit\" slot=\"buttons\">\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\" \r\n            path={mdiPencil}\r\n          />\r\n        </IcNavigationButton>\r\n        <IcNavigationItem\r\n          slot=\"navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n          selected\r\n        />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n      </IcTopNavigation>\r\n      <IcPageHeader\r\n        heading=\"Page header\"\r\n        subheading=\"This is a page header component with additional functionality and this is the text.\"\r\n        reverseOrder\r\n        aligned={pageHeaderAlignment || alignment}\r\n      >\r\n        <IcChip slot=\"heading-adornment\" label=\"BETA\" size=\"large\" />\r\n        <IcBreadcrumbGroup slot=\"breadcrumbs\">\r\n          <IcBreadcrumb pageTitle=\"Breadcrumb 1\" href=\"#\" />\r\n          <IcBreadcrumb pageTitle=\"Breadcrumb 2\" href=\"#\" />\r\n          <IcBreadcrumb pageTitle=\"Breadcrumb 3\" href=\"#\" />\r\n          <IcBreadcrumb pageTitle=\"Breadcrumb 4\" href=\"#\" />\r\n          <IcBreadcrumb pageTitle=\"Breadcrumb 5\" href=\"#\" />\r\n          <IcBreadcrumb current pageTitle=\"Breadcrumb 6\" href=\"#\" />\r\n        </IcBreadcrumbGroup>\r\n        <IcButton slot=\"actions\" variant=\"primary\">\r\n          <SlottedSVG\r\n            slot=\"left-icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            path={mdiPlus}\r\n          />\r\n          Primary button\r\n        </IcButton>\r\n        <IcButton slot=\"actions\" variant=\"tertiary\">\r\n          Tertiary button\r\n        </IcButton>\r\n        <div className={classes.inputArea} slot=\"input\">\r\n          <IcTextField\r\n            className={classes.textField}\r\n            placeholder=\"Enter your input...\"\r\n            label=\"Input\"\r\n            hideLabel\r\n          />\r\n          <IcButton>Submit</IcButton>\r\n        </div>\r\n      </IcPageHeader>\r\n      <main className={classes.main}>\r\n        <IcSectionContainer className={classes.mainSectionContainer} aligned={alignment}>\r\n          <div className={classes.mainContentDiv}>\r\n            <IcTypography variant=\"h2\">\r\n              <h2>Example heading</h2>\r\n            </IcTypography>\r\n            <IcTypography variant=\"subtitle-large\">\r\n              <p>Example sub-heading</p>\r\n            </IcTypography>\r\n            <IcTypography>\r\n              <p>\r\n                Remove this div and add your custom content in IcSectionContainer.\r\n              </p>\r\n            </IcTypography>\r\n          </div>\r\n        </IcSectionContainer>\r\n      </main>\r\n      <IcFooter\r\n        aligned={alignment}\r\n        caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\"\r\n        description=\"This pattern was built using the Intelligence Community Design System (ICDS).\"\r\n      >\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"logo\" href=\"/\">\r\n          <SlottedSVG\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"#FFFFFF\"\r\n            width=\"48\"\r\n            height=\"48\"\r\n          >\r\n            <path\r\n              d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n              fill=\"currentColor\"\r\n            />\r\n          </SlottedSVG>\r\n        </IcFooterLink>\r\n      </IcFooter>\r\n    </>\r\n  )`,\r\n      \"TopNavigationWithPageHeader\",\r\n      \"jsx\",\r\n      true\r\n    ),\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsTopNavPageHeader}\r\n  projectTitle=\"Top Navigation with Page Header\"\r\n  type=\"pattern\"\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"16px\",\r\n  }}\r\n>\r\n  <IcLink href=\"/top-navigation-page-header-pattern\" target=\"_blank\">\r\n    View example in new window\r\n  </IcLink>\r\n</ComponentPreview>\r\n\r\n### Mega-menu\r\n\r\nUse a top navigation with a mega-menu for apps with more than eight navigation options or options that can be grouped into categories. The main link groups are displayed in the top navigation and open a mega-menu when hovered over or focused.\r\n\r\nFor more information, see the [mega-menu component](/components/top-navigation#mega-menu).\r\n\r\nexport const snippetsTopNavMegaMenu = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet:\r\n      createWebComponentsIndexHTML(`<ic-classification-banner></ic-classification-banner>\r\n    <ic-top-navigation\r\n      app-title=\"[Enter your application name]\"\r\n      status=\"alpha\"\r\n      version=\"v0.0.7\"\r\n      content-aligned=\"center\"\r\n    >\r\n      <svg\r\n        slot=\"app-icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        viewBox=\"0 0 24 24\" \r\n        fill=\"#000000\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n      >\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n        <path\r\n          d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\"\r\n        />\r\n      </svg>\r\n      <ic-search-bar\r\n        slot=\"search\"\r\n        placeholder=\"Search\"\r\n        label=\"Search\"\r\n      ></ic-search-bar>\r\n      <ic-navigation-button label=\"Profile\" slot=\"buttons\">\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path\r\n            d=\"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\"\r\n          />\r\n        </svg>\r\n      </ic-navigation-button>\r\n      <ic-navigation-button label=\"Settings\" slot=\"buttons\">\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path\r\n            d=\"M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z\"\r\n          />\r\n        </svg>\r\n      </ic-navigation-button>\r\n      <ic-navigation-button label=\"Edit\" slot=\"buttons\">\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path\r\n            d=\"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\"\r\n          />\r\n        </svg>\r\n      </ic-navigation-button>\r\n      <ic-navigation-group\r\n        slot=\"navigation\"\r\n        label=\"[navigationGroup]\"\r\n        expandable=\"true\"\r\n      >\r\n        <ic-navigation-item label=\"[navItem]\" href=\"#\"></ic-navigation-item>\r\n        <ic-navigation-item label=\"[navItem]\" href=\"#\"></ic-navigation-item>\r\n        <ic-navigation-item label=\"[navItem]\" href=\"#\"></ic-navigation-item>\r\n      </ic-navigation-group>\r\n      <ic-navigation-group slot=\"navigation\" label=\"[navigationGroup]\">\r\n        <ic-navigation-item label=\"[navItem]\" href=\"#\"></ic-navigation-item>\r\n        <ic-navigation-item\r\n          label=\"[navItem]\"\r\n          href=\"#\"\r\n        ></ic-navigation-item>\r\n      </ic-navigation-group>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n        selected\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n    </ic-top-navigation>\r\n    <main>\r\n      <ic-section-container class=\"main-section-container\" aligned=\"center\">\r\n        <div class=\"main-content-div\">\r\n          <ic-typography variant=\"h2\">\r\n            <h2>Example heading</h2>\r\n          </ic-typography>\r\n          <ic-typography variant=\"subtitle-large\">\r\n            <p>Example sub-heading</p>\r\n          </ic-typography>\r\n          <ic-typography>\r\n            <p>\r\n              Remove this div and add your custom content in ic-section-container.\r\n            </p>\r\n          </ic-typography>\r\n        </div>\r\n      </ic-section-container>\r\n    </main>\r\n    <ic-footer\r\n      aligned=\"center\"\r\n      caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\"\r\n      description=\"This pattern was built using the Intelligence Community Design System (ICDS).\"\r\n    >\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"logo\" href=\"/\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"#FFFFFF\"\r\n          width=\"48\"\r\n          height=\"48\"\r\n        >\r\n          <path\r\n            d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n        </svg>\r\n      </ic-footer-link>\r\n    </ic-footer>`),\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: createReactAppTsx(\r\n      `const alignment = \"center\";\r\n  const useStyles = createUseStyles({\r\n    main: { minHeight: \"100vh\", display: \"flex\" },\r\n    mainContentDiv: {\r\n      border: \"var(--ic-border-width) dashed var(--ic-architectural-400)\",\r\n      padding: \"var(--ic-space-md)\",\r\n      flex: 1,\r\n    },\r\n    mainSectionContainer: { display: \"flex\", flex: 1 },\r\n  });\r\n  const classes = useStyles(); \r\n  return (\r\n    <>\r\n      <IcClassificationBanner />\r\n      <IcTopNavigation\r\n        contentAligned={alignment}\r\n        appTitle=\"[Enter your application name]\"\r\n        status=\"alpha\"\r\n        version=\"v0.0.7\"\r\n      >\r\n        <SlottedSVG\r\n          slot=\"app-icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\" \r\n          fill=\"#000000\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n        </SlottedSVG>\r\n        <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n        <IcNavigationButton label=\"Profile\" slot=\"buttons\">\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\" \r\n            path={mdiAccount}\r\n          />\r\n        </IcNavigationButton>\r\n        <IcNavigationButton label=\"Settings\" slot=\"buttons\">\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\" \r\n            path={mdiCog}\r\n          />\r\n        </IcNavigationButton>\r\n        <IcNavigationButton label=\"Edit\" slot=\"buttons\">\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\" \r\n            path={mdiPencil}\r\n          />\r\n        </IcNavigationButton>\r\n        <IcNavigationGroup\r\n          slot=\"navigation\"\r\n          label=\"[navigationGroup]\"\r\n          expandable\r\n        >\r\n          <IcNavigationItem label=\"[navItem]\" href=\"#\" />\r\n          <IcNavigationItem label=\"[navItem]\" href=\"#\" />\r\n          <IcNavigationItem label=\"[navItem]\" href=\"#\" />\r\n        </IcNavigationGroup>\r\n        <IcNavigationGroup slot=\"navigation\" label=\"[navigationGroup]\">\r\n          <IcNavigationItem label=\"[navItem]\" href=\"#\" />\r\n          <IcNavigationItem label=\"[navItem]\" href=\"#\" />\r\n        </IcNavigationGroup>\r\n        <IcNavigationItem\r\n          slot=\"navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n          selected\r\n        />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n      </IcTopNavigation>\r\n      <main className={classes.main}>\r\n        <IcSectionContainer className={classes.mainSectionContainer} aligned={alignment}>\r\n          <div className={classes.mainContentDiv}>\r\n            <IcTypography variant=\"h2\">\r\n              <h2>Example heading</h2>\r\n            </IcTypography>\r\n            <IcTypography variant=\"subtitle-large\">\r\n              <p>Example sub-heading</p>\r\n            </IcTypography>\r\n            <IcTypography>\r\n              <p>\r\n                Remove this div and add your custom content in IcSectionContainer.\r\n              </p>\r\n            </IcTypography>\r\n          </div>\r\n        </IcSectionContainer>\r\n      </main>\r\n      <IcFooter\r\n        aligned={alignment}\r\n        caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\"\r\n        description=\"This pattern was built using the Intelligence Community Design System (ICDS).\"\r\n      >\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"logo\" href=\"/\">\r\n          <SlottedSVG\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"#FFFFFF\"\r\n            width=\"48\"\r\n            height=\"48\"\r\n          >\r\n            <path\r\n              d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n              fill=\"currentColor\"\r\n            />\r\n          </SlottedSVG>\r\n        </IcFooterLink>\r\n      </IcFooter>\r\n    </>\r\n  )`,\r\n      \"TopNavigationWithMegaMenu\",\r\n      \"jsx\",\r\n      true\r\n    ),\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsTopNavMegaMenu}\r\n  projectTitle=\"Top Navigation with Mega Menu\"\r\n  type=\"pattern\"\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"16px\",\r\n  }}\r\n>\r\n  <IcLink href=\"/top-navigation-mega-menu-pattern\" target=\"_blank\">\r\n    View example in new window\r\n  </IcLink>\r\n</ComponentPreview>\r\n\r\n### Back to top\r\n\r\nUse the back to top component to help people quickly return to the top of a long page.\r\n\r\nConsider using it on all apps to improve usability for everyone, including keyboard-only and some assistive technology users.\r\n\r\nDon't use back to top when the page is designed to fill the viewport without scrolling.\r\n\r\nFor more information, see the [back to top component](/components/back-to-top).\r\n\r\nexport const snippetsTopNavBackToTop = [\r\n  {\r\n    language: \"Web component\",\r\n    snippet:\r\n      createWebComponentsIndexHTML(`<ic-classification-banner></ic-classification-banner>\r\n    <ic-top-navigation\r\n      app-title=\"[Enter your application name]\"\r\n      status=\"alpha\"\r\n      version=\"v0.0.7\"\r\n      content-aligned=\"center\"\r\n    >\r\n      <svg\r\n        slot=\"app-icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        viewBox=\"0 0 24 24\" \r\n        fill=\"#000000\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n      >\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n        <path\r\n          d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\"\r\n        />\r\n      </svg>\r\n      <ic-search-bar\r\n        slot=\"search\"\r\n        placeholder=\"Search\"\r\n        label=\"Search\"\r\n      ></ic-search-bar>\r\n      <ic-navigation-button label=\"Profile\" slot=\"buttons\">\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path\r\n            d=\"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\"\r\n          />\r\n        </svg>\r\n      </ic-navigation-button>\r\n      <ic-navigation-button label=\"Settings\" slot=\"buttons\">\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path\r\n            d=\"M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z\"\r\n          />\r\n        </svg>\r\n      </ic-navigation-button>\r\n      <ic-navigation-button label=\"Edit\" slot=\"buttons\">\r\n        <svg\r\n          slot=\"icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path\r\n            d=\"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\"\r\n          />\r\n        </svg>\r\n      </ic-navigation-button>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n        selected\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n      <ic-navigation-item\r\n        slot=\"navigation\"\r\n        label=\"[navigationOption]\"\r\n        href=\"#\"\r\n      ></ic-navigation-item>\r\n    </ic-top-navigation>\r\n    <main id=\"main\">\r\n      <ic-section-container class=\"main-section-container\" aligned=\"center\">\r\n        <div class=\"main-content-div\">\r\n          <ic-typography variant=\"h2\">\r\n            <h2>Example heading</h2>\r\n          </ic-typography>\r\n          <ic-typography variant=\"subtitle-large\">\r\n            <p>Example sub-heading</p>\r\n          </ic-typography>\r\n          <ic-typography>\r\n            <p>\r\n              Remove this div and add your custom content in ic-section-container.\r\n            </p>\r\n          </ic-typography>\r\n        </div>\r\n      </ic-section-container>\r\n    </main>\r\n    <ic-back-to-top target=\"main\"></ic-back-to-top>\r\n    <ic-footer\r\n      aligned=\"center\"\r\n      caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\"\r\n      description=\"This pattern was built using the Intelligence Community Design System (ICDS).\"\r\n    >\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"link\" href=\"\">[footerLink]</ic-footer-link>\r\n      <ic-footer-link slot=\"logo\" href=\"/\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"#FFFFFF\"\r\n          width=\"48\"\r\n          height=\"48\"\r\n        >\r\n          <path\r\n            d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n        </svg>\r\n      </ic-footer-link>\r\n    </ic-footer>`),\r\n  },\r\n  {\r\n    language: \"React\",\r\n    snippet: createReactAppTsx(\r\n      `const alignment = \"center\";\r\n  const useStyles = createUseStyles({\r\n    main: { minHeight: \"100vh\", display: \"flex\" },\r\n    mainContentDiv: {\r\n      border: \"var(--ic-border-width) dashed var(--ic-architectural-400)\",\r\n      padding: \"var(--ic-space-md)\",\r\n      flex: 1,\r\n    },\r\n    mainSectionContainer: { display: \"flex\", flex: 1 },\r\n  });\r\n  const classes = useStyles(); \r\n  return (\r\n    <>\r\n      <IcClassificationBanner />\r\n      <IcTopNavigation\r\n        appTitle=\"[Enter your application name]\"\r\n        status=\"alpha\"\r\n        version=\"v0.0.7\"\r\n        contentAligned={alignment}\r\n      >\r\n        <SlottedSVG\r\n          slot=\"app-icon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 24 24\" \r\n          fill=\"#000000\"\r\n          width=\"24\"\r\n          height=\"24\" \r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\" />\r\n        </SlottedSVG>\r\n        <IcSearchBar slot=\"search\" placeholder=\"Search\" label=\"Search\" />\r\n        <IcNavigationButton label=\"Profile\" slot=\"buttons\">\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\" \r\n            path={mdiAccount}\r\n          />\r\n        </IcNavigationButton>\r\n        <IcNavigationButton label=\"Settings\" slot=\"buttons\">\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\" \r\n            path={mdiCog}\r\n          />\r\n        </IcNavigationButton>\r\n        <IcNavigationButton label=\"Edit\" slot=\"buttons\">\r\n          <SlottedSVG\r\n            slot=\"icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\" \r\n            path={mdiPencil}\r\n          />\r\n        </IcNavigationButton>\r\n        <IcNavigationItem\r\n          slot=\"navigation\"\r\n          label=\"[navigationOption]\"\r\n          href=\"#\"\r\n          selected\r\n        />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n        <IcNavigationItem slot=\"navigation\" label=\"[navigationOption]\" href=\"#\" />\r\n      </IcTopNavigation>\r\n      <main className={classes.main} id=\"main\">\r\n        <IcSectionContainer className={classes.mainSectionContainer} aligned={alignment}>\r\n          <div className={classes.mainContentDiv}>\r\n            <IcTypography variant=\"h2\">\r\n              <h2>Example heading</h2>\r\n            </IcTypography>\r\n            <IcTypography variant=\"subtitle-large\">\r\n              <p>Example sub-heading</p>\r\n            </IcTypography>\r\n            <IcTypography>\r\n              <p>\r\n                Remove this div and add your custom content in IcSectionContainer.\r\n              </p>\r\n            </IcTypography>\r\n          </div>\r\n        </IcSectionContainer>\r\n      </main>\r\n      <IcBackToTop target=\"main\" />\r\n      <IcFooter\r\n        aligned={alignment}\r\n        caption=\"This information is exempt under the Freedom of Information Act 2000 (FOIA) and may be exempt under other UK information legislation.\"\r\n        description=\"This pattern was built using the Intelligence Community Design System (ICDS).\"\r\n      >\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"link\" href=\"\">\r\n          [footerLink]\r\n        </IcFooterLink>\r\n        <IcFooterLink slot=\"logo\" href=\"/\">\r\n          <SlottedSVG\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"#FFFFFF\"\r\n            width=\"48\"\r\n            height=\"48\"\r\n          >\r\n            <path\r\n              d=\"M12 6.19L17 10.69V18.5H15V12.5H9V18.5H7V10.69L12 6.19ZM12 3.5L2 12.5H5V20.5H11V14.5H13V20.5H19V12.5H22L12 3.5Z\"\r\n              fill=\"currentColor\"\r\n            />\r\n          </SlottedSVG>\r\n        </IcFooterLink>\r\n      </IcFooter>\r\n    </>\r\n  )`,\r\n      \"TopNavigationWithBackToTop\",\r\n      \"jsx\",\r\n      true\r\n    ),\r\n  },\r\n];\r\n\r\n<ComponentPreview\r\n  snippets={snippetsTopNavBackToTop}\r\n  projectTitle=\"Top Navigation with Back to Top\"\r\n  type=\"pattern\"\r\n  style={{\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"16px\",\r\n  }}\r\n>\r\n  <IcLink href=\"/top-navigation-back-to-top-pattern\" target=\"_blank\">\r\n    View example in new window\r\n  </IcLink>\r\n</ComponentPreview>\r\n\r\n## Customisation\r\n\r\nThis pattern can be themed to change the look and feel of the app. Use the [custom theme](/get-started/install-components/custom-theme) guidance to change your app's theme. Make sure to select your theme in line with the accessibility requirements around colour contrast.\r\n\r\n<DoDontCaution\r\n  imageSrc={topNavigationPatternFig1}\r\n  imageAlt=\"An example page showing the layout with an alternatively themed look.\"\r\n  state=\"none\"\r\n  caption=\"An example of the top navigation layout themed to an alternative colour.\"\r\n/>\r\n\r\n## Accessibility considerations\r\n\r\nWhen configuring a page make sure to follow all [accessibility guidance](/accessibility). Most accessibility requirements are covered by the individual components. For further accessibility information see the individual component pages.\r\n\r\nWe’ve tested this pattern against WCAG 2.1 Level AA. It’s been tested with NVDA and VoiceOver, and several different users with different interaction methods.\r\n\r\n## Related patterns\r\n\r\n- [Side navigation layout](/patterns/navigation-patterns/side-navigation-layout)\r\n",
      "path": "/patterns/navigation-patterns/top-navigation-layout",
      "navPriority": 1,
      "date": "2024-03-25",
      "title": "Top navigation layout",
      "subTitle": "Use the top navigation layout to quickly set up a page where the top navigation menu is the primary form of navigation.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/patterns/navigation-patterns/top-navigation-layout.mdx",
      "meta": {
        "relativePath": "patterns\\top-navigation-layout.mdx",
        "createdAt": "2024-06-04T07:48:35.054Z",
        "lastModified": "2024-06-04T07:48:35.054Z",
        "size": 53672,
        "formattedSize": "52.4 KB"
      }
    },
    {
      "id": "styles\\colourx",
      "contents": "\r\nimport ColorTable from \"./components/ColourTable\";\r\nimport {\r\n  ColoursText,\r\n  ColoursAction,\r\n  ColoursActionBackgrounds,\r\n  ColoursLinks,\r\n  ColoursStatus,\r\n  ColoursDeprecatedStatus,\r\n  ColoursClassification,\r\n  ColoursArchitecturalAll,\r\n  ColoursTheme,\r\n} from \"./components/ColourTable/colours.config\";\r\n\r\n## Using colours\r\n\r\nPeople can complete tasks faster with recognisable, accessible and consistent colours.\r\n\r\nAlways use the Design System colour styles. These colours meet or exceed all [accessibility requirements](/accessibility/requirement).\r\n\r\nThe colour styles are built into the [UI Kit](/get-started). You should use these to help maintain consistency when you are building custom experiences.\r\n\r\n## Text\r\n\r\nPrimary text is an off-black colour that satisfies minimum and maximum contrast needs. Use this colour for the majority of text and elements.\r\n\r\nUse the secondary text colour for supporting content such as helper text or less important information in lists and tables.\r\n\r\nUse the tertiary text colour for even less important information. Use the tertiary text colour sparingly and always try to use the primary or secondary colours first.\r\n\r\nDon't use different colours for text, unless specified as part of a component.\r\n\r\n<ColorTable config={ColoursText} />\r\n\r\n## Action\r\n\r\nUse the action colour for interactive elements like buttons, form controls and important actions. This makes it easy for people to recognise elements and switch between contexts.\r\n\r\nThe single action colour creates consistency across a range of apps. Use the dark or light action colour variant if a background colour is used.\r\n\r\nUse the destructive action colour styles for actions that can't be reversed.\r\n\r\n<ColorTable config={ColoursAction} />\r\n\r\n### Action backgrounds\r\n\r\nInteractive elements sometimes require transparent backgrounds for their hover and pressed states. The action background colour styles use the action colour styles with transparency.\r\n\r\n<ColorTable config={ColoursActionBackgrounds} />\r\n\r\n## Links\r\n\r\nUse these colours for all links. These specific colours help to identify links from non-interactive text.\r\n\r\nUse the contrast colour variants to achieve good contrast for links that appear on dark backgrounds.\r\n\r\n<ColorTable config={ColoursLinks} />\r\n\r\n## Status\r\n\r\nUse these colours only for status updates, errors and warnings. Always include text describing the status even if you use an icon.\r\n\r\nUse the contrast colour variants to achieve good contrast when displaying status on dark backgrounds.\r\n\r\nUse the 'warning dark' colour for any 'warning' text.\r\n\r\n<ColorTable config={ColoursStatus} />\r\n\r\n<br />\r\n\r\nThe following status colours have been deprecated. You can find equivalent colours in the table above.\r\n\r\n<ColorTable config={ColoursDeprecatedStatus} />\r\n\r\n## Classification\r\n\r\nUse these colour styles for components that indicate content's classification.\r\n\r\n<ColorTable config={ColoursClassification} />\r\n\r\n## Architectural\r\n\r\nUse these colours in lines, borders and backgrounds to logically separate distinct pieces of content.\r\n\r\n<ColorTable config={ColoursArchitecturalAll} />\r\n\r\n## Theme\r\n\r\nYou may choose a theme colour to give your app a distinct theme or 'brand'. Make sure it meets contrast requirements with either black or white foreground text.\r\n\r\nIf you use the [IC UI Kit](/components), the foreground colour will be automatically determined based on your theme colour.\r\n\r\nThe theme colour is used on the [top navigation](/components/top-navigation), [side navigation](/components/side-navigation), [hero](/components/hero) and [footer](/components/footer) components.\r\n\r\nDon't use theme colours on any other components.\r\n\r\n<ColorTable config={ColoursTheme} />\r\n\r\n## Accessibility considerations\r\n\r\nThese colours have been considered against a variety of accessibility and usability practices. This includes colour contrast, recognition, consistency and with various colour deficiencies.\r\n\r\nIf using a 'light' theme colour, any text in those components will need to be black instead of white. This is automatic if you're using the IC UI Kit. It's not possible to use 'inaccessible' colours in the IC UI Kit as they'll revert to the default theme colour. See the component documentation for more details.\r\n",
      "path": "/styles/colour",
      "navPriority": 1,
      "date": "2024-05-10",
      "title": "Colour",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/colour.mdx",
      "meta": {
        "relativePath": "styles\\colour.mdx",
        "createdAt": "2024-06-04T07:48:35.054Z",
        "lastModified": "2024-06-04T07:48:35.054Z",
        "size": 4466,
        "formattedSize": "4.4 KB"
      }
    },
    {
      "id": "styles\\content-stylex",
      "contents": "\r\n## Introduction\r\n\r\nThe way we write, and [how we present it](/styles), can make or break an experience. Use this content style guide to support readability and engagement of your written content and apps.\r\n\r\n<p>\r\n  We've created this guide with inspiration from{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://mozilla.design/firefox/personality/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Mozilla\r\n  </ic-link>\r\n  , the <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.gov.uk/guidance/content-design/writing-for-gov-uk\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    UK Government Digital Service (GDS)\r\n  </ic-link> and some of the best commercial design systems.\r\n</p>\r\n\r\nThis guide applies to content you write in apps (like error messages) through to user guides and corporate comms.\r\n\r\nOur goal is to create informative, helpful and clear content. This isn't about 'dumbing content down'&mdash;our job is to 'open it up'. We want as many people as possible to understand and engage with what we write.\r\n\r\n<p>\r\n  Have a look at{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.gov.uk/government/publications/govuk-content-principles-conventions-and-research-background\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    research commissioned by GDS on the impact of style guides.\r\n  </ic-link>\r\n  This will tell you more about why we recommend speaking in an 'active voice', using\r\n  short sentences, subheadings, simple vocabulary and always writing in plain English.\r\n</p>\r\n\r\nThe more readable text is the more easily users can understand its content. Text with poor readability turns off readers and can make it challenging for them to stay focused.\r\n",
      "path": "/styles/content-style",
      "date": "2024-04-19",
      "title": "Content style",
      "subTitle": "People read, understand and consume content in different ways. What we write should be understandable by all, regardless of how they work, think or interact.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/content-style.mdx",
      "meta": {
        "relativePath": "styles\\content-style.mdx",
        "createdAt": "2024-06-04T07:48:35.056Z",
        "lastModified": "2024-06-04T07:48:35.056Z",
        "size": 2070,
        "formattedSize": "2.0 KB"
      }
    },
    {
      "id": "styles\\elevationx",
      "contents": "\r\nimport elevationFig1 from \"./images/fig-1-an-example-of-an-application-showing-the-different-layers-of-interaction.png\";\r\n\r\n## Interaction layers\r\n\r\nAdding elevation with shadow helps to provide hierarchy to components.\r\n\r\nAn app can be considered to be a set of different interaction layers that hold different types of components that exhibit similar behaviour. Components on each of these layers cast differing levels of shadow to provide the appearance of different heights from the page.\r\n\r\nThere are three layers:\r\n\r\n1. The base layer contains most of the page content and scrolls within the viewport. Its contents are on the bottom layer of an app so cast little or no shadow.\r\n2. The overlay layer contains components that overlay the base layer. These overlaid components may stick to the viewport when scrolled and cast a small shadow.\r\n3. The modal layer sits above all other content and contains components that are important to display to the user and interrupt their current task. Components on this layer cast a large shadow.\r\n\r\n<DoDontCaution\r\n  imageSrc={elevationFig1}\r\n  imageAlt=\"A graphic of an application showing the different layers of interaction on the lef-hand side and a depth chart on the right. The chart is used to show the hierarchy of the interactions. Explained in the previous text.\"\r\n  state=\"none\"\r\n  caption=\"An example of an application showing the different layers of interaction. This includes the base layer with some raised content, the overlay layer and the modal layer.\"\r\n/>\r\n\r\nTokens are provided for the z-index values of components which sit above the base layer as well as the base z-index itself:\r\n\r\n| <span class=\"css-token-header\">**Token**</span>                   | **Component**                                                                                                            | **Calculated z-index** |\r\n| ----------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------ | ---------------------- |\r\n| <span class=\"css-token\">--ic-z-index-base-value</span>            | Base z-index value. Used to calculate z-index of other ic components that sit above the base layer.                      | 0 (Base)               |\r\n| <span class=\"css-token\">--ic-z-index-page-header</span>           | [Page header](/components/page-header)                                                                                   | Base + 10              |\r\n| <span class=\"css-token\">--ic-z-index-back-to-top</span>           | [Back to top](/components/back-to-top)                                                                                   | Base + 20              |\r\n| <span class=\"css-token\">--ic-z-index-menu</span>                  | Menu for [select](/components/select) and [search bar](/components/search-bar)                                           | Base + 50              |\r\n| <span class=\"css-token\">--ic-z-index-popover</span>               | [Popover menu](/components/popover-menu)                                                                                 | Base + 50              |\r\n| <span class=\"css-token\">--ic-z-index-navigation-item</span>       | Navigation item used in [top navigation](/components/top-navigation) and [side navigation](/components/side-navigation). | Base + 50              |\r\n| <span class=\"css-token\">--ic-z-index-navigation-menu</span>       | Navigation menu used in [top navigation](/components/top-navigation) at smaller breakpoints.                             | Base + 60              |\r\n| <span class=\"css-token\">--ic-z-index-side-navigation</span>       | [Side navigation](/components/side-navigation)                                                                           | Base + 60              |\r\n| <span class=\"css-token\">--ic-z-index-dialog</span>                | [Dialog](/components/dialog)                                                                                             | Base + 100             |\r\n| <span class=\"css-token\">--ic-z-index-tooltip</span>               | [Tooltip](/components/tooltip)                                                                                           | Base + 110             |\r\n| <span class=\"css-token\">--ic-z-index-toast</span>                 | [Toast](/components/toast)                                                                                               | Base + 110             |\r\n| <span class=\"css-token\">--ic-z-index-classification-banner</span> | [Classification banner](/components/classification-banner)                                                               | Base + 200             |\r\n\r\nUsers can change the base value in their css:\r\n\r\n```css\r\n:root {\r\n  --ic-z-index-base-value: 1000;\r\n}\r\n```\r\n\r\nWhich will cause all other z-index tokens to be calculated from this new value.\r\n\r\nAdditionally, users can change the z-index value for a specific component, either globally:\r\n\r\n```css\r\n:root {\r\n  --ic-z-index-tooltip: 200;\r\n}\r\n```\r\n\r\nOr for a specific instance or instances of a component:\r\n\r\n<!-- prettier-ignore-start -->\r\n```html\r\n<ic-tooltip id=\"my-tooltip-id\">...</ic-tooltip>\r\n\r\n#my-tooltip-id {\r\n  --ic-z-index-tooltip: 300;\r\n}\r\n```\r\n\r\n```html\r\n<ic-tooltip class=\"my-tooltip-class\">...</ic-tooltip>\r\n\r\n.my-tooltip-class {\r\n  --ic-z-index-tooltip: 300;\r\n}\r\n```\r\n<!-- prettier-ignore-end -->\r\n\r\n## Shadows\r\n\r\nEach interaction layer has a defined shadow to provide the sense of depth.\r\n\r\n| <span style={{width: '5vw', display: 'inline-block'}}>**Token**</span> | **Description**                                                                  | **Perceived depth** |\r\n| ---------------------------------------------------------------------- | -------------------------------------------------------------------------------- | ------------------- |\r\n| none                                                                   | Components on the base layer cast no shadow.                                     | 0px                 |\r\n| <span class=\"css-token\">--ic-elevation-raised</span>                   | Raised components sit on the base layer and cast a slight shadow.                | 1px                 |\r\n| <span class=\"css-token\">--ic-elevation-overlay</span>                  | Components that sit in the overlay layer cast a small shadow.                    | 4px                 |\r\n| <span class=\"css-token\">--ic-elevation-modal</span>                    | The modal layer contains components that appear highest and cast a large shadow. | 8px                 |\r\n\r\n## Accessibility considerations\r\n\r\nThe shadows are purely decorative and don't provide any additional meaning that can't otherwise be understood from the page contents or code.\r\n\r\nShadows aren't used to distinguish a component from adjacent components or background layers. The components themselves provide enough contrast to ensure they stand out.\r\n",
      "path": "/styles/elevation",
      "navPriority": 6,
      "date": "2022-11-15",
      "title": "Elevation",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/elevation.mdx",
      "meta": {
        "relativePath": "styles\\elevation.mdx",
        "createdAt": "2024-04-04T12:41:44.295Z",
        "lastModified": "2024-04-04T12:41:44.295Z",
        "size": 7172,
        "formattedSize": "7.0 KB"
      }
    },
    {
      "id": "styles\\focus-indicatorx",
      "contents": "\r\nimport focusIndicatorFig1 from \"./images/fig-1-focus-indicators-inherit-the-border-radius-of-the-components-they-enclose.png\";\r\nimport focusIndicatorFig2 from \"./images/fig-2-focus-on-links-is-indicated-by-an-underline.png\";\r\n\r\n## Enclosing components\r\n\r\nThe focus indicator shows users where they are on a page. It encloses most components and inherits their shapes. They are especially useful for keyboard-only and power users.\r\n\r\nWhen applied to squared components, for example [buttons](/components/button), [text field](/components/text-field) and [checkboxes](/components/checkbox), the focus indicator will fully enclose the component and therefore appear squared.\r\n\r\nWhen applied to rounded components, for example [radio](/components/radio), [switch](/components/switch) and [back to top](/components/back-to-top), the focus indicator will appear rounded.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={focusIndicatorFig1}\r\n    imageAlt=\"An image of a button and back to top component, both with focus applied to them.\"\r\n    state=\"none\"\r\n    caption=\"Focus indicators inherit the border radius of the components they enclose.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Links\r\n\r\nWhen links are focused, the indicator will appear as the hover state.\r\n\r\n<DoubleDoDontCaution>\r\n  <DoDontCaution\r\n    imageSrc={focusIndicatorFig2}\r\n    imageAlt=\"An image of a blue link labelled 'Coffee blog' with a thick underline of the same colour.\"\r\n    state=\"none\"\r\n    caption=\"Focus on links is indicated by a thick underline.\"\r\n  />\r\n</DoubleDoDontCaution>\r\n\r\n## Positioning and layout\r\n\r\n### Adjacent to components\r\n\r\nFor most components, the focus indicator will enclose the full component, appearing directly adjacent to its borders.\r\n\r\n### Internal to components\r\n\r\nFocus indicators are required to be fully visible. For components that are adjacent to other components, or the viewport edge, the focus indicator appears internal to the component to remain visible.\r\n\r\nEnough padding is provided within these components so that no content is obscured. Make sure to always confirm that no part of the focus indicator or the component's content is clipped or obscured.\r\n\r\n## Navigation\r\n\r\nKeyboard navigation controls vary between components. For specific information, refer to the 'Accessibility' tab in a component's page.\r\n\r\n## Accessibility considerations\r\n\r\n<p>\r\n  We've designed this style token to meet the emerging{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://www.w3.org/TR/WCAG22/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Web Content Accessibility Guidelines (WCAG) 2.2 Candidate Recommendation\r\n  </ic-link>{\" \"}\r\n  criteria for Level AA (and in some cases AAA) requirements.\r\n</p>\r\n\r\nGiven the requirements are still a draft and may be subject to change, we will track these criteria to make sure this style token remains conformant.\r\n",
      "path": "/styles/focus-indicator",
      "navPriority": 7,
      "date": "2022-11-15",
      "title": "Focus indicator",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/focus-indicator.mdx",
      "meta": {
        "relativePath": "styles\\focus-indicator.mdx",
        "createdAt": "2024-06-04T07:48:35.057Z",
        "lastModified": "2024-06-04T07:48:35.057Z",
        "size": 3102,
        "formattedSize": "3.0 KB"
      }
    },
    {
      "id": "styles\\grammarx",
      "contents": "\r\n## Abbreviations and acronyms\r\n\r\nWe regularly use abbreviations and acronyms, especially in technology. Write out the words the first time you mention it, then use the short version next time.\r\n\r\nFor example, write 'Intelligence Community Design System (ICDS)' the first time you mention it. Then 'ICDS' the second time.\r\n\r\n## Ampersands\r\n\r\nDon’t use ampersands in body text. “And” should be spelled out in sentences and paragraphs. Spelling out “and” improves readability and makes scanning easier. Use ampersands only if they are part of a logo or in a brand name.\r\n\r\n## Paragraphs\r\n\r\nA paragraph should be made up of two to three sentences if possible.\r\n\r\n## Capitalisation\r\n\r\nWe don't use block capitals as they're difficult for people to read.\r\n\r\nCapitalise proper nouns and write everything else in sentence case. A proper noun is often a specific place, person or thing.\r\n\r\nSentence case is where only the first letter of the first word in a sentence or phrase is capitalised. Using capital letters for special or important words can be highly subjective and can result in inconsistencies across an organisation.\r\n\r\n| **Like this...**       | **Not like this...**   |\r\n| ---------------------- | ---------------------- |\r\n| Date and time          | Date and Time          |\r\n| Text fields            | Text Fields            |\r\n| Intelligence Community | Intelligence community |\r\n\r\n## Bold\r\n\r\nOnly use bold to refer to text from interfaces in technical documentation or instructions &ndash; use bold to explain what field a user needs to fill in on a form, or which button they need to select. For example: “Select **Continue** to open the certificate window.”\r\n\r\n## Italics\r\n\r\nDo not use italics. Use ‘single quotation marks’ if referring to a document, scheme or initiative.\r\n\r\n## Underline\r\n\r\nNever use underline to emphasise your text because underline is used to indicate hyperlinks.\r\n\r\n## Full stops\r\n\r\nDon't use full stops in headings, list items (which are not full sentences), buttons or action links.\r\n\r\n## Lists\r\n\r\n- Consistent lists are easier to read and will be read properly by assistive technology. List items should end with a full stop if they are complete sentences.\r\n- Begin list items with a capital letter.\r\n\r\n## Footnotes\r\n\r\nDo not use footnotes on web pages. They’re designed for reference in print, not web pages. Always consider the user need first. If the information in the footnotes is important, include it in the body text. If it’s not, leave it out.\r\n\r\n## Exceptions\r\n\r\nNot all scenarios will be covered by this guidance &ndash; do what makes sense. For example, writing the number in words in the example below.\r\n\r\n| **Like this...**                                  | **Not like this...**                           |\r\n| ------------------------------------------------- | ---------------------------------------------- |\r\n| This API is built by a third-party.               | This API is built by a 3rd party.              |\r\n| Children's toys are sold at the second-hand shop. | Children's toys are sold at the 2nd-hand shop. |\r\n",
      "path": "/styles/content-style/grammar",
      "navPriority": 3,
      "date": "2024-04-19",
      "title": "Grammar and punctuation",
      "subTitle": "Grammar and punctuation are the building blocks of good writing.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/grammar.mdx",
      "meta": {
        "relativePath": "styles\\grammar.mdx",
        "createdAt": "2024-06-04T07:48:35.058Z",
        "lastModified": "2024-06-04T07:48:35.058Z",
        "size": 3410,
        "formattedSize": "3.3 KB"
      }
    },
    {
      "id": "styles\\iconsx",
      "contents": "\r\nimport IconFinder from \"./components/IconFinder\";\r\n\r\n## What icons we use\r\n\r\n<p>\r\n  The Design System uses a reduced number of the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://materialdesignicons.com/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Material Design Icons\r\n  </ic-link>{\" \"}\r\n  library. You can use other Material Design Icons if you need to, but keep the\r\n  common icons consistent.\r\n</p>\r\n\r\nWe use the extended open source icon set because our apps often need to use uncommon icons.\r\n\r\n<IconFinder />\r\n\r\n## Usage\r\n\r\n### Use sparingly\r\n\r\nDon't rely on icons when your layout becomes complex as this can make it harder to understand.\r\n\r\nConsider alternatives such as dropdowns, merged buttons and splitting a layout across multiple pages.\r\n\r\n## Accessibility considerations\r\n\r\nProvide a text label when you use icons. Even if the text isn't visible on the screen, assistive technology needs to describe the icon.\r\n\r\nUse tooltips on icons or icon buttons so that the meaning of an icon is obvious.\r\n\r\n## Slotted SVGs\r\n\r\nAdding the `slot` attribute to SVGs within a Typescript file produces an error due to slot not being a SVG prop. `<SlottedSVG>` removes this error and can be used with [native SVGs](/get-started/install-components/react/#working-with-slotted-svgs) or [Material Design Icons (MDI)](/get-started/install-components/react/#using-material-design-icons-mdi-with-slottedsvg).\r\n\r\n- [Side navigation component](/components/side-navigation/code/#with-material-design-icons-in-slottedsvg) using Material Design Icons with SlottedSVG\r\n",
      "path": "/styles/icons",
      "navPriority": 2,
      "date": "2022-11-15",
      "title": "Icons",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/icons.mdx",
      "meta": {
        "relativePath": "styles\\icons.mdx",
        "createdAt": "2024-04-04T12:41:44.295Z",
        "lastModified": "2024-04-04T12:41:44.295Z",
        "size": 1772,
        "formattedSize": "1.7 KB"
      }
    },
    {
      "id": "styles\\inclusive-languagex",
      "contents": "\r\n## Introduction\r\n\r\nWe firmly agree with \"Nothing about us without us\"<sup id=\"ref-1\"><a href=\"#fn-1\">1</a></sup>. Where possible, we have developed the Design System and its content style with input from across the communities. This includes disability advisory networks, affinity groups and expertise from the UKIC.\r\n\r\n## Addressing potentially sensitive topics\r\n\r\nSome friendly terms can unintentionally exclude big groups of people. For example, 'hi folks', 'you guys' or 'all of mankind' refer to gender identity<sup id=\"ref-2\"><a href=\"#fn-2\">2</a></sup>. People have different beliefs, identities or perceptions that can change how they feel about these words.\r\n\r\n### Social Model of Disability\r\n\r\n<p>\r\n  This Design System is an exception to talking about disability, impairment and\r\n  other situations that affect how people work. The Design System language and\r\n  principles are designed around{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://en.wikipedia.org/wiki/Social_model_of_disability\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    The Social Model of Disability\r\n  </ic-link>\r\n  .\r\n</p>\r\n\r\n\"The social model of disability is a way of viewing the world, developed by disabled people... The model says that people are disabled by barriers in society, not by their impairment or difference.\"<sup id=\"ref-3\"><a href=\"#fn-3\">3</a></sup>\r\n\r\n### Disability and difference\r\n\r\nWhile some words are inoffensive in certain contexts, some words are offensive in any context and should always be avoided.\r\n\r\nIt's important to consider the context when using some terms. For example, \"falling on deaf ears\" can be interpreted as offensive.\r\n\r\n### Examples of Inclusive Language\r\n\r\nThis is not an 'Intelligence Community approved' list of terms but explains the reasoning for language you encounter within the Design System.\r\n\r\n| **This...**                  | **Instead of...**                                                                                                                                                                                               |\r\n| ---------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| Impairment                   | Disability                                                                                                                                                                                                      |\r\n| Person with disability (PwD) | Handicapped, diffability                                                                                                                                                                                        |\r\n| People without disabilities  | Able-bodied                                                                                                                                                                                                     |\r\n| Cognitive difference         | Learning disability, learning defect, special needs                                                                                                                                                             |\r\n| Visually impaired            | Blind (when somebody has limited vision)                                                                                                                                                                        |\r\n| Blind                        | Visually impaired (when somebody is unable to see)                                                                                                                                                              |\r\n| d/Deaf                       | Deaf. The term Deaf with an uppercase 'D' often refers to those who identify as Deaf or are active in the Deaf community. Deaf with a lowercase 'd' often refers to those diagnosed with the medical condition. |\r\n| has [illness or disability]  | Suffers from, is a victim of, is afflicted with                                                                                                                                                                 |\r\n| Neurodiversity               | Neurodiverse, neurodivergent                                                                                                                                                                                    |\r\n\r\n<p>\r\n  1.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    id=\"fn-1\"\r\n    href=\"https://en.wikipedia.org/wiki/Nothing_About_Us_Without_Us\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Nothing about us without us\r\n  </ic-link>\r\n  .<i> Wikipedia</i>. Retrieved 24 March 2021. <a href=\"#ref-1\">Back to content</a>\r\n</p>\r\n<p>\r\n  2.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    id=\"fn-2\"\r\n    href=\"https://www.linkedin.com/pulse/inclusive-language-important-thriving-diverse-work-culture-singh\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Thriving diverse work culture\r\n  </ic-link>\r\n  .<i> LinkedIn</i>. Retrieved 24 March 2021. <a href=\"#ref-2\">Back to content</a>\r\n</p>\r\n<p>\r\n  3.{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    id=\"fn-3\"\r\n    href=\"https://www.scope.org.uk/about-us/social-model-of-disability/\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Social model of disability\r\n  </ic-link>\r\n  .<i> Scope</i>. Retrieved 24 March 2021. <a href=\"#ref-3\">Back to content</a>\r\n</p>\r\n",
      "path": "/styles/content-style/inclusive-language",
      "navPriority": 2,
      "date": "2024-04-19",
      "title": "Inclusive language",
      "subTitle": "Consider that what you write can have side effects even with the best of intentions.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/inclusive-language.mdx",
      "meta": {
        "relativePath": "styles\\inclusive-language.mdx",
        "createdAt": "2024-06-04T07:48:35.059Z",
        "lastModified": "2024-06-04T07:48:35.059Z",
        "size": 5867,
        "formattedSize": "5.7 KB"
      }
    },
    {
      "id": "styles\\indexx",
      "contents": "\r\n## Introduction\r\n\r\nStyle tokens are key in creating accessible, usable and consistent experiences. These tokens are used in all [components](/components) and [patterns](/patterns).\r\n\r\nWe've tested that these styles meet or exceed the [accessibility requirement](/accessibility/requirement).\r\n\r\n## Content style\r\n\r\nAn [inclusive content style](/styles/content-style) means anyone can understand the app or content, regardless of how they work or think.\r\n\r\n## Contribute\r\n\r\nWe are expanding the Design System and UI Kit. You can check out the [roadmap](/community/roadmap) for what's coming. If you can help you can [read more on how to contribute](/community).\r\n",
      "path": "/styles",
      "navPriority": 0,
      "date": "2024-04-18",
      "title": "Styles",
      "subTitle": "This section introduces our style tokens, which describe how things look and feel.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/index.mdx",
      "meta": {
        "relativePath": "styles\\index.mdx",
        "createdAt": "2024-06-04T07:48:35.060Z",
        "lastModified": "2024-06-04T07:48:35.060Z",
        "size": 954,
        "formattedSize": "954 Bytes"
      }
    },
    {
      "id": "styles\\layout-spacingx",
      "contents": "\r\nimport layoutSpacingFig1 from \"./images/fig-1-components-laid-out-on-8px-grid.png\";\r\nimport layoutSpacingFig2 from \"./images/fig-2-vertical-rhythm-example.png\";\r\nimport layoutSpacingFig3 from \"./images/fig-3-margins-columns-gutters.png\";\r\nimport layoutSpacingFig4 from \"./images/fig-4-max-width.png\";\r\nimport layoutSpacingFig5 from \"./images/fig-5-content-on-grid.png\";\r\nimport layoutSpacingFig6 from \"./images/fig-6-containers.png\";\r\nimport layoutSpacingFig7 from \"./images/fig-7-fixed-grid.png\";\r\nimport layoutSpacingFig8 from \"./images/fig-8-influencers.png\";\r\n\r\n## Using consistent layouts\r\n\r\nThe eight-pixel, fluid column grid provides the basis for every page. It enables consistent positioning and sizing of all UI components to build structure into the designs, and speeds up the creation of new pages and components.\r\n\r\nColumns enable pages to be defined responsively, so that they look great on any device or screen size. Every component can be positioned across a number of columns and spacing between components is maintained through the use of gutters.\r\n\r\nUsing the eight-pixel square provides visual rhythm throughout the UI components as it allows internal elements to be consistently placed, and creates a continuous vertical flow using spacing tokens.\r\n\r\n## The eight-pixel square\r\n\r\nEvery component is created upon a grid comprising of eight-pixel squares. Each internal element uses position, sizing and padding values in multiples of eight pixels so that they align to this grid. Some smaller or more compact elements can use fractions of the eight-pixel square to achieve sizes such as four or two pixels.\r\n\r\n<DoDontCaution\r\n  imageSrc={layoutSpacingFig1}\r\n  imageAlt=\"Two short forms each with a select box, text area and secondary button. All components and their internal elements align to a visible eight-pixel grid.\"\r\n  state=\"none\"\r\n  caption=\"Components are based upon an eight-pixel grid to help drive visual consistency between them.\"\r\n/>\r\n\r\nSpacing tokens are used within the components to make sure they are consistent and to allow the quick update of spacing within the system by changing the token values. The spacing tokens are all multiples of the base eight-pixel grid square.\r\n\r\n| **Spacing token** | **Value** |\r\n| ----------------- | --------- |\r\n| --ic-space-xxxs   | 0.125rem  |\r\n| --ic-space-xxs    | 0.25rem   |\r\n| --ic-space-xs     | 0.5rem    |\r\n| --ic-space-sm     | 0.75rem   |\r\n| --ic-space-md     | 1rem      |\r\n| --ic-space-lg     | 1.5rem    |\r\n| --ic-space-xl     | 2rem      |\r\n| --ic-space-xxl    | 3rem      |\r\n\r\nElements are vertically laid out on a page also using these spacing tokens. This helps to provide vertical rhythm throughout a page’s contents and makes it easier to understand by organising the content into repeatable spacing patterns.\r\n\r\n<DoDontCaution\r\n  imageSrc={layoutSpacingFig2}\r\n  imageAlt=\"Two examples of a text article with a heading, subtitle and some paragraphs of body copy. The first example has its elements aligned to the eight pixel grid creating vertical rhythm, whereas the second example’s elements don't align to the grid and seem uneven.\"\r\n  state=\"none\"\r\n  caption=\"Align all elements to the vertical eight-pixel grid to create vertical rhythm. The example on the right does not align to the grid and seems uneven.\"\r\n/>\r\n\r\n## The fluid column grid\r\n\r\nIt's important that page content is visible on any screen size. The fluid column grid helps us quickly define how content will display at different screen sizes by specifying the number of columns any given component will span horizontally.\r\n\r\nIt dictates the positioning of each individual component along with the horizontal spacing between them, as well as how they will contract and expand when the viewport is resized.\r\n\r\nThe fluid column grid is made up of three elements: margins, columns and gutters. The values for each of them can differ across different breakpoints.\r\n\r\n<DoDontCaution\r\n  imageSrc={layoutSpacingFig3}\r\n  imageAlt=\"An example of a 12-column grid applied to a viewport showing margins on the left and right and gutters in between each column.\"\r\n  state=\"none\"\r\n  caption=\"An example of a 12-column grid applied to a viewport showing margins on the left and right and gutters in between each column.\"\r\n/>\r\n\r\n### Margins\r\n\r\nThe margins are the spaces between the left and right sides of the screen and the content itself. Margins can either be fixed, or set to scale depending on the implementation of the page at a given screen size.\r\n\r\n### Gutters\r\n\r\nThe gutters are the spaces between columns. These are always equal to one another, but can be changed to increase or reduce at different screen sizes.\r\n\r\n### Columns\r\n\r\nThe columns define the area that content can be placed. The number of columns can be set differently across different screen sizes and scale in width as the viewport scales.\r\n\r\n### Breakpoints\r\n\r\nBreakpoints are defined horizontal viewport sizes that can be used to trigger changes in the values for margins, gutters and columns. This is what enables us to change how content is laid out as a screen changes in size.\r\n\r\n| **Breakpoint**    | **Number of columns** | **Gutters** | **Margins** |\r\n| ----------------- | --------------------- | ----------- | ----------- |\r\n| xs (<=576px)      | 4(scaling)            | 8px         | 8px         |\r\n| sm (577–768px)    | 8(scaling)            | 16px        | 16px        |\r\n| md (769px–992px)  | 12(scaling)           | 16px        | 16px        |\r\n| lg (993px–1200px) | 12(scaling)           | 16px        | 16px        |\r\n| xl (>1200px)      | 12(scaling)           | 16px        | 24px        |\r\n\r\n### Max-width\r\n\r\nThe grid can be constrained to a max-width if you don’t want the grid to span the entire viewport. This can be useful for very large displays, or to maintain a good readable line length for your page’s copy.\r\n\r\nThe max-width will limit the width of your grid to the max-width value, and add scaling outer margins around the grid container.\r\n\r\n<DoDontCaution\r\n  imageSrc={layoutSpacingFig4}\r\n  imageAlt=\"An example of a viewport with a 12-column grid with a max-width set. Outer margins are applied on the left and right of the grid.\"\r\n  state=\"none\"\r\n  caption=\"Set a max-width so that the column grid is constrained and outer margins are applied on the left and right of the viewport.\"\r\n/>\r\n\r\n### Laying out content using the grid\r\n\r\nPage content can be defined as spanning a number of columns, and this number of columns can change across each breakpoint.\r\n\r\nFor example, a card component may span three columns on the extra large breakpoint, but span all four columns on the extra small breakpoint.\r\n\r\n<DoDontCaution\r\n  imageSrc={layoutSpacingFig5}\r\n  imageAlt=\"An example showing lots of different pieces of content laid onto a 12-column grid. Different content spans different numbers of columns.\"\r\n  state=\"none\"\r\n  caption=\"Lay out content by specifying how many columns it spans. Content can span different numbers of columns in order to achieve different layouts.\"\r\n/>\r\n\r\nNot all content has to span a number of columns, it can instead be defined as having a fixed width and simply positioned so that it is aligned with the columns.\r\n\r\nTake care when using fixed width elements so that they don't overflow the screen when it is reduced in size.\r\n\r\nContent can be added to containers so that only the container is set to span grid columns. This can be useful when trying to align content in an enclosed area.\r\n\r\n<DoDontCaution\r\n  imageSrc={layoutSpacingFig6}\r\n  imageAlt=\"An example form titled ‘Coffee survey’  laid out on a 12-column gird. It has some text elements spanning all 12 columns, a select input that spans six columns, a text area that spans 12 columns and a container that is aligned to the left column but is sized to hug three buttons that it contains.\"\r\n  state=\"none\"\r\n  caption=\"Group components into containers so that they can be positioned separately from the grid. Instead, the container is positioned to the grid, not the container’s contents.\"\r\n/>\r\n\r\n### Fixed column grid alternative\r\n\r\nA fixed grid can be used instead of using the fluid grid layout defined above. Instead of the number of columns being specified, specify the fixed width of each column, and the page will include more columns as it grows in width and space becomes available. This can be useful when you are laying out content that can’t resize as the columns resize.\r\n\r\n<DoDontCaution\r\n  imageSrc={layoutSpacingFig7}\r\n  imageAlt=\"Two examples of fixed column grids. One has a viewport width of 496px and displays six columns. The second has a viewport width of 336px and displays only four columns.\"\r\n  state=\"none\"\r\n  caption=\"A fixed column grid includes different numbers of columns dependent on the viewport size. This is useful when you don't want content to resize.\"\r\n/>\r\n\r\n### Zoom\r\n\r\nWhen a page is zoomed in upon using the browser controls, the page and breakpoints will behave as if the screen size were changed. A zoom of 400% on a starting viewport that is 1280px wide is equivalent a screen that is 320px wide. This is one reason why it is really important to always specify your apps responsively so that all your content can be viewed equally by all users.\r\n\r\n## Grid influencers\r\n\r\nSometimes other page elements exist outside of the grid and influence how it is sized. Including a fixed size side navigation forces the grid to occupy the remaining available horizontal width of the viewport.\r\n\r\n<DoDontCaution\r\n  imageSrc={layoutSpacingFig8}\r\n  imageAlt=\"An example of a viewport with a side navigation on the left-hand side and a 12-column grid filling the remaining space on the right.\"\r\n  state=\"none\"\r\n  caption=\"Grid influencers, such as a fixed width side navigation, cause the grid to compress into the remaining available space.\"\r\n/>\r\n",
      "path": "/styles/layout-spacing",
      "navPriority": 3,
      "date": "2022-11-15",
      "title": "Layout and spacing",
      "subTitle": "Common layout and spacing create consistency across pages and enable the rapid creation of new pages.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/layout-spacing.mdx",
      "meta": {
        "relativePath": "styles\\layout-spacing.mdx",
        "createdAt": "2024-06-04T07:48:35.061Z",
        "lastModified": "2024-06-04T07:48:35.061Z",
        "size": 10187,
        "formattedSize": "9.9 KB"
      }
    },
    {
      "id": "styles\\linksx",
      "contents": "\r\n## Introduction\r\n\r\nIt's important to make sure link text tells users where they are going and why. This is because link text should make sense without context (the words around the link).\r\n\r\nAvoid writing 'click here' or 'read more'.\r\n\r\n| **Like this...**                                                   | **Not like this...**                                                           |\r\n| ------------------------------------------------------------------ | ------------------------------------------------------------------------------ |\r\n| Find out about the <a href=\"#0\">changes to the expense policy.</a> | Find out about changes to the expense policy. <a href=\"#0\">Read more here.</a> |\r\n\r\nStart with a verb when telling people to do something.\r\n\r\n| **Like this...**                          | **Not like this...**                 |\r\n| ----------------------------------------- | ------------------------------------ |\r\n| <a href=\"#0\">Read new expense policy.</a> | <a href=\"#0\">New expense policy.</a> |\r\n",
      "path": "/styles/content-style/links",
      "navPriority": 5,
      "date": "2024-04-19",
      "title": "Links",
      "subTitle": "Links need to be understandable by all users.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/links.mdx",
      "meta": {
        "relativePath": "styles\\links.mdx",
        "createdAt": "2024-05-20T13:20:43.404Z",
        "lastModified": "2024-05-20T13:20:43.404Z",
        "size": 1289,
        "formattedSize": "1.3 KB"
      }
    },
    {
      "id": "styles\\motionx",
      "contents": "\r\nimport motionVid1 from \"./images/slide-animation-between-steps.mp4\";\r\nimport motionVid2 from \"./images/expand-animation-on-cards.mp4\";\r\nimport motionVid3 from \"./images/entry-and-exit.mp4\";\r\nimport motionVid4 from \"./images/button-state-transitions.mp4\";\r\n\r\n## Using motion\r\n\r\nMotion is achieved by applying animations or transitions to interface elements.\r\n\r\nMotion can make your app feel more responsive. It can be especially useful for providing subtle feedback and affordance about functionality, as well as when loading data.\r\n\r\nHowever, use animation subtly and sparingly. Many people can experience side effects from excessive animation, such as headaches, eye strain and anxiety.\r\n\r\n## When to use\r\n\r\nUse motion to highlight relationships between interface elements to reinforce the flow of an app.\r\n\r\nSmall animations are valuable for providing feedback, such as showing that an action has been registered.\r\n\r\nTransitions between component states or animating how components enter or exit the page help an application to feel more fluid.\r\n\r\nHowever, most apps won't need animation or transitions other than the default ones from a component library.\r\n\r\nIf using custom motion in your app always provide a way to turn off animations.\r\n\r\n## When not to use\r\n\r\nDon't use motion or animation to add decorative or fun elements as these can be distracting and can cause people more severe side effects.\r\n\r\nDon't use motion as the only way to provide feedback, only use it to enhance information that can be understood without the motion.\r\n\r\nDon't create new animations where a standard one exists, such as a progress bar.\r\n\r\n## Motion behaviour\r\n\r\n### Transitions\r\n\r\nWhen navigating between pages, or in multi-step processes and other complex layouts, animating the transition can make it more obvious what has changed.\r\n\r\n<video\r\n  width=\"100%\"\r\n  muted\r\n  controls\r\n  loop\r\n  title=\"A slide and fade animation used to highlight navigation through a multi-stepped process.\"\r\n>\r\n  <source src={motionVid1} type=\"video/mp4\" />\r\n</video>\r\n\r\nIt can also help to hint towards where you've come from and where you might go based on your next navigation action.\r\n\r\n<video\r\n  width=\"50%\"\r\n  muted\r\n  controls\r\n  loop\r\n  title=\"An expand animation helps to link the overlay to the component that it's related to. It also provides an indication to where the close button would take the user.\"\r\n>\r\n  <source src={motionVid2} type=\"video/mp4\" />\r\n</video>\r\n\r\n#### Establish relationships\r\n\r\nWhen elements are displayed, they enter and exit the screen. Animating entry and exit behaviours can help to establish relationships between elements.\r\n\r\nDefining the order in which elements appear can help to afford hierarchy or importance. Grouping similar elements so that they animate in the same way can differentiate them from unrelated elements that animate differently.\r\n\r\nStarting entrance animations from specific positions can create parent/child relationships between elements.\r\n\r\n<video\r\n  width=\"50%\"\r\n  muted\r\n  controls\r\n  loop\r\n  title=\"Entry and exit transitions can establish relationships between content before a user even reads the content.\"\r\n>\r\n  <source src={motionVid3} type=\"video/mp4\" />\r\n</video>\r\n\r\n### Feedback\r\n\r\nMicro-interactions provide subtle feedback about a user interaction. Motion can be used as micro-interactions that immediately indicate that an action was recognised.\r\n\r\nThis type of motion should be quick so not to distract or delay the completion of a task, but instead aid the understanding of it.\r\n\r\nWhen elements change state, animation can help to emphasize the transformation by grabbing the user's attention.\r\n\r\n<video\r\n  width=\"50%\"\r\n  muted\r\n  controls\r\n  loop\r\n  title=\"Animating the transitions between component states emphasise the transition.\"\r\n>\r\n  <source src={motionVid4} type=\"video/mp4\" />\r\n</video>\r\n\r\n### Loading placeholders\r\n\r\nMotion can be used to indicate that something is loading. Loading indicators use motion to provide a sense of progress. Animated placeholders, such as the skeleton loading pattern, prevent layouts from moving as elements are loaded and create a smoother experience.\r\n\r\n## Animation tokens\r\n\r\nThe UI Kit uses a set of animation tokens to consistently apply motion across its components. These tokens use a consistent set of values to achieve continuity across the site.\r\n\r\n### Duration\r\n\r\nThese tokens define how quickly an animation takes place. The 'fast' duration is often used for animations between component states. The ‘slow' duration is most often used for content changes.\r\n\r\n- Fast (100ms)\r\n- Slow (300ms)\r\n\r\n### Easing\r\n\r\nEasing helps to make motion feel natural. Using the easing token consistently helps to achieve continuity throughout an app. Use the easing tokens `--ic-easing-transition-fast` or `--ic-easing-transition-slow`.\r\n\r\n## Animation styles\r\n\r\nThese are the common animation styles that are used on component UI Kit.\r\n\r\n### Fade in and out\r\n\r\nFade animations change the opacity of an element and are used for quick transition between states as well as in entry and exit transitions.\r\n\r\n### Slide up, down, left and right\r\n\r\nSlide animations change the position of an element and are often used for entry and exit transitions or navigation.\r\n\r\n### Zoom in and out\r\n\r\nZoom animations change the size of an element and are often used for entry and exit transitions or micro-interactions.\r\n\r\n### Expand and shrink\r\n\r\nExpand and shrink animations change the shape of a component and are often used for entry and exit transitions.\r\n\r\n## Accessibility considerations\r\n\r\nNever use a full-page or parallax animation. Where possible, avoid decorative animation altogether.\r\n\r\nDon't animate the scrolling of a page other than the default browser behaviour.\r\n\r\nSome people indicate they prefer reduced motion through the prefers-reduced-motion browser setting. Your app must respect this setting.\r\n",
      "path": "/styles/motion",
      "navPriority": 5,
      "date": "2022-11-15",
      "title": "Motion",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/motion.mdx",
      "meta": {
        "relativePath": "styles\\motion.mdx",
        "createdAt": "2024-06-04T07:48:35.062Z",
        "lastModified": "2024-06-04T07:48:35.062Z",
        "size": 6094,
        "formattedSize": "6.0 KB"
      }
    },
    {
      "id": "styles\\numbers-dates-timex",
      "contents": "\r\n## Numbers\r\n\r\nWrite out the number in words if it starts a sentence.\r\n\r\n| **Like this...**                                     | **Not like this...**                             |\r\n| ---------------------------------------------------- | ------------------------------------------------ |\r\n| Eleven herbs and spices in our fried chicken recipe. | 11 herbs and spices in our fried chicken recipe. |\r\n\r\nWhen the number is below 10, write the word.\r\n\r\n| **Like this...**                               | **Not like this...**                               |\r\n| ---------------------------------------------- | -------------------------------------------------- |\r\n| There was only one pizza left on the shelf.    | There was only 1 pizza left on the shelf.          |\r\n| I saw someone with 12 pizzas in their trolley. | I saw someone with twelve pizzas in their trolley. |\r\n\r\n## Dates\r\n\r\nUse the 24-hour clock with a colon between the hour and minutes.\r\n\r\n| **Like this...**             | **Not like this...**       |\r\n| ---------------------------- | -------------------------- |\r\n| At 14:00 the crow will call. | At 2pm the crow will call. |\r\n\r\nWrite out dates in words, rather than suffixes or slashes in dates, unless space doesn't allow you to do so.\r\n\r\n| **Like this...** | **Be careful with...** |\r\n| ---------------- | ---------------------- |\r\n| 3 September 2021 | 3/9/21                 |\r\n| 3 Sep 2021       | 03/09/2021             |\r\n\r\n## Times\r\n\r\nFor approximate times, round to the nearest whole number. Remember to write numbers below 10 as words.\r\n\r\n| **Like this...**                     | **Not like this...**                |\r\n| ------------------------------------ | ----------------------------------- |\r\n| You last logged in two minutes ago.  | You last logged in 2 minutes ago.   |\r\n| You last logged in five minutes ago. | You last logged in 4.5 minutes ago. |\r\n| You last logged in 10 minutes ago.   | You last logged in ten minutes ago. |\r\n\r\nZulu time should be used when writing for times that involve other countries.\r\n\r\n| **Like this...**                                 | **Not like this...**                |\r\n| ------------------------------------------------ | ----------------------------------- |\r\n| The food will be delivered at 1400z (07:00 EST). | The food will be delivered at 0700. |\r\n",
      "path": "/styles/content-style/numbers-dates-and-time",
      "navPriority": 4,
      "date": "2024-04-19",
      "title": "Numbers, dates and times",
      "subTitle": "How to write numbers, dates and times consistently.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/numbers-dates-time.mdx",
      "meta": {
        "relativePath": "styles\\numbers-dates-time.mdx",
        "createdAt": "2024-06-04T07:48:35.063Z",
        "lastModified": "2024-06-04T07:48:35.063Z",
        "size": 2651,
        "formattedSize": "2.6 KB"
      }
    },
    {
      "id": "styles\\principlesx",
      "contents": "\r\n## Inclusive\r\n\r\nWe write for everyone. We realise people can interpret our words in different ways.\r\n\r\nWe assume no existing knowledge or technical skill.\r\n\r\nWe write non-gendered.\r\n\r\n## Human\r\n\r\nWe write for real people and speak to them as if we're in a conversation.\r\n\r\nWe use contractions such as it's, you'll, you're, we're, let's and can't (in UI copy).\r\n\r\nRead out your writing and check that it sounds natural.\r\n\r\n## Useful\r\n\r\nWe tell people only what they need to know.\r\n\r\nWe keep content understandable, concise, relevant and to the point.\r\n\r\nWe write content that is serious but not pompous or emotionless. Adjectives can be subjective and make text sound more emotive.\r\n\r\nShorter sentences are easier for people to scan. They’re more accessible for people who struggle with reading or have a cognitive impairment. Check any sentences with more than 25 words to see if you can split them to make them clearer.\r\n\r\n## Simple\r\n\r\nUse simple words to make it easier to read.\r\n\r\nWe write only what we need to and strip excess words from what we write.\r\n\r\nWe aim for a reading age of 9 to 11 years old. Adults still prefer and recognise the words they learned as a child.\r\n",
      "path": "/styles/content-style/principles",
      "navPriority": 0,
      "date": "2024-04-19",
      "title": "Principles",
      "subTitle": "Use the four writing principles to help create engaging and consistent content.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/principles.mdx",
      "meta": {
        "relativePath": "styles\\principles.mdx",
        "createdAt": "2024-05-20T13:20:43.406Z",
        "lastModified": "2024-05-20T13:20:43.406Z",
        "size": 1503,
        "formattedSize": "1.5 KB"
      }
    },
    {
      "id": "styles\\templatesx",
      "contents": "\r\nimport templatesFig1 from \"./images/fig-1-side-navigation.png\";\r\nimport templatesFig2 from \"./images/fig-2-top-navigation.png\";\r\nimport templatesFig3 from \"./images/fig-3-side-nav-with-page-header.png\";\r\nimport templatesFig4 from \"./images/fig-4-hero.png\";\r\n\r\n## Using layout templates\r\n\r\nUse different combinations of navigation components and page content to create different layouts.\r\n\r\nSome combinations work better for particular use cases. Side navigation takes up less room on data-heavy apps, but top navigation offers simpler navigation for content-based apps. Use the following templates to quickly create new pages.\r\n\r\nSide navigation is preferred for most apps as it provides more screen space for main content.\r\n\r\n## Side navigation\r\n\r\nUse the [side navigation](/components/side-navigation) layout for data-heavy apps. This template prioritises the main content area, giving it the full height and width of the viewport. The navigation items in the side navigation give access to your app’s main functions from every page.\r\n\r\n<DoDontCaution\r\n  imageSrc={templatesFig1}\r\n  imageAlt=\"An example of an app with a side navigation and some example content laid out using a 12-column grid.\"\r\n  state=\"none\"\r\n  caption=\"The side navigation template is useful for data-heavy apps.\"\r\n/>\r\n\r\n## Top navigation\r\n\r\n[Top navigation](/components/top-navigation) works well for content-based apps, such as an intranet, blog or this Design System. The main navigation items can always be accessed at the top of the page. This layout often uses large margins to achieve a readable line-length for the page’s main content section.\r\n\r\n<DoDontCaution\r\n  imageSrc={templatesFig2}\r\n  imageAlt=\"An example app titled ‘Java nice day’ that uses a top navigation and has some example content laid out on a 12-column grid.\"\r\n  state=\"none\"\r\n  caption=\"The top navigation template is useful for content-based apps.\"\r\n/>\r\n\r\n## Secondary navigation\r\n\r\nUse secondary navigation components within these templates to provide additional navigation within each main section of an app.\r\n\r\n### Page header\r\n\r\nA [page header](/components/page-header) can be added to any page in an app, giving it a title as well as offering secondary-navigation options through tabs or a stepper.\r\n\r\nUse [tabs](/components/tabs) to provide access to related pages where the content is mutually exclusive from one another.\r\n\r\nUse a [stepper](/components/stepper) to signpost a user through a linear series of steps to complete a process or view information in a particular order.\r\n\r\n<DoDontCaution\r\n  imageSrc={templatesFig3}\r\n  imageAlt=\"Two examples of a side-navigation layout each with a page header. One uses a page header with tabs to provide secondary navigation. The other uses a page header with a stepper.\"\r\n  state=\"none\"\r\n  caption=\"Two examples of a side-navigation layout each with a page header. One uses a page header with tabs to provide secondary navigation. The other uses a page header with a stepper.\"\r\n/>\r\n\r\n### Hero\r\n\r\nA [hero](/components/hero) can be included on homepages to signpost key links or actions in an emphasised position. Don’t use hero banners on every page though.\r\n\r\n<DoDontCaution\r\n  imageSrc={templatesFig4}\r\n  imageAlt=\"An example app using a top navigation layout with a hero banner that provides a key link titled ‘Get started’.\"\r\n  state=\"none\"\r\n  caption=\"Use top navigation and hero on a homepage to introduce the app or provide direction to a key action (such as search or get started).\"\r\n/>\r\n\r\n## Accessibility considerations\r\n\r\nWhen using these layout templates use appropriate HTML regions such as `<main>` and `<nav>`.\r\n\r\n## Related components\r\n\r\n- [Top navigation](/components/top-navigation)\r\n- [Side navigation](/components/side-navigation)\r\n- [Page header](/components/page-header)\r\n- [Hero](/components/hero)\r\n",
      "path": "/styles/templates",
      "navPriority": 4,
      "date": "2022-11-15",
      "title": "Templates",
      "subTitle": "Follow these common layout templates to apply frequently used navigation patterns to your app designs.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/templates.mdx",
      "meta": {
        "relativePath": "styles\\templates.mdx",
        "createdAt": "2024-06-04T07:48:35.064Z",
        "lastModified": "2024-06-04T07:48:35.064Z",
        "size": 4168,
        "formattedSize": "4.1 KB"
      }
    },
    {
      "id": "styles\\typographyx",
      "contents": "\r\nimport TypographicScale from \"./components/TypographicScale\";\r\n\r\n## Using consistent typography\r\n\r\nWell-defined typography creates obvious hierarchy and helps to organise information.\r\n\r\n<p>\r\n  The Design System uses the{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://fonts.google.com/specimen/Open+Sans\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Open Sans\r\n  </ic-link>{\" \"}\r\n  font for most text and{\" \"}\r\n  <ic-link\r\n    target=\"_blank\"\r\n    href=\"https://fonts.google.com/specimen/Nunito+Sans\"\r\n    rel=\"noreferer noopener nofollow\"\r\n  >\r\n    Nunito Sans\r\n  </ic-link>{\" \"}\r\n  for large headings. These are flexible and readable fonts that work well\r\n  across digital and print.\r\n</p>\r\n\r\n## Headings\r\n\r\nWrite all headings in sentence case.\r\n\r\nUse the logical order of `h#` tags in code. For example, a `h3` heading needs to come after a `h2` heading but can be styled as any variant. It's important that [heading tags are used properly](/accessibility/coding/headings).\r\n\r\n<TypographicScale variants=\"h1, h2, h3, h4\" />\r\n\r\n## Subtitles\r\n\r\nWrite all subtitles in sentence case.\r\n\r\nUse subtitles for sub-section headings and table headings.\r\n\r\n<TypographicScale variants=\"subtitle-large, subtitle-small\" />\r\n\r\n## Text\r\n\r\nWrite all body text in sentence case.\r\n\r\nUse a minimum of 16pt for body text. 18pt should be used for apps with a lot of text (like intranets or reports).\r\n\r\n<TypographicScale variants=\"body, caption, caption-uppercase\" />\r\n\r\n## Labels\r\n\r\n<TypographicScale variants=\"label, label-uppercase\" />\r\n\r\n## Links\r\n\r\nIf your link is at the end of a sentence or paragraph, make sure that the linked text does not include the full stop.\r\n\r\n<TypographicScale variants=\"link\" />\r\n",
      "path": "/styles/typography",
      "navPriority": 6,
      "date": "2022-11-15",
      "title": "Typography",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/typography.mdx",
      "meta": {
        "relativePath": "styles\\typography.mdx",
        "createdAt": "2024-06-04T07:48:35.065Z",
        "lastModified": "2024-06-04T07:48:35.065Z",
        "size": 1923,
        "formattedSize": "1.9 KB"
      }
    },
    {
      "id": "styles\\voice-and-tonex",
      "contents": "\r\n## Voice\r\n\r\nVoice is like our personality. When we write, we want to appear that the 'user interface is talking to the user' and remember that everyone needs to understand what we're trying to say.\r\nTherefore our voice is personal, inclusive and plain-spoken.\r\n\r\nWe:\r\n\r\n- Address the user as 'you'.\r\n- Avoid using 'should' as it can sound patronising.\r\n- Use 'can' and 'may' appropriately &ndash; 'can' implies ability and 'may' implies permission and even uncertainty.\r\n- Use language that is open, inclusive to all and that our users want us to use.\r\n\r\n## Tone\r\n\r\nTone is like our mood. We adapt our tone depending on the context.\r\n\r\nFor example, we may use a direct, serious and reassuring tone when writing about a new government legislation or data handling policy.\r\n\r\n## Tips\r\n\r\n### Active not passive voice\r\n\r\nActive voice is easier to read because it identifies the 'thing' that's doing the action.\r\n\r\nWords like 'was' or 'by' may indicate that you're writing in a passive voice.\r\n\r\n| **Like this...**                               | **Not like this...**                                  |\r\n| ---------------------------------------------- | ----------------------------------------------------- |\r\n| Matt checked out the 'Content Style' document. | The 'Content Style' document was checked out by Matt. |\r\n| The app encountered a problem.                 | A problem was encountered by the app.                 |\r\n\r\n### Be direct\r\n\r\nWriting 'to the point' will help you write simple content.\r\n\r\nThe simple principle is about getting readers the information they want as quickly as possible.\r\n\r\n| **Like this...**                                  | **Not like this...**                                                      |\r\n| ------------------------------------------------- | ------------------------------------------------------------------------- |\r\n| Read the instructions that came with your laptop. | Consult the guidance that came with your laptop for further instructions. |\r\n\r\n### Swap formal words for normal ones\r\n\r\nUse language you would use if you were talking with the person you’re writing to.\r\n\r\n| **This...**      | **Instead of...** |\r\n| ---------------- | ----------------- |\r\n| Person           | User              |\r\n| About            | Approximate       |\r\n| App              | Application       |\r\n| Ask              | Request           |\r\n| Buy              | Purchase          |\r\n| Cancel           | Discard, Abort    |\r\n| Complete         | Successful        |\r\n| Confirm          | Validate          |\r\n| Divide           | Allocate          |\r\n| Fix              | Resolve           |\r\n| Get              | Obtain            |\r\n| Give             | Provide           |\r\n| Go with          | Accompany         |\r\n| Help             | Assistance        |\r\n| Maintain         | Support, Keep     |\r\n| Make sure        | Ensure            |\r\n| More information | More guidance     |\r\n| Never            | Not               |\r\n| Next             | Adjacent          |\r\n| Own              | Possess           |\r\n| Question         | Query             |\r\n| Remove           | Delete, Trash     |\r\n| Send             | Forward           |\r\n| Stay             | Remain            |\r\n| Stop             | Discontinue       |\r\n| Take part        | Participate       |\r\n| Tell             | Notify, Recommend |\r\n| Try              | Attempt           |\r\n| Use              | Utilise           |\r\n| A or b or both   | A and/or b        |\r\n| For example      | e.g.              |\r\n",
      "path": "/styles/content-style/voice-and-tone",
      "navPriority": 1,
      "date": "2024-04-19",
      "title": "Voice and tone",
      "subTitle": "Learn how to apply our familiar tongue and how to choose the right tone.",
      "contribute": "https://github.com/mi6/ic-design-system/tree/main/src/content/structured/styles/voice-and-tone.mdx",
      "meta": {
        "relativePath": "styles\\voice-and-tone.mdx",
        "createdAt": "2024-06-04T07:48:35.066Z",
        "lastModified": "2024-06-04T07:48:35.066Z",
        "size": 3841,
        "formattedSize": "3.8 KB"
      }
    }
  ]
}
