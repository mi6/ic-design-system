"use strict";(self.webpackChunkic_design_system=self.webpackChunkic_design_system||[]).push([[1666],{1666:function(t,i,e){e.r(i),e.d(i,{ic_empty_state:function(){return o}});var a=e(44894),s=e(67363);e(34677);const o=class{constructor(t){(0,a.r)(this,t),this.hostMutationObserver=null,this.aligned="left",this.body=void 0,this.bodyMaxLines=void 0,this.heading=void 0,this.imageSize="default",this.subheading=void 0}disconnectedCallback(){var t;null===(t=this.hostMutationObserver)||void 0===t||t.disconnect()}componentDidLoad(){!(0,s.i)(this.el,"heading")&&(0,s.a)([{prop:this.heading,propName:"heading"}],"Empty State"),this.hostMutationObserver=new MutationObserver((t=>(0,s.k)(t,["image","actions"],this))),this.hostMutationObserver.observe(this.el,{childList:!0})}render(){const{aligned:t,body:i,bodyMaxLines:e,heading:o,imageSize:h,subheading:n}=this;return(0,a.h)(a.H,{class:{[`${t}`]:!0,[`image-${h}`]:(0,s.i)(this.el,"image")}},(0,s.i)(this.el,"image")&&(0,a.h)("slot",{name:"image"}),(0,a.h)("div",null,(0,a.h)("slot",{name:"heading"},(0,a.h)("ic-typography",{variant:"h4"},o)),(0,a.h)("slot",{name:"subheading"},(0,a.h)("ic-typography",{variant:"subtitle-small"},n)),(0,a.h)("slot",{name:"body"},(0,a.h)("ic-typography",{maxLines:e},i))),(0,s.i)(this.el,"actions")&&(0,a.h)("div",{class:"action-area"},(0,a.h)("slot",{name:"actions"})))}get el(){return(0,a.g)(this)}};o.style=":host{gap:var(--ic-space-xs);padding:var(--ic-space-xs)}:host,.action-area{display:flex;flex-direction:column}.action-area{gap:var(--ic-space-md)}:host ::slotted(svg),:host ::slotted(img){border-radius:var(--ic-space-xxs)}:host(.right),:host(.right) .action-area{align-items:flex-end;text-align:right}:host(.center),:host(.center) .action-area{align-items:center;text-align:center}:host(.image-default) ::slotted(svg),:host(.image-default) ::slotted(img){height:calc(3 * var(--ic-space-lg)) !important;width:calc(3 * var(--ic-space-lg)) !important}:host(.image-small) ::slotted(svg),:host(.image-small) ::slotted(img){height:var(--ic-space-xxl) !important;width:var(--ic-space-xxl) !important}:host(.image-large) ::slotted(svg),:host(.image-large) ::slotted(img){height:calc(4 * var(--ic-space-xl)) !important;width:calc(4 * var(--ic-space-xl)) !important}"}}]);