{"componentChunkName":"component---src-templates-standard-index-tsx","path":"/get-started/development/custom-theme","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar snippetsDefault = [{\n  technology: \"Web component\",\n  snippets: {\n    \"short\": \"<ic-button onclick=\\\"handleClick()\\\">Update ic-theme</ic-button>\\n<ic-theme class=\\\"theme-container\\\" theme=\\\"light\\\">\\n  <ic-alert heading=\\\"Set at component level\\\" variant=\\\"info\\\" theme=\\\"light\\\"></ic-alert>\\n  <ic-alert heading=\\\"Inherits from ic-theme\\\" variant=\\\"info\\\"></ic-alert>\\n</ic-theme>\\n<ic-alert heading=\\\"Inherits from system/browser settings\\\" variant=\\\"info\\\"></ic-alert>\",\n    \"long\": \".theme-container {\\n    border: \\\"1px solid var(--ic-architectural-white)\\\",\\n    padding: \\\"var(--ic-space-sm)\\\"\\n  }\\n</style>\\n<body>\\n  <div>\\n    {shortCode}\\n  </div>\\n  <script>\\n    function handleClick() {\\n      theme = document.querySelector(\\\"ic-theme\\\");\\n      theme.theme = theme.theme === \\\"light\\\" ? \\\"dark\\\" : \\\"light\\\";\\n    }\\n  </script>\"\n  }\n}, {\n  technology: \"React\",\n  snippets: {\n    \"short\": \"<IcButton onClick={handleClick}>Update ic-theme</IcButton>\\n<IcTheme theme={theme} className={classes.themeContainer}>\\n  <IcAlert heading=\\\"Set at component level\\\" variant=\\\"info\\\" theme=\\\"light\\\" />\\n  <IcAlert heading=\\\"Inherits from ic-theme\\\" variant=\\\"info\\\" />\\n</IcTheme>\\n<IcAlert heading=\\\"Inherits from system/browser settings\\\" variant=\\\"info\\\" />\",\n    \"long\": [{\n      language: \"Typescript\",\n      snippet: \"const [theme, setTheme] = useState<\\\"light\\\" | \\\"dark\\\">(\\\"light\\\");\\nconst handleClick = () => {\\n  setTheme(theme === \\\"light\\\" ? \\\"dark\\\" : \\\"light\\\");\\n};\\nconst useStyles = createUseStyles({\\n  themeContainer: {\\n    border: \\\"1px solid var(--ic-architectural-white)\\\",\\n    padding: \\\"var(--ic-space-sm)\\\"\\n  },\\n});\\nconst classes = useStyles();\\n<>\\n  {shortCode}\\n</>\"\n    }, {\n      language: \"Javascript\",\n      snippet: \"const [theme, setTheme] = useState(\\\"light\\\");\\nconst handleClick = () => {\\n  setTheme(theme === \\\"light\\\" ? \\\"dark\\\" : \\\"light\\\");\\n};\\nconst useStyles = createUseStyles({\\n  themeContainer: {\\n    border: \\\"1px solid var(--ic-architectural-white)\\\",\\n    padding: \\\"var(--ic-space-sm)\\\"\\n  },\\n});\\nconst classes = useStyles();\\n<>\\n  {shortCode}\\n</>\"\n    }]\n  }\n}];\nvar DarkModeExample = function DarkModeExample() {\n  var _useState = useState(\"light\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    theme = _useState2[0],\n    setTheme = _useState2[1];\n  var handleClick = function handleClick() {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n  return mdx(React.Fragment, null, mdx(IcButton, {\n    onClick: handleClick,\n    mdxType: \"IcButton\"\n  }, \"Update ic-theme\"), mdx(IcTheme, {\n    theme: theme,\n    style: {\n      border: \"1px solid var(--ic-architectural-white)\",\n      padding: \"var(--ic-space-sm)\"\n    },\n    mdxType: \"IcTheme\"\n  }, mdx(IcAlert, {\n    heading: \"Set at component level\",\n    variant: \"info\",\n    theme: \"light\",\n    mdxType: \"IcAlert\"\n  }), mdx(IcAlert, {\n    heading: \"Inherits from ic-theme\",\n    variant: \"info\",\n    mdxType: \"IcAlert\"\n  })), mdx(IcAlert, {\n    heading: \"Inherits from system/browser settings\",\n    variant: \"info\",\n    mdxType: \"IcAlert\"\n  }));\n};\nvar _frontmatter = {\n  \"path\": \"/get-started/development/custom-theme\",\n  \"navPriority\": 1,\n  \"date\": \"2024-12-02\",\n  \"title\": \"Custom theme and branding\",\n  \"subTitle\": \"How to change the theme and brand colours of some components.\",\n  \"contribute\": \"https://github.com/mi6/ic-design-system/tree/main/src/content/structured/get-started/custom-theme.mdx\"\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar ComponentDetails = makeShortcode(\"ComponentDetails\");\nvar ComponentPreview = makeShortcode(\"ComponentPreview\");\nvar layoutProps = {\n  snippetsDefault: snippetsDefault,\n  DarkModeExample: DarkModeExample,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Customising component colours\"), mdx(\"p\", null, \"Some components can have their 'brand' colour changed by using either of the methods below. When the 'brand' colour is changed, components will automatically update.\"), mdx(\"p\", null, \"Other styles on affected components will also adapt accordingly, such as the colour of text or icons.\"), mdx(\"p\", null, \"Components that follow the 'brand' colour will not update in the same way as other components when adapting to dark mode. Instead their appearance will only adjust to match the contrast of the 'brand' colour.\"), mdx(\"p\", null, \"Branding is not the same as theming. With theming, component colours can be modified using a more fine-grained approach, allowing total control over their appearance. Branding focuses on the core structural components of an application, and creates an appearance that is recognisable to a user.\"), mdx(\"h2\", null, \"CSS variables\"), mdx(\"p\", null, \"You can set the 'brand' colour by using the three CSS variables (one for each of the RGB values for the colour) shown below:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"css\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-css\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token selector\"\n  }, \":root\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"--ic-brand-color-primary-r\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" 92\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"--ic-brand-color-primary-g\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" 9\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"--ic-brand-color-primary-b\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" 72\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")))), mdx(\"h2\", null, \"Theme component\"), mdx(\"p\", null, \"Alternatively, if using the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"ic-theme\"), \" web component, you can set the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"brand-color\"), \" attribute:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"jsx\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-jsx\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"<\"), \"ic-theme\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-name\"\n  }, \"brand-color\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-value\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation attr-equals\"\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\"), \"rgb(92, 9, 72)\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"</\"), \"ic-theme\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\")), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"<\"), \"ic-theme\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-name\"\n  }, \"brand-color\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-value\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation attr-equals\"\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\"), \"#5c0949\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"</\"), \"ic-theme\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\"))))), mdx(\"p\", null, \"Or, if using the React \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"IcTheme\"), \" component, you can set the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"brandColor\"), \" property:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"jsx\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-jsx\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"<\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name\"\n  }, \"IcTheme\")), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-name\"\n  }, \"brandColor\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-value\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation attr-equals\"\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\"), \"rgb(92, 9, 72)\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"</\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name\"\n  }, \"IcTheme\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\")), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"<\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name\"\n  }, \"IcTheme\")), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-name\"\n  }, \"brandColor\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-value\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation attr-equals\"\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\"), \"#5c0949\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"</\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name\"\n  }, \"IcTheme\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\"))))), mdx(\"p\", null, \"The components that use the 'brand' colour are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/components/footer\"\n  }, \"Footer\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/components/hero\"\n  }, \"Hero\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/components/side-navigation\"\n  }, \"Side navigation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/components/top-navigation\"\n  }, \"Top navigation\"))), mdx(\"h3\", null, \"Theme details\"), mdx(ComponentDetails, {\n    component: \"ic-theme\",\n    mdxType: \"ComponentDetails\"\n  }), mdx(\"h2\", null, \"Dark mode as a theme\"), mdx(\"p\", null, \"Most component's variants can be displayed using dark mode colours. This creates better colour contrast with backgrounds, borders and text for when components need to be used on dark backgrounds.\"), mdx(\"p\", null, \"These components have been given a \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"theme\"), \" prop, taking values of \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"inherit\"), \" (default), \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"light\"), \" and \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"dark\"), \". By setting the value to either \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"light\"), \" or \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"dark\"), \" at the component level, those components will display using the corresponding theme, independent of any higher level themes or system settings.\"), mdx(\"p\", null, \"By leaving the theme prop as the default value (\", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"inherit\"), \"), it will decide the colours based on either a high-level \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"ic-theme\"), \" component, or if one does not exist, the browser/system settings.\"), mdx(\"h3\", null, \"Example\"), mdx(\"p\", null, \"When implementing dark mode into an app without an \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"ic-theme\"), \" wrapper, the components will default to the browser/system settings unless overridden manually. If using a fixed background colour, this will need to be considered as user's system settings may cause dark components to render on a light background, for example.\"), mdx(\"p\", null, \"See the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/patterns/dark-mode\"\n  }, \"Dark mode pattern\"), \" for an example of how to implement dark mode into an application.\"), mdx(ComponentPreview, {\n    style: {\n      flexDirection: \"column\",\n      gap: \"var(--ic-space-sm)\",\n      background: \"#17191c\"\n    },\n    snippets: snippetsDefault,\n    mdxType: \"ComponentPreview\"\n  }, mdx(DarkModeExample, {\n    mdxType: \"DarkModeExample\"\n  })), mdx(\"h2\", null, \"Monochrome\"), mdx(\"p\", null, \"The \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"monochrome\"), \" prop can be set to \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"true\"), \" to remove the colour from components to help them display on certain backgrounds. It will display as either black or white, switching between the two based on the dark mode preference mentioned above.\"), mdx(ComponentPreview, {\n    style: {\n      gap: \"var(--ic-space-sm)\"\n    },\n    mdxType: \"ComponentPreview\"\n  }, mdx(IcButton, {\n    mdxType: \"IcButton\"\n  }, \"Regular\"), mdx(IcButton, {\n    monochrome: true,\n    mdxType: \"IcButton\"\n  }, \"Monochrome\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/get-started/development/custom-theme","navSection":"get-started"},"frontmatter":{"title":"Custom theme and branding","subTitle":"How to change the theme and brand colours of some components.","status":null,"date":"2024-12-02","tabs":null},"headings":[{"depth":2,"value":"Customising component colours"},{"depth":2,"value":"CSS variables"},{"depth":2,"value":"Theme component"},{"depth":3,"value":"Theme details"},{"depth":2,"value":"Dark mode as a theme"},{"depth":3,"value":"Example"},{"depth":2,"value":"Monochrome"}]},"allMdx":{"nodes":[{"id":"ced707d1-0581-502b-9257-25995e2f1e33","fields":{"navParent":"/get-started/development/install-components","navSection":"get-started","slug":"/get-started/development/install-components/ag-grid-theme"},"frontmatter":{"navPriority":11,"title":"AG Grid theme","tabs":null}},{"id":"bed2b364-0f30-5175-8314-31d3953623e4","fields":{"navParent":"/get-started/development/install-components","navSection":"get-started","slug":"/get-started/development/install-components/angular"},"frontmatter":{"navPriority":3,"title":"Angular","tabs":null}},{"id":"4df02d50-a06c-5d36-8542-a612e710b5e3","fields":{"navParent":"/get-started/development","navSection":"get-started","slug":"/get-started/development/custom-theme"},"frontmatter":{"navPriority":1,"title":"Custom theme and branding","tabs":null}},{"id":"0cc10460-43de-5e28-ac94-e87e1279ddad","fields":{"navParent":"/get-started/design","navSection":"get-started","slug":"/get-started/design/design-principles"},"frontmatter":{"navPriority":2,"title":"Design principles","tabs":null}},{"id":"fb67d38e-fde7-57c0-bdca-4cdc7971e410","fields":{"navParent":"/get-started","navSection":"get-started","slug":"/get-started/design"},"frontmatter":{"navPriority":1,"title":"Design","tabs":null}},{"id":"fe2d760e-90e0-5663-89a3-b4bcc6db5002","fields":{"navParent":"/get-started","navSection":"get-started","slug":"/get-started/development"},"frontmatter":{"navPriority":2,"title":"Development","tabs":null}},{"id":"9af72120-6321-5222-81a9-6711bb50fffa","fields":{"navParent":"/get-started/design","navSection":"get-started","slug":"/get-started/design/figma"},"frontmatter":{"navPriority":1,"title":"Figma UI Kit","tabs":null}},{"id":"d97407f9-8f67-5440-bcb9-2967d052f022","fields":{"navParent":"/get-started/development/install-components","navSection":"get-started","slug":"/get-started/development/install-components/gatsby"},"frontmatter":{"navPriority":7,"title":"Gatsby","tabs":null}},{"id":"f46fda63-ea3d-5efb-957f-7979b2d511fc","fields":{"navParent":"NONE","navSection":"get-started","slug":"/get-started"},"frontmatter":{"navPriority":0,"title":"Get started","tabs":null}},{"id":"4227ebbd-4cef-5866-9aa2-364e92fcbd8d","fields":{"navParent":"/get-started/development","navSection":"get-started","slug":"/get-started/development/install-components"},"frontmatter":{"navPriority":2,"title":"Install the components","tabs":null}},{"id":"04ce2b66-97e4-527a-9190-92312b602aae","fields":{"navParent":"/get-started","navSection":"get-started","slug":"/get-started/migrating-to-v3"},"frontmatter":{"navPriority":4,"title":"Migrating to V3","tabs":null}},{"id":"c00ec6de-83a7-56bf-9749-c2302e4ba6be","fields":{"navParent":"/get-started/development/install-components","navSection":"get-started","slug":"/get-started/development/install-components/nextJS"},"frontmatter":{"navPriority":8,"title":"Next.js","tabs":null}},{"id":"123b11d5-710a-5d18-b310-a885e6029930","fields":{"navParent":"/get-started/development/install-components","navSection":"get-started","slug":"/get-started/development/install-components/react"},"frontmatter":{"navPriority":2,"title":"React","tabs":null}},{"id":"e67985d3-88d5-5b7c-b0ad-e7e506f5feee","fields":{"navParent":"/get-started","navSection":"get-started","slug":"/get-started/releases-versions"},"frontmatter":{"navPriority":3,"title":"Releases and versions","tabs":null}},{"id":"7a483ddb-e8ce-5575-b55b-3484e103dfae","fields":{"navParent":"/get-started/development/install-components","navSection":"get-started","slug":"/get-started/development/install-components/svelte"},"frontmatter":{"navPriority":6,"title":"Svelte","tabs":null}},{"id":"04eafe5a-8947-5d33-ba3f-d7d439526101","fields":{"navParent":"/get-started/development","navSection":"get-started","slug":"/get-started/development/test-components"},"frontmatter":{"navPriority":3,"title":"Testing components","tabs":null}},{"id":"b3a35cf0-dc39-57b2-8eb6-f9e3f601ab67","fields":{"navParent":"/get-started/development/test-components","navSection":"get-started","slug":"/get-started/development/test-components/testing-with-cypress"},"frontmatter":{"navPriority":4,"title":"Testing with Cypress","tabs":null}},{"id":"8b74d20f-88c3-5305-b561-7cd3ca735549","fields":{"navParent":"/get-started/development/test-components","navSection":"get-started","slug":"/get-started/development/test-components/testing-with-jest-and-rtl"},"frontmatter":{"navPriority":2,"title":"Testing with Jest and React Testing Library","tabs":null}},{"id":"db06f67a-608f-5480-9dd9-b64dc5e0d576","fields":{"navParent":"/get-started/development/install-components","navSection":"get-started","slug":"/get-started/development/install-components/typescript"},"frontmatter":{"navPriority":10,"title":"Typescript","tabs":null}},{"id":"d810a462-9670-58e4-b022-33f922bb4e63","fields":{"navParent":"/get-started/development/install-components","navSection":"get-started","slug":"/get-started/development/install-components/vue"},"frontmatter":{"navPriority":4,"title":"Vue","tabs":null}},{"id":"d228665a-9bd3-5700-8522-638a4900de0e","fields":{"navParent":"/get-started/development/install-components","navSection":"get-started","slug":"/get-started/development/install-components/web-components"},"frontmatter":{"navPriority":9,"title":"Web components","tabs":null}},{"id":"18fca890-6ea1-509a-859c-875be45c4b31","fields":{"navParent":"/get-started","navSection":"get-started","slug":"/get-started/a-design-system"},"frontmatter":{"navPriority":7,"title":"Why we built a Design System","tabs":null}}]}},"pageContext":{"id":"4df02d50-a06c-5d36-8542-a612e710b5e3","navSection":"get-started","pageType":"sectionnav"}},"staticQueryHashes":["3313849702","4275239361"]}