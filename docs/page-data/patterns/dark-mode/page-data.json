{"componentChunkName":"component---src-templates-standard-index-tsx","path":"/patterns/dark-mode","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar snippetsTopNav = [{\n  technology: \"Web component\",\n  snippets: {\n    \"long\": \"<ic-theme id=\\\"theme-wrapper\\\" theme=\\\"light\\\">\\n    <ic-skip-link target=\\\"main\\\"></ic-skip-link>\\n    <ic-top-navigation\\n      app-title=\\\"[Enter your application name]\\\"\\n      status=\\\"alpha\\\"\\n      version=\\\"v0.0.7\\\"\\n      content-aligned=\\\"center\\\"\\n    >\\n      <svg\\n        slot=\\\"app-icon\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\" \\n        viewBox=\\\"0 0 24 24\\\" \\n        fill=\\\"#000000\\\"\\n        width=\\\"24\\\"\\n        height=\\\"24\\\"\\n      >\\n        <path d=\\\"M0 0h24v24H0V0z\\\" fill=\\\"none\\\" />\\n        <path\\n          d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\\\"\\n        />\\n      </svg>\\n      <ic-navigation-button id=\\\"theme-toggle\\\" label=\\\"Turn on light mode\\\" slot=\\\"buttons\\\" onclick=\\\"toggleTheme()\\\">\\n        <svg\\n          slot=\\\"icon\\\"\\n          width=\\\"24\\\"\\n          height=\\\"24\\\"\\n          viewBox=\\\"0 0 24 24\\\"\\n          fill=\\\"none\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        >\\n          <g id=\\\"Icon\\\">\\n            <path\\n              id=\\\"Vector\\\"\\n              d=\\\"M14.5 2C16.32 2 18.03 2.5 19.5 3.35C16.51 5.08 14.5 8.3 14.5 12C14.5 15.7 16.51 18.92 19.5 20.65C18.03 21.5 16.32 22 14.5 22C8.98 22 4.5 17.52 4.5 12C4.5 6.48 8.98 2 14.5 2Z\\\"\\n              fill=\\\"currentColor\\\"\\n            />\\n          </g>\\n        </svg>\\n      </ic-navigation-button>\\n    </ic-top-navigation>\\n    <main id=\\\"main\\\">\\n      <ic-section-container class=\\\"main-section-container\\\" aligned=\\\"center\\\">\\n        <div class=\\\"main-content-div\\\">\\n          <ic-alert heading=\\\"See how the content changes\\\" variant=\\\"info\\\"></ic-alert>\\n          <ic-typography variant=\\\"h2\\\">\\n            <h2>Example heading</h2>\\n          </ic-typography>\\n          <ic-typography variant=\\\"subtitle-large\\\">\\n            <p>Example sub-heading</p>\\n          </ic-typography>\\n        </div>\\n      </ic-section-container>\\n    </main>\\n  </ic-theme>\\n  <script>\\n    const LIGHT_ICON = '<svg\\n      slot=\\\"icon\\\"\\n      width=\\\"24\\\"\\n      height=\\\"24\\\"\\n      viewBox=\\\"0 0 24 24\\\"\\n      fill=\\\"none\\\"\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n    >\\n      <g id=\\\"Icon\\\">\\n        <path\\n          id=\\\"Vector\\\"\\n          d=\\\"M14.5 2C16.32 2 18.03 2.5 19.5 3.35C16.51 5.08 14.5 8.3 14.5 12C14.5 15.7 16.51 18.92 19.5 20.65C18.03 21.5 16.32 22 14.5 22C8.98 22 4.5 17.52 4.5 12C4.5 6.48 8.98 2 14.5 2Z\\\"\\n          fill=\\\"currentColor\\\"\\n        />\\n      </g>\\n    </svg>';\\n    const DARK_ICON = '<svg\\n      slot=\\\"icon\\\"\\n      width=\\\"24\\\"\\n      height=\\\"24\\\"\\n      viewBox=\\\"0 0 24 24\\\"\\n      fill=\\\"none\\\"\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n    >\\n      <g id=\\\"Icon\\\">\\n        <path\\n          id=\\\"Vector\\\"\\n          d=\\\"M12 7C9.24 7 7 9.24 7 12C7 14.76 9.24 17 12 17C14.76 17 17 14.76 17 12C17 9.24 14.76 7 12 7ZM2 13H4C4.55 13 5 12.55 5 12C5 11.45 4.55 11 4 11H2C1.45 11 1 11.45 1 12C1 12.55 1.45 13 2 13ZM20 13H22C22.55 13 23 12.55 23 12C23 11.45 22.55 11 22 11H20C19.45 11 19 11.45 19 12C19 12.55 19.45 13 20 13ZM11 2V4C11 4.55 11.45 5 12 5C12.55 5 13 4.55 13 4V2C13 1.45 12.55 1 12 1C11.45 1 11 1.45 11 2ZM11 20V22C11 22.55 11.45 23 12 23C12.55 23 13 22.55 13 22V20C13 19.45 12.55 19 12 19C11.45 19 11 19.45 11 20ZM5.99 4.58C5.6 4.19 4.96 4.19 4.58 4.58C4.19 4.97 4.19 5.61 4.58 5.99L5.64 7.05C6.03 7.44 6.67 7.44 7.05 7.05C7.43 6.66 7.44 6.02 7.05 5.64L5.99 4.58ZM18.36 16.95C17.97 16.56 17.33 16.56 16.95 16.95C16.56 17.34 16.56 17.98 16.95 18.36L18.01 19.42C18.4 19.81 19.04 19.81 19.42 19.42C19.81 19.03 19.81 18.39 19.42 18.01L18.36 16.95ZM19.42 5.99C19.81 5.6 19.81 4.96 19.42 4.58C19.03 4.19 18.39 4.19 18.01 4.58L16.95 5.64C16.56 6.03 16.56 6.67 16.95 7.05C17.34 7.43 17.98 7.44 18.36 7.05L19.42 5.99ZM7.05 18.36C7.44 17.97 7.44 17.33 7.05 16.95C6.66 16.56 6.02 16.56 5.64 16.95L4.58 18.01C4.19 18.4 4.19 19.04 4.58 19.42C4.97 19.8 5.61 19.81 5.99 19.42L7.05 18.36Z\\\"\\n          fill=\\\"currentColor\\\"\\n        />\\n      </g>\\n    </svg>';\\n    function toggleTheme() {\\n      theme = document.querySelector(\\\"ic-theme\\\");\\n      navButton = document.querySelector(\\\"#theme-toggle\\\");\\n      const currentTheme = theme.theme;\\n      theme.theme = currentTheme === \\\"light\\\" ? \\\"dark\\\" : \\\"light\\\";\\n      navButton.innerHTML = currentTheme === \\\"light\\\" ? DARK_ICON : LIGHT_ICON;\\n      navButton.label = `Turn on ${theme === \\\"light\\\" ? \\\"dark\\\" : \\\"light\\\"} mode`;\\n    }\\n  </script>\"\n  }\n}, {\n  technology: \"React\",\n  snippets: {\n    \"long\": [{\n      language: \"Typescript\",\n      snippet: createReactAppTsx(\"  const [theme, setTheme] = useState<\\\"light\\\" | \\\"dark\\\">(\\\"light\\\");\\n  const handleToggle = () => {\\n    setTheme(theme === \\\"light\\\" ? \\\"dark\\\" : \\\"light\\\");\\n  };\\n  const DarkIcon = () => (\\n    <SlottedSVG\\n      slot=\\\"icon\\\"\\n      width=\\\"24\\\"\\n      height=\\\"24\\\"\\n      viewBox=\\\"0 0 24 24\\\"\\n      fill=\\\"none\\\"\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n    >\\n      <g id=\\\"Icon\\\">\\n        <path\\n          id=\\\"Vector\\\"\\n          d=\\\"M14.5 2C16.32 2 18.03 2.5 19.5 3.35C16.51 5.08 14.5 8.3 14.5 12C14.5 15.7 16.51 18.92 19.5 20.65C18.03 21.5 16.32 22 14.5 22C8.98 22 4.5 17.52 4.5 12C4.5 6.48 8.98 2 14.5 2Z\\\"\\n          fill=\\\"currentColor\\\"\\n        />\\n      </g>\\n    </SlottedSVG>\\n  );\\n  const LightIcon = () => (\\n    <SlottedSVG\\n      slot=\\\"icon\\\"\\n      width=\\\"24\\\"\\n      height=\\\"24\\\"\\n      viewBox=\\\"0 0 24 24\\\"\\n      fill=\\\"none\\\"\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n    >\\n      <g id=\\\"Icon\\\">\\n        <path\\n          id=\\\"Vector\\\"\\n          d=\\\"M12 7C9.24 7 7 9.24 7 12C7 14.76 9.24 17 12 17C14.76 17 17 14.76 17 12C17 9.24 14.76 7 12 7ZM2 13H4C4.55 13 5 12.55 5 12C5 11.45 4.55 11 4 11H2C1.45 11 1 11.45 1 12C1 12.55 1.45 13 2 13ZM20 13H22C22.55 13 23 12.55 23 12C23 11.45 22.55 11 22 11H20C19.45 11 19 11.45 19 12C19 12.55 19.45 13 20 13ZM11 2V4C11 4.55 11.45 5 12 5C12.55 5 13 4.55 13 4V2C13 1.45 12.55 1 12 1C11.45 1 11 1.45 11 2ZM11 20V22C11 22.55 11.45 23 12 23C12.55 23 13 22.55 13 22V20C13 19.45 12.55 19 12 19C11.45 19 11 19.45 11 20ZM5.99 4.58C5.6 4.19 4.96 4.19 4.58 4.58C4.19 4.97 4.19 5.61 4.58 5.99L5.64 7.05C6.03 7.44 6.67 7.44 7.05 7.05C7.43 6.66 7.44 6.02 7.05 5.64L5.99 4.58ZM18.36 16.95C17.97 16.56 17.33 16.56 16.95 16.95C16.56 17.34 16.56 17.98 16.95 18.36L18.01 19.42C18.4 19.81 19.04 19.81 19.42 19.42C19.81 19.03 19.81 18.39 19.42 18.01L18.36 16.95ZM19.42 5.99C19.81 5.6 19.81 4.96 19.42 4.58C19.03 4.19 18.39 4.19 18.01 4.58L16.95 5.64C16.56 6.03 16.56 6.67 16.95 7.05C17.34 7.43 17.98 7.44 18.36 7.05L19.42 5.99ZM7.05 18.36C7.44 17.97 7.44 17.33 7.05 16.95C6.66 16.56 6.02 16.56 5.64 16.95L4.58 18.01C4.19 18.4 4.19 19.04 4.58 19.42C4.97 19.8 5.61 19.81 5.99 19.42L7.05 18.36Z\\\"\\n          fill=\\\"currentColor\\\"\\n        />\\n      </g>\\n    </SlottedSVG>\\n  );\\n  const useStyles = createUseStyles({\\n    main: { minHeight: \\\"100vh\\\", display: \\\"flex\\\", background: \\\"var(--ic-color-background-primary)\\\" },\\n    mainContentDiv: {\\n      border: \\\"var(--ic-border-width) dashed var(--ic-architectural-400)\\\",\\n      padding: \\\"var(--ic-space-md)\\\",\\n      flex: 1,\\n    },\\n    mainSectionContainer: { display: \\\"flex\\\", flex: 1 },\\n  });\\n  const classes = useStyles(); \\n  return (\\n    <IcTheme id=\\\"theme-wrapper\\\" theme={theme}>\\n      <IcSkipLink target=\\\"main\\\" />\\n      <IcTopNavigation\\n        appTitle=\\\"[Enter your application name]\\\"\\n        status=\\\"alpha\\\"\\n        version=\\\"v0.0.7\\\"\\n      >\\n        <SlottedSVG\\n          slot=\\\"app-icon\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\" \\n          viewBox=\\\"0 0 24 24\\\" \\n          fill=\\\"#000000\\\"\\n          width=\\\"24\\\"\\n          height=\\\"24\\\" \\n        >\\n          <path d=\\\"M0 0h24v24H0V0z\\\" fill=\\\"none\\\" />\\n          <path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\\\" />\\n        </SlottedSVG>\\n        <IcNavigationButton onClick={handleToggle} label={`Turn on ${theme === \\\"light\\\" ? \\\"dark\\\" : \\\"light\\\"} mode`} slot=\\\"buttons\\\">\\n          {theme === \\\"light\\\" ? <DarkIcon /> : <LightIcon />}\\n        </IcNavigationButton>\\n      </IcTopNavigation>\\n      <main id=\\\"main\\\" className={classes.main}>\\n        <IcSectionContainer className={classes.mainSectionContainer}>\\n          <div className={classes.mainContentDiv}>\\n            <IcAlert heading=\\\"See how the content changes\\\" variant=\\\"info\\\" />\\n            <IcTypography variant=\\\"h2\\\">\\n              <h2>Example heading</h2>\\n            </IcTypography>\\n            <IcTypography variant=\\\"subtitle-large\\\">\\n              <p>Example sub-heading</p>\\n            </IcTypography>\\n          </div>\\n        </IcSectionContainer>\\n      </main>\\n    </IcTheme>\\n  )\", \"TopNavigation\", \"tsx\", true)\n    }, {\n      language: \"Javascript\",\n      snippet: createReactAppTsx(\" const [theme, setTheme] = useState(\\\"light\\\");\\n  const handleToggle = () => {\\n    setTheme(theme === \\\"light\\\" ? \\\"dark\\\" : \\\"light\\\");\\n  };\\n  const DarkIcon = () => (\\n    <SlottedSVG\\n      slot=\\\"icon\\\"\\n      width=\\\"24\\\"\\n      height=\\\"24\\\"\\n      viewBox=\\\"0 0 24 24\\\"\\n      fill=\\\"none\\\"\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n    >\\n      <g id=\\\"Icon\\\">\\n        <path\\n          id=\\\"Vector\\\"\\n          d=\\\"M14.5 2C16.32 2 18.03 2.5 19.5 3.35C16.51 5.08 14.5 8.3 14.5 12C14.5 15.7 16.51 18.92 19.5 20.65C18.03 21.5 16.32 22 14.5 22C8.98 22 4.5 17.52 4.5 12C4.5 6.48 8.98 2 14.5 2Z\\\"\\n          fill=\\\"currentColor\\\"\\n        />\\n      </g>\\n    </SlottedSVG>\\n  );\\n  const LightIcon = () => (\\n    <SlottedSVG\\n      slot=\\\"icon\\\"\\n      width=\\\"24\\\"\\n      height=\\\"24\\\"\\n      viewBox=\\\"0 0 24 24\\\"\\n      fill=\\\"none\\\"\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n    >\\n      <g id=\\\"Icon\\\">\\n        <path\\n          id=\\\"Vector\\\"\\n          d=\\\"M12 7C9.24 7 7 9.24 7 12C7 14.76 9.24 17 12 17C14.76 17 17 14.76 17 12C17 9.24 14.76 7 12 7ZM2 13H4C4.55 13 5 12.55 5 12C5 11.45 4.55 11 4 11H2C1.45 11 1 11.45 1 12C1 12.55 1.45 13 2 13ZM20 13H22C22.55 13 23 12.55 23 12C23 11.45 22.55 11 22 11H20C19.45 11 19 11.45 19 12C19 12.55 19.45 13 20 13ZM11 2V4C11 4.55 11.45 5 12 5C12.55 5 13 4.55 13 4V2C13 1.45 12.55 1 12 1C11.45 1 11 1.45 11 2ZM11 20V22C11 22.55 11.45 23 12 23C12.55 23 13 22.55 13 22V20C13 19.45 12.55 19 12 19C11.45 19 11 19.45 11 20ZM5.99 4.58C5.6 4.19 4.96 4.19 4.58 4.58C4.19 4.97 4.19 5.61 4.58 5.99L5.64 7.05C6.03 7.44 6.67 7.44 7.05 7.05C7.43 6.66 7.44 6.02 7.05 5.64L5.99 4.58ZM18.36 16.95C17.97 16.56 17.33 16.56 16.95 16.95C16.56 17.34 16.56 17.98 16.95 18.36L18.01 19.42C18.4 19.81 19.04 19.81 19.42 19.42C19.81 19.03 19.81 18.39 19.42 18.01L18.36 16.95ZM19.42 5.99C19.81 5.6 19.81 4.96 19.42 4.58C19.03 4.19 18.39 4.19 18.01 4.58L16.95 5.64C16.56 6.03 16.56 6.67 16.95 7.05C17.34 7.43 17.98 7.44 18.36 7.05L19.42 5.99ZM7.05 18.36C7.44 17.97 7.44 17.33 7.05 16.95C6.66 16.56 6.02 16.56 5.64 16.95L4.58 18.01C4.19 18.4 4.19 19.04 4.58 19.42C4.97 19.8 5.61 19.81 5.99 19.42L7.05 18.36Z\\\"\\n          fill=\\\"currentColor\\\"\\n        />\\n      </g>\\n    </SlottedSVG>\\n  );\\n  const useStyles = createUseStyles({\\n    main: { minHeight: \\\"100vh\\\", display: \\\"flex\\\", background: \\\"var(--ic-color-background-primary)\\\" },\\n    mainContentDiv: {\\n      border: \\\"var(--ic-border-width) dashed var(--ic-architectural-400)\\\",\\n      padding: \\\"var(--ic-space-md)\\\",\\n      flex: 1,\\n    },\\n    mainSectionContainer: { display: \\\"flex\\\", flex: 1 },\\n  });\\n  const classes = useStyles(); \\n  return (\\n    <IcTheme id=\\\"theme-wrapper\\\" theme={theme}>\\n      <IcSkipLink target=\\\"main\\\" />\\n      <IcTopNavigation\\n        appTitle=\\\"[Enter your application name]\\\"\\n        status=\\\"alpha\\\"\\n        version=\\\"v0.0.7\\\"\\n      >\\n        <SlottedSVG\\n          slot=\\\"app-icon\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\" \\n          viewBox=\\\"0 0 24 24\\\" \\n          fill=\\\"#000000\\\"\\n          width=\\\"24\\\"\\n          height=\\\"24\\\" \\n        >\\n          <path d=\\\"M0 0h24v24H0V0z\\\" fill=\\\"none\\\" />\\n          <path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\\\" />\\n        </SlottedSVG>\\n        <IcNavigationButton onClick={handleToggle} label={'Turn on [LIGHT/DARK] mode'} slot=\\\"buttons\\\">\\n          {theme === \\\"light\\\" ? <DarkIcon /> : <LightIcon />}\\n        </IcNavigationButton>\\n      </IcTopNavigation>\\n      <main id=\\\"main\\\" className={classes.main}>\\n        <IcSectionContainer className={classes.mainSectionContainer}>\\n          <div className={classes.mainContentDiv}>\\n            <IcAlert heading=\\\"See how the content changes\\\" variant=\\\"info\\\" />\\n            <IcTypography variant=\\\"h2\\\">\\n              <h2>Example heading</h2>\\n            </IcTypography>\\n            <IcTypography variant=\\\"subtitle-large\\\">\\n              <p>Example sub-heading</p>\\n            </IcTypography>\\n          </div>\\n        </IcSectionContainer>\\n      </main>\\n    </IcTheme>\\n  )\", \"TopNavigation\", \"jsx\", true)\n    }]\n  }\n}];\nvar _frontmatter = {\n  \"path\": \"/patterns/dark-mode\",\n  \"navPriority\": 6,\n  \"date\": \"2024-12-02\",\n  \"title\": \"Dark mode\",\n  \"subTitle\": \"Use the dark mode pattern to quickly implement theming into an application.\"\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar ComponentPreview = makeShortcode(\"ComponentPreview\");\nvar layoutProps = {\n  snippetsTopNav: snippetsTopNav,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Introduction\"), mdx(\"p\", null, \"This pattern details how to implement dark mode theme switching into an application using a top navigation. A similar approach has been used in the ICDS guidance site.\"), mdx(ComponentPreview, {\n    snippets: snippetsTopNav,\n    type: \"pattern\",\n    noPadding: true,\n    style: {\n      display: \"flex\",\n      height: \"100%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: \"1rem\"\n    },\n    mdxType: \"ComponentPreview\"\n  }, mdx(LinkToNewWin, {\n    href: \"/dark-mode-pattern\",\n    mdxType: \"LinkToNewWin\"\n  })), mdx(\"p\", null, \"This pattern includes the components:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/components/top-navigation\"\n  }, \"Top navigation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/components/section-container\"\n  }, \"Section container\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/components/alert\"\n  }, \"Alert\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/components/typography\"\n  }, \"Typography\"))), mdx(\"p\", null, \"As well as the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/components/theme\"\n  }, \"theme wrapper\"), \".\"), mdx(\"h2\", null, \"CSS color-scheme\"), mdx(\"p\", null, \"When manually switching the theme using this pattern, things like browser scrollbars and other native elements may not switch their color-scheme. To ensure consistency, you may need to add the following CSS to the root of your project:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"css\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-css\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token selector\"\n  }, \"html:has(#theme-wrapper.ic-theme-dark)\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"color-scheme\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" dark\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token selector\"\n  }, \"html:has(#theme-wrapper.ic-theme-light)\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"color-scheme\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" light\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/patterns/dark-mode","navSection":"patterns"},"frontmatter":{"title":"Dark mode","subTitle":"Use the dark mode pattern to quickly implement theming into an application.","status":null,"date":"2024-12-02","tabs":null},"headings":[{"depth":2,"value":"Introduction"},{"depth":2,"value":"CSS color-scheme"}]},"allMdx":{"nodes":[{"id":"6e58c849-1835-582f-b203-5e6c19b323a3","fields":{"navParent":"/patterns","navSection":"patterns","slug":"/patterns/app-errors"},"frontmatter":{"navPriority":2,"title":"App errors","tabs":null}},{"id":"028a69dd-38d6-506c-9948-7290fd4ac894","fields":{"navParent":"/patterns","navSection":"patterns","slug":"/patterns/dark-mode"},"frontmatter":{"navPriority":6,"title":"Dark mode","tabs":null}},{"id":"98c7739c-07a5-50cc-8793-d7a41f4bad61","fields":{"navParent":"/patterns","navSection":"patterns","slug":"/patterns/form-layout"},"frontmatter":{"navPriority":3,"title":"Form layout","tabs":null}},{"id":"13513b6a-a947-59f9-adaf-3d6d768a8eb9","fields":{"navParent":"/patterns","navSection":"patterns","slug":"/patterns/form-validation"},"frontmatter":{"navPriority":4,"title":"Form validation","tabs":null}},{"id":"da39921a-39e1-503a-a590-07cb0952c6f2","fields":{"navParent":"NONE","navSection":"patterns","slug":"/patterns"},"frontmatter":{"navPriority":0,"title":"Patterns","tabs":null}},{"id":"c40f3e34-89f0-5d2c-bfeb-4ec89491bffa","fields":{"navParent":"/patterns","navSection":"patterns","slug":"/patterns/success"},"frontmatter":{"navPriority":5,"title":"Success messages","tabs":null}},{"id":"0d293e43-0b0c-5117-b670-d9d44751542d","fields":{"navParent":"/patterns","navSection":"patterns","slug":"/patterns/navigation-patterns"},"frontmatter":{"navPriority":1,"title":"Navigation patterns","tabs":null}},{"id":"8fdeb4b7-e60d-5569-9d5b-65cedaa7b45a","fields":{"navParent":"/patterns/navigation-patterns","navSection":"patterns","slug":"/patterns/navigation-patterns/side-navigation-layout"},"frontmatter":{"navPriority":2,"title":"Side navigation layout","tabs":null}},{"id":"15bb7de8-e64d-5053-96e3-b3976cbc0f5d","fields":{"navParent":"/patterns/navigation-patterns","navSection":"patterns","slug":"/patterns/navigation-patterns/top-navigation-layout"},"frontmatter":{"navPriority":1,"title":"Top navigation layout","tabs":null}}]}},"pageContext":{"id":"028a69dd-38d6-506c-9948-7290fd4ac894","navSection":"patterns","pageType":"sectionnav"}},"staticQueryHashes":["3313849702","4275239361"]}