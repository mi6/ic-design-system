{"componentChunkName":"component---src-templates-standard-index-tsx","path":"/patterns/success","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar SnackbarBasic = function SnackbarBasic() {\n  var title = \"Your coffee order is being processed.\";\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    open = _React$useState2[0],\n    setOpen = _React$useState2[1];\n  var toggle = function toggle() {\n    return setOpen(!open);\n  };\n  return mdx(\"div\", null, mdx(IcButton, {\n    variant: \"primary\",\n    onClick: toggle,\n    mdxType: \"IcButton\"\n  }, \"Submit coffee order\"), \" \", open && mdx(Snackbar, {\n    anchorOrigin: {\n      horizontal: \"left\",\n      vertical: \"bottom\"\n    },\n    message: title,\n    open: open,\n    mdxType: \"Snackbar\"\n  }));\n};\nvar _frontmatter = {\n  \"path\": \"/patterns/success\",\n  \"navPriority\": 5,\n  \"date\": \"2022-11-15\",\n  \"title\": \"Success messages\",\n  \"subTitle\": \"Success messages inform the user of a successful outcome.\",\n  \"contribute\": \"https://github.com/mi6/ic-design-system/tree/main/src/content/structured/patterns/deprecated-patterns/success.mdx\"\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar ComponentPreview = makeShortcode(\"ComponentPreview\");\nvar Snackbar = makeShortcode(\"Snackbar\");\nvar layoutProps = {\n  SnackbarBasic: SnackbarBasic,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(IcAlert, {\n    heading: \"Pattern in development\",\n    message: \"We are refreshing this pattern to include new guidance and code.\",\n    variant: \"info\",\n    mdxType: \"IcAlert\"\n  }), mdx(\"h2\", null, \"When to use\"), mdx(\"p\", null, \"Use a success message when you want to inform the user that a task has been successful.\"), mdx(\"p\", null, \"For example, show a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/components/alert\"\n  }, \"success alert\"), \" on a subsequent page after submitting a form.\"), mdx(\"h2\", null, \"When not to use\"), mdx(\"p\", null, \"Don't overuse success messages. Don't add success validation to every text field.\"), mdx(\"p\", null, \"Don't use full-page success messages. If a form is submitted successfully, consider a success alert component on the subsequent screen.\"), mdx(\"h2\", null, \"Usage\"), mdx(\"h3\", null, \"Toasts\"), mdx(\"p\", null, \"Use a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/components/toast\"\n  }, \"toast\"), \" to deliver a passive success message. Use a snackbar when you don't need to guarantee a user will notice the message.\"), mdx(\"h3\", null, \"Alerts\"), mdx(\"p\", null, \"Use alerts to give feedback after a significant task. Alerts are more likely to be noticed by users.\"), mdx(\"p\", null, \"For example, use a success alert on a subsequent page after submitting a request to give the user a reference number.\"), mdx(ComponentPreview, {\n    icds: true,\n    mdxType: \"ComponentPreview\"\n  }, mdx(IcAlert, {\n    heading: \"Application submitted\",\n    message: \"Your application for 'additional coffee allowance' was submitted successfully.\",\n    variant: \"success\",\n    mdxType: \"IcAlert\"\n  })), mdx(\"h3\", null, \"Summary and 'review' pages\"), mdx(\"p\", null, \"Only use a summary page after submitting a form if you need the user to export the information.\"), mdx(\"p\", null, \"Don't use a full page for a success message; use a snackbar or alert on a list or homepage instead.\"), mdx(\"h3\", null, \"Text fields\"), mdx(\"p\", null, \"Use success messages on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/components/text-field\"\n  }, \"text inputs\"), \" if you need to validate information before submitting the form.\"), mdx(\"p\", null, \"Use them in situations where you need immediate feedback, such as choosing a username.\"), mdx(ComponentPreview, {\n    icds: true,\n    mdxType: \"ComponentPreview\"\n  }, mdx(IcTextField, {\n    label: \"Username\",\n    value: \"coffeeninja005\",\n    validationStatus: \"success\",\n    validationText: \"This username is available.\",\n    mdxType: \"IcTextField\"\n  })), mdx(\"h2\", null, \"Accessibility considerations\"), mdx(\"p\", null, \"When building or using this pattern:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make sure components such as alerts are announced to screen readers and other assistive technology.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don't use colour on its own to convey that a problem has occurred; always include text.\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/patterns/success","navSection":"patterns"},"frontmatter":{"title":"Success messages","subTitle":"Success messages inform the user of a successful outcome.","status":null,"date":"2022-11-15","tabs":null},"headings":[{"depth":2,"value":"When to use"},{"depth":2,"value":"When not to use"},{"depth":2,"value":"Usage"},{"depth":3,"value":"Toasts"},{"depth":3,"value":"Alerts"},{"depth":3,"value":"Summary and 'review' pages"},{"depth":3,"value":"Text fields"},{"depth":2,"value":"Accessibility considerations"}]},"allMdx":{"nodes":[{"id":"6e58c849-1835-582f-b203-5e6c19b323a3","fields":{"navParent":"/patterns","navSection":"patterns","slug":"/patterns/app-errors"},"frontmatter":{"navPriority":2,"title":"App errors","tabs":null}},{"id":"028a69dd-38d6-506c-9948-7290fd4ac894","fields":{"navParent":"/patterns","navSection":"patterns","slug":"/patterns/dark-mode"},"frontmatter":{"navPriority":6,"title":"Dark mode","tabs":null}},{"id":"98c7739c-07a5-50cc-8793-d7a41f4bad61","fields":{"navParent":"/patterns","navSection":"patterns","slug":"/patterns/form-layout"},"frontmatter":{"navPriority":3,"title":"Form layout","tabs":null}},{"id":"da39921a-39e1-503a-a590-07cb0952c6f2","fields":{"navParent":"NONE","navSection":"patterns","slug":"/patterns"},"frontmatter":{"navPriority":0,"title":"Patterns","tabs":null}},{"id":"0d293e43-0b0c-5117-b670-d9d44751542d","fields":{"navParent":"/patterns","navSection":"patterns","slug":"/patterns/navigation-patterns"},"frontmatter":{"navPriority":1,"title":"Navigation patterns","tabs":null}},{"id":"c40f3e34-89f0-5d2c-bfeb-4ec89491bffa","fields":{"navParent":"/patterns","navSection":"patterns","slug":"/patterns/success"},"frontmatter":{"navPriority":5,"title":"Success messages","tabs":null}},{"id":"13513b6a-a947-59f9-adaf-3d6d768a8eb9","fields":{"navParent":"/patterns","navSection":"patterns","slug":"/patterns/form-validation"},"frontmatter":{"navPriority":4,"title":"Form validation","tabs":null}},{"id":"15bb7de8-e64d-5053-96e3-b3976cbc0f5d","fields":{"navParent":"/patterns/navigation-patterns","navSection":"patterns","slug":"/patterns/navigation-patterns/top-navigation-layout"},"frontmatter":{"navPriority":1,"title":"Top navigation layout","tabs":null}},{"id":"8fdeb4b7-e60d-5569-9d5b-65cedaa7b45a","fields":{"navParent":"/patterns/navigation-patterns","navSection":"patterns","slug":"/patterns/navigation-patterns/side-navigation-layout"},"frontmatter":{"navPriority":2,"title":"Side navigation layout","tabs":null}}]}},"pageContext":{"id":"c40f3e34-89f0-5d2c-bfeb-4ec89491bffa","navSection":"patterns","pageType":"sectionnav"}},"staticQueryHashes":["3313849702","4275239361"]}